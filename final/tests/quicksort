package main;

func swap(a []int, i, j int) {
    temp := a[i];
    a[i] = a[j];
    a[j] = temp;
    return;
};

func partition(a []int, low, high int) int {
    pivot := a[high];
    i := low - 1;

    for j := low; j < high; j++ {
        if a[j] <= pivot {
            i++;
            swap(a, i, j);
        };
    };

    swap(a, i+1, high);
    return i+1;
};

func quicksort(a []int, low, high int) {
    if low < high {
        pi := partition(a, low, high);
        quicksort(a, low, pi-1);
        quicksort(a, pi+1, high);
    };
    return;
};

func main() {
    var n, x int;
    scan %d n;

    var a [n]int;
    for i := 0; i < n; i++ {
        scan %d x;
        a[i] = x;
    };

    quicksort(a, 0, n-1);
    for i := 0; i < n; i++ {
        print %d a[i];
    };
};