Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DEFAULT
    CHAN
    CONSTANT
    CASE
    DEFER
    FALLTHROUGH
    SWITCH
    SELECT
    LMINUS
    AMPCAREQ
    GO
    DDD
    MAP
    INTERFACE

Grammar

Rule 0     S' -> start
Rule 1     start -> Source
Rule 2     Type -> TypeName
Rule 3     Type -> TypeLit
Rule 4     Type -> LPAREN Type RPAREN
Rule 5     TypeName -> TYPEX
Rule 6     TypeName -> TTYPE IDENTIFIER
Rule 7     TypeLit -> ArrayType
Rule 8     TypeLit -> StructType
Rule 9     TypeLit -> PointerType
Rule 10    TypeLit -> FunctionType
Rule 11    TypeOpt -> Type
Rule 12    TypeOpt -> epsilon
Rule 13    ArrayType -> LBRACK ArrayLength RBRACK ElementType
Rule 14    ArrayType -> LBRACK RBRACK ElementType
Rule 15    ArrayLength -> Expression
Rule 16    ElementType -> Type
Rule 17    StructType -> STRUCT LBRACE FieldDeclRep RBRACE
Rule 18    FieldDeclRep -> FieldDeclRep FieldDecl SEMICOL
Rule 19    FieldDeclRep -> epsilon
Rule 20    FieldDecl -> IdentifierList Type TagOpt
Rule 21    TagOpt -> Tag
Rule 22    TagOpt -> epsilon
Rule 23    Tag -> STRING
Rule 24    PointerType -> TIMES BaseType
Rule 25    BaseType -> Type
Rule 26    FunctionType -> FUNC Signature
Rule 27    Signature -> Parameters ResultOpt
Rule 28    ResultOpt -> Result
Rule 29    ResultOpt -> epsilon
Rule 30    Result -> Parameters
Rule 31    Result -> Type
Rule 32    Parameters -> LPAREN ParameterListOpt RPAREN
Rule 33    ParameterListOpt -> ParametersList
Rule 34    ParameterListOpt -> epsilon
Rule 35    ParametersList -> Type
Rule 36    ParametersList -> IdentifierList Type
Rule 37    ParametersList -> ParameterDeclCommaRep
Rule 38    ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA ParameterDecl
Rule 39    ParameterDeclCommaRep -> ParameterDecl COMMA ParameterDecl
Rule 40    ParameterDecl -> IdentifierList Type
Rule 41    ParameterDecl -> Type
Rule 42    Block -> CreateScope LBRACE StatementList RBRACE
Rule 43    CreateScope -> epsilon
Rule 44    StatementList -> StatementRep
Rule 45    StatementRep -> StatementRep Statement SEMICOL
Rule 46    StatementRep -> epsilon
Rule 47    Declaration -> ConstDecl
Rule 48    Declaration -> TypeDecl
Rule 49    Declaration -> VarDecl
Rule 50    TopLevelDecl -> Declaration
Rule 51    TopLevelDecl -> FunctionDecl
Rule 52    ConstDecl -> CONST ConstSpec
Rule 53    ConstDecl -> CONST LPAREN ConstSpecRep RPAREN
Rule 54    ConstSpecRep -> ConstSpecRep ConstSpec SEMICOL
Rule 55    ConstSpecRep -> epsilon
Rule 56    ConstSpec -> IdentifierList TypeExprListOpt
Rule 57    TypeExprListOpt -> TypeOpt EQUAL ExpressionList
Rule 58    TypeExprListOpt -> epsilon
Rule 59    IdentifierList -> IDENTIFIER IdentifierRep
Rule 60    IdentifierRep -> IdentifierRep COMMA IDENTIFIER
Rule 61    IdentifierRep -> epsilon
Rule 62    TypeDecl -> TYPE TypeSpec
Rule 63    TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN
Rule 64    TypeSpecRep -> TypeSpecRep TypeSpec SEMICOL
Rule 65    TypeSpecRep -> epsilon
Rule 66    TypeSpec -> AliasDecl
Rule 67    TypeSpec -> TypeDef
Rule 68    AliasDecl -> IDENTIFIER EQUAL Type
Rule 69    TypeDef -> TTYPE IDENTIFIER Type
Rule 70    VarDecl -> VAR VarSpec
Rule 71    VarDecl -> VAR LPAREN VarSpecRep RPAREN
Rule 72    VarSpecRep -> VarSpecRep VarSpec SEMICOL
Rule 73    VarSpecRep -> epsilon
Rule 74    VarSpec -> IdentifierList Type ExpressionListOpt
Rule 75    VarSpec -> IdentifierList EQUAL ExpressionList
Rule 76    ExpressionListOpt -> EQUAL ExpressionList
Rule 77    ExpressionListOpt -> epsilon
Rule 78    ShortVarDecl -> IDENTIFIER COLONEQ Expression
Rule 79    FunctionDecl -> FUNC FunctionName Function
Rule 80    FunctionDecl -> FUNC FunctionName Signature
Rule 81    FunctionName -> IDENTIFIER
Rule 82    Function -> Signature FunctionBody
Rule 83    FunctionBody -> Block
Rule 84    Operand -> Literal
Rule 85    Operand -> OperandName
Rule 86    Operand -> LPAREN Expression RPAREN
Rule 87    Literal -> BasicLit
Rule 88    BasicLit -> IntLiteral
Rule 89    BasicLit -> FloatLiteral
Rule 90    BasicLit -> ImgLiteral
Rule 91    BasicLit -> RuneLiteral
Rule 92    BasicLit -> StringLiteral
Rule 93    IntLiteral -> INTEGER
Rule 94    FloatLiteral -> FLOAT
Rule 95    ImgLiteral -> IMAGINARY
Rule 96    RuneLiteral -> RUNE
Rule 97    StringLiteral -> STRING
Rule 98    OperandName -> IDENTIFIER
Rule 99    Conversion -> Type LPAREN Expression RPAREN
Rule 100   PrimaryExpr -> Operand
Rule 101   PrimaryExpr -> Conversion
Rule 102   PrimaryExpr -> PrimaryExpr Selector
Rule 103   PrimaryExpr -> PrimaryExpr Index
Rule 104   PrimaryExpr -> PrimaryExpr Slice
Rule 105   PrimaryExpr -> PrimaryExpr Arguments
Rule 106   Selector -> DOT IDENTIFIER
Rule 107   Index -> LBRACK Expression RBRACK
Rule 108   Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK
Rule 109   Arguments -> LPAREN ExpressionListTypeOpt RPAREN
Rule 110   ExpressionListTypeOpt -> ExpressionList
Rule 111   ExpressionListTypeOpt -> epsilon
Rule 112   ExpressionList -> Expression ExpressionRep
Rule 113   ExpressionRep -> ExpressionRep COMMA Expression
Rule 114   ExpressionRep -> epsilon
Rule 115   Expression -> UnaryExpr
Rule 116   Expression -> Expression OROR Expression
Rule 117   Expression -> Expression AMPAMP Expression
Rule 118   Expression -> Expression EQEQ Expression
Rule 119   Expression -> Expression NOTEQ Expression
Rule 120   Expression -> Expression LESS Expression
Rule 121   Expression -> Expression GREAT Expression
Rule 122   Expression -> Expression LEQ Expression
Rule 123   Expression -> Expression GEQ Expression
Rule 124   Expression -> Expression PLUS Expression
Rule 125   Expression -> Expression MINUS Expression
Rule 126   Expression -> Expression OR Expression
Rule 127   Expression -> Expression CARET Expression
Rule 128   Expression -> Expression TIMES Expression
Rule 129   Expression -> Expression DIVIDE Expression
Rule 130   Expression -> Expression MOD Expression
Rule 131   Expression -> Expression AMPERS Expression
Rule 132   Expression -> Expression LL Expression
Rule 133   Expression -> Expression GG Expression
Rule 134   Expression -> Expression AMPCAR Expression
Rule 135   ExpressionOpt -> Expression
Rule 136   ExpressionOpt -> epsilon
Rule 137   UnaryExpr -> PrimaryExpr
Rule 138   UnaryExpr -> UnaryOp UnaryExpr
Rule 139   UnaryOp -> PLUS
Rule 140   UnaryOp -> MINUS
Rule 141   UnaryOp -> TIMES
Rule 142   UnaryOp -> AMPERS
Rule 143   UnaryOp -> NOT
Rule 144   Statement -> Declaration
Rule 145   Statement -> LabeledStmt
Rule 146   Statement -> SimpleStmt
Rule 147   Statement -> ReturnStmt
Rule 148   Statement -> BreakStmt
Rule 149   Statement -> ContinueStmt
Rule 150   Statement -> GotoStmt
Rule 151   Statement -> Block
Rule 152   Statement -> IfStmt
Rule 153   Statement -> PrintStmt
Rule 154   Statement -> ForStmt
Rule 155   PrintStmt -> PRINT PD Expression
Rule 156   PrintStmt -> PRINT PS Expression
Rule 157   SimpleStmt -> epsilon
Rule 158   SimpleStmt -> ExpressionStmt
Rule 159   SimpleStmt -> IncDecStmt
Rule 160   SimpleStmt -> Assignment
Rule 161   SimpleStmt -> ShortVarDecl
Rule 162   LabeledStmt -> Label COLON Statement
Rule 163   Label -> IDENTIFIER
Rule 164   ExpressionStmt -> Expression
Rule 165   IncDecStmt -> PrimaryExpr PLUSPLUS
Rule 166   IncDecStmt -> PrimaryExpr MINUSMIN
Rule 167   Assignment -> ExpressionList assign_op ExpressionList
Rule 168   assign_op -> AssignOp
Rule 169   AssignOp -> PLUSEQ
Rule 170   AssignOp -> MINUSEQ
Rule 171   AssignOp -> TIMESEQ
Rule 172   AssignOp -> DIVIDEEQ
Rule 173   AssignOp -> MODEQ
Rule 174   AssignOp -> AMPEQ
Rule 175   AssignOp -> OREQ
Rule 176   AssignOp -> CAREQ
Rule 177   AssignOp -> LLEQ
Rule 178   AssignOp -> GGEQ
Rule 179   AssignOp -> EQUAL
Rule 180   IfStmt -> IF Expression Block ElseOpt
Rule 181   ElseOpt -> ELSE IfStmt
Rule 182   ElseOpt -> ELSE Block
Rule 183   ElseOpt -> epsilon
Rule 184   ForStmt -> CreateForScope FOR ConditionBlockOpt Block
Rule 185   CreateForScope -> epsilon
Rule 186   ConditionBlockOpt -> epsilon
Rule 187   ConditionBlockOpt -> Condition
Rule 188   ConditionBlockOpt -> ForClause
Rule 189   Condition -> Expression
Rule 190   ForClause -> SimpleStmt SEMICOL ConditionOpt SEMICOL SimpleStmt
Rule 191   ConditionOpt -> epsilon
Rule 192   ConditionOpt -> Condition
Rule 193   RangeClause -> ExpressionIdentListOpt RANGE Expression
Rule 194   ExpressionIdentListOpt -> epsilon
Rule 195   ExpressionIdentListOpt -> ExpressionIdentifier
Rule 196   ExpressionIdentifier -> ExpressionList EQUAL
Rule 197   ReturnStmt -> RETURN ExpressionListPureOpt
Rule 198   ExpressionListPureOpt -> ExpressionList
Rule 199   ExpressionListPureOpt -> epsilon
Rule 200   BreakStmt -> BREAK LabelOpt
Rule 201   ContinueStmt -> CONTINUE LabelOpt
Rule 202   LabelOpt -> Label
Rule 203   LabelOpt -> epsilon
Rule 204   GotoStmt -> GOTO Label
Rule 205   Source -> PackageClause SEMICOL ImportDeclRep TopLevelDeclRep
Rule 206   ImportDeclRep -> epsilon
Rule 207   ImportDeclRep -> ImportDeclRep ImportDecl SEMICOL
Rule 208   TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOL
Rule 209   TopLevelDeclRep -> epsilon
Rule 210   PackageClause -> PACKAGE PackageName
Rule 211   PackageName -> IDENTIFIER
Rule 212   ImportDecl -> IMPORT ImportSpec
Rule 213   ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN
Rule 214   ImportSpecRep -> ImportSpecRep ImportSpec SEMICOL
Rule 215   ImportSpecRep -> epsilon
Rule 216   ImportSpec -> PackageNameDotOpt ImportPath
Rule 217   PackageNameDotOpt -> DOT
Rule 218   PackageNameDotOpt -> PackageName
Rule 219   PackageNameDotOpt -> epsilon
Rule 220   ImportPath -> STRING
Rule 221   epsilon -> <empty>

Terminals, with rules where they appear

AMPAMP               : 117
AMPCAR               : 134
AMPCAREQ             : 
AMPEQ                : 174
AMPERS               : 131 142
BREAK                : 200
CAREQ                : 176
CARET                : 127
CASE                 : 
CHAN                 : 
COLON                : 108 162
COLONEQ              : 78
COMMA                : 38 39 60 113
CONST                : 52 53
CONSTANT             : 
CONTINUE             : 201
DDD                  : 
DEFAULT              : 
DEFER                : 
DIVIDE               : 129
DIVIDEEQ             : 172
DOT                  : 106 217
ELSE                 : 181 182
EQEQ                 : 118
EQUAL                : 57 68 75 76 179 196
FALLTHROUGH          : 
FLOAT                : 94
FOR                  : 184
FUNC                 : 26 79 80
GEQ                  : 123
GG                   : 133
GGEQ                 : 178
GO                   : 
GOTO                 : 204
GREAT                : 121
IDENTIFIER           : 6 59 60 68 69 78 81 98 106 163 211
IF                   : 180
IMAGINARY            : 95
IMPORT               : 212 213
INTEGER              : 93
INTERFACE            : 
LBRACE               : 17 42
LBRACK               : 13 14 107 108
LEQ                  : 122
LESS                 : 120
LL                   : 132
LLEQ                 : 177
LMINUS               : 
LPAREN               : 4 32 53 63 71 86 99 109 213
MAP                  : 
MINUS                : 125 140
MINUSEQ              : 170
MINUSMIN             : 166
MOD                  : 130
MODEQ                : 173
NOT                  : 143
NOTEQ                : 119
OR                   : 126
OREQ                 : 175
OROR                 : 116
PACKAGE              : 210
PD                   : 155
PLUS                 : 124 139
PLUSEQ               : 169
PLUSPLUS             : 165
PRINT                : 155 156
PS                   : 156
RANGE                : 193
RBRACE               : 17 42
RBRACK               : 13 14 107 108
RETURN               : 197
RPAREN               : 4 32 53 63 71 86 99 109 213
RUNE                 : 96
SELECT               : 
SEMICOL              : 18 45 54 64 72 190 190 205 207 208 214
STRING               : 23 97 220
STRUCT               : 17
SWITCH               : 
TIMES                : 24 128 141
TIMESEQ              : 171
TTYPE                : 6 69
TYPE                 : 62 63
TYPEX                : 5
VAR                  : 70 71
error                : 

Nonterminals, with rules where they appear

AliasDecl            : 66
Arguments            : 105
ArrayLength          : 13
ArrayType            : 7
AssignOp             : 168
Assignment           : 160
BaseType             : 24
BasicLit             : 87
Block                : 83 151 180 182 184
BreakStmt            : 148
Condition            : 187 192
ConditionBlockOpt    : 184
ConditionOpt         : 190
ConstDecl            : 47
ConstSpec            : 52 54
ConstSpecRep         : 53 54
ContinueStmt         : 149
Conversion           : 101
CreateForScope       : 184
CreateScope          : 42
Declaration          : 50 144
ElementType          : 13 14
ElseOpt              : 180
Expression           : 15 78 86 99 107 112 113 116 116 117 117 118 118 119 119 120 120 121 121 122 122 123 123 124 124 125 125 126 126 127 127 128 128 129 129 130 130 131 131 132 132 133 133 134 134 135 155 156 164 180 189 193
ExpressionIdentListOpt : 193
ExpressionIdentifier : 195
ExpressionList       : 57 75 76 110 167 167 196 198
ExpressionListOpt    : 74
ExpressionListPureOpt : 197
ExpressionListTypeOpt : 109
ExpressionOpt        : 108 108
ExpressionRep        : 112 113
ExpressionStmt       : 158
FieldDecl            : 18
FieldDeclRep         : 17 18
FloatLiteral         : 89
ForClause            : 188
ForStmt              : 154
Function             : 79
FunctionBody         : 82
FunctionDecl         : 51
FunctionName         : 79 80
FunctionType         : 10
GotoStmt             : 150
IdentifierList       : 20 36 40 56 74 75
IdentifierRep        : 59 60
IfStmt               : 152 181
ImgLiteral           : 90
ImportDecl           : 207
ImportDeclRep        : 205 207
ImportPath           : 216
ImportSpec           : 212 214
ImportSpecRep        : 213 214
IncDecStmt           : 159
Index                : 103
IntLiteral           : 88
Label                : 162 202 204
LabelOpt             : 200 201
LabeledStmt          : 145
Literal              : 84
Operand              : 100
OperandName          : 85
PackageClause        : 205
PackageName          : 210 218
PackageNameDotOpt    : 216
ParameterDecl        : 38 39 39
ParameterDeclCommaRep : 37 38
ParameterListOpt     : 32
Parameters           : 27 30
ParametersList       : 33
PointerType          : 9
PrimaryExpr          : 102 103 104 105 137 165 166
PrintStmt            : 153
RangeClause          : 
Result               : 28
ResultOpt            : 27
ReturnStmt           : 147
RuneLiteral          : 91
Selector             : 102
ShortVarDecl         : 161
Signature            : 26 80 82
SimpleStmt           : 146 190 190
Slice                : 104
Source               : 1
Statement            : 45 162
StatementList        : 42
StatementRep         : 44 45
StringLiteral        : 92
StructType           : 8
Tag                  : 21
TagOpt               : 20
TopLevelDecl         : 208
TopLevelDeclRep      : 205 208
Type                 : 4 11 16 20 25 31 35 36 40 41 68 69 74 99
TypeDecl             : 48
TypeDef              : 67
TypeExprListOpt      : 56
TypeLit              : 3
TypeName             : 2
TypeOpt              : 57
TypeSpec             : 62 64
TypeSpecRep          : 63 64
UnaryExpr            : 115 138
UnaryOp              : 138
VarDecl              : 49
VarSpec              : 70 72
VarSpecRep           : 71 72
assign_op            : 167
epsilon              : 12 19 22 29 34 43 46 55 58 61 65 73 77 111 114 136 157 183 185 186 191 194 199 203 206 209 215 219
start                : 0

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . Source
    (205) Source -> . PackageClause SEMICOL ImportDeclRep TopLevelDeclRep
    (210) PackageClause -> . PACKAGE PackageName

    PACKAGE         shift and go to state 2

    PackageClause                  shift and go to state 1
    Source                         shift and go to state 3
    start                          shift and go to state 4

state 1

    (205) Source -> PackageClause . SEMICOL ImportDeclRep TopLevelDeclRep

    SEMICOL         shift and go to state 5


state 2

    (210) PackageClause -> PACKAGE . PackageName
    (211) PackageName -> . IDENTIFIER

    IDENTIFIER      shift and go to state 7

    PackageName                    shift and go to state 6

state 3

    (1) start -> Source .

    $end            reduce using rule 1 (start -> Source .)


state 4

    (0) S' -> start .



state 5

    (205) Source -> PackageClause SEMICOL . ImportDeclRep TopLevelDeclRep
    (206) ImportDeclRep -> . epsilon
    (207) ImportDeclRep -> . ImportDeclRep ImportDecl SEMICOL
    (221) epsilon -> .

    IMPORT          reduce using rule 221 (epsilon -> .)
    FUNC            reduce using rule 221 (epsilon -> .)
    CONST           reduce using rule 221 (epsilon -> .)
    TYPE            reduce using rule 221 (epsilon -> .)
    VAR             reduce using rule 221 (epsilon -> .)
    $end            reduce using rule 221 (epsilon -> .)

    ImportDeclRep                  shift and go to state 9
    epsilon                        shift and go to state 8

state 6

    (210) PackageClause -> PACKAGE PackageName .

    SEMICOL         reduce using rule 210 (PackageClause -> PACKAGE PackageName .)


state 7

    (211) PackageName -> IDENTIFIER .

    STRING          reduce using rule 211 (PackageName -> IDENTIFIER .)
    SEMICOL         reduce using rule 211 (PackageName -> IDENTIFIER .)


state 8

    (206) ImportDeclRep -> epsilon .

    IMPORT          reduce using rule 206 (ImportDeclRep -> epsilon .)
    FUNC            reduce using rule 206 (ImportDeclRep -> epsilon .)
    CONST           reduce using rule 206 (ImportDeclRep -> epsilon .)
    TYPE            reduce using rule 206 (ImportDeclRep -> epsilon .)
    VAR             reduce using rule 206 (ImportDeclRep -> epsilon .)
    $end            reduce using rule 206 (ImportDeclRep -> epsilon .)


state 9

    (205) Source -> PackageClause SEMICOL ImportDeclRep . TopLevelDeclRep
    (207) ImportDeclRep -> ImportDeclRep . ImportDecl SEMICOL
    (208) TopLevelDeclRep -> . TopLevelDeclRep TopLevelDecl SEMICOL
    (209) TopLevelDeclRep -> . epsilon
    (212) ImportDecl -> . IMPORT ImportSpec
    (213) ImportDecl -> . IMPORT LPAREN ImportSpecRep RPAREN
    (221) epsilon -> .

    IMPORT          shift and go to state 13
    FUNC            reduce using rule 221 (epsilon -> .)
    CONST           reduce using rule 221 (epsilon -> .)
    TYPE            reduce using rule 221 (epsilon -> .)
    VAR             reduce using rule 221 (epsilon -> .)
    $end            reduce using rule 221 (epsilon -> .)

    TopLevelDeclRep                shift and go to state 10
    epsilon                        shift and go to state 11
    ImportDecl                     shift and go to state 12

state 10

    (205) Source -> PackageClause SEMICOL ImportDeclRep TopLevelDeclRep .
    (208) TopLevelDeclRep -> TopLevelDeclRep . TopLevelDecl SEMICOL
    (50) TopLevelDecl -> . Declaration
    (51) TopLevelDecl -> . FunctionDecl
    (47) Declaration -> . ConstDecl
    (48) Declaration -> . TypeDecl
    (49) Declaration -> . VarDecl
    (79) FunctionDecl -> . FUNC FunctionName Function
    (80) FunctionDecl -> . FUNC FunctionName Signature
    (52) ConstDecl -> . CONST ConstSpec
    (53) ConstDecl -> . CONST LPAREN ConstSpecRep RPAREN
    (62) TypeDecl -> . TYPE TypeSpec
    (63) TypeDecl -> . TYPE LPAREN TypeSpecRep RPAREN
    (70) VarDecl -> . VAR VarSpec
    (71) VarDecl -> . VAR LPAREN VarSpecRep RPAREN

    $end            reduce using rule 205 (Source -> PackageClause SEMICOL ImportDeclRep TopLevelDeclRep .)
    FUNC            shift and go to state 20
    CONST           shift and go to state 14
    TYPE            shift and go to state 23
    VAR             shift and go to state 21

    TypeDecl                       shift and go to state 19
    VarDecl                        shift and go to state 22
    FunctionDecl                   shift and go to state 15
    TopLevelDecl                   shift and go to state 16
    Declaration                    shift and go to state 17
    ConstDecl                      shift and go to state 18

state 11

    (209) TopLevelDeclRep -> epsilon .

    FUNC            reduce using rule 209 (TopLevelDeclRep -> epsilon .)
    CONST           reduce using rule 209 (TopLevelDeclRep -> epsilon .)
    TYPE            reduce using rule 209 (TopLevelDeclRep -> epsilon .)
    VAR             reduce using rule 209 (TopLevelDeclRep -> epsilon .)
    $end            reduce using rule 209 (TopLevelDeclRep -> epsilon .)


state 12

    (207) ImportDeclRep -> ImportDeclRep ImportDecl . SEMICOL

    SEMICOL         shift and go to state 24


state 13

    (212) ImportDecl -> IMPORT . ImportSpec
    (213) ImportDecl -> IMPORT . LPAREN ImportSpecRep RPAREN
    (216) ImportSpec -> . PackageNameDotOpt ImportPath
    (217) PackageNameDotOpt -> . DOT
    (218) PackageNameDotOpt -> . PackageName
    (219) PackageNameDotOpt -> . epsilon
    (211) PackageName -> . IDENTIFIER
    (221) epsilon -> .

    LPAREN          shift and go to state 25
    DOT             shift and go to state 30
    IDENTIFIER      shift and go to state 7
    STRING          reduce using rule 221 (epsilon -> .)

    ImportSpec                     shift and go to state 26
    epsilon                        shift and go to state 27
    PackageName                    shift and go to state 28
    PackageNameDotOpt              shift and go to state 29

state 14

    (52) ConstDecl -> CONST . ConstSpec
    (53) ConstDecl -> CONST . LPAREN ConstSpecRep RPAREN
    (56) ConstSpec -> . IdentifierList TypeExprListOpt
    (59) IdentifierList -> . IDENTIFIER IdentifierRep

    LPAREN          shift and go to state 32
    IDENTIFIER      shift and go to state 34

    ConstSpec                      shift and go to state 31
    IdentifierList                 shift and go to state 33

state 15

    (51) TopLevelDecl -> FunctionDecl .

    SEMICOL         reduce using rule 51 (TopLevelDecl -> FunctionDecl .)


state 16

    (208) TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl . SEMICOL

    SEMICOL         shift and go to state 35


state 17

    (50) TopLevelDecl -> Declaration .

    SEMICOL         reduce using rule 50 (TopLevelDecl -> Declaration .)


state 18

    (47) Declaration -> ConstDecl .

    SEMICOL         reduce using rule 47 (Declaration -> ConstDecl .)


state 19

    (48) Declaration -> TypeDecl .

    SEMICOL         reduce using rule 48 (Declaration -> TypeDecl .)


state 20

    (79) FunctionDecl -> FUNC . FunctionName Function
    (80) FunctionDecl -> FUNC . FunctionName Signature
    (81) FunctionName -> . IDENTIFIER

    IDENTIFIER      shift and go to state 36

    FunctionName                   shift and go to state 37

state 21

    (70) VarDecl -> VAR . VarSpec
    (71) VarDecl -> VAR . LPAREN VarSpecRep RPAREN
    (74) VarSpec -> . IdentifierList Type ExpressionListOpt
    (75) VarSpec -> . IdentifierList EQUAL ExpressionList
    (59) IdentifierList -> . IDENTIFIER IdentifierRep

    LPAREN          shift and go to state 39
    IDENTIFIER      shift and go to state 34

    VarSpec                        shift and go to state 38
    IdentifierList                 shift and go to state 40

state 22

    (49) Declaration -> VarDecl .

    SEMICOL         reduce using rule 49 (Declaration -> VarDecl .)


state 23

    (62) TypeDecl -> TYPE . TypeSpec
    (63) TypeDecl -> TYPE . LPAREN TypeSpecRep RPAREN
    (66) TypeSpec -> . AliasDecl
    (67) TypeSpec -> . TypeDef
    (68) AliasDecl -> . IDENTIFIER EQUAL Type
    (69) TypeDef -> . TTYPE IDENTIFIER Type

    LPAREN          shift and go to state 44
    IDENTIFIER      shift and go to state 46
    TTYPE           shift and go to state 42

    TypeSpec                       shift and go to state 45
    TypeDef                        shift and go to state 41
    AliasDecl                      shift and go to state 43

state 24

    (207) ImportDeclRep -> ImportDeclRep ImportDecl SEMICOL .

    IMPORT          reduce using rule 207 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOL .)
    FUNC            reduce using rule 207 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOL .)
    CONST           reduce using rule 207 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOL .)
    TYPE            reduce using rule 207 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOL .)
    VAR             reduce using rule 207 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOL .)
    $end            reduce using rule 207 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOL .)


state 25

    (213) ImportDecl -> IMPORT LPAREN . ImportSpecRep RPAREN
    (214) ImportSpecRep -> . ImportSpecRep ImportSpec SEMICOL
    (215) ImportSpecRep -> . epsilon
    (221) epsilon -> .

    RPAREN          reduce using rule 221 (epsilon -> .)
    DOT             reduce using rule 221 (epsilon -> .)
    IDENTIFIER      reduce using rule 221 (epsilon -> .)
    STRING          reduce using rule 221 (epsilon -> .)

    epsilon                        shift and go to state 47
    ImportSpecRep                  shift and go to state 48

state 26

    (212) ImportDecl -> IMPORT ImportSpec .

    SEMICOL         reduce using rule 212 (ImportDecl -> IMPORT ImportSpec .)


state 27

    (219) PackageNameDotOpt -> epsilon .

    STRING          reduce using rule 219 (PackageNameDotOpt -> epsilon .)


state 28

    (218) PackageNameDotOpt -> PackageName .

    STRING          reduce using rule 218 (PackageNameDotOpt -> PackageName .)


state 29

    (216) ImportSpec -> PackageNameDotOpt . ImportPath
    (220) ImportPath -> . STRING

    STRING          shift and go to state 50

    ImportPath                     shift and go to state 49

state 30

    (217) PackageNameDotOpt -> DOT .

    STRING          reduce using rule 217 (PackageNameDotOpt -> DOT .)


state 31

    (52) ConstDecl -> CONST ConstSpec .

    SEMICOL         reduce using rule 52 (ConstDecl -> CONST ConstSpec .)


state 32

    (53) ConstDecl -> CONST LPAREN . ConstSpecRep RPAREN
    (54) ConstSpecRep -> . ConstSpecRep ConstSpec SEMICOL
    (55) ConstSpecRep -> . epsilon
    (221) epsilon -> .

    RPAREN          reduce using rule 221 (epsilon -> .)
    IDENTIFIER      reduce using rule 221 (epsilon -> .)

    ConstSpecRep                   shift and go to state 51
    epsilon                        shift and go to state 52

state 33

    (56) ConstSpec -> IdentifierList . TypeExprListOpt
    (57) TypeExprListOpt -> . TypeOpt EQUAL ExpressionList
    (58) TypeExprListOpt -> . epsilon
    (11) TypeOpt -> . Type
    (12) TypeOpt -> . epsilon
    (221) epsilon -> .
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . TIMES BaseType
    (26) FunctionType -> . FUNC Signature

    SEMICOL         reduce using rule 221 (epsilon -> .)
    EQUAL           reduce using rule 221 (epsilon -> .)
    LPAREN          shift and go to state 62
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    LBRACK          shift and go to state 66
    STRUCT          shift and go to state 65
    TIMES           shift and go to state 61
    FUNC            shift and go to state 53

    StructType                     shift and go to state 59
    TypeOpt                        shift and go to state 64
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 57
    TypeLit                        shift and go to state 56
    TypeExprListOpt                shift and go to state 67
    epsilon                        shift and go to state 60
    PointerType                    shift and go to state 68
    FunctionType                   shift and go to state 69
    Type                           shift and go to state 55

state 34

    (59) IdentifierList -> IDENTIFIER . IdentifierRep
    (60) IdentifierRep -> . IdentifierRep COMMA IDENTIFIER
    (61) IdentifierRep -> . epsilon
    (221) epsilon -> .

    COMMA           reduce using rule 221 (epsilon -> .)
    LPAREN          reduce using rule 221 (epsilon -> .)
    TYPEX           reduce using rule 221 (epsilon -> .)
    TTYPE           reduce using rule 221 (epsilon -> .)
    LBRACK          reduce using rule 221 (epsilon -> .)
    STRUCT          reduce using rule 221 (epsilon -> .)
    TIMES           reduce using rule 221 (epsilon -> .)
    FUNC            reduce using rule 221 (epsilon -> .)
    EQUAL           reduce using rule 221 (epsilon -> .)
    SEMICOL         reduce using rule 221 (epsilon -> .)

    epsilon                        shift and go to state 70
    IdentifierRep                  shift and go to state 71

state 35

    (208) TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOL .

    FUNC            reduce using rule 208 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOL .)
    CONST           reduce using rule 208 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOL .)
    TYPE            reduce using rule 208 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOL .)
    VAR             reduce using rule 208 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOL .)
    $end            reduce using rule 208 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOL .)


state 36

    (81) FunctionName -> IDENTIFIER .

    LPAREN          reduce using rule 81 (FunctionName -> IDENTIFIER .)


state 37

    (79) FunctionDecl -> FUNC FunctionName . Function
    (80) FunctionDecl -> FUNC FunctionName . Signature
    (82) Function -> . Signature FunctionBody
    (27) Signature -> . Parameters ResultOpt
    (32) Parameters -> . LPAREN ParameterListOpt RPAREN

    LPAREN          shift and go to state 75

    Function                       shift and go to state 72
    Parameters                     shift and go to state 73
    Signature                      shift and go to state 74

state 38

    (70) VarDecl -> VAR VarSpec .

    SEMICOL         reduce using rule 70 (VarDecl -> VAR VarSpec .)


state 39

    (71) VarDecl -> VAR LPAREN . VarSpecRep RPAREN
    (72) VarSpecRep -> . VarSpecRep VarSpec SEMICOL
    (73) VarSpecRep -> . epsilon
    (221) epsilon -> .

    RPAREN          reduce using rule 221 (epsilon -> .)
    IDENTIFIER      reduce using rule 221 (epsilon -> .)

    VarSpecRep                     shift and go to state 76
    epsilon                        shift and go to state 77

state 40

    (74) VarSpec -> IdentifierList . Type ExpressionListOpt
    (75) VarSpec -> IdentifierList . EQUAL ExpressionList
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . TIMES BaseType
    (26) FunctionType -> . FUNC Signature

    EQUAL           shift and go to state 78
    LPAREN          shift and go to state 62
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    LBRACK          shift and go to state 66
    STRUCT          shift and go to state 65
    TIMES           shift and go to state 61
    FUNC            shift and go to state 53

    StructType                     shift and go to state 59
    Type                           shift and go to state 79
    TypeLit                        shift and go to state 56
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 57
    PointerType                    shift and go to state 68
    FunctionType                   shift and go to state 69

state 41

    (67) TypeSpec -> TypeDef .

    SEMICOL         reduce using rule 67 (TypeSpec -> TypeDef .)


state 42

    (69) TypeDef -> TTYPE . IDENTIFIER Type

    IDENTIFIER      shift and go to state 80


state 43

    (66) TypeSpec -> AliasDecl .

    SEMICOL         reduce using rule 66 (TypeSpec -> AliasDecl .)


state 44

    (63) TypeDecl -> TYPE LPAREN . TypeSpecRep RPAREN
    (64) TypeSpecRep -> . TypeSpecRep TypeSpec SEMICOL
    (65) TypeSpecRep -> . epsilon
    (221) epsilon -> .

    RPAREN          reduce using rule 221 (epsilon -> .)
    IDENTIFIER      reduce using rule 221 (epsilon -> .)
    TTYPE           reduce using rule 221 (epsilon -> .)

    TypeSpecRep                    shift and go to state 81
    epsilon                        shift and go to state 82

state 45

    (62) TypeDecl -> TYPE TypeSpec .

    SEMICOL         reduce using rule 62 (TypeDecl -> TYPE TypeSpec .)


state 46

    (68) AliasDecl -> IDENTIFIER . EQUAL Type

    EQUAL           shift and go to state 83


state 47

    (215) ImportSpecRep -> epsilon .

    RPAREN          reduce using rule 215 (ImportSpecRep -> epsilon .)
    DOT             reduce using rule 215 (ImportSpecRep -> epsilon .)
    IDENTIFIER      reduce using rule 215 (ImportSpecRep -> epsilon .)
    STRING          reduce using rule 215 (ImportSpecRep -> epsilon .)


state 48

    (213) ImportDecl -> IMPORT LPAREN ImportSpecRep . RPAREN
    (214) ImportSpecRep -> ImportSpecRep . ImportSpec SEMICOL
    (216) ImportSpec -> . PackageNameDotOpt ImportPath
    (217) PackageNameDotOpt -> . DOT
    (218) PackageNameDotOpt -> . PackageName
    (219) PackageNameDotOpt -> . epsilon
    (211) PackageName -> . IDENTIFIER
    (221) epsilon -> .

    RPAREN          shift and go to state 84
    DOT             shift and go to state 30
    IDENTIFIER      shift and go to state 7
    STRING          reduce using rule 221 (epsilon -> .)

    ImportSpec                     shift and go to state 85
    epsilon                        shift and go to state 27
    PackageName                    shift and go to state 28
    PackageNameDotOpt              shift and go to state 29

state 49

    (216) ImportSpec -> PackageNameDotOpt ImportPath .

    SEMICOL         reduce using rule 216 (ImportSpec -> PackageNameDotOpt ImportPath .)


state 50

    (220) ImportPath -> STRING .

    SEMICOL         reduce using rule 220 (ImportPath -> STRING .)


state 51

    (53) ConstDecl -> CONST LPAREN ConstSpecRep . RPAREN
    (54) ConstSpecRep -> ConstSpecRep . ConstSpec SEMICOL
    (56) ConstSpec -> . IdentifierList TypeExprListOpt
    (59) IdentifierList -> . IDENTIFIER IdentifierRep

    RPAREN          shift and go to state 87
    IDENTIFIER      shift and go to state 34

    ConstSpec                      shift and go to state 86
    IdentifierList                 shift and go to state 33

state 52

    (55) ConstSpecRep -> epsilon .

    RPAREN          reduce using rule 55 (ConstSpecRep -> epsilon .)
    IDENTIFIER      reduce using rule 55 (ConstSpecRep -> epsilon .)


state 53

    (26) FunctionType -> FUNC . Signature
    (27) Signature -> . Parameters ResultOpt
    (32) Parameters -> . LPAREN ParameterListOpt RPAREN

    LPAREN          shift and go to state 75

    Parameters                     shift and go to state 73
    Signature                      shift and go to state 88

state 54

    (7) TypeLit -> ArrayType .

    LPAREN          reduce using rule 7 (TypeLit -> ArrayType .)
    EQUAL           reduce using rule 7 (TypeLit -> ArrayType .)
    SEMICOL         reduce using rule 7 (TypeLit -> ArrayType .)
    RPAREN          reduce using rule 7 (TypeLit -> ArrayType .)
    LBRACE          reduce using rule 7 (TypeLit -> ArrayType .)
    COMMA           reduce using rule 7 (TypeLit -> ArrayType .)
    STRING          reduce using rule 7 (TypeLit -> ArrayType .)


state 55

    (11) TypeOpt -> Type .

    EQUAL           reduce using rule 11 (TypeOpt -> Type .)


state 56

    (3) Type -> TypeLit .

    LPAREN          reduce using rule 3 (Type -> TypeLit .)
    RPAREN          reduce using rule 3 (Type -> TypeLit .)
    EQUAL           reduce using rule 3 (Type -> TypeLit .)
    COMMA           reduce using rule 3 (Type -> TypeLit .)
    SEMICOL         reduce using rule 3 (Type -> TypeLit .)
    LBRACE          reduce using rule 3 (Type -> TypeLit .)
    STRING          reduce using rule 3 (Type -> TypeLit .)


state 57

    (2) Type -> TypeName .

    LPAREN          reduce using rule 2 (Type -> TypeName .)
    RPAREN          reduce using rule 2 (Type -> TypeName .)
    EQUAL           reduce using rule 2 (Type -> TypeName .)
    COMMA           reduce using rule 2 (Type -> TypeName .)
    SEMICOL         reduce using rule 2 (Type -> TypeName .)
    LBRACE          reduce using rule 2 (Type -> TypeName .)
    STRING          reduce using rule 2 (Type -> TypeName .)


state 58

    (5) TypeName -> TYPEX .

    LPAREN          reduce using rule 5 (TypeName -> TYPEX .)
    SEMICOL         reduce using rule 5 (TypeName -> TYPEX .)
    EQUAL           reduce using rule 5 (TypeName -> TYPEX .)
    RPAREN          reduce using rule 5 (TypeName -> TYPEX .)
    LBRACE          reduce using rule 5 (TypeName -> TYPEX .)
    COMMA           reduce using rule 5 (TypeName -> TYPEX .)
    STRING          reduce using rule 5 (TypeName -> TYPEX .)


state 59

    (8) TypeLit -> StructType .

    LPAREN          reduce using rule 8 (TypeLit -> StructType .)
    EQUAL           reduce using rule 8 (TypeLit -> StructType .)
    SEMICOL         reduce using rule 8 (TypeLit -> StructType .)
    RPAREN          reduce using rule 8 (TypeLit -> StructType .)
    LBRACE          reduce using rule 8 (TypeLit -> StructType .)
    COMMA           reduce using rule 8 (TypeLit -> StructType .)
    STRING          reduce using rule 8 (TypeLit -> StructType .)


state 60

    (58) TypeExprListOpt -> epsilon .
    (12) TypeOpt -> epsilon .

    SEMICOL         reduce using rule 58 (TypeExprListOpt -> epsilon .)
    EQUAL           reduce using rule 12 (TypeOpt -> epsilon .)


state 61

    (24) PointerType -> TIMES . BaseType
    (25) BaseType -> . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . TIMES BaseType
    (26) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 62
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    LBRACK          shift and go to state 66
    STRUCT          shift and go to state 65
    TIMES           shift and go to state 61
    FUNC            shift and go to state 53

    StructType                     shift and go to state 59
    BaseType                       shift and go to state 90
    Type                           shift and go to state 89
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 57
    PointerType                    shift and go to state 68
    FunctionType                   shift and go to state 69
    TypeLit                        shift and go to state 56

state 62

    (4) Type -> LPAREN . Type RPAREN
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . TIMES BaseType
    (26) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 62
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    LBRACK          shift and go to state 66
    STRUCT          shift and go to state 65
    TIMES           shift and go to state 61
    FUNC            shift and go to state 53

    StructType                     shift and go to state 59
    Type                           shift and go to state 91
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 57
    PointerType                    shift and go to state 68
    FunctionType                   shift and go to state 69
    TypeLit                        shift and go to state 56

state 63

    (6) TypeName -> TTYPE . IDENTIFIER

    IDENTIFIER      shift and go to state 92


state 64

    (57) TypeExprListOpt -> TypeOpt . EQUAL ExpressionList

    EQUAL           shift and go to state 93


state 65

    (17) StructType -> STRUCT . LBRACE FieldDeclRep RBRACE

    LBRACE          shift and go to state 94


state 66

    (13) ArrayType -> LBRACK . ArrayLength RBRACK ElementType
    (14) ArrayType -> LBRACK . RBRACK ElementType
    (15) ArrayLength -> . Expression
    (115) Expression -> . UnaryExpr
    (116) Expression -> . Expression OROR Expression
    (117) Expression -> . Expression AMPAMP Expression
    (118) Expression -> . Expression EQEQ Expression
    (119) Expression -> . Expression NOTEQ Expression
    (120) Expression -> . Expression LESS Expression
    (121) Expression -> . Expression GREAT Expression
    (122) Expression -> . Expression LEQ Expression
    (123) Expression -> . Expression GEQ Expression
    (124) Expression -> . Expression PLUS Expression
    (125) Expression -> . Expression MINUS Expression
    (126) Expression -> . Expression OR Expression
    (127) Expression -> . Expression CARET Expression
    (128) Expression -> . Expression TIMES Expression
    (129) Expression -> . Expression DIVIDE Expression
    (130) Expression -> . Expression MOD Expression
    (131) Expression -> . Expression AMPERS Expression
    (132) Expression -> . Expression LL Expression
    (133) Expression -> . Expression GG Expression
    (134) Expression -> . Expression AMPCAR Expression
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (100) PrimaryExpr -> . Operand
    (101) PrimaryExpr -> . Conversion
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . PrimaryExpr Index
    (104) PrimaryExpr -> . PrimaryExpr Slice
    (105) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (99) Conversion -> . Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (98) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (88) BasicLit -> . IntLiteral
    (89) BasicLit -> . FloatLiteral
    (90) BasicLit -> . ImgLiteral
    (91) BasicLit -> . RuneLiteral
    (92) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (93) IntLiteral -> . INTEGER
    (94) FloatLiteral -> . FLOAT
    (95) ImgLiteral -> . IMAGINARY
    (96) RuneLiteral -> . RUNE
    (97) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . TIMES BaseType
    (26) FunctionType -> . FUNC Signature

    RBRACK          shift and go to state 113
    PLUS            shift and go to state 107
    MINUS           shift and go to state 101
    TIMES           shift and go to state 116
    AMPERS          shift and go to state 122
    NOT             shift and go to state 106
    LPAREN          shift and go to state 119
    IDENTIFIER      shift and go to state 110
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 108
    FLOAT           shift and go to state 121
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 95
    STRING          shift and go to state 102
    LBRACK          shift and go to state 66
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53

    Conversion                     shift and go to state 96
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 123
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 98
    FloatLiteral                   shift and go to state 99
    Type                           shift and go to state 100
    OperandName                    shift and go to state 103
    TypeLit                        shift and go to state 56
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 59
    IntLiteral                     shift and go to state 111
    UnaryExpr                      shift and go to state 114
    RuneLiteral                    shift and go to state 115
    Operand                        shift and go to state 117
    ArrayLength                    shift and go to state 118
    Expression                     shift and go to state 120
    PointerType                    shift and go to state 68
    StringLiteral                  shift and go to state 97
    BasicLit                       shift and go to state 104
    ImgLiteral                     shift and go to state 112
    FunctionType                   shift and go to state 69

state 67

    (56) ConstSpec -> IdentifierList TypeExprListOpt .

    SEMICOL         reduce using rule 56 (ConstSpec -> IdentifierList TypeExprListOpt .)


state 68

    (9) TypeLit -> PointerType .

    LPAREN          reduce using rule 9 (TypeLit -> PointerType .)
    EQUAL           reduce using rule 9 (TypeLit -> PointerType .)
    SEMICOL         reduce using rule 9 (TypeLit -> PointerType .)
    RPAREN          reduce using rule 9 (TypeLit -> PointerType .)
    LBRACE          reduce using rule 9 (TypeLit -> PointerType .)
    COMMA           reduce using rule 9 (TypeLit -> PointerType .)
    STRING          reduce using rule 9 (TypeLit -> PointerType .)


state 69

    (10) TypeLit -> FunctionType .

    LPAREN          reduce using rule 10 (TypeLit -> FunctionType .)
    EQUAL           reduce using rule 10 (TypeLit -> FunctionType .)
    SEMICOL         reduce using rule 10 (TypeLit -> FunctionType .)
    RPAREN          reduce using rule 10 (TypeLit -> FunctionType .)
    LBRACE          reduce using rule 10 (TypeLit -> FunctionType .)
    COMMA           reduce using rule 10 (TypeLit -> FunctionType .)
    STRING          reduce using rule 10 (TypeLit -> FunctionType .)


state 70

    (61) IdentifierRep -> epsilon .

    COMMA           reduce using rule 61 (IdentifierRep -> epsilon .)
    LPAREN          reduce using rule 61 (IdentifierRep -> epsilon .)
    TYPEX           reduce using rule 61 (IdentifierRep -> epsilon .)
    TTYPE           reduce using rule 61 (IdentifierRep -> epsilon .)
    LBRACK          reduce using rule 61 (IdentifierRep -> epsilon .)
    STRUCT          reduce using rule 61 (IdentifierRep -> epsilon .)
    TIMES           reduce using rule 61 (IdentifierRep -> epsilon .)
    FUNC            reduce using rule 61 (IdentifierRep -> epsilon .)
    EQUAL           reduce using rule 61 (IdentifierRep -> epsilon .)
    SEMICOL         reduce using rule 61 (IdentifierRep -> epsilon .)


state 71

    (59) IdentifierList -> IDENTIFIER IdentifierRep .
    (60) IdentifierRep -> IdentifierRep . COMMA IDENTIFIER

    EQUAL           reduce using rule 59 (IdentifierList -> IDENTIFIER IdentifierRep .)
    LPAREN          reduce using rule 59 (IdentifierList -> IDENTIFIER IdentifierRep .)
    TYPEX           reduce using rule 59 (IdentifierList -> IDENTIFIER IdentifierRep .)
    TTYPE           reduce using rule 59 (IdentifierList -> IDENTIFIER IdentifierRep .)
    LBRACK          reduce using rule 59 (IdentifierList -> IDENTIFIER IdentifierRep .)
    STRUCT          reduce using rule 59 (IdentifierList -> IDENTIFIER IdentifierRep .)
    TIMES           reduce using rule 59 (IdentifierList -> IDENTIFIER IdentifierRep .)
    FUNC            reduce using rule 59 (IdentifierList -> IDENTIFIER IdentifierRep .)
    SEMICOL         reduce using rule 59 (IdentifierList -> IDENTIFIER IdentifierRep .)
    COMMA           shift and go to state 124


state 72

    (79) FunctionDecl -> FUNC FunctionName Function .

    SEMICOL         reduce using rule 79 (FunctionDecl -> FUNC FunctionName Function .)


state 73

    (27) Signature -> Parameters . ResultOpt
    (28) ResultOpt -> . Result
    (29) ResultOpt -> . epsilon
    (30) Result -> . Parameters
    (31) Result -> . Type
    (221) epsilon -> .
    (32) Parameters -> . LPAREN ParameterListOpt RPAREN
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . TIMES BaseType
    (26) FunctionType -> . FUNC Signature

  ! shift/reduce conflict for LPAREN resolved as shift
    EQUAL           reduce using rule 221 (epsilon -> .)
    SEMICOL         reduce using rule 221 (epsilon -> .)
    RPAREN          reduce using rule 221 (epsilon -> .)
    LBRACE          reduce using rule 221 (epsilon -> .)
    COMMA           reduce using rule 221 (epsilon -> .)
    STRING          reduce using rule 221 (epsilon -> .)
    LPAREN          shift and go to state 129
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    LBRACK          shift and go to state 66
    STRUCT          shift and go to state 65
    TIMES           shift and go to state 61
    FUNC            shift and go to state 53

  ! LPAREN          [ reduce using rule 221 (epsilon -> .) ]

    StructType                     shift and go to state 59
    Parameters                     shift and go to state 125
    epsilon                        shift and go to state 128
    ResultOpt                      shift and go to state 127
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 57
    TypeLit                        shift and go to state 56
    Result                         shift and go to state 130
    PointerType                    shift and go to state 68
    FunctionType                   shift and go to state 69
    Type                           shift and go to state 126

state 74

    (80) FunctionDecl -> FUNC FunctionName Signature .
    (82) Function -> Signature . FunctionBody
    (83) FunctionBody -> . Block
    (42) Block -> . CreateScope LBRACE StatementList RBRACE
    (43) CreateScope -> . epsilon
    (221) epsilon -> .

    SEMICOL         reduce using rule 80 (FunctionDecl -> FUNC FunctionName Signature .)
    LBRACE          reduce using rule 221 (epsilon -> .)

    FunctionBody                   shift and go to state 131
    epsilon                        shift and go to state 132
    CreateScope                    shift and go to state 133
    Block                          shift and go to state 134

state 75

    (32) Parameters -> LPAREN . ParameterListOpt RPAREN
    (33) ParameterListOpt -> . ParametersList
    (34) ParameterListOpt -> . epsilon
    (35) ParametersList -> . Type
    (36) ParametersList -> . IdentifierList Type
    (37) ParametersList -> . ParameterDeclCommaRep
    (221) epsilon -> .
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (59) IdentifierList -> . IDENTIFIER IdentifierRep
    (38) ParameterDeclCommaRep -> . ParameterDeclCommaRep COMMA ParameterDecl
    (39) ParameterDeclCommaRep -> . ParameterDecl COMMA ParameterDecl
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (40) ParameterDecl -> . IdentifierList Type
    (41) ParameterDecl -> . Type
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . TIMES BaseType
    (26) FunctionType -> . FUNC Signature

    RPAREN          reduce using rule 221 (epsilon -> .)
    LPAREN          shift and go to state 62
    IDENTIFIER      shift and go to state 34
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    LBRACK          shift and go to state 66
    STRUCT          shift and go to state 65
    TIMES           shift and go to state 61
    FUNC            shift and go to state 53

    StructType                     shift and go to state 59
    epsilon                        shift and go to state 141
    ParameterListOpt               shift and go to state 135
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 57
    TypeLit                        shift and go to state 56
    IdentifierList                 shift and go to state 136
    PointerType                    shift and go to state 68
    FunctionType                   shift and go to state 69
    ParametersList                 shift and go to state 139
    Type                           shift and go to state 138
    ParameterDeclCommaRep          shift and go to state 137
    ParameterDecl                  shift and go to state 140

state 76

    (71) VarDecl -> VAR LPAREN VarSpecRep . RPAREN
    (72) VarSpecRep -> VarSpecRep . VarSpec SEMICOL
    (74) VarSpec -> . IdentifierList Type ExpressionListOpt
    (75) VarSpec -> . IdentifierList EQUAL ExpressionList
    (59) IdentifierList -> . IDENTIFIER IdentifierRep

    RPAREN          shift and go to state 142
    IDENTIFIER      shift and go to state 34

    VarSpec                        shift and go to state 143
    IdentifierList                 shift and go to state 40

state 77

    (73) VarSpecRep -> epsilon .

    RPAREN          reduce using rule 73 (VarSpecRep -> epsilon .)
    IDENTIFIER      reduce using rule 73 (VarSpecRep -> epsilon .)


state 78

    (75) VarSpec -> IdentifierList EQUAL . ExpressionList
    (112) ExpressionList -> . Expression ExpressionRep
    (115) Expression -> . UnaryExpr
    (116) Expression -> . Expression OROR Expression
    (117) Expression -> . Expression AMPAMP Expression
    (118) Expression -> . Expression EQEQ Expression
    (119) Expression -> . Expression NOTEQ Expression
    (120) Expression -> . Expression LESS Expression
    (121) Expression -> . Expression GREAT Expression
    (122) Expression -> . Expression LEQ Expression
    (123) Expression -> . Expression GEQ Expression
    (124) Expression -> . Expression PLUS Expression
    (125) Expression -> . Expression MINUS Expression
    (126) Expression -> . Expression OR Expression
    (127) Expression -> . Expression CARET Expression
    (128) Expression -> . Expression TIMES Expression
    (129) Expression -> . Expression DIVIDE Expression
    (130) Expression -> . Expression MOD Expression
    (131) Expression -> . Expression AMPERS Expression
    (132) Expression -> . Expression LL Expression
    (133) Expression -> . Expression GG Expression
    (134) Expression -> . Expression AMPCAR Expression
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (100) PrimaryExpr -> . Operand
    (101) PrimaryExpr -> . Conversion
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . PrimaryExpr Index
    (104) PrimaryExpr -> . PrimaryExpr Slice
    (105) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (99) Conversion -> . Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (98) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (88) BasicLit -> . IntLiteral
    (89) BasicLit -> . FloatLiteral
    (90) BasicLit -> . ImgLiteral
    (91) BasicLit -> . RuneLiteral
    (92) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (93) IntLiteral -> . INTEGER
    (94) FloatLiteral -> . FLOAT
    (95) ImgLiteral -> . IMAGINARY
    (96) RuneLiteral -> . RUNE
    (97) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . TIMES BaseType
    (26) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 107
    MINUS           shift and go to state 101
    TIMES           shift and go to state 116
    AMPERS          shift and go to state 122
    NOT             shift and go to state 106
    LPAREN          shift and go to state 119
    IDENTIFIER      shift and go to state 110
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 108
    FLOAT           shift and go to state 121
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 95
    STRING          shift and go to state 102
    LBRACK          shift and go to state 66
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53

    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 123
    Conversion                     shift and go to state 96
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 98
    FloatLiteral                   shift and go to state 99
    Type                           shift and go to state 100
    OperandName                    shift and go to state 103
    BasicLit                       shift and go to state 104
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 59
    IntLiteral                     shift and go to state 111
    UnaryExpr                      shift and go to state 114
    RuneLiteral                    shift and go to state 115
    Operand                        shift and go to state 117
    ExpressionList                 shift and go to state 144
    Expression                     shift and go to state 145
    PointerType                    shift and go to state 68
    StringLiteral                  shift and go to state 97
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 112
    FunctionType                   shift and go to state 69

state 79

    (74) VarSpec -> IdentifierList Type . ExpressionListOpt
    (76) ExpressionListOpt -> . EQUAL ExpressionList
    (77) ExpressionListOpt -> . epsilon
    (221) epsilon -> .

    EQUAL           shift and go to state 146
    SEMICOL         reduce using rule 221 (epsilon -> .)

    ExpressionListOpt              shift and go to state 148
    epsilon                        shift and go to state 147

state 80

    (69) TypeDef -> TTYPE IDENTIFIER . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . TIMES BaseType
    (26) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 62
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    LBRACK          shift and go to state 66
    STRUCT          shift and go to state 65
    TIMES           shift and go to state 61
    FUNC            shift and go to state 53

    StructType                     shift and go to state 59
    Type                           shift and go to state 149
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 57
    PointerType                    shift and go to state 68
    FunctionType                   shift and go to state 69
    TypeLit                        shift and go to state 56

state 81

    (63) TypeDecl -> TYPE LPAREN TypeSpecRep . RPAREN
    (64) TypeSpecRep -> TypeSpecRep . TypeSpec SEMICOL
    (66) TypeSpec -> . AliasDecl
    (67) TypeSpec -> . TypeDef
    (68) AliasDecl -> . IDENTIFIER EQUAL Type
    (69) TypeDef -> . TTYPE IDENTIFIER Type

    RPAREN          shift and go to state 150
    IDENTIFIER      shift and go to state 46
    TTYPE           shift and go to state 42

    TypeDef                        shift and go to state 41
    AliasDecl                      shift and go to state 43
    TypeSpec                       shift and go to state 151

state 82

    (65) TypeSpecRep -> epsilon .

    RPAREN          reduce using rule 65 (TypeSpecRep -> epsilon .)
    IDENTIFIER      reduce using rule 65 (TypeSpecRep -> epsilon .)
    TTYPE           reduce using rule 65 (TypeSpecRep -> epsilon .)


state 83

    (68) AliasDecl -> IDENTIFIER EQUAL . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . TIMES BaseType
    (26) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 62
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    LBRACK          shift and go to state 66
    STRUCT          shift and go to state 65
    TIMES           shift and go to state 61
    FUNC            shift and go to state 53

    StructType                     shift and go to state 59
    Type                           shift and go to state 152
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 57
    PointerType                    shift and go to state 68
    FunctionType                   shift and go to state 69
    TypeLit                        shift and go to state 56

state 84

    (213) ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN .

    SEMICOL         reduce using rule 213 (ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN .)


state 85

    (214) ImportSpecRep -> ImportSpecRep ImportSpec . SEMICOL

    SEMICOL         shift and go to state 153


state 86

    (54) ConstSpecRep -> ConstSpecRep ConstSpec . SEMICOL

    SEMICOL         shift and go to state 154


state 87

    (53) ConstDecl -> CONST LPAREN ConstSpecRep RPAREN .

    SEMICOL         reduce using rule 53 (ConstDecl -> CONST LPAREN ConstSpecRep RPAREN .)


state 88

    (26) FunctionType -> FUNC Signature .

    LPAREN          reduce using rule 26 (FunctionType -> FUNC Signature .)
    COMMA           reduce using rule 26 (FunctionType -> FUNC Signature .)
    RPAREN          reduce using rule 26 (FunctionType -> FUNC Signature .)
    EQUAL           reduce using rule 26 (FunctionType -> FUNC Signature .)
    SEMICOL         reduce using rule 26 (FunctionType -> FUNC Signature .)
    LBRACE          reduce using rule 26 (FunctionType -> FUNC Signature .)
    STRING          reduce using rule 26 (FunctionType -> FUNC Signature .)


state 89

    (25) BaseType -> Type .

    LPAREN          reduce using rule 25 (BaseType -> Type .)
    RPAREN          reduce using rule 25 (BaseType -> Type .)
    EQUAL           reduce using rule 25 (BaseType -> Type .)
    SEMICOL         reduce using rule 25 (BaseType -> Type .)
    LBRACE          reduce using rule 25 (BaseType -> Type .)
    COMMA           reduce using rule 25 (BaseType -> Type .)
    STRING          reduce using rule 25 (BaseType -> Type .)


state 90

    (24) PointerType -> TIMES BaseType .

    LPAREN          reduce using rule 24 (PointerType -> TIMES BaseType .)
    RPAREN          reduce using rule 24 (PointerType -> TIMES BaseType .)
    COMMA           reduce using rule 24 (PointerType -> TIMES BaseType .)
    SEMICOL         reduce using rule 24 (PointerType -> TIMES BaseType .)
    EQUAL           reduce using rule 24 (PointerType -> TIMES BaseType .)
    LBRACE          reduce using rule 24 (PointerType -> TIMES BaseType .)
    STRING          reduce using rule 24 (PointerType -> TIMES BaseType .)


state 91

    (4) Type -> LPAREN Type . RPAREN

    RPAREN          shift and go to state 155


state 92

    (6) TypeName -> TTYPE IDENTIFIER .

    LPAREN          reduce using rule 6 (TypeName -> TTYPE IDENTIFIER .)
    SEMICOL         reduce using rule 6 (TypeName -> TTYPE IDENTIFIER .)
    EQUAL           reduce using rule 6 (TypeName -> TTYPE IDENTIFIER .)
    RPAREN          reduce using rule 6 (TypeName -> TTYPE IDENTIFIER .)
    LBRACE          reduce using rule 6 (TypeName -> TTYPE IDENTIFIER .)
    COMMA           reduce using rule 6 (TypeName -> TTYPE IDENTIFIER .)
    STRING          reduce using rule 6 (TypeName -> TTYPE IDENTIFIER .)


state 93

    (57) TypeExprListOpt -> TypeOpt EQUAL . ExpressionList
    (112) ExpressionList -> . Expression ExpressionRep
    (115) Expression -> . UnaryExpr
    (116) Expression -> . Expression OROR Expression
    (117) Expression -> . Expression AMPAMP Expression
    (118) Expression -> . Expression EQEQ Expression
    (119) Expression -> . Expression NOTEQ Expression
    (120) Expression -> . Expression LESS Expression
    (121) Expression -> . Expression GREAT Expression
    (122) Expression -> . Expression LEQ Expression
    (123) Expression -> . Expression GEQ Expression
    (124) Expression -> . Expression PLUS Expression
    (125) Expression -> . Expression MINUS Expression
    (126) Expression -> . Expression OR Expression
    (127) Expression -> . Expression CARET Expression
    (128) Expression -> . Expression TIMES Expression
    (129) Expression -> . Expression DIVIDE Expression
    (130) Expression -> . Expression MOD Expression
    (131) Expression -> . Expression AMPERS Expression
    (132) Expression -> . Expression LL Expression
    (133) Expression -> . Expression GG Expression
    (134) Expression -> . Expression AMPCAR Expression
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (100) PrimaryExpr -> . Operand
    (101) PrimaryExpr -> . Conversion
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . PrimaryExpr Index
    (104) PrimaryExpr -> . PrimaryExpr Slice
    (105) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (99) Conversion -> . Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (98) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (88) BasicLit -> . IntLiteral
    (89) BasicLit -> . FloatLiteral
    (90) BasicLit -> . ImgLiteral
    (91) BasicLit -> . RuneLiteral
    (92) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (93) IntLiteral -> . INTEGER
    (94) FloatLiteral -> . FLOAT
    (95) ImgLiteral -> . IMAGINARY
    (96) RuneLiteral -> . RUNE
    (97) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . TIMES BaseType
    (26) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 107
    MINUS           shift and go to state 101
    TIMES           shift and go to state 116
    AMPERS          shift and go to state 122
    NOT             shift and go to state 106
    LPAREN          shift and go to state 119
    IDENTIFIER      shift and go to state 110
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 108
    FLOAT           shift and go to state 121
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 95
    STRING          shift and go to state 102
    LBRACK          shift and go to state 66
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53

    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 123
    Conversion                     shift and go to state 96
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 98
    Expression                     shift and go to state 145
    FloatLiteral                   shift and go to state 99
    Type                           shift and go to state 100
    OperandName                    shift and go to state 103
    BasicLit                       shift and go to state 104
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 59
    IntLiteral                     shift and go to state 111
    UnaryExpr                      shift and go to state 114
    RuneLiteral                    shift and go to state 115
    Operand                        shift and go to state 117
    ExpressionList                 shift and go to state 156
    PointerType                    shift and go to state 68
    StringLiteral                  shift and go to state 97
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 112
    FunctionType                   shift and go to state 69

state 94

    (17) StructType -> STRUCT LBRACE . FieldDeclRep RBRACE
    (18) FieldDeclRep -> . FieldDeclRep FieldDecl SEMICOL
    (19) FieldDeclRep -> . epsilon
    (221) epsilon -> .

    RBRACE          reduce using rule 221 (epsilon -> .)
    IDENTIFIER      reduce using rule 221 (epsilon -> .)

    FieldDeclRep                   shift and go to state 157
    epsilon                        shift and go to state 158

state 95

    (96) RuneLiteral -> RUNE .

    DOT             reduce using rule 96 (RuneLiteral -> RUNE .)
    LBRACK          reduce using rule 96 (RuneLiteral -> RUNE .)
    LPAREN          reduce using rule 96 (RuneLiteral -> RUNE .)
    RPAREN          reduce using rule 96 (RuneLiteral -> RUNE .)
    OROR            reduce using rule 96 (RuneLiteral -> RUNE .)
    AMPAMP          reduce using rule 96 (RuneLiteral -> RUNE .)
    EQEQ            reduce using rule 96 (RuneLiteral -> RUNE .)
    NOTEQ           reduce using rule 96 (RuneLiteral -> RUNE .)
    LESS            reduce using rule 96 (RuneLiteral -> RUNE .)
    GREAT           reduce using rule 96 (RuneLiteral -> RUNE .)
    LEQ             reduce using rule 96 (RuneLiteral -> RUNE .)
    GEQ             reduce using rule 96 (RuneLiteral -> RUNE .)
    PLUS            reduce using rule 96 (RuneLiteral -> RUNE .)
    MINUS           reduce using rule 96 (RuneLiteral -> RUNE .)
    OR              reduce using rule 96 (RuneLiteral -> RUNE .)
    CARET           reduce using rule 96 (RuneLiteral -> RUNE .)
    TIMES           reduce using rule 96 (RuneLiteral -> RUNE .)
    DIVIDE          reduce using rule 96 (RuneLiteral -> RUNE .)
    MOD             reduce using rule 96 (RuneLiteral -> RUNE .)
    AMPERS          reduce using rule 96 (RuneLiteral -> RUNE .)
    LL              reduce using rule 96 (RuneLiteral -> RUNE .)
    GG              reduce using rule 96 (RuneLiteral -> RUNE .)
    AMPCAR          reduce using rule 96 (RuneLiteral -> RUNE .)
    RBRACK          reduce using rule 96 (RuneLiteral -> RUNE .)
    COMMA           reduce using rule 96 (RuneLiteral -> RUNE .)
    SEMICOL         reduce using rule 96 (RuneLiteral -> RUNE .)
    COLON           reduce using rule 96 (RuneLiteral -> RUNE .)
    PLUSEQ          reduce using rule 96 (RuneLiteral -> RUNE .)
    MINUSEQ         reduce using rule 96 (RuneLiteral -> RUNE .)
    TIMESEQ         reduce using rule 96 (RuneLiteral -> RUNE .)
    DIVIDEEQ        reduce using rule 96 (RuneLiteral -> RUNE .)
    MODEQ           reduce using rule 96 (RuneLiteral -> RUNE .)
    AMPEQ           reduce using rule 96 (RuneLiteral -> RUNE .)
    OREQ            reduce using rule 96 (RuneLiteral -> RUNE .)
    CAREQ           reduce using rule 96 (RuneLiteral -> RUNE .)
    LLEQ            reduce using rule 96 (RuneLiteral -> RUNE .)
    GGEQ            reduce using rule 96 (RuneLiteral -> RUNE .)
    EQUAL           reduce using rule 96 (RuneLiteral -> RUNE .)
    LBRACE          reduce using rule 96 (RuneLiteral -> RUNE .)
    PLUSPLUS        reduce using rule 96 (RuneLiteral -> RUNE .)
    MINUSMIN        reduce using rule 96 (RuneLiteral -> RUNE .)


state 96

    (101) PrimaryExpr -> Conversion .

    DOT             reduce using rule 101 (PrimaryExpr -> Conversion .)
    LBRACK          reduce using rule 101 (PrimaryExpr -> Conversion .)
    LPAREN          reduce using rule 101 (PrimaryExpr -> Conversion .)
    OROR            reduce using rule 101 (PrimaryExpr -> Conversion .)
    AMPAMP          reduce using rule 101 (PrimaryExpr -> Conversion .)
    EQEQ            reduce using rule 101 (PrimaryExpr -> Conversion .)
    NOTEQ           reduce using rule 101 (PrimaryExpr -> Conversion .)
    LESS            reduce using rule 101 (PrimaryExpr -> Conversion .)
    GREAT           reduce using rule 101 (PrimaryExpr -> Conversion .)
    LEQ             reduce using rule 101 (PrimaryExpr -> Conversion .)
    GEQ             reduce using rule 101 (PrimaryExpr -> Conversion .)
    PLUS            reduce using rule 101 (PrimaryExpr -> Conversion .)
    MINUS           reduce using rule 101 (PrimaryExpr -> Conversion .)
    OR              reduce using rule 101 (PrimaryExpr -> Conversion .)
    CARET           reduce using rule 101 (PrimaryExpr -> Conversion .)
    TIMES           reduce using rule 101 (PrimaryExpr -> Conversion .)
    DIVIDE          reduce using rule 101 (PrimaryExpr -> Conversion .)
    MOD             reduce using rule 101 (PrimaryExpr -> Conversion .)
    AMPERS          reduce using rule 101 (PrimaryExpr -> Conversion .)
    LL              reduce using rule 101 (PrimaryExpr -> Conversion .)
    GG              reduce using rule 101 (PrimaryExpr -> Conversion .)
    AMPCAR          reduce using rule 101 (PrimaryExpr -> Conversion .)
    SEMICOL         reduce using rule 101 (PrimaryExpr -> Conversion .)
    LBRACE          reduce using rule 101 (PrimaryExpr -> Conversion .)
    RBRACK          reduce using rule 101 (PrimaryExpr -> Conversion .)
    COMMA           reduce using rule 101 (PrimaryExpr -> Conversion .)
    RPAREN          reduce using rule 101 (PrimaryExpr -> Conversion .)
    COLON           reduce using rule 101 (PrimaryExpr -> Conversion .)
    PLUSEQ          reduce using rule 101 (PrimaryExpr -> Conversion .)
    MINUSEQ         reduce using rule 101 (PrimaryExpr -> Conversion .)
    TIMESEQ         reduce using rule 101 (PrimaryExpr -> Conversion .)
    DIVIDEEQ        reduce using rule 101 (PrimaryExpr -> Conversion .)
    MODEQ           reduce using rule 101 (PrimaryExpr -> Conversion .)
    AMPEQ           reduce using rule 101 (PrimaryExpr -> Conversion .)
    OREQ            reduce using rule 101 (PrimaryExpr -> Conversion .)
    CAREQ           reduce using rule 101 (PrimaryExpr -> Conversion .)
    LLEQ            reduce using rule 101 (PrimaryExpr -> Conversion .)
    GGEQ            reduce using rule 101 (PrimaryExpr -> Conversion .)
    EQUAL           reduce using rule 101 (PrimaryExpr -> Conversion .)
    PLUSPLUS        reduce using rule 101 (PrimaryExpr -> Conversion .)
    MINUSMIN        reduce using rule 101 (PrimaryExpr -> Conversion .)


state 97

    (92) BasicLit -> StringLiteral .

    DOT             reduce using rule 92 (BasicLit -> StringLiteral .)
    LBRACK          reduce using rule 92 (BasicLit -> StringLiteral .)
    LPAREN          reduce using rule 92 (BasicLit -> StringLiteral .)
    OROR            reduce using rule 92 (BasicLit -> StringLiteral .)
    AMPAMP          reduce using rule 92 (BasicLit -> StringLiteral .)
    EQEQ            reduce using rule 92 (BasicLit -> StringLiteral .)
    NOTEQ           reduce using rule 92 (BasicLit -> StringLiteral .)
    LESS            reduce using rule 92 (BasicLit -> StringLiteral .)
    GREAT           reduce using rule 92 (BasicLit -> StringLiteral .)
    LEQ             reduce using rule 92 (BasicLit -> StringLiteral .)
    GEQ             reduce using rule 92 (BasicLit -> StringLiteral .)
    PLUS            reduce using rule 92 (BasicLit -> StringLiteral .)
    MINUS           reduce using rule 92 (BasicLit -> StringLiteral .)
    OR              reduce using rule 92 (BasicLit -> StringLiteral .)
    CARET           reduce using rule 92 (BasicLit -> StringLiteral .)
    TIMES           reduce using rule 92 (BasicLit -> StringLiteral .)
    DIVIDE          reduce using rule 92 (BasicLit -> StringLiteral .)
    MOD             reduce using rule 92 (BasicLit -> StringLiteral .)
    AMPERS          reduce using rule 92 (BasicLit -> StringLiteral .)
    LL              reduce using rule 92 (BasicLit -> StringLiteral .)
    GG              reduce using rule 92 (BasicLit -> StringLiteral .)
    AMPCAR          reduce using rule 92 (BasicLit -> StringLiteral .)
    COMMA           reduce using rule 92 (BasicLit -> StringLiteral .)
    SEMICOL         reduce using rule 92 (BasicLit -> StringLiteral .)
    RPAREN          reduce using rule 92 (BasicLit -> StringLiteral .)
    LBRACE          reduce using rule 92 (BasicLit -> StringLiteral .)
    PLUSEQ          reduce using rule 92 (BasicLit -> StringLiteral .)
    MINUSEQ         reduce using rule 92 (BasicLit -> StringLiteral .)
    TIMESEQ         reduce using rule 92 (BasicLit -> StringLiteral .)
    DIVIDEEQ        reduce using rule 92 (BasicLit -> StringLiteral .)
    MODEQ           reduce using rule 92 (BasicLit -> StringLiteral .)
    AMPEQ           reduce using rule 92 (BasicLit -> StringLiteral .)
    OREQ            reduce using rule 92 (BasicLit -> StringLiteral .)
    CAREQ           reduce using rule 92 (BasicLit -> StringLiteral .)
    LLEQ            reduce using rule 92 (BasicLit -> StringLiteral .)
    GGEQ            reduce using rule 92 (BasicLit -> StringLiteral .)
    EQUAL           reduce using rule 92 (BasicLit -> StringLiteral .)
    RBRACK          reduce using rule 92 (BasicLit -> StringLiteral .)
    COLON           reduce using rule 92 (BasicLit -> StringLiteral .)
    PLUSPLUS        reduce using rule 92 (BasicLit -> StringLiteral .)
    MINUSMIN        reduce using rule 92 (BasicLit -> StringLiteral .)


state 98

    (84) Operand -> Literal .

    DOT             reduce using rule 84 (Operand -> Literal .)
    LBRACK          reduce using rule 84 (Operand -> Literal .)
    LPAREN          reduce using rule 84 (Operand -> Literal .)
    OROR            reduce using rule 84 (Operand -> Literal .)
    AMPAMP          reduce using rule 84 (Operand -> Literal .)
    EQEQ            reduce using rule 84 (Operand -> Literal .)
    NOTEQ           reduce using rule 84 (Operand -> Literal .)
    LESS            reduce using rule 84 (Operand -> Literal .)
    GREAT           reduce using rule 84 (Operand -> Literal .)
    LEQ             reduce using rule 84 (Operand -> Literal .)
    GEQ             reduce using rule 84 (Operand -> Literal .)
    PLUS            reduce using rule 84 (Operand -> Literal .)
    MINUS           reduce using rule 84 (Operand -> Literal .)
    OR              reduce using rule 84 (Operand -> Literal .)
    CARET           reduce using rule 84 (Operand -> Literal .)
    TIMES           reduce using rule 84 (Operand -> Literal .)
    DIVIDE          reduce using rule 84 (Operand -> Literal .)
    MOD             reduce using rule 84 (Operand -> Literal .)
    AMPERS          reduce using rule 84 (Operand -> Literal .)
    LL              reduce using rule 84 (Operand -> Literal .)
    GG              reduce using rule 84 (Operand -> Literal .)
    AMPCAR          reduce using rule 84 (Operand -> Literal .)
    COMMA           reduce using rule 84 (Operand -> Literal .)
    SEMICOL         reduce using rule 84 (Operand -> Literal .)
    LBRACE          reduce using rule 84 (Operand -> Literal .)
    PLUSPLUS        reduce using rule 84 (Operand -> Literal .)
    MINUSMIN        reduce using rule 84 (Operand -> Literal .)
    PLUSEQ          reduce using rule 84 (Operand -> Literal .)
    MINUSEQ         reduce using rule 84 (Operand -> Literal .)
    TIMESEQ         reduce using rule 84 (Operand -> Literal .)
    DIVIDEEQ        reduce using rule 84 (Operand -> Literal .)
    MODEQ           reduce using rule 84 (Operand -> Literal .)
    AMPEQ           reduce using rule 84 (Operand -> Literal .)
    OREQ            reduce using rule 84 (Operand -> Literal .)
    CAREQ           reduce using rule 84 (Operand -> Literal .)
    LLEQ            reduce using rule 84 (Operand -> Literal .)
    GGEQ            reduce using rule 84 (Operand -> Literal .)
    EQUAL           reduce using rule 84 (Operand -> Literal .)
    RBRACK          reduce using rule 84 (Operand -> Literal .)
    RPAREN          reduce using rule 84 (Operand -> Literal .)
    COLON           reduce using rule 84 (Operand -> Literal .)


state 99

    (89) BasicLit -> FloatLiteral .

    DOT             reduce using rule 89 (BasicLit -> FloatLiteral .)
    LBRACK          reduce using rule 89 (BasicLit -> FloatLiteral .)
    LPAREN          reduce using rule 89 (BasicLit -> FloatLiteral .)
    OROR            reduce using rule 89 (BasicLit -> FloatLiteral .)
    AMPAMP          reduce using rule 89 (BasicLit -> FloatLiteral .)
    EQEQ            reduce using rule 89 (BasicLit -> FloatLiteral .)
    NOTEQ           reduce using rule 89 (BasicLit -> FloatLiteral .)
    LESS            reduce using rule 89 (BasicLit -> FloatLiteral .)
    GREAT           reduce using rule 89 (BasicLit -> FloatLiteral .)
    LEQ             reduce using rule 89 (BasicLit -> FloatLiteral .)
    GEQ             reduce using rule 89 (BasicLit -> FloatLiteral .)
    PLUS            reduce using rule 89 (BasicLit -> FloatLiteral .)
    MINUS           reduce using rule 89 (BasicLit -> FloatLiteral .)
    OR              reduce using rule 89 (BasicLit -> FloatLiteral .)
    CARET           reduce using rule 89 (BasicLit -> FloatLiteral .)
    TIMES           reduce using rule 89 (BasicLit -> FloatLiteral .)
    DIVIDE          reduce using rule 89 (BasicLit -> FloatLiteral .)
    MOD             reduce using rule 89 (BasicLit -> FloatLiteral .)
    AMPERS          reduce using rule 89 (BasicLit -> FloatLiteral .)
    LL              reduce using rule 89 (BasicLit -> FloatLiteral .)
    GG              reduce using rule 89 (BasicLit -> FloatLiteral .)
    AMPCAR          reduce using rule 89 (BasicLit -> FloatLiteral .)
    COMMA           reduce using rule 89 (BasicLit -> FloatLiteral .)
    SEMICOL         reduce using rule 89 (BasicLit -> FloatLiteral .)
    RPAREN          reduce using rule 89 (BasicLit -> FloatLiteral .)
    LBRACE          reduce using rule 89 (BasicLit -> FloatLiteral .)
    PLUSEQ          reduce using rule 89 (BasicLit -> FloatLiteral .)
    MINUSEQ         reduce using rule 89 (BasicLit -> FloatLiteral .)
    TIMESEQ         reduce using rule 89 (BasicLit -> FloatLiteral .)
    DIVIDEEQ        reduce using rule 89 (BasicLit -> FloatLiteral .)
    MODEQ           reduce using rule 89 (BasicLit -> FloatLiteral .)
    AMPEQ           reduce using rule 89 (BasicLit -> FloatLiteral .)
    OREQ            reduce using rule 89 (BasicLit -> FloatLiteral .)
    CAREQ           reduce using rule 89 (BasicLit -> FloatLiteral .)
    LLEQ            reduce using rule 89 (BasicLit -> FloatLiteral .)
    GGEQ            reduce using rule 89 (BasicLit -> FloatLiteral .)
    EQUAL           reduce using rule 89 (BasicLit -> FloatLiteral .)
    RBRACK          reduce using rule 89 (BasicLit -> FloatLiteral .)
    COLON           reduce using rule 89 (BasicLit -> FloatLiteral .)
    PLUSPLUS        reduce using rule 89 (BasicLit -> FloatLiteral .)
    MINUSMIN        reduce using rule 89 (BasicLit -> FloatLiteral .)


state 100

    (99) Conversion -> Type . LPAREN Expression RPAREN

    LPAREN          shift and go to state 159


state 101

    (140) UnaryOp -> MINUS .

    PLUS            reduce using rule 140 (UnaryOp -> MINUS .)
    MINUS           reduce using rule 140 (UnaryOp -> MINUS .)
    TIMES           reduce using rule 140 (UnaryOp -> MINUS .)
    AMPERS          reduce using rule 140 (UnaryOp -> MINUS .)
    NOT             reduce using rule 140 (UnaryOp -> MINUS .)
    LPAREN          reduce using rule 140 (UnaryOp -> MINUS .)
    IDENTIFIER      reduce using rule 140 (UnaryOp -> MINUS .)
    TYPEX           reduce using rule 140 (UnaryOp -> MINUS .)
    TTYPE           reduce using rule 140 (UnaryOp -> MINUS .)
    INTEGER         reduce using rule 140 (UnaryOp -> MINUS .)
    FLOAT           reduce using rule 140 (UnaryOp -> MINUS .)
    IMAGINARY       reduce using rule 140 (UnaryOp -> MINUS .)
    RUNE            reduce using rule 140 (UnaryOp -> MINUS .)
    STRING          reduce using rule 140 (UnaryOp -> MINUS .)
    LBRACK          reduce using rule 140 (UnaryOp -> MINUS .)
    STRUCT          reduce using rule 140 (UnaryOp -> MINUS .)
    FUNC            reduce using rule 140 (UnaryOp -> MINUS .)


state 102

    (97) StringLiteral -> STRING .

    DOT             reduce using rule 97 (StringLiteral -> STRING .)
    LBRACK          reduce using rule 97 (StringLiteral -> STRING .)
    LPAREN          reduce using rule 97 (StringLiteral -> STRING .)
    OROR            reduce using rule 97 (StringLiteral -> STRING .)
    AMPAMP          reduce using rule 97 (StringLiteral -> STRING .)
    EQEQ            reduce using rule 97 (StringLiteral -> STRING .)
    NOTEQ           reduce using rule 97 (StringLiteral -> STRING .)
    LESS            reduce using rule 97 (StringLiteral -> STRING .)
    GREAT           reduce using rule 97 (StringLiteral -> STRING .)
    LEQ             reduce using rule 97 (StringLiteral -> STRING .)
    GEQ             reduce using rule 97 (StringLiteral -> STRING .)
    PLUS            reduce using rule 97 (StringLiteral -> STRING .)
    MINUS           reduce using rule 97 (StringLiteral -> STRING .)
    OR              reduce using rule 97 (StringLiteral -> STRING .)
    CARET           reduce using rule 97 (StringLiteral -> STRING .)
    TIMES           reduce using rule 97 (StringLiteral -> STRING .)
    DIVIDE          reduce using rule 97 (StringLiteral -> STRING .)
    MOD             reduce using rule 97 (StringLiteral -> STRING .)
    AMPERS          reduce using rule 97 (StringLiteral -> STRING .)
    LL              reduce using rule 97 (StringLiteral -> STRING .)
    GG              reduce using rule 97 (StringLiteral -> STRING .)
    AMPCAR          reduce using rule 97 (StringLiteral -> STRING .)
    RBRACK          reduce using rule 97 (StringLiteral -> STRING .)
    COMMA           reduce using rule 97 (StringLiteral -> STRING .)
    SEMICOL         reduce using rule 97 (StringLiteral -> STRING .)
    RPAREN          reduce using rule 97 (StringLiteral -> STRING .)
    COLON           reduce using rule 97 (StringLiteral -> STRING .)
    PLUSEQ          reduce using rule 97 (StringLiteral -> STRING .)
    MINUSEQ         reduce using rule 97 (StringLiteral -> STRING .)
    TIMESEQ         reduce using rule 97 (StringLiteral -> STRING .)
    DIVIDEEQ        reduce using rule 97 (StringLiteral -> STRING .)
    MODEQ           reduce using rule 97 (StringLiteral -> STRING .)
    AMPEQ           reduce using rule 97 (StringLiteral -> STRING .)
    OREQ            reduce using rule 97 (StringLiteral -> STRING .)
    CAREQ           reduce using rule 97 (StringLiteral -> STRING .)
    LLEQ            reduce using rule 97 (StringLiteral -> STRING .)
    GGEQ            reduce using rule 97 (StringLiteral -> STRING .)
    EQUAL           reduce using rule 97 (StringLiteral -> STRING .)
    LBRACE          reduce using rule 97 (StringLiteral -> STRING .)
    PLUSPLUS        reduce using rule 97 (StringLiteral -> STRING .)
    MINUSMIN        reduce using rule 97 (StringLiteral -> STRING .)


state 103

    (85) Operand -> OperandName .

    DOT             reduce using rule 85 (Operand -> OperandName .)
    LBRACK          reduce using rule 85 (Operand -> OperandName .)
    LPAREN          reduce using rule 85 (Operand -> OperandName .)
    OROR            reduce using rule 85 (Operand -> OperandName .)
    AMPAMP          reduce using rule 85 (Operand -> OperandName .)
    EQEQ            reduce using rule 85 (Operand -> OperandName .)
    NOTEQ           reduce using rule 85 (Operand -> OperandName .)
    LESS            reduce using rule 85 (Operand -> OperandName .)
    GREAT           reduce using rule 85 (Operand -> OperandName .)
    LEQ             reduce using rule 85 (Operand -> OperandName .)
    GEQ             reduce using rule 85 (Operand -> OperandName .)
    PLUS            reduce using rule 85 (Operand -> OperandName .)
    MINUS           reduce using rule 85 (Operand -> OperandName .)
    OR              reduce using rule 85 (Operand -> OperandName .)
    CARET           reduce using rule 85 (Operand -> OperandName .)
    TIMES           reduce using rule 85 (Operand -> OperandName .)
    DIVIDE          reduce using rule 85 (Operand -> OperandName .)
    MOD             reduce using rule 85 (Operand -> OperandName .)
    AMPERS          reduce using rule 85 (Operand -> OperandName .)
    LL              reduce using rule 85 (Operand -> OperandName .)
    GG              reduce using rule 85 (Operand -> OperandName .)
    AMPCAR          reduce using rule 85 (Operand -> OperandName .)
    COMMA           reduce using rule 85 (Operand -> OperandName .)
    SEMICOL         reduce using rule 85 (Operand -> OperandName .)
    LBRACE          reduce using rule 85 (Operand -> OperandName .)
    PLUSPLUS        reduce using rule 85 (Operand -> OperandName .)
    MINUSMIN        reduce using rule 85 (Operand -> OperandName .)
    PLUSEQ          reduce using rule 85 (Operand -> OperandName .)
    MINUSEQ         reduce using rule 85 (Operand -> OperandName .)
    TIMESEQ         reduce using rule 85 (Operand -> OperandName .)
    DIVIDEEQ        reduce using rule 85 (Operand -> OperandName .)
    MODEQ           reduce using rule 85 (Operand -> OperandName .)
    AMPEQ           reduce using rule 85 (Operand -> OperandName .)
    OREQ            reduce using rule 85 (Operand -> OperandName .)
    CAREQ           reduce using rule 85 (Operand -> OperandName .)
    LLEQ            reduce using rule 85 (Operand -> OperandName .)
    GGEQ            reduce using rule 85 (Operand -> OperandName .)
    EQUAL           reduce using rule 85 (Operand -> OperandName .)
    RBRACK          reduce using rule 85 (Operand -> OperandName .)
    RPAREN          reduce using rule 85 (Operand -> OperandName .)
    COLON           reduce using rule 85 (Operand -> OperandName .)


state 104

    (87) Literal -> BasicLit .

    DOT             reduce using rule 87 (Literal -> BasicLit .)
    LBRACK          reduce using rule 87 (Literal -> BasicLit .)
    LPAREN          reduce using rule 87 (Literal -> BasicLit .)
    OROR            reduce using rule 87 (Literal -> BasicLit .)
    AMPAMP          reduce using rule 87 (Literal -> BasicLit .)
    EQEQ            reduce using rule 87 (Literal -> BasicLit .)
    NOTEQ           reduce using rule 87 (Literal -> BasicLit .)
    LESS            reduce using rule 87 (Literal -> BasicLit .)
    GREAT           reduce using rule 87 (Literal -> BasicLit .)
    LEQ             reduce using rule 87 (Literal -> BasicLit .)
    GEQ             reduce using rule 87 (Literal -> BasicLit .)
    PLUS            reduce using rule 87 (Literal -> BasicLit .)
    MINUS           reduce using rule 87 (Literal -> BasicLit .)
    OR              reduce using rule 87 (Literal -> BasicLit .)
    CARET           reduce using rule 87 (Literal -> BasicLit .)
    TIMES           reduce using rule 87 (Literal -> BasicLit .)
    DIVIDE          reduce using rule 87 (Literal -> BasicLit .)
    MOD             reduce using rule 87 (Literal -> BasicLit .)
    AMPERS          reduce using rule 87 (Literal -> BasicLit .)
    LL              reduce using rule 87 (Literal -> BasicLit .)
    GG              reduce using rule 87 (Literal -> BasicLit .)
    AMPCAR          reduce using rule 87 (Literal -> BasicLit .)
    RBRACK          reduce using rule 87 (Literal -> BasicLit .)
    COMMA           reduce using rule 87 (Literal -> BasicLit .)
    SEMICOL         reduce using rule 87 (Literal -> BasicLit .)
    RPAREN          reduce using rule 87 (Literal -> BasicLit .)
    COLON           reduce using rule 87 (Literal -> BasicLit .)
    PLUSEQ          reduce using rule 87 (Literal -> BasicLit .)
    MINUSEQ         reduce using rule 87 (Literal -> BasicLit .)
    TIMESEQ         reduce using rule 87 (Literal -> BasicLit .)
    DIVIDEEQ        reduce using rule 87 (Literal -> BasicLit .)
    MODEQ           reduce using rule 87 (Literal -> BasicLit .)
    AMPEQ           reduce using rule 87 (Literal -> BasicLit .)
    OREQ            reduce using rule 87 (Literal -> BasicLit .)
    CAREQ           reduce using rule 87 (Literal -> BasicLit .)
    LLEQ            reduce using rule 87 (Literal -> BasicLit .)
    GGEQ            reduce using rule 87 (Literal -> BasicLit .)
    EQUAL           reduce using rule 87 (Literal -> BasicLit .)
    LBRACE          reduce using rule 87 (Literal -> BasicLit .)
    PLUSPLUS        reduce using rule 87 (Literal -> BasicLit .)
    MINUSMIN        reduce using rule 87 (Literal -> BasicLit .)


state 105

    (138) UnaryExpr -> UnaryOp . UnaryExpr
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (100) PrimaryExpr -> . Operand
    (101) PrimaryExpr -> . Conversion
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . PrimaryExpr Index
    (104) PrimaryExpr -> . PrimaryExpr Slice
    (105) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (99) Conversion -> . Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (98) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (88) BasicLit -> . IntLiteral
    (89) BasicLit -> . FloatLiteral
    (90) BasicLit -> . ImgLiteral
    (91) BasicLit -> . RuneLiteral
    (92) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (93) IntLiteral -> . INTEGER
    (94) FloatLiteral -> . FLOAT
    (95) ImgLiteral -> . IMAGINARY
    (96) RuneLiteral -> . RUNE
    (97) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . TIMES BaseType
    (26) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 107
    MINUS           shift and go to state 101
    TIMES           shift and go to state 116
    AMPERS          shift and go to state 122
    NOT             shift and go to state 106
    LPAREN          shift and go to state 119
    IDENTIFIER      shift and go to state 110
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 108
    FLOAT           shift and go to state 121
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 95
    STRING          shift and go to state 102
    LBRACK          shift and go to state 66
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53

    Conversion                     shift and go to state 96
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 123
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 98
    FloatLiteral                   shift and go to state 99
    Type                           shift and go to state 100
    OperandName                    shift and go to state 103
    BasicLit                       shift and go to state 104
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 59
    IntLiteral                     shift and go to state 111
    UnaryExpr                      shift and go to state 160
    RuneLiteral                    shift and go to state 115
    Operand                        shift and go to state 117
    PointerType                    shift and go to state 68
    StringLiteral                  shift and go to state 97
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 112
    FunctionType                   shift and go to state 69

state 106

    (143) UnaryOp -> NOT .

    PLUS            reduce using rule 143 (UnaryOp -> NOT .)
    MINUS           reduce using rule 143 (UnaryOp -> NOT .)
    TIMES           reduce using rule 143 (UnaryOp -> NOT .)
    AMPERS          reduce using rule 143 (UnaryOp -> NOT .)
    NOT             reduce using rule 143 (UnaryOp -> NOT .)
    LPAREN          reduce using rule 143 (UnaryOp -> NOT .)
    IDENTIFIER      reduce using rule 143 (UnaryOp -> NOT .)
    TYPEX           reduce using rule 143 (UnaryOp -> NOT .)
    TTYPE           reduce using rule 143 (UnaryOp -> NOT .)
    INTEGER         reduce using rule 143 (UnaryOp -> NOT .)
    FLOAT           reduce using rule 143 (UnaryOp -> NOT .)
    IMAGINARY       reduce using rule 143 (UnaryOp -> NOT .)
    RUNE            reduce using rule 143 (UnaryOp -> NOT .)
    STRING          reduce using rule 143 (UnaryOp -> NOT .)
    LBRACK          reduce using rule 143 (UnaryOp -> NOT .)
    STRUCT          reduce using rule 143 (UnaryOp -> NOT .)
    FUNC            reduce using rule 143 (UnaryOp -> NOT .)


state 107

    (139) UnaryOp -> PLUS .

    PLUS            reduce using rule 139 (UnaryOp -> PLUS .)
    MINUS           reduce using rule 139 (UnaryOp -> PLUS .)
    TIMES           reduce using rule 139 (UnaryOp -> PLUS .)
    AMPERS          reduce using rule 139 (UnaryOp -> PLUS .)
    NOT             reduce using rule 139 (UnaryOp -> PLUS .)
    LPAREN          reduce using rule 139 (UnaryOp -> PLUS .)
    IDENTIFIER      reduce using rule 139 (UnaryOp -> PLUS .)
    TYPEX           reduce using rule 139 (UnaryOp -> PLUS .)
    TTYPE           reduce using rule 139 (UnaryOp -> PLUS .)
    INTEGER         reduce using rule 139 (UnaryOp -> PLUS .)
    FLOAT           reduce using rule 139 (UnaryOp -> PLUS .)
    IMAGINARY       reduce using rule 139 (UnaryOp -> PLUS .)
    RUNE            reduce using rule 139 (UnaryOp -> PLUS .)
    STRING          reduce using rule 139 (UnaryOp -> PLUS .)
    LBRACK          reduce using rule 139 (UnaryOp -> PLUS .)
    STRUCT          reduce using rule 139 (UnaryOp -> PLUS .)
    FUNC            reduce using rule 139 (UnaryOp -> PLUS .)


state 108

    (93) IntLiteral -> INTEGER .

    DOT             reduce using rule 93 (IntLiteral -> INTEGER .)
    LBRACK          reduce using rule 93 (IntLiteral -> INTEGER .)
    LPAREN          reduce using rule 93 (IntLiteral -> INTEGER .)
    OROR            reduce using rule 93 (IntLiteral -> INTEGER .)
    AMPAMP          reduce using rule 93 (IntLiteral -> INTEGER .)
    EQEQ            reduce using rule 93 (IntLiteral -> INTEGER .)
    NOTEQ           reduce using rule 93 (IntLiteral -> INTEGER .)
    LESS            reduce using rule 93 (IntLiteral -> INTEGER .)
    GREAT           reduce using rule 93 (IntLiteral -> INTEGER .)
    LEQ             reduce using rule 93 (IntLiteral -> INTEGER .)
    GEQ             reduce using rule 93 (IntLiteral -> INTEGER .)
    PLUS            reduce using rule 93 (IntLiteral -> INTEGER .)
    MINUS           reduce using rule 93 (IntLiteral -> INTEGER .)
    OR              reduce using rule 93 (IntLiteral -> INTEGER .)
    CARET           reduce using rule 93 (IntLiteral -> INTEGER .)
    TIMES           reduce using rule 93 (IntLiteral -> INTEGER .)
    DIVIDE          reduce using rule 93 (IntLiteral -> INTEGER .)
    MOD             reduce using rule 93 (IntLiteral -> INTEGER .)
    AMPERS          reduce using rule 93 (IntLiteral -> INTEGER .)
    LL              reduce using rule 93 (IntLiteral -> INTEGER .)
    GG              reduce using rule 93 (IntLiteral -> INTEGER .)
    AMPCAR          reduce using rule 93 (IntLiteral -> INTEGER .)
    COMMA           reduce using rule 93 (IntLiteral -> INTEGER .)
    RPAREN          reduce using rule 93 (IntLiteral -> INTEGER .)
    PLUSPLUS        reduce using rule 93 (IntLiteral -> INTEGER .)
    MINUSMIN        reduce using rule 93 (IntLiteral -> INTEGER .)
    LBRACE          reduce using rule 93 (IntLiteral -> INTEGER .)
    SEMICOL         reduce using rule 93 (IntLiteral -> INTEGER .)
    PLUSEQ          reduce using rule 93 (IntLiteral -> INTEGER .)
    MINUSEQ         reduce using rule 93 (IntLiteral -> INTEGER .)
    TIMESEQ         reduce using rule 93 (IntLiteral -> INTEGER .)
    DIVIDEEQ        reduce using rule 93 (IntLiteral -> INTEGER .)
    MODEQ           reduce using rule 93 (IntLiteral -> INTEGER .)
    AMPEQ           reduce using rule 93 (IntLiteral -> INTEGER .)
    OREQ            reduce using rule 93 (IntLiteral -> INTEGER .)
    CAREQ           reduce using rule 93 (IntLiteral -> INTEGER .)
    LLEQ            reduce using rule 93 (IntLiteral -> INTEGER .)
    GGEQ            reduce using rule 93 (IntLiteral -> INTEGER .)
    EQUAL           reduce using rule 93 (IntLiteral -> INTEGER .)
    RBRACK          reduce using rule 93 (IntLiteral -> INTEGER .)
    COLON           reduce using rule 93 (IntLiteral -> INTEGER .)


state 109

    (95) ImgLiteral -> IMAGINARY .

    DOT             reduce using rule 95 (ImgLiteral -> IMAGINARY .)
    LBRACK          reduce using rule 95 (ImgLiteral -> IMAGINARY .)
    LPAREN          reduce using rule 95 (ImgLiteral -> IMAGINARY .)
    OROR            reduce using rule 95 (ImgLiteral -> IMAGINARY .)
    AMPAMP          reduce using rule 95 (ImgLiteral -> IMAGINARY .)
    EQEQ            reduce using rule 95 (ImgLiteral -> IMAGINARY .)
    NOTEQ           reduce using rule 95 (ImgLiteral -> IMAGINARY .)
    LESS            reduce using rule 95 (ImgLiteral -> IMAGINARY .)
    GREAT           reduce using rule 95 (ImgLiteral -> IMAGINARY .)
    LEQ             reduce using rule 95 (ImgLiteral -> IMAGINARY .)
    GEQ             reduce using rule 95 (ImgLiteral -> IMAGINARY .)
    PLUS            reduce using rule 95 (ImgLiteral -> IMAGINARY .)
    MINUS           reduce using rule 95 (ImgLiteral -> IMAGINARY .)
    OR              reduce using rule 95 (ImgLiteral -> IMAGINARY .)
    CARET           reduce using rule 95 (ImgLiteral -> IMAGINARY .)
    TIMES           reduce using rule 95 (ImgLiteral -> IMAGINARY .)
    DIVIDE          reduce using rule 95 (ImgLiteral -> IMAGINARY .)
    MOD             reduce using rule 95 (ImgLiteral -> IMAGINARY .)
    AMPERS          reduce using rule 95 (ImgLiteral -> IMAGINARY .)
    LL              reduce using rule 95 (ImgLiteral -> IMAGINARY .)
    GG              reduce using rule 95 (ImgLiteral -> IMAGINARY .)
    AMPCAR          reduce using rule 95 (ImgLiteral -> IMAGINARY .)
    RBRACK          reduce using rule 95 (ImgLiteral -> IMAGINARY .)
    COMMA           reduce using rule 95 (ImgLiteral -> IMAGINARY .)
    SEMICOL         reduce using rule 95 (ImgLiteral -> IMAGINARY .)
    RPAREN          reduce using rule 95 (ImgLiteral -> IMAGINARY .)
    COLON           reduce using rule 95 (ImgLiteral -> IMAGINARY .)
    PLUSEQ          reduce using rule 95 (ImgLiteral -> IMAGINARY .)
    MINUSEQ         reduce using rule 95 (ImgLiteral -> IMAGINARY .)
    TIMESEQ         reduce using rule 95 (ImgLiteral -> IMAGINARY .)
    DIVIDEEQ        reduce using rule 95 (ImgLiteral -> IMAGINARY .)
    MODEQ           reduce using rule 95 (ImgLiteral -> IMAGINARY .)
    AMPEQ           reduce using rule 95 (ImgLiteral -> IMAGINARY .)
    OREQ            reduce using rule 95 (ImgLiteral -> IMAGINARY .)
    CAREQ           reduce using rule 95 (ImgLiteral -> IMAGINARY .)
    LLEQ            reduce using rule 95 (ImgLiteral -> IMAGINARY .)
    GGEQ            reduce using rule 95 (ImgLiteral -> IMAGINARY .)
    EQUAL           reduce using rule 95 (ImgLiteral -> IMAGINARY .)
    LBRACE          reduce using rule 95 (ImgLiteral -> IMAGINARY .)
    PLUSPLUS        reduce using rule 95 (ImgLiteral -> IMAGINARY .)
    MINUSMIN        reduce using rule 95 (ImgLiteral -> IMAGINARY .)


state 110

    (98) OperandName -> IDENTIFIER .

    DOT             reduce using rule 98 (OperandName -> IDENTIFIER .)
    LBRACK          reduce using rule 98 (OperandName -> IDENTIFIER .)
    LPAREN          reduce using rule 98 (OperandName -> IDENTIFIER .)
    OROR            reduce using rule 98 (OperandName -> IDENTIFIER .)
    AMPAMP          reduce using rule 98 (OperandName -> IDENTIFIER .)
    EQEQ            reduce using rule 98 (OperandName -> IDENTIFIER .)
    NOTEQ           reduce using rule 98 (OperandName -> IDENTIFIER .)
    LESS            reduce using rule 98 (OperandName -> IDENTIFIER .)
    GREAT           reduce using rule 98 (OperandName -> IDENTIFIER .)
    LEQ             reduce using rule 98 (OperandName -> IDENTIFIER .)
    GEQ             reduce using rule 98 (OperandName -> IDENTIFIER .)
    PLUS            reduce using rule 98 (OperandName -> IDENTIFIER .)
    MINUS           reduce using rule 98 (OperandName -> IDENTIFIER .)
    OR              reduce using rule 98 (OperandName -> IDENTIFIER .)
    CARET           reduce using rule 98 (OperandName -> IDENTIFIER .)
    TIMES           reduce using rule 98 (OperandName -> IDENTIFIER .)
    DIVIDE          reduce using rule 98 (OperandName -> IDENTIFIER .)
    MOD             reduce using rule 98 (OperandName -> IDENTIFIER .)
    AMPERS          reduce using rule 98 (OperandName -> IDENTIFIER .)
    LL              reduce using rule 98 (OperandName -> IDENTIFIER .)
    GG              reduce using rule 98 (OperandName -> IDENTIFIER .)
    AMPCAR          reduce using rule 98 (OperandName -> IDENTIFIER .)
    RBRACK          reduce using rule 98 (OperandName -> IDENTIFIER .)
    COMMA           reduce using rule 98 (OperandName -> IDENTIFIER .)
    SEMICOL         reduce using rule 98 (OperandName -> IDENTIFIER .)
    RPAREN          reduce using rule 98 (OperandName -> IDENTIFIER .)
    COLON           reduce using rule 98 (OperandName -> IDENTIFIER .)
    PLUSEQ          reduce using rule 98 (OperandName -> IDENTIFIER .)
    MINUSEQ         reduce using rule 98 (OperandName -> IDENTIFIER .)
    TIMESEQ         reduce using rule 98 (OperandName -> IDENTIFIER .)
    DIVIDEEQ        reduce using rule 98 (OperandName -> IDENTIFIER .)
    MODEQ           reduce using rule 98 (OperandName -> IDENTIFIER .)
    AMPEQ           reduce using rule 98 (OperandName -> IDENTIFIER .)
    OREQ            reduce using rule 98 (OperandName -> IDENTIFIER .)
    CAREQ           reduce using rule 98 (OperandName -> IDENTIFIER .)
    LLEQ            reduce using rule 98 (OperandName -> IDENTIFIER .)
    GGEQ            reduce using rule 98 (OperandName -> IDENTIFIER .)
    EQUAL           reduce using rule 98 (OperandName -> IDENTIFIER .)
    LBRACE          reduce using rule 98 (OperandName -> IDENTIFIER .)


state 111

    (88) BasicLit -> IntLiteral .

    DOT             reduce using rule 88 (BasicLit -> IntLiteral .)
    LBRACK          reduce using rule 88 (BasicLit -> IntLiteral .)
    LPAREN          reduce using rule 88 (BasicLit -> IntLiteral .)
    OROR            reduce using rule 88 (BasicLit -> IntLiteral .)
    AMPAMP          reduce using rule 88 (BasicLit -> IntLiteral .)
    EQEQ            reduce using rule 88 (BasicLit -> IntLiteral .)
    NOTEQ           reduce using rule 88 (BasicLit -> IntLiteral .)
    LESS            reduce using rule 88 (BasicLit -> IntLiteral .)
    GREAT           reduce using rule 88 (BasicLit -> IntLiteral .)
    LEQ             reduce using rule 88 (BasicLit -> IntLiteral .)
    GEQ             reduce using rule 88 (BasicLit -> IntLiteral .)
    PLUS            reduce using rule 88 (BasicLit -> IntLiteral .)
    MINUS           reduce using rule 88 (BasicLit -> IntLiteral .)
    OR              reduce using rule 88 (BasicLit -> IntLiteral .)
    CARET           reduce using rule 88 (BasicLit -> IntLiteral .)
    TIMES           reduce using rule 88 (BasicLit -> IntLiteral .)
    DIVIDE          reduce using rule 88 (BasicLit -> IntLiteral .)
    MOD             reduce using rule 88 (BasicLit -> IntLiteral .)
    AMPERS          reduce using rule 88 (BasicLit -> IntLiteral .)
    LL              reduce using rule 88 (BasicLit -> IntLiteral .)
    GG              reduce using rule 88 (BasicLit -> IntLiteral .)
    AMPCAR          reduce using rule 88 (BasicLit -> IntLiteral .)
    COMMA           reduce using rule 88 (BasicLit -> IntLiteral .)
    SEMICOL         reduce using rule 88 (BasicLit -> IntLiteral .)
    RPAREN          reduce using rule 88 (BasicLit -> IntLiteral .)
    LBRACE          reduce using rule 88 (BasicLit -> IntLiteral .)
    PLUSEQ          reduce using rule 88 (BasicLit -> IntLiteral .)
    MINUSEQ         reduce using rule 88 (BasicLit -> IntLiteral .)
    TIMESEQ         reduce using rule 88 (BasicLit -> IntLiteral .)
    DIVIDEEQ        reduce using rule 88 (BasicLit -> IntLiteral .)
    MODEQ           reduce using rule 88 (BasicLit -> IntLiteral .)
    AMPEQ           reduce using rule 88 (BasicLit -> IntLiteral .)
    OREQ            reduce using rule 88 (BasicLit -> IntLiteral .)
    CAREQ           reduce using rule 88 (BasicLit -> IntLiteral .)
    LLEQ            reduce using rule 88 (BasicLit -> IntLiteral .)
    GGEQ            reduce using rule 88 (BasicLit -> IntLiteral .)
    EQUAL           reduce using rule 88 (BasicLit -> IntLiteral .)
    RBRACK          reduce using rule 88 (BasicLit -> IntLiteral .)
    COLON           reduce using rule 88 (BasicLit -> IntLiteral .)
    PLUSPLUS        reduce using rule 88 (BasicLit -> IntLiteral .)
    MINUSMIN        reduce using rule 88 (BasicLit -> IntLiteral .)


state 112

    (90) BasicLit -> ImgLiteral .

    DOT             reduce using rule 90 (BasicLit -> ImgLiteral .)
    LBRACK          reduce using rule 90 (BasicLit -> ImgLiteral .)
    LPAREN          reduce using rule 90 (BasicLit -> ImgLiteral .)
    OROR            reduce using rule 90 (BasicLit -> ImgLiteral .)
    AMPAMP          reduce using rule 90 (BasicLit -> ImgLiteral .)
    EQEQ            reduce using rule 90 (BasicLit -> ImgLiteral .)
    NOTEQ           reduce using rule 90 (BasicLit -> ImgLiteral .)
    LESS            reduce using rule 90 (BasicLit -> ImgLiteral .)
    GREAT           reduce using rule 90 (BasicLit -> ImgLiteral .)
    LEQ             reduce using rule 90 (BasicLit -> ImgLiteral .)
    GEQ             reduce using rule 90 (BasicLit -> ImgLiteral .)
    PLUS            reduce using rule 90 (BasicLit -> ImgLiteral .)
    MINUS           reduce using rule 90 (BasicLit -> ImgLiteral .)
    OR              reduce using rule 90 (BasicLit -> ImgLiteral .)
    CARET           reduce using rule 90 (BasicLit -> ImgLiteral .)
    TIMES           reduce using rule 90 (BasicLit -> ImgLiteral .)
    DIVIDE          reduce using rule 90 (BasicLit -> ImgLiteral .)
    MOD             reduce using rule 90 (BasicLit -> ImgLiteral .)
    AMPERS          reduce using rule 90 (BasicLit -> ImgLiteral .)
    LL              reduce using rule 90 (BasicLit -> ImgLiteral .)
    GG              reduce using rule 90 (BasicLit -> ImgLiteral .)
    AMPCAR          reduce using rule 90 (BasicLit -> ImgLiteral .)
    COMMA           reduce using rule 90 (BasicLit -> ImgLiteral .)
    SEMICOL         reduce using rule 90 (BasicLit -> ImgLiteral .)
    RPAREN          reduce using rule 90 (BasicLit -> ImgLiteral .)
    LBRACE          reduce using rule 90 (BasicLit -> ImgLiteral .)
    PLUSEQ          reduce using rule 90 (BasicLit -> ImgLiteral .)
    MINUSEQ         reduce using rule 90 (BasicLit -> ImgLiteral .)
    TIMESEQ         reduce using rule 90 (BasicLit -> ImgLiteral .)
    DIVIDEEQ        reduce using rule 90 (BasicLit -> ImgLiteral .)
    MODEQ           reduce using rule 90 (BasicLit -> ImgLiteral .)
    AMPEQ           reduce using rule 90 (BasicLit -> ImgLiteral .)
    OREQ            reduce using rule 90 (BasicLit -> ImgLiteral .)
    CAREQ           reduce using rule 90 (BasicLit -> ImgLiteral .)
    LLEQ            reduce using rule 90 (BasicLit -> ImgLiteral .)
    GGEQ            reduce using rule 90 (BasicLit -> ImgLiteral .)
    EQUAL           reduce using rule 90 (BasicLit -> ImgLiteral .)
    RBRACK          reduce using rule 90 (BasicLit -> ImgLiteral .)
    COLON           reduce using rule 90 (BasicLit -> ImgLiteral .)
    PLUSPLUS        reduce using rule 90 (BasicLit -> ImgLiteral .)
    MINUSMIN        reduce using rule 90 (BasicLit -> ImgLiteral .)


state 113

    (14) ArrayType -> LBRACK RBRACK . ElementType
    (16) ElementType -> . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . TIMES BaseType
    (26) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 62
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    LBRACK          shift and go to state 66
    STRUCT          shift and go to state 65
    TIMES           shift and go to state 61
    FUNC            shift and go to state 53

    StructType                     shift and go to state 59
    Type                           shift and go to state 161
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 57
    PointerType                    shift and go to state 68
    FunctionType                   shift and go to state 69
    ElementType                    shift and go to state 162
    TypeLit                        shift and go to state 56

state 114

    (115) Expression -> UnaryExpr .

    OROR            reduce using rule 115 (Expression -> UnaryExpr .)
    AMPAMP          reduce using rule 115 (Expression -> UnaryExpr .)
    EQEQ            reduce using rule 115 (Expression -> UnaryExpr .)
    NOTEQ           reduce using rule 115 (Expression -> UnaryExpr .)
    LESS            reduce using rule 115 (Expression -> UnaryExpr .)
    GREAT           reduce using rule 115 (Expression -> UnaryExpr .)
    LEQ             reduce using rule 115 (Expression -> UnaryExpr .)
    GEQ             reduce using rule 115 (Expression -> UnaryExpr .)
    PLUS            reduce using rule 115 (Expression -> UnaryExpr .)
    MINUS           reduce using rule 115 (Expression -> UnaryExpr .)
    OR              reduce using rule 115 (Expression -> UnaryExpr .)
    CARET           reduce using rule 115 (Expression -> UnaryExpr .)
    TIMES           reduce using rule 115 (Expression -> UnaryExpr .)
    DIVIDE          reduce using rule 115 (Expression -> UnaryExpr .)
    MOD             reduce using rule 115 (Expression -> UnaryExpr .)
    AMPERS          reduce using rule 115 (Expression -> UnaryExpr .)
    LL              reduce using rule 115 (Expression -> UnaryExpr .)
    GG              reduce using rule 115 (Expression -> UnaryExpr .)
    AMPCAR          reduce using rule 115 (Expression -> UnaryExpr .)
    RBRACK          reduce using rule 115 (Expression -> UnaryExpr .)
    COMMA           reduce using rule 115 (Expression -> UnaryExpr .)
    SEMICOL         reduce using rule 115 (Expression -> UnaryExpr .)
    RPAREN          reduce using rule 115 (Expression -> UnaryExpr .)
    COLON           reduce using rule 115 (Expression -> UnaryExpr .)
    PLUSEQ          reduce using rule 115 (Expression -> UnaryExpr .)
    MINUSEQ         reduce using rule 115 (Expression -> UnaryExpr .)
    TIMESEQ         reduce using rule 115 (Expression -> UnaryExpr .)
    DIVIDEEQ        reduce using rule 115 (Expression -> UnaryExpr .)
    MODEQ           reduce using rule 115 (Expression -> UnaryExpr .)
    AMPEQ           reduce using rule 115 (Expression -> UnaryExpr .)
    OREQ            reduce using rule 115 (Expression -> UnaryExpr .)
    CAREQ           reduce using rule 115 (Expression -> UnaryExpr .)
    LLEQ            reduce using rule 115 (Expression -> UnaryExpr .)
    GGEQ            reduce using rule 115 (Expression -> UnaryExpr .)
    EQUAL           reduce using rule 115 (Expression -> UnaryExpr .)
    LBRACE          reduce using rule 115 (Expression -> UnaryExpr .)


state 115

    (91) BasicLit -> RuneLiteral .

    DOT             reduce using rule 91 (BasicLit -> RuneLiteral .)
    LBRACK          reduce using rule 91 (BasicLit -> RuneLiteral .)
    LPAREN          reduce using rule 91 (BasicLit -> RuneLiteral .)
    OROR            reduce using rule 91 (BasicLit -> RuneLiteral .)
    AMPAMP          reduce using rule 91 (BasicLit -> RuneLiteral .)
    EQEQ            reduce using rule 91 (BasicLit -> RuneLiteral .)
    NOTEQ           reduce using rule 91 (BasicLit -> RuneLiteral .)
    LESS            reduce using rule 91 (BasicLit -> RuneLiteral .)
    GREAT           reduce using rule 91 (BasicLit -> RuneLiteral .)
    LEQ             reduce using rule 91 (BasicLit -> RuneLiteral .)
    GEQ             reduce using rule 91 (BasicLit -> RuneLiteral .)
    PLUS            reduce using rule 91 (BasicLit -> RuneLiteral .)
    MINUS           reduce using rule 91 (BasicLit -> RuneLiteral .)
    OR              reduce using rule 91 (BasicLit -> RuneLiteral .)
    CARET           reduce using rule 91 (BasicLit -> RuneLiteral .)
    TIMES           reduce using rule 91 (BasicLit -> RuneLiteral .)
    DIVIDE          reduce using rule 91 (BasicLit -> RuneLiteral .)
    MOD             reduce using rule 91 (BasicLit -> RuneLiteral .)
    AMPERS          reduce using rule 91 (BasicLit -> RuneLiteral .)
    LL              reduce using rule 91 (BasicLit -> RuneLiteral .)
    GG              reduce using rule 91 (BasicLit -> RuneLiteral .)
    AMPCAR          reduce using rule 91 (BasicLit -> RuneLiteral .)
    COMMA           reduce using rule 91 (BasicLit -> RuneLiteral .)
    SEMICOL         reduce using rule 91 (BasicLit -> RuneLiteral .)
    RPAREN          reduce using rule 91 (BasicLit -> RuneLiteral .)
    LBRACE          reduce using rule 91 (BasicLit -> RuneLiteral .)
    PLUSEQ          reduce using rule 91 (BasicLit -> RuneLiteral .)
    MINUSEQ         reduce using rule 91 (BasicLit -> RuneLiteral .)
    TIMESEQ         reduce using rule 91 (BasicLit -> RuneLiteral .)
    DIVIDEEQ        reduce using rule 91 (BasicLit -> RuneLiteral .)
    MODEQ           reduce using rule 91 (BasicLit -> RuneLiteral .)
    AMPEQ           reduce using rule 91 (BasicLit -> RuneLiteral .)
    OREQ            reduce using rule 91 (BasicLit -> RuneLiteral .)
    CAREQ           reduce using rule 91 (BasicLit -> RuneLiteral .)
    LLEQ            reduce using rule 91 (BasicLit -> RuneLiteral .)
    GGEQ            reduce using rule 91 (BasicLit -> RuneLiteral .)
    EQUAL           reduce using rule 91 (BasicLit -> RuneLiteral .)
    RBRACK          reduce using rule 91 (BasicLit -> RuneLiteral .)
    COLON           reduce using rule 91 (BasicLit -> RuneLiteral .)
    PLUSPLUS        reduce using rule 91 (BasicLit -> RuneLiteral .)
    MINUSMIN        reduce using rule 91 (BasicLit -> RuneLiteral .)


state 116

    (141) UnaryOp -> TIMES .
    (24) PointerType -> TIMES . BaseType
    (25) BaseType -> . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . TIMES BaseType
    (26) FunctionType -> . FUNC Signature

    PLUS            reduce using rule 141 (UnaryOp -> TIMES .)
    MINUS           reduce using rule 141 (UnaryOp -> TIMES .)
    TIMES           reduce using rule 141 (UnaryOp -> TIMES .)
    AMPERS          reduce using rule 141 (UnaryOp -> TIMES .)
    NOT             reduce using rule 141 (UnaryOp -> TIMES .)
    LPAREN          reduce using rule 141 (UnaryOp -> TIMES .)
    IDENTIFIER      reduce using rule 141 (UnaryOp -> TIMES .)
    TYPEX           reduce using rule 141 (UnaryOp -> TIMES .)
    TTYPE           reduce using rule 141 (UnaryOp -> TIMES .)
    INTEGER         reduce using rule 141 (UnaryOp -> TIMES .)
    FLOAT           reduce using rule 141 (UnaryOp -> TIMES .)
    IMAGINARY       reduce using rule 141 (UnaryOp -> TIMES .)
    RUNE            reduce using rule 141 (UnaryOp -> TIMES .)
    STRING          reduce using rule 141 (UnaryOp -> TIMES .)
    LBRACK          reduce using rule 141 (UnaryOp -> TIMES .)
    STRUCT          reduce using rule 141 (UnaryOp -> TIMES .)
    FUNC            reduce using rule 141 (UnaryOp -> TIMES .)

  ! LPAREN          [ shift and go to state 62 ]
  ! TYPEX           [ shift and go to state 58 ]
  ! TTYPE           [ shift and go to state 63 ]
  ! LBRACK          [ shift and go to state 66 ]
  ! STRUCT          [ shift and go to state 65 ]
  ! TIMES           [ shift and go to state 61 ]
  ! FUNC            [ shift and go to state 53 ]

    StructType                     shift and go to state 59
    BaseType                       shift and go to state 90
    Type                           shift and go to state 89
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 57
    PointerType                    shift and go to state 68
    FunctionType                   shift and go to state 69
    TypeLit                        shift and go to state 56

state 117

    (100) PrimaryExpr -> Operand .

    DOT             reduce using rule 100 (PrimaryExpr -> Operand .)
    LBRACK          reduce using rule 100 (PrimaryExpr -> Operand .)
    LPAREN          reduce using rule 100 (PrimaryExpr -> Operand .)
    OROR            reduce using rule 100 (PrimaryExpr -> Operand .)
    AMPAMP          reduce using rule 100 (PrimaryExpr -> Operand .)
    EQEQ            reduce using rule 100 (PrimaryExpr -> Operand .)
    NOTEQ           reduce using rule 100 (PrimaryExpr -> Operand .)
    LESS            reduce using rule 100 (PrimaryExpr -> Operand .)
    GREAT           reduce using rule 100 (PrimaryExpr -> Operand .)
    LEQ             reduce using rule 100 (PrimaryExpr -> Operand .)
    GEQ             reduce using rule 100 (PrimaryExpr -> Operand .)
    PLUS            reduce using rule 100 (PrimaryExpr -> Operand .)
    MINUS           reduce using rule 100 (PrimaryExpr -> Operand .)
    OR              reduce using rule 100 (PrimaryExpr -> Operand .)
    CARET           reduce using rule 100 (PrimaryExpr -> Operand .)
    TIMES           reduce using rule 100 (PrimaryExpr -> Operand .)
    DIVIDE          reduce using rule 100 (PrimaryExpr -> Operand .)
    MOD             reduce using rule 100 (PrimaryExpr -> Operand .)
    AMPERS          reduce using rule 100 (PrimaryExpr -> Operand .)
    LL              reduce using rule 100 (PrimaryExpr -> Operand .)
    GG              reduce using rule 100 (PrimaryExpr -> Operand .)
    AMPCAR          reduce using rule 100 (PrimaryExpr -> Operand .)
    SEMICOL         reduce using rule 100 (PrimaryExpr -> Operand .)
    LBRACE          reduce using rule 100 (PrimaryExpr -> Operand .)
    RBRACK          reduce using rule 100 (PrimaryExpr -> Operand .)
    COMMA           reduce using rule 100 (PrimaryExpr -> Operand .)
    RPAREN          reduce using rule 100 (PrimaryExpr -> Operand .)
    COLON           reduce using rule 100 (PrimaryExpr -> Operand .)
    PLUSEQ          reduce using rule 100 (PrimaryExpr -> Operand .)
    MINUSEQ         reduce using rule 100 (PrimaryExpr -> Operand .)
    TIMESEQ         reduce using rule 100 (PrimaryExpr -> Operand .)
    DIVIDEEQ        reduce using rule 100 (PrimaryExpr -> Operand .)
    MODEQ           reduce using rule 100 (PrimaryExpr -> Operand .)
    AMPEQ           reduce using rule 100 (PrimaryExpr -> Operand .)
    OREQ            reduce using rule 100 (PrimaryExpr -> Operand .)
    CAREQ           reduce using rule 100 (PrimaryExpr -> Operand .)
    LLEQ            reduce using rule 100 (PrimaryExpr -> Operand .)
    GGEQ            reduce using rule 100 (PrimaryExpr -> Operand .)
    EQUAL           reduce using rule 100 (PrimaryExpr -> Operand .)
    PLUSPLUS        reduce using rule 100 (PrimaryExpr -> Operand .)
    MINUSMIN        reduce using rule 100 (PrimaryExpr -> Operand .)


state 118

    (13) ArrayType -> LBRACK ArrayLength . RBRACK ElementType

    RBRACK          shift and go to state 163


state 119

    (86) Operand -> LPAREN . Expression RPAREN
    (4) Type -> LPAREN . Type RPAREN
    (115) Expression -> . UnaryExpr
    (116) Expression -> . Expression OROR Expression
    (117) Expression -> . Expression AMPAMP Expression
    (118) Expression -> . Expression EQEQ Expression
    (119) Expression -> . Expression NOTEQ Expression
    (120) Expression -> . Expression LESS Expression
    (121) Expression -> . Expression GREAT Expression
    (122) Expression -> . Expression LEQ Expression
    (123) Expression -> . Expression GEQ Expression
    (124) Expression -> . Expression PLUS Expression
    (125) Expression -> . Expression MINUS Expression
    (126) Expression -> . Expression OR Expression
    (127) Expression -> . Expression CARET Expression
    (128) Expression -> . Expression TIMES Expression
    (129) Expression -> . Expression DIVIDE Expression
    (130) Expression -> . Expression MOD Expression
    (131) Expression -> . Expression AMPERS Expression
    (132) Expression -> . Expression LL Expression
    (133) Expression -> . Expression GG Expression
    (134) Expression -> . Expression AMPCAR Expression
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (100) PrimaryExpr -> . Operand
    (101) PrimaryExpr -> . Conversion
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . PrimaryExpr Index
    (104) PrimaryExpr -> . PrimaryExpr Slice
    (105) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . TIMES BaseType
    (26) FunctionType -> . FUNC Signature
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (99) Conversion -> . Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (98) OperandName -> . IDENTIFIER
    (88) BasicLit -> . IntLiteral
    (89) BasicLit -> . FloatLiteral
    (90) BasicLit -> . ImgLiteral
    (91) BasicLit -> . RuneLiteral
    (92) BasicLit -> . StringLiteral
    (93) IntLiteral -> . INTEGER
    (94) FloatLiteral -> . FLOAT
    (95) ImgLiteral -> . IMAGINARY
    (96) RuneLiteral -> . RUNE
    (97) StringLiteral -> . STRING

    LPAREN          shift and go to state 165
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    PLUS            shift and go to state 107
    MINUS           shift and go to state 101
    TIMES           shift and go to state 116
    AMPERS          shift and go to state 122
    NOT             shift and go to state 106
    LBRACK          shift and go to state 66
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53
    IDENTIFIER      shift and go to state 110
    INTEGER         shift and go to state 108
    FLOAT           shift and go to state 121
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 95
    STRING          shift and go to state 102

    Conversion                     shift and go to state 96
    UnaryOp                        shift and go to state 105
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 98
    FloatLiteral                   shift and go to state 99
    TypeLit                        shift and go to state 56
    OperandName                    shift and go to state 103
    Type                           shift and go to state 164
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 59
    IntLiteral                     shift and go to state 111
    ImgLiteral                     shift and go to state 112
    UnaryExpr                      shift and go to state 114
    RuneLiteral                    shift and go to state 115
    PrimaryExpr                    shift and go to state 123
    Expression                     shift and go to state 166
    PointerType                    shift and go to state 68
    StringLiteral                  shift and go to state 97
    BasicLit                       shift and go to state 104
    Operand                        shift and go to state 117
    FunctionType                   shift and go to state 69

state 120

    (15) ArrayLength -> Expression .
    (116) Expression -> Expression . OROR Expression
    (117) Expression -> Expression . AMPAMP Expression
    (118) Expression -> Expression . EQEQ Expression
    (119) Expression -> Expression . NOTEQ Expression
    (120) Expression -> Expression . LESS Expression
    (121) Expression -> Expression . GREAT Expression
    (122) Expression -> Expression . LEQ Expression
    (123) Expression -> Expression . GEQ Expression
    (124) Expression -> Expression . PLUS Expression
    (125) Expression -> Expression . MINUS Expression
    (126) Expression -> Expression . OR Expression
    (127) Expression -> Expression . CARET Expression
    (128) Expression -> Expression . TIMES Expression
    (129) Expression -> Expression . DIVIDE Expression
    (130) Expression -> Expression . MOD Expression
    (131) Expression -> Expression . AMPERS Expression
    (132) Expression -> Expression . LL Expression
    (133) Expression -> Expression . GG Expression
    (134) Expression -> Expression . AMPCAR Expression

    RBRACK          reduce using rule 15 (ArrayLength -> Expression .)
    OROR            shift and go to state 167
    AMPAMP          shift and go to state 182
    EQEQ            shift and go to state 173
    NOTEQ           shift and go to state 179
    LESS            shift and go to state 172
    GREAT           shift and go to state 169
    LEQ             shift and go to state 185
    GEQ             shift and go to state 176
    PLUS            shift and go to state 180
    MINUS           shift and go to state 184
    OR              shift and go to state 177
    CARET           shift and go to state 168
    TIMES           shift and go to state 183
    DIVIDE          shift and go to state 170
    MOD             shift and go to state 181
    AMPERS          shift and go to state 175
    LL              shift and go to state 174
    GG              shift and go to state 178
    AMPCAR          shift and go to state 171


state 121

    (94) FloatLiteral -> FLOAT .

    DOT             reduce using rule 94 (FloatLiteral -> FLOAT .)
    LBRACK          reduce using rule 94 (FloatLiteral -> FLOAT .)
    LPAREN          reduce using rule 94 (FloatLiteral -> FLOAT .)
    OROR            reduce using rule 94 (FloatLiteral -> FLOAT .)
    AMPAMP          reduce using rule 94 (FloatLiteral -> FLOAT .)
    EQEQ            reduce using rule 94 (FloatLiteral -> FLOAT .)
    NOTEQ           reduce using rule 94 (FloatLiteral -> FLOAT .)
    LESS            reduce using rule 94 (FloatLiteral -> FLOAT .)
    GREAT           reduce using rule 94 (FloatLiteral -> FLOAT .)
    LEQ             reduce using rule 94 (FloatLiteral -> FLOAT .)
    GEQ             reduce using rule 94 (FloatLiteral -> FLOAT .)
    PLUS            reduce using rule 94 (FloatLiteral -> FLOAT .)
    MINUS           reduce using rule 94 (FloatLiteral -> FLOAT .)
    OR              reduce using rule 94 (FloatLiteral -> FLOAT .)
    CARET           reduce using rule 94 (FloatLiteral -> FLOAT .)
    TIMES           reduce using rule 94 (FloatLiteral -> FLOAT .)
    DIVIDE          reduce using rule 94 (FloatLiteral -> FLOAT .)
    MOD             reduce using rule 94 (FloatLiteral -> FLOAT .)
    AMPERS          reduce using rule 94 (FloatLiteral -> FLOAT .)
    LL              reduce using rule 94 (FloatLiteral -> FLOAT .)
    GG              reduce using rule 94 (FloatLiteral -> FLOAT .)
    AMPCAR          reduce using rule 94 (FloatLiteral -> FLOAT .)
    RBRACK          reduce using rule 94 (FloatLiteral -> FLOAT .)
    COMMA           reduce using rule 94 (FloatLiteral -> FLOAT .)
    SEMICOL         reduce using rule 94 (FloatLiteral -> FLOAT .)
    RPAREN          reduce using rule 94 (FloatLiteral -> FLOAT .)
    COLON           reduce using rule 94 (FloatLiteral -> FLOAT .)
    PLUSEQ          reduce using rule 94 (FloatLiteral -> FLOAT .)
    MINUSEQ         reduce using rule 94 (FloatLiteral -> FLOAT .)
    TIMESEQ         reduce using rule 94 (FloatLiteral -> FLOAT .)
    DIVIDEEQ        reduce using rule 94 (FloatLiteral -> FLOAT .)
    MODEQ           reduce using rule 94 (FloatLiteral -> FLOAT .)
    AMPEQ           reduce using rule 94 (FloatLiteral -> FLOAT .)
    OREQ            reduce using rule 94 (FloatLiteral -> FLOAT .)
    CAREQ           reduce using rule 94 (FloatLiteral -> FLOAT .)
    LLEQ            reduce using rule 94 (FloatLiteral -> FLOAT .)
    GGEQ            reduce using rule 94 (FloatLiteral -> FLOAT .)
    EQUAL           reduce using rule 94 (FloatLiteral -> FLOAT .)
    LBRACE          reduce using rule 94 (FloatLiteral -> FLOAT .)
    PLUSPLUS        reduce using rule 94 (FloatLiteral -> FLOAT .)
    MINUSMIN        reduce using rule 94 (FloatLiteral -> FLOAT .)


state 122

    (142) UnaryOp -> AMPERS .

    PLUS            reduce using rule 142 (UnaryOp -> AMPERS .)
    MINUS           reduce using rule 142 (UnaryOp -> AMPERS .)
    TIMES           reduce using rule 142 (UnaryOp -> AMPERS .)
    AMPERS          reduce using rule 142 (UnaryOp -> AMPERS .)
    NOT             reduce using rule 142 (UnaryOp -> AMPERS .)
    LPAREN          reduce using rule 142 (UnaryOp -> AMPERS .)
    IDENTIFIER      reduce using rule 142 (UnaryOp -> AMPERS .)
    TYPEX           reduce using rule 142 (UnaryOp -> AMPERS .)
    TTYPE           reduce using rule 142 (UnaryOp -> AMPERS .)
    INTEGER         reduce using rule 142 (UnaryOp -> AMPERS .)
    FLOAT           reduce using rule 142 (UnaryOp -> AMPERS .)
    IMAGINARY       reduce using rule 142 (UnaryOp -> AMPERS .)
    RUNE            reduce using rule 142 (UnaryOp -> AMPERS .)
    STRING          reduce using rule 142 (UnaryOp -> AMPERS .)
    LBRACK          reduce using rule 142 (UnaryOp -> AMPERS .)
    STRUCT          reduce using rule 142 (UnaryOp -> AMPERS .)
    FUNC            reduce using rule 142 (UnaryOp -> AMPERS .)


state 123

    (137) UnaryExpr -> PrimaryExpr .
    (102) PrimaryExpr -> PrimaryExpr . Selector
    (103) PrimaryExpr -> PrimaryExpr . Index
    (104) PrimaryExpr -> PrimaryExpr . Slice
    (105) PrimaryExpr -> PrimaryExpr . Arguments
    (106) Selector -> . DOT IDENTIFIER
    (107) Index -> . LBRACK Expression RBRACK
    (108) Slice -> . LBRACK ExpressionOpt COLON ExpressionOpt RBRACK
    (109) Arguments -> . LPAREN ExpressionListTypeOpt RPAREN

    OROR            reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    AMPAMP          reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    EQEQ            reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    NOTEQ           reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    LESS            reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    GREAT           reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    LEQ             reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    GEQ             reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    PLUS            reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    MINUS           reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    OR              reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    CARET           reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    TIMES           reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    DIVIDE          reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    MOD             reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    AMPERS          reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    LL              reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    GG              reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    AMPCAR          reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    RBRACK          reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    COMMA           reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    SEMICOL         reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    RPAREN          reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    COLON           reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    PLUSEQ          reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    MINUSEQ         reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    TIMESEQ         reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    DIVIDEEQ        reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    MODEQ           reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    AMPEQ           reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    OREQ            reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    CAREQ           reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    LLEQ            reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    GGEQ            reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    EQUAL           reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    LBRACE          reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    DOT             shift and go to state 192
    LBRACK          shift and go to state 188
    LPAREN          shift and go to state 191

    Index                          shift and go to state 186
    Slice                          shift and go to state 187
    Selector                       shift and go to state 189
    Arguments                      shift and go to state 190

state 124

    (60) IdentifierRep -> IdentifierRep COMMA . IDENTIFIER

    IDENTIFIER      shift and go to state 193


state 125

    (30) Result -> Parameters .

    EQUAL           reduce using rule 30 (Result -> Parameters .)
    SEMICOL         reduce using rule 30 (Result -> Parameters .)
    RPAREN          reduce using rule 30 (Result -> Parameters .)
    LBRACE          reduce using rule 30 (Result -> Parameters .)
    COMMA           reduce using rule 30 (Result -> Parameters .)
    LPAREN          reduce using rule 30 (Result -> Parameters .)
    STRING          reduce using rule 30 (Result -> Parameters .)


state 126

    (31) Result -> Type .

    EQUAL           reduce using rule 31 (Result -> Type .)
    SEMICOL         reduce using rule 31 (Result -> Type .)
    RPAREN          reduce using rule 31 (Result -> Type .)
    LBRACE          reduce using rule 31 (Result -> Type .)
    COMMA           reduce using rule 31 (Result -> Type .)
    LPAREN          reduce using rule 31 (Result -> Type .)
    STRING          reduce using rule 31 (Result -> Type .)


state 127

    (27) Signature -> Parameters ResultOpt .

    LBRACE          reduce using rule 27 (Signature -> Parameters ResultOpt .)
    SEMICOL         reduce using rule 27 (Signature -> Parameters ResultOpt .)
    EQUAL           reduce using rule 27 (Signature -> Parameters ResultOpt .)
    RPAREN          reduce using rule 27 (Signature -> Parameters ResultOpt .)
    COMMA           reduce using rule 27 (Signature -> Parameters ResultOpt .)
    LPAREN          reduce using rule 27 (Signature -> Parameters ResultOpt .)
    STRING          reduce using rule 27 (Signature -> Parameters ResultOpt .)


state 128

    (29) ResultOpt -> epsilon .

    EQUAL           reduce using rule 29 (ResultOpt -> epsilon .)
    SEMICOL         reduce using rule 29 (ResultOpt -> epsilon .)
    RPAREN          reduce using rule 29 (ResultOpt -> epsilon .)
    LBRACE          reduce using rule 29 (ResultOpt -> epsilon .)
    COMMA           reduce using rule 29 (ResultOpt -> epsilon .)
    LPAREN          reduce using rule 29 (ResultOpt -> epsilon .)
    STRING          reduce using rule 29 (ResultOpt -> epsilon .)


state 129

    (32) Parameters -> LPAREN . ParameterListOpt RPAREN
    (4) Type -> LPAREN . Type RPAREN
    (33) ParameterListOpt -> . ParametersList
    (34) ParameterListOpt -> . epsilon
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (35) ParametersList -> . Type
    (36) ParametersList -> . IdentifierList Type
    (37) ParametersList -> . ParameterDeclCommaRep
    (221) epsilon -> .
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (59) IdentifierList -> . IDENTIFIER IdentifierRep
    (38) ParameterDeclCommaRep -> . ParameterDeclCommaRep COMMA ParameterDecl
    (39) ParameterDeclCommaRep -> . ParameterDecl COMMA ParameterDecl
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . TIMES BaseType
    (26) FunctionType -> . FUNC Signature
    (40) ParameterDecl -> . IdentifierList Type
    (41) ParameterDecl -> . Type

    LPAREN          shift and go to state 62
    RPAREN          reduce using rule 221 (epsilon -> .)
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    IDENTIFIER      shift and go to state 34
    LBRACK          shift and go to state 66
    STRUCT          shift and go to state 65
    TIMES           shift and go to state 61
    FUNC            shift and go to state 53

    StructType                     shift and go to state 59
    TypeLit                        shift and go to state 56
    IdentifierList                 shift and go to state 136
    ParameterListOpt               shift and go to state 135
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 57
    epsilon                        shift and go to state 141
    PointerType                    shift and go to state 68
    FunctionType                   shift and go to state 69
    ParametersList                 shift and go to state 139
    Type                           shift and go to state 194
    ParameterDeclCommaRep          shift and go to state 137
    ParameterDecl                  shift and go to state 140

state 130

    (28) ResultOpt -> Result .

    EQUAL           reduce using rule 28 (ResultOpt -> Result .)
    SEMICOL         reduce using rule 28 (ResultOpt -> Result .)
    RPAREN          reduce using rule 28 (ResultOpt -> Result .)
    LBRACE          reduce using rule 28 (ResultOpt -> Result .)
    COMMA           reduce using rule 28 (ResultOpt -> Result .)
    LPAREN          reduce using rule 28 (ResultOpt -> Result .)
    STRING          reduce using rule 28 (ResultOpt -> Result .)


state 131

    (82) Function -> Signature FunctionBody .

    SEMICOL         reduce using rule 82 (Function -> Signature FunctionBody .)


state 132

    (43) CreateScope -> epsilon .

    LBRACE          reduce using rule 43 (CreateScope -> epsilon .)


state 133

    (42) Block -> CreateScope . LBRACE StatementList RBRACE

    LBRACE          shift and go to state 195


state 134

    (83) FunctionBody -> Block .

    SEMICOL         reduce using rule 83 (FunctionBody -> Block .)


state 135

    (32) Parameters -> LPAREN ParameterListOpt . RPAREN

    RPAREN          shift and go to state 196


state 136

    (36) ParametersList -> IdentifierList . Type
    (40) ParameterDecl -> IdentifierList . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . TIMES BaseType
    (26) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 62
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    LBRACK          shift and go to state 66
    STRUCT          shift and go to state 65
    TIMES           shift and go to state 61
    FUNC            shift and go to state 53

    StructType                     shift and go to state 59
    Type                           shift and go to state 197
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 57
    PointerType                    shift and go to state 68
    FunctionType                   shift and go to state 69
    TypeLit                        shift and go to state 56

state 137

    (37) ParametersList -> ParameterDeclCommaRep .
    (38) ParameterDeclCommaRep -> ParameterDeclCommaRep . COMMA ParameterDecl

    RPAREN          reduce using rule 37 (ParametersList -> ParameterDeclCommaRep .)
    COMMA           shift and go to state 198


state 138

    (35) ParametersList -> Type .
    (41) ParameterDecl -> Type .

    RPAREN          reduce using rule 35 (ParametersList -> Type .)
    COMMA           reduce using rule 41 (ParameterDecl -> Type .)


state 139

    (33) ParameterListOpt -> ParametersList .

    RPAREN          reduce using rule 33 (ParameterListOpt -> ParametersList .)


state 140

    (39) ParameterDeclCommaRep -> ParameterDecl . COMMA ParameterDecl

    COMMA           shift and go to state 199


state 141

    (34) ParameterListOpt -> epsilon .

    RPAREN          reduce using rule 34 (ParameterListOpt -> epsilon .)


state 142

    (71) VarDecl -> VAR LPAREN VarSpecRep RPAREN .

    SEMICOL         reduce using rule 71 (VarDecl -> VAR LPAREN VarSpecRep RPAREN .)


state 143

    (72) VarSpecRep -> VarSpecRep VarSpec . SEMICOL

    SEMICOL         shift and go to state 200


state 144

    (75) VarSpec -> IdentifierList EQUAL ExpressionList .

    SEMICOL         reduce using rule 75 (VarSpec -> IdentifierList EQUAL ExpressionList .)


state 145

    (112) ExpressionList -> Expression . ExpressionRep
    (116) Expression -> Expression . OROR Expression
    (117) Expression -> Expression . AMPAMP Expression
    (118) Expression -> Expression . EQEQ Expression
    (119) Expression -> Expression . NOTEQ Expression
    (120) Expression -> Expression . LESS Expression
    (121) Expression -> Expression . GREAT Expression
    (122) Expression -> Expression . LEQ Expression
    (123) Expression -> Expression . GEQ Expression
    (124) Expression -> Expression . PLUS Expression
    (125) Expression -> Expression . MINUS Expression
    (126) Expression -> Expression . OR Expression
    (127) Expression -> Expression . CARET Expression
    (128) Expression -> Expression . TIMES Expression
    (129) Expression -> Expression . DIVIDE Expression
    (130) Expression -> Expression . MOD Expression
    (131) Expression -> Expression . AMPERS Expression
    (132) Expression -> Expression . LL Expression
    (133) Expression -> Expression . GG Expression
    (134) Expression -> Expression . AMPCAR Expression
    (113) ExpressionRep -> . ExpressionRep COMMA Expression
    (114) ExpressionRep -> . epsilon
    (221) epsilon -> .

    OROR            shift and go to state 167
    AMPAMP          shift and go to state 182
    EQEQ            shift and go to state 173
    NOTEQ           shift and go to state 179
    LESS            shift and go to state 172
    GREAT           shift and go to state 169
    LEQ             shift and go to state 185
    GEQ             shift and go to state 176
    PLUS            shift and go to state 180
    MINUS           shift and go to state 184
    OR              shift and go to state 177
    CARET           shift and go to state 168
    TIMES           shift and go to state 183
    DIVIDE          shift and go to state 170
    MOD             shift and go to state 181
    AMPERS          shift and go to state 175
    LL              shift and go to state 174
    GG              shift and go to state 178
    AMPCAR          shift and go to state 171
    COMMA           reduce using rule 221 (epsilon -> .)
    SEMICOL         reduce using rule 221 (epsilon -> .)
    RPAREN          reduce using rule 221 (epsilon -> .)
    LBRACE          reduce using rule 221 (epsilon -> .)

    epsilon                        shift and go to state 202
    ExpressionRep                  shift and go to state 201

state 146

    (76) ExpressionListOpt -> EQUAL . ExpressionList
    (112) ExpressionList -> . Expression ExpressionRep
    (115) Expression -> . UnaryExpr
    (116) Expression -> . Expression OROR Expression
    (117) Expression -> . Expression AMPAMP Expression
    (118) Expression -> . Expression EQEQ Expression
    (119) Expression -> . Expression NOTEQ Expression
    (120) Expression -> . Expression LESS Expression
    (121) Expression -> . Expression GREAT Expression
    (122) Expression -> . Expression LEQ Expression
    (123) Expression -> . Expression GEQ Expression
    (124) Expression -> . Expression PLUS Expression
    (125) Expression -> . Expression MINUS Expression
    (126) Expression -> . Expression OR Expression
    (127) Expression -> . Expression CARET Expression
    (128) Expression -> . Expression TIMES Expression
    (129) Expression -> . Expression DIVIDE Expression
    (130) Expression -> . Expression MOD Expression
    (131) Expression -> . Expression AMPERS Expression
    (132) Expression -> . Expression LL Expression
    (133) Expression -> . Expression GG Expression
    (134) Expression -> . Expression AMPCAR Expression
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (100) PrimaryExpr -> . Operand
    (101) PrimaryExpr -> . Conversion
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . PrimaryExpr Index
    (104) PrimaryExpr -> . PrimaryExpr Slice
    (105) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (99) Conversion -> . Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (98) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (88) BasicLit -> . IntLiteral
    (89) BasicLit -> . FloatLiteral
    (90) BasicLit -> . ImgLiteral
    (91) BasicLit -> . RuneLiteral
    (92) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (93) IntLiteral -> . INTEGER
    (94) FloatLiteral -> . FLOAT
    (95) ImgLiteral -> . IMAGINARY
    (96) RuneLiteral -> . RUNE
    (97) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . TIMES BaseType
    (26) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 107
    MINUS           shift and go to state 101
    TIMES           shift and go to state 116
    AMPERS          shift and go to state 122
    NOT             shift and go to state 106
    LPAREN          shift and go to state 119
    IDENTIFIER      shift and go to state 110
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 108
    FLOAT           shift and go to state 121
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 95
    STRING          shift and go to state 102
    LBRACK          shift and go to state 66
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53

    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 123
    Conversion                     shift and go to state 96
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 98
    FloatLiteral                   shift and go to state 99
    Type                           shift and go to state 100
    OperandName                    shift and go to state 103
    BasicLit                       shift and go to state 104
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 59
    IntLiteral                     shift and go to state 111
    UnaryExpr                      shift and go to state 114
    RuneLiteral                    shift and go to state 115
    Operand                        shift and go to state 117
    ExpressionList                 shift and go to state 203
    Expression                     shift and go to state 145
    PointerType                    shift and go to state 68
    StringLiteral                  shift and go to state 97
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 112
    FunctionType                   shift and go to state 69

state 147

    (77) ExpressionListOpt -> epsilon .

    SEMICOL         reduce using rule 77 (ExpressionListOpt -> epsilon .)


state 148

    (74) VarSpec -> IdentifierList Type ExpressionListOpt .

    SEMICOL         reduce using rule 74 (VarSpec -> IdentifierList Type ExpressionListOpt .)


state 149

    (69) TypeDef -> TTYPE IDENTIFIER Type .

    SEMICOL         reduce using rule 69 (TypeDef -> TTYPE IDENTIFIER Type .)


state 150

    (63) TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN .

    SEMICOL         reduce using rule 63 (TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN .)


state 151

    (64) TypeSpecRep -> TypeSpecRep TypeSpec . SEMICOL

    SEMICOL         shift and go to state 204


state 152

    (68) AliasDecl -> IDENTIFIER EQUAL Type .

    SEMICOL         reduce using rule 68 (AliasDecl -> IDENTIFIER EQUAL Type .)


state 153

    (214) ImportSpecRep -> ImportSpecRep ImportSpec SEMICOL .

    RPAREN          reduce using rule 214 (ImportSpecRep -> ImportSpecRep ImportSpec SEMICOL .)
    DOT             reduce using rule 214 (ImportSpecRep -> ImportSpecRep ImportSpec SEMICOL .)
    IDENTIFIER      reduce using rule 214 (ImportSpecRep -> ImportSpecRep ImportSpec SEMICOL .)
    STRING          reduce using rule 214 (ImportSpecRep -> ImportSpecRep ImportSpec SEMICOL .)


state 154

    (54) ConstSpecRep -> ConstSpecRep ConstSpec SEMICOL .

    RPAREN          reduce using rule 54 (ConstSpecRep -> ConstSpecRep ConstSpec SEMICOL .)
    IDENTIFIER      reduce using rule 54 (ConstSpecRep -> ConstSpecRep ConstSpec SEMICOL .)


state 155

    (4) Type -> LPAREN Type RPAREN .

    LPAREN          reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    RPAREN          reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    EQUAL           reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    COMMA           reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    SEMICOL         reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    LBRACE          reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    STRING          reduce using rule 4 (Type -> LPAREN Type RPAREN .)


state 156

    (57) TypeExprListOpt -> TypeOpt EQUAL ExpressionList .

    SEMICOL         reduce using rule 57 (TypeExprListOpt -> TypeOpt EQUAL ExpressionList .)


state 157

    (17) StructType -> STRUCT LBRACE FieldDeclRep . RBRACE
    (18) FieldDeclRep -> FieldDeclRep . FieldDecl SEMICOL
    (20) FieldDecl -> . IdentifierList Type TagOpt
    (59) IdentifierList -> . IDENTIFIER IdentifierRep

    RBRACE          shift and go to state 207
    IDENTIFIER      shift and go to state 34

    FieldDecl                      shift and go to state 205
    IdentifierList                 shift and go to state 206

state 158

    (19) FieldDeclRep -> epsilon .

    RBRACE          reduce using rule 19 (FieldDeclRep -> epsilon .)
    IDENTIFIER      reduce using rule 19 (FieldDeclRep -> epsilon .)


state 159

    (99) Conversion -> Type LPAREN . Expression RPAREN
    (115) Expression -> . UnaryExpr
    (116) Expression -> . Expression OROR Expression
    (117) Expression -> . Expression AMPAMP Expression
    (118) Expression -> . Expression EQEQ Expression
    (119) Expression -> . Expression NOTEQ Expression
    (120) Expression -> . Expression LESS Expression
    (121) Expression -> . Expression GREAT Expression
    (122) Expression -> . Expression LEQ Expression
    (123) Expression -> . Expression GEQ Expression
    (124) Expression -> . Expression PLUS Expression
    (125) Expression -> . Expression MINUS Expression
    (126) Expression -> . Expression OR Expression
    (127) Expression -> . Expression CARET Expression
    (128) Expression -> . Expression TIMES Expression
    (129) Expression -> . Expression DIVIDE Expression
    (130) Expression -> . Expression MOD Expression
    (131) Expression -> . Expression AMPERS Expression
    (132) Expression -> . Expression LL Expression
    (133) Expression -> . Expression GG Expression
    (134) Expression -> . Expression AMPCAR Expression
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (100) PrimaryExpr -> . Operand
    (101) PrimaryExpr -> . Conversion
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . PrimaryExpr Index
    (104) PrimaryExpr -> . PrimaryExpr Slice
    (105) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (99) Conversion -> . Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (98) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (88) BasicLit -> . IntLiteral
    (89) BasicLit -> . FloatLiteral
    (90) BasicLit -> . ImgLiteral
    (91) BasicLit -> . RuneLiteral
    (92) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (93) IntLiteral -> . INTEGER
    (94) FloatLiteral -> . FLOAT
    (95) ImgLiteral -> . IMAGINARY
    (96) RuneLiteral -> . RUNE
    (97) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . TIMES BaseType
    (26) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 107
    MINUS           shift and go to state 101
    TIMES           shift and go to state 116
    AMPERS          shift and go to state 122
    NOT             shift and go to state 106
    LPAREN          shift and go to state 119
    IDENTIFIER      shift and go to state 110
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 108
    FLOAT           shift and go to state 121
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 95
    STRING          shift and go to state 102
    LBRACK          shift and go to state 66
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53

    Conversion                     shift and go to state 96
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 123
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 98
    FloatLiteral                   shift and go to state 99
    Type                           shift and go to state 100
    OperandName                    shift and go to state 103
    BasicLit                       shift and go to state 104
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 59
    IntLiteral                     shift and go to state 111
    UnaryExpr                      shift and go to state 114
    RuneLiteral                    shift and go to state 115
    Operand                        shift and go to state 117
    Expression                     shift and go to state 208
    PointerType                    shift and go to state 68
    StringLiteral                  shift and go to state 97
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 112
    FunctionType                   shift and go to state 69

state 160

    (138) UnaryExpr -> UnaryOp UnaryExpr .

    OROR            reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    AMPAMP          reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    EQEQ            reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    NOTEQ           reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    LESS            reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    GREAT           reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    LEQ             reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    GEQ             reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    PLUS            reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    MINUS           reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    OR              reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    CARET           reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    TIMES           reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    DIVIDE          reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    MOD             reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    AMPERS          reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    LL              reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    GG              reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    AMPCAR          reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    RBRACK          reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    COMMA           reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    SEMICOL         reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    RPAREN          reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    COLON           reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    PLUSEQ          reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    MINUSEQ         reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    TIMESEQ         reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    DIVIDEEQ        reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    MODEQ           reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    AMPEQ           reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    OREQ            reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    CAREQ           reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    LLEQ            reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    GGEQ            reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    EQUAL           reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)
    LBRACE          reduce using rule 138 (UnaryExpr -> UnaryOp UnaryExpr .)


state 161

    (16) ElementType -> Type .

    EQUAL           reduce using rule 16 (ElementType -> Type .)
    SEMICOL         reduce using rule 16 (ElementType -> Type .)
    RPAREN          reduce using rule 16 (ElementType -> Type .)
    LBRACE          reduce using rule 16 (ElementType -> Type .)
    COMMA           reduce using rule 16 (ElementType -> Type .)
    LPAREN          reduce using rule 16 (ElementType -> Type .)
    STRING          reduce using rule 16 (ElementType -> Type .)


state 162

    (14) ArrayType -> LBRACK RBRACK ElementType .

    LPAREN          reduce using rule 14 (ArrayType -> LBRACK RBRACK ElementType .)
    SEMICOL         reduce using rule 14 (ArrayType -> LBRACK RBRACK ElementType .)
    EQUAL           reduce using rule 14 (ArrayType -> LBRACK RBRACK ElementType .)
    STRING          reduce using rule 14 (ArrayType -> LBRACK RBRACK ElementType .)
    RPAREN          reduce using rule 14 (ArrayType -> LBRACK RBRACK ElementType .)
    LBRACE          reduce using rule 14 (ArrayType -> LBRACK RBRACK ElementType .)
    COMMA           reduce using rule 14 (ArrayType -> LBRACK RBRACK ElementType .)


state 163

    (13) ArrayType -> LBRACK ArrayLength RBRACK . ElementType
    (16) ElementType -> . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . TIMES BaseType
    (26) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 62
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    LBRACK          shift and go to state 66
    STRUCT          shift and go to state 65
    TIMES           shift and go to state 61
    FUNC            shift and go to state 53

    StructType                     shift and go to state 59
    TypeLit                        shift and go to state 56
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 57
    PointerType                    shift and go to state 68
    FunctionType                   shift and go to state 69
    ElementType                    shift and go to state 209
    Type                           shift and go to state 161

state 164

    (4) Type -> LPAREN Type . RPAREN
    (99) Conversion -> Type . LPAREN Expression RPAREN

    RPAREN          shift and go to state 155
    LPAREN          shift and go to state 159


state 165

    (4) Type -> LPAREN . Type RPAREN
    (86) Operand -> LPAREN . Expression RPAREN
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (115) Expression -> . UnaryExpr
    (116) Expression -> . Expression OROR Expression
    (117) Expression -> . Expression AMPAMP Expression
    (118) Expression -> . Expression EQEQ Expression
    (119) Expression -> . Expression NOTEQ Expression
    (120) Expression -> . Expression LESS Expression
    (121) Expression -> . Expression GREAT Expression
    (122) Expression -> . Expression LEQ Expression
    (123) Expression -> . Expression GEQ Expression
    (124) Expression -> . Expression PLUS Expression
    (125) Expression -> . Expression MINUS Expression
    (126) Expression -> . Expression OR Expression
    (127) Expression -> . Expression CARET Expression
    (128) Expression -> . Expression TIMES Expression
    (129) Expression -> . Expression DIVIDE Expression
    (130) Expression -> . Expression MOD Expression
    (131) Expression -> . Expression AMPERS Expression
    (132) Expression -> . Expression LL Expression
    (133) Expression -> . Expression GG Expression
    (134) Expression -> . Expression AMPCAR Expression
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . TIMES BaseType
    (26) FunctionType -> . FUNC Signature
    (100) PrimaryExpr -> . Operand
    (101) PrimaryExpr -> . Conversion
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . PrimaryExpr Index
    (104) PrimaryExpr -> . PrimaryExpr Slice
    (105) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (99) Conversion -> . Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (98) OperandName -> . IDENTIFIER
    (88) BasicLit -> . IntLiteral
    (89) BasicLit -> . FloatLiteral
    (90) BasicLit -> . ImgLiteral
    (91) BasicLit -> . RuneLiteral
    (92) BasicLit -> . StringLiteral
    (93) IntLiteral -> . INTEGER
    (94) FloatLiteral -> . FLOAT
    (95) ImgLiteral -> . IMAGINARY
    (96) RuneLiteral -> . RUNE
    (97) StringLiteral -> . STRING

    LPAREN          shift and go to state 165
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    LBRACK          shift and go to state 66
    STRUCT          shift and go to state 65
    TIMES           shift and go to state 210
    FUNC            shift and go to state 53
    PLUS            shift and go to state 107
    MINUS           shift and go to state 101
    AMPERS          shift and go to state 122
    NOT             shift and go to state 106
    IDENTIFIER      shift and go to state 110
    INTEGER         shift and go to state 108
    FLOAT           shift and go to state 121
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 95
    STRING          shift and go to state 102

    Conversion                     shift and go to state 96
    UnaryOp                        shift and go to state 105
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 98
    FloatLiteral                   shift and go to state 99
    Type                           shift and go to state 164
    OperandName                    shift and go to state 103
    TypeLit                        shift and go to state 56
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 59
    IntLiteral                     shift and go to state 111
    ImgLiteral                     shift and go to state 112
    UnaryExpr                      shift and go to state 114
    RuneLiteral                    shift and go to state 115
    Operand                        shift and go to state 117
    Expression                     shift and go to state 166
    PointerType                    shift and go to state 68
    StringLiteral                  shift and go to state 97
    BasicLit                       shift and go to state 104
    PrimaryExpr                    shift and go to state 123
    FunctionType                   shift and go to state 69

state 166

    (86) Operand -> LPAREN Expression . RPAREN
    (116) Expression -> Expression . OROR Expression
    (117) Expression -> Expression . AMPAMP Expression
    (118) Expression -> Expression . EQEQ Expression
    (119) Expression -> Expression . NOTEQ Expression
    (120) Expression -> Expression . LESS Expression
    (121) Expression -> Expression . GREAT Expression
    (122) Expression -> Expression . LEQ Expression
    (123) Expression -> Expression . GEQ Expression
    (124) Expression -> Expression . PLUS Expression
    (125) Expression -> Expression . MINUS Expression
    (126) Expression -> Expression . OR Expression
    (127) Expression -> Expression . CARET Expression
    (128) Expression -> Expression . TIMES Expression
    (129) Expression -> Expression . DIVIDE Expression
    (130) Expression -> Expression . MOD Expression
    (131) Expression -> Expression . AMPERS Expression
    (132) Expression -> Expression . LL Expression
    (133) Expression -> Expression . GG Expression
    (134) Expression -> Expression . AMPCAR Expression

    RPAREN          shift and go to state 211
    OROR            shift and go to state 167
    AMPAMP          shift and go to state 182
    EQEQ            shift and go to state 173
    NOTEQ           shift and go to state 179
    LESS            shift and go to state 172
    GREAT           shift and go to state 169
    LEQ             shift and go to state 185
    GEQ             shift and go to state 176
    PLUS            shift and go to state 180
    MINUS           shift and go to state 184
    OR              shift and go to state 177
    CARET           shift and go to state 168
    TIMES           shift and go to state 183
    DIVIDE          shift and go to state 170
    MOD             shift and go to state 181
    AMPERS          shift and go to state 175
    LL              shift and go to state 174
    GG              shift and go to state 178
    AMPCAR          shift and go to state 171


state 167

    (116) Expression -> Expression OROR . Expression
    (115) Expression -> . UnaryExpr
    (116) Expression -> . Expression OROR Expression
    (117) Expression -> . Expression AMPAMP Expression
    (118) Expression -> . Expression EQEQ Expression
    (119) Expression -> . Expression NOTEQ Expression
    (120) Expression -> . Expression LESS Expression
    (121) Expression -> . Expression GREAT Expression
    (122) Expression -> . Expression LEQ Expression
    (123) Expression -> . Expression GEQ Expression
    (124) Expression -> . Expression PLUS Expression
    (125) Expression -> . Expression MINUS Expression
    (126) Expression -> . Expression OR Expression
    (127) Expression -> . Expression CARET Expression
    (128) Expression -> . Expression TIMES Expression
    (129) Expression -> . Expression DIVIDE Expression
    (130) Expression -> . Expression MOD Expression
    (131) Expression -> . Expression AMPERS Expression
    (132) Expression -> . Expression LL Expression
    (133) Expression -> . Expression GG Expression
    (134) Expression -> . Expression AMPCAR Expression
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (100) PrimaryExpr -> . Operand
    (101) PrimaryExpr -> . Conversion
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . PrimaryExpr Index
    (104) PrimaryExpr -> . PrimaryExpr Slice
    (105) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (99) Conversion -> . Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (98) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (88) BasicLit -> . IntLiteral
    (89) BasicLit -> . FloatLiteral
    (90) BasicLit -> . ImgLiteral
    (91) BasicLit -> . RuneLiteral
    (92) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (93) IntLiteral -> . INTEGER
    (94) FloatLiteral -> . FLOAT
    (95) ImgLiteral -> . IMAGINARY
    (96) RuneLiteral -> . RUNE
    (97) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . TIMES BaseType
    (26) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 107
    MINUS           shift and go to state 101
    TIMES           shift and go to state 116
    AMPERS          shift and go to state 122
    NOT             shift and go to state 106
    LPAREN          shift and go to state 119
    IDENTIFIER      shift and go to state 110
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 108
    FLOAT           shift and go to state 121
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 95
    STRING          shift and go to state 102
    LBRACK          shift and go to state 66
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53

    Conversion                     shift and go to state 96
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 123
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 98
    FloatLiteral                   shift and go to state 99
    Type                           shift and go to state 100
    OperandName                    shift and go to state 103
    BasicLit                       shift and go to state 104
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 59
    IntLiteral                     shift and go to state 111
    UnaryExpr                      shift and go to state 114
    RuneLiteral                    shift and go to state 115
    Operand                        shift and go to state 117
    Expression                     shift and go to state 212
    PointerType                    shift and go to state 68
    StringLiteral                  shift and go to state 97
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 112
    FunctionType                   shift and go to state 69

state 168

    (127) Expression -> Expression CARET . Expression
    (115) Expression -> . UnaryExpr
    (116) Expression -> . Expression OROR Expression
    (117) Expression -> . Expression AMPAMP Expression
    (118) Expression -> . Expression EQEQ Expression
    (119) Expression -> . Expression NOTEQ Expression
    (120) Expression -> . Expression LESS Expression
    (121) Expression -> . Expression GREAT Expression
    (122) Expression -> . Expression LEQ Expression
    (123) Expression -> . Expression GEQ Expression
    (124) Expression -> . Expression PLUS Expression
    (125) Expression -> . Expression MINUS Expression
    (126) Expression -> . Expression OR Expression
    (127) Expression -> . Expression CARET Expression
    (128) Expression -> . Expression TIMES Expression
    (129) Expression -> . Expression DIVIDE Expression
    (130) Expression -> . Expression MOD Expression
    (131) Expression -> . Expression AMPERS Expression
    (132) Expression -> . Expression LL Expression
    (133) Expression -> . Expression GG Expression
    (134) Expression -> . Expression AMPCAR Expression
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (100) PrimaryExpr -> . Operand
    (101) PrimaryExpr -> . Conversion
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . PrimaryExpr Index
    (104) PrimaryExpr -> . PrimaryExpr Slice
    (105) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (99) Conversion -> . Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (98) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (88) BasicLit -> . IntLiteral
    (89) BasicLit -> . FloatLiteral
    (90) BasicLit -> . ImgLiteral
    (91) BasicLit -> . RuneLiteral
    (92) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (93) IntLiteral -> . INTEGER
    (94) FloatLiteral -> . FLOAT
    (95) ImgLiteral -> . IMAGINARY
    (96) RuneLiteral -> . RUNE
    (97) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . TIMES BaseType
    (26) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 107
    MINUS           shift and go to state 101
    TIMES           shift and go to state 116
    AMPERS          shift and go to state 122
    NOT             shift and go to state 106
    LPAREN          shift and go to state 119
    IDENTIFIER      shift and go to state 110
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 108
    FLOAT           shift and go to state 121
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 95
    STRING          shift and go to state 102
    LBRACK          shift and go to state 66
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53

    Conversion                     shift and go to state 96
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 123
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 98
    FloatLiteral                   shift and go to state 99
    Type                           shift and go to state 100
    OperandName                    shift and go to state 103
    BasicLit                       shift and go to state 104
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 59
    IntLiteral                     shift and go to state 111
    UnaryExpr                      shift and go to state 114
    RuneLiteral                    shift and go to state 115
    Operand                        shift and go to state 117
    Expression                     shift and go to state 213
    PointerType                    shift and go to state 68
    StringLiteral                  shift and go to state 97
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 112
    FunctionType                   shift and go to state 69

state 169

    (121) Expression -> Expression GREAT . Expression
    (115) Expression -> . UnaryExpr
    (116) Expression -> . Expression OROR Expression
    (117) Expression -> . Expression AMPAMP Expression
    (118) Expression -> . Expression EQEQ Expression
    (119) Expression -> . Expression NOTEQ Expression
    (120) Expression -> . Expression LESS Expression
    (121) Expression -> . Expression GREAT Expression
    (122) Expression -> . Expression LEQ Expression
    (123) Expression -> . Expression GEQ Expression
    (124) Expression -> . Expression PLUS Expression
    (125) Expression -> . Expression MINUS Expression
    (126) Expression -> . Expression OR Expression
    (127) Expression -> . Expression CARET Expression
    (128) Expression -> . Expression TIMES Expression
    (129) Expression -> . Expression DIVIDE Expression
    (130) Expression -> . Expression MOD Expression
    (131) Expression -> . Expression AMPERS Expression
    (132) Expression -> . Expression LL Expression
    (133) Expression -> . Expression GG Expression
    (134) Expression -> . Expression AMPCAR Expression
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (100) PrimaryExpr -> . Operand
    (101) PrimaryExpr -> . Conversion
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . PrimaryExpr Index
    (104) PrimaryExpr -> . PrimaryExpr Slice
    (105) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (99) Conversion -> . Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (98) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (88) BasicLit -> . IntLiteral
    (89) BasicLit -> . FloatLiteral
    (90) BasicLit -> . ImgLiteral
    (91) BasicLit -> . RuneLiteral
    (92) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (93) IntLiteral -> . INTEGER
    (94) FloatLiteral -> . FLOAT
    (95) ImgLiteral -> . IMAGINARY
    (96) RuneLiteral -> . RUNE
    (97) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . TIMES BaseType
    (26) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 107
    MINUS           shift and go to state 101
    TIMES           shift and go to state 116
    AMPERS          shift and go to state 122
    NOT             shift and go to state 106
    LPAREN          shift and go to state 119
    IDENTIFIER      shift and go to state 110
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 108
    FLOAT           shift and go to state 121
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 95
    STRING          shift and go to state 102
    LBRACK          shift and go to state 66
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53

    Conversion                     shift and go to state 96
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 123
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 98
    FloatLiteral                   shift and go to state 99
    Type                           shift and go to state 100
    OperandName                    shift and go to state 103
    BasicLit                       shift and go to state 104
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 59
    IntLiteral                     shift and go to state 111
    UnaryExpr                      shift and go to state 114
    RuneLiteral                    shift and go to state 115
    Operand                        shift and go to state 117
    Expression                     shift and go to state 214
    PointerType                    shift and go to state 68
    StringLiteral                  shift and go to state 97
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 112
    FunctionType                   shift and go to state 69

state 170

    (129) Expression -> Expression DIVIDE . Expression
    (115) Expression -> . UnaryExpr
    (116) Expression -> . Expression OROR Expression
    (117) Expression -> . Expression AMPAMP Expression
    (118) Expression -> . Expression EQEQ Expression
    (119) Expression -> . Expression NOTEQ Expression
    (120) Expression -> . Expression LESS Expression
    (121) Expression -> . Expression GREAT Expression
    (122) Expression -> . Expression LEQ Expression
    (123) Expression -> . Expression GEQ Expression
    (124) Expression -> . Expression PLUS Expression
    (125) Expression -> . Expression MINUS Expression
    (126) Expression -> . Expression OR Expression
    (127) Expression -> . Expression CARET Expression
    (128) Expression -> . Expression TIMES Expression
    (129) Expression -> . Expression DIVIDE Expression
    (130) Expression -> . Expression MOD Expression
    (131) Expression -> . Expression AMPERS Expression
    (132) Expression -> . Expression LL Expression
    (133) Expression -> . Expression GG Expression
    (134) Expression -> . Expression AMPCAR Expression
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (100) PrimaryExpr -> . Operand
    (101) PrimaryExpr -> . Conversion
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . PrimaryExpr Index
    (104) PrimaryExpr -> . PrimaryExpr Slice
    (105) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (99) Conversion -> . Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (98) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (88) BasicLit -> . IntLiteral
    (89) BasicLit -> . FloatLiteral
    (90) BasicLit -> . ImgLiteral
    (91) BasicLit -> . RuneLiteral
    (92) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (93) IntLiteral -> . INTEGER
    (94) FloatLiteral -> . FLOAT
    (95) ImgLiteral -> . IMAGINARY
    (96) RuneLiteral -> . RUNE
    (97) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . TIMES BaseType
    (26) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 107
    MINUS           shift and go to state 101
    TIMES           shift and go to state 116
    AMPERS          shift and go to state 122
    NOT             shift and go to state 106
    LPAREN          shift and go to state 119
    IDENTIFIER      shift and go to state 110
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 108
    FLOAT           shift and go to state 121
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 95
    STRING          shift and go to state 102
    LBRACK          shift and go to state 66
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53

    Conversion                     shift and go to state 96
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 123
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 98
    FloatLiteral                   shift and go to state 99
    Type                           shift and go to state 100
    OperandName                    shift and go to state 103
    BasicLit                       shift and go to state 104
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 59
    IntLiteral                     shift and go to state 111
    UnaryExpr                      shift and go to state 114
    RuneLiteral                    shift and go to state 115
    Operand                        shift and go to state 117
    Expression                     shift and go to state 215
    PointerType                    shift and go to state 68
    StringLiteral                  shift and go to state 97
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 112
    FunctionType                   shift and go to state 69

state 171

    (134) Expression -> Expression AMPCAR . Expression
    (115) Expression -> . UnaryExpr
    (116) Expression -> . Expression OROR Expression
    (117) Expression -> . Expression AMPAMP Expression
    (118) Expression -> . Expression EQEQ Expression
    (119) Expression -> . Expression NOTEQ Expression
    (120) Expression -> . Expression LESS Expression
    (121) Expression -> . Expression GREAT Expression
    (122) Expression -> . Expression LEQ Expression
    (123) Expression -> . Expression GEQ Expression
    (124) Expression -> . Expression PLUS Expression
    (125) Expression -> . Expression MINUS Expression
    (126) Expression -> . Expression OR Expression
    (127) Expression -> . Expression CARET Expression
    (128) Expression -> . Expression TIMES Expression
    (129) Expression -> . Expression DIVIDE Expression
    (130) Expression -> . Expression MOD Expression
    (131) Expression -> . Expression AMPERS Expression
    (132) Expression -> . Expression LL Expression
    (133) Expression -> . Expression GG Expression
    (134) Expression -> . Expression AMPCAR Expression
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (100) PrimaryExpr -> . Operand
    (101) PrimaryExpr -> . Conversion
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . PrimaryExpr Index
    (104) PrimaryExpr -> . PrimaryExpr Slice
    (105) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (99) Conversion -> . Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (98) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (88) BasicLit -> . IntLiteral
    (89) BasicLit -> . FloatLiteral
    (90) BasicLit -> . ImgLiteral
    (91) BasicLit -> . RuneLiteral
    (92) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (93) IntLiteral -> . INTEGER
    (94) FloatLiteral -> . FLOAT
    (95) ImgLiteral -> . IMAGINARY
    (96) RuneLiteral -> . RUNE
    (97) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . TIMES BaseType
    (26) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 107
    MINUS           shift and go to state 101
    TIMES           shift and go to state 116
    AMPERS          shift and go to state 122
    NOT             shift and go to state 106
    LPAREN          shift and go to state 119
    IDENTIFIER      shift and go to state 110
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 108
    FLOAT           shift and go to state 121
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 95
    STRING          shift and go to state 102
    LBRACK          shift and go to state 66
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53

    Conversion                     shift and go to state 96
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 123
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 98
    FloatLiteral                   shift and go to state 99
    Type                           shift and go to state 100
    OperandName                    shift and go to state 103
    BasicLit                       shift and go to state 104
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 59
    IntLiteral                     shift and go to state 111
    UnaryExpr                      shift and go to state 114
    RuneLiteral                    shift and go to state 115
    Operand                        shift and go to state 117
    Expression                     shift and go to state 216
    PointerType                    shift and go to state 68
    StringLiteral                  shift and go to state 97
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 112
    FunctionType                   shift and go to state 69

state 172

    (120) Expression -> Expression LESS . Expression
    (115) Expression -> . UnaryExpr
    (116) Expression -> . Expression OROR Expression
    (117) Expression -> . Expression AMPAMP Expression
    (118) Expression -> . Expression EQEQ Expression
    (119) Expression -> . Expression NOTEQ Expression
    (120) Expression -> . Expression LESS Expression
    (121) Expression -> . Expression GREAT Expression
    (122) Expression -> . Expression LEQ Expression
    (123) Expression -> . Expression GEQ Expression
    (124) Expression -> . Expression PLUS Expression
    (125) Expression -> . Expression MINUS Expression
    (126) Expression -> . Expression OR Expression
    (127) Expression -> . Expression CARET Expression
    (128) Expression -> . Expression TIMES Expression
    (129) Expression -> . Expression DIVIDE Expression
    (130) Expression -> . Expression MOD Expression
    (131) Expression -> . Expression AMPERS Expression
    (132) Expression -> . Expression LL Expression
    (133) Expression -> . Expression GG Expression
    (134) Expression -> . Expression AMPCAR Expression
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (100) PrimaryExpr -> . Operand
    (101) PrimaryExpr -> . Conversion
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . PrimaryExpr Index
    (104) PrimaryExpr -> . PrimaryExpr Slice
    (105) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (99) Conversion -> . Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (98) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (88) BasicLit -> . IntLiteral
    (89) BasicLit -> . FloatLiteral
    (90) BasicLit -> . ImgLiteral
    (91) BasicLit -> . RuneLiteral
    (92) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (93) IntLiteral -> . INTEGER
    (94) FloatLiteral -> . FLOAT
    (95) ImgLiteral -> . IMAGINARY
    (96) RuneLiteral -> . RUNE
    (97) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . TIMES BaseType
    (26) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 107
    MINUS           shift and go to state 101
    TIMES           shift and go to state 116
    AMPERS          shift and go to state 122
    NOT             shift and go to state 106
    LPAREN          shift and go to state 119
    IDENTIFIER      shift and go to state 110
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 108
    FLOAT           shift and go to state 121
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 95
    STRING          shift and go to state 102
    LBRACK          shift and go to state 66
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53

    Conversion                     shift and go to state 96
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 123
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 98
    FloatLiteral                   shift and go to state 99
    Type                           shift and go to state 100
    OperandName                    shift and go to state 103
    BasicLit                       shift and go to state 104
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 59
    IntLiteral                     shift and go to state 111
    UnaryExpr                      shift and go to state 114
    RuneLiteral                    shift and go to state 115
    Operand                        shift and go to state 117
    Expression                     shift and go to state 217
    PointerType                    shift and go to state 68
    StringLiteral                  shift and go to state 97
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 112
    FunctionType                   shift and go to state 69

state 173

    (118) Expression -> Expression EQEQ . Expression
    (115) Expression -> . UnaryExpr
    (116) Expression -> . Expression OROR Expression
    (117) Expression -> . Expression AMPAMP Expression
    (118) Expression -> . Expression EQEQ Expression
    (119) Expression -> . Expression NOTEQ Expression
    (120) Expression -> . Expression LESS Expression
    (121) Expression -> . Expression GREAT Expression
    (122) Expression -> . Expression LEQ Expression
    (123) Expression -> . Expression GEQ Expression
    (124) Expression -> . Expression PLUS Expression
    (125) Expression -> . Expression MINUS Expression
    (126) Expression -> . Expression OR Expression
    (127) Expression -> . Expression CARET Expression
    (128) Expression -> . Expression TIMES Expression
    (129) Expression -> . Expression DIVIDE Expression
    (130) Expression -> . Expression MOD Expression
    (131) Expression -> . Expression AMPERS Expression
    (132) Expression -> . Expression LL Expression
    (133) Expression -> . Expression GG Expression
    (134) Expression -> . Expression AMPCAR Expression
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (100) PrimaryExpr -> . Operand
    (101) PrimaryExpr -> . Conversion
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . PrimaryExpr Index
    (104) PrimaryExpr -> . PrimaryExpr Slice
    (105) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (99) Conversion -> . Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (98) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (88) BasicLit -> . IntLiteral
    (89) BasicLit -> . FloatLiteral
    (90) BasicLit -> . ImgLiteral
    (91) BasicLit -> . RuneLiteral
    (92) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (93) IntLiteral -> . INTEGER
    (94) FloatLiteral -> . FLOAT
    (95) ImgLiteral -> . IMAGINARY
    (96) RuneLiteral -> . RUNE
    (97) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . TIMES BaseType
    (26) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 107
    MINUS           shift and go to state 101
    TIMES           shift and go to state 116
    AMPERS          shift and go to state 122
    NOT             shift and go to state 106
    LPAREN          shift and go to state 119
    IDENTIFIER      shift and go to state 110
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 108
    FLOAT           shift and go to state 121
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 95
    STRING          shift and go to state 102
    LBRACK          shift and go to state 66
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53

    Conversion                     shift and go to state 96
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 123
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 98
    FloatLiteral                   shift and go to state 99
    Type                           shift and go to state 100
    OperandName                    shift and go to state 103
    BasicLit                       shift and go to state 104
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 59
    IntLiteral                     shift and go to state 111
    UnaryExpr                      shift and go to state 114
    RuneLiteral                    shift and go to state 115
    Operand                        shift and go to state 117
    Expression                     shift and go to state 218
    PointerType                    shift and go to state 68
    StringLiteral                  shift and go to state 97
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 112
    FunctionType                   shift and go to state 69

state 174

    (132) Expression -> Expression LL . Expression
    (115) Expression -> . UnaryExpr
    (116) Expression -> . Expression OROR Expression
    (117) Expression -> . Expression AMPAMP Expression
    (118) Expression -> . Expression EQEQ Expression
    (119) Expression -> . Expression NOTEQ Expression
    (120) Expression -> . Expression LESS Expression
    (121) Expression -> . Expression GREAT Expression
    (122) Expression -> . Expression LEQ Expression
    (123) Expression -> . Expression GEQ Expression
    (124) Expression -> . Expression PLUS Expression
    (125) Expression -> . Expression MINUS Expression
    (126) Expression -> . Expression OR Expression
    (127) Expression -> . Expression CARET Expression
    (128) Expression -> . Expression TIMES Expression
    (129) Expression -> . Expression DIVIDE Expression
    (130) Expression -> . Expression MOD Expression
    (131) Expression -> . Expression AMPERS Expression
    (132) Expression -> . Expression LL Expression
    (133) Expression -> . Expression GG Expression
    (134) Expression -> . Expression AMPCAR Expression
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (100) PrimaryExpr -> . Operand
    (101) PrimaryExpr -> . Conversion
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . PrimaryExpr Index
    (104) PrimaryExpr -> . PrimaryExpr Slice
    (105) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (99) Conversion -> . Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (98) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (88) BasicLit -> . IntLiteral
    (89) BasicLit -> . FloatLiteral
    (90) BasicLit -> . ImgLiteral
    (91) BasicLit -> . RuneLiteral
    (92) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (93) IntLiteral -> . INTEGER
    (94) FloatLiteral -> . FLOAT
    (95) ImgLiteral -> . IMAGINARY
    (96) RuneLiteral -> . RUNE
    (97) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . TIMES BaseType
    (26) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 107
    MINUS           shift and go to state 101
    TIMES           shift and go to state 116
    AMPERS          shift and go to state 122
    NOT             shift and go to state 106
    LPAREN          shift and go to state 119
    IDENTIFIER      shift and go to state 110
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 108
    FLOAT           shift and go to state 121
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 95
    STRING          shift and go to state 102
    LBRACK          shift and go to state 66
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53

    Conversion                     shift and go to state 96
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 123
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 98
    FloatLiteral                   shift and go to state 99
    Type                           shift and go to state 100
    OperandName                    shift and go to state 103
    BasicLit                       shift and go to state 104
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 59
    IntLiteral                     shift and go to state 111
    UnaryExpr                      shift and go to state 114
    RuneLiteral                    shift and go to state 115
    Operand                        shift and go to state 117
    Expression                     shift and go to state 219
    PointerType                    shift and go to state 68
    StringLiteral                  shift and go to state 97
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 112
    FunctionType                   shift and go to state 69

state 175

    (131) Expression -> Expression AMPERS . Expression
    (115) Expression -> . UnaryExpr
    (116) Expression -> . Expression OROR Expression
    (117) Expression -> . Expression AMPAMP Expression
    (118) Expression -> . Expression EQEQ Expression
    (119) Expression -> . Expression NOTEQ Expression
    (120) Expression -> . Expression LESS Expression
    (121) Expression -> . Expression GREAT Expression
    (122) Expression -> . Expression LEQ Expression
    (123) Expression -> . Expression GEQ Expression
    (124) Expression -> . Expression PLUS Expression
    (125) Expression -> . Expression MINUS Expression
    (126) Expression -> . Expression OR Expression
    (127) Expression -> . Expression CARET Expression
    (128) Expression -> . Expression TIMES Expression
    (129) Expression -> . Expression DIVIDE Expression
    (130) Expression -> . Expression MOD Expression
    (131) Expression -> . Expression AMPERS Expression
    (132) Expression -> . Expression LL Expression
    (133) Expression -> . Expression GG Expression
    (134) Expression -> . Expression AMPCAR Expression
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (100) PrimaryExpr -> . Operand
    (101) PrimaryExpr -> . Conversion
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . PrimaryExpr Index
    (104) PrimaryExpr -> . PrimaryExpr Slice
    (105) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (99) Conversion -> . Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (98) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (88) BasicLit -> . IntLiteral
    (89) BasicLit -> . FloatLiteral
    (90) BasicLit -> . ImgLiteral
    (91) BasicLit -> . RuneLiteral
    (92) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (93) IntLiteral -> . INTEGER
    (94) FloatLiteral -> . FLOAT
    (95) ImgLiteral -> . IMAGINARY
    (96) RuneLiteral -> . RUNE
    (97) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . TIMES BaseType
    (26) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 107
    MINUS           shift and go to state 101
    TIMES           shift and go to state 116
    AMPERS          shift and go to state 122
    NOT             shift and go to state 106
    LPAREN          shift and go to state 119
    IDENTIFIER      shift and go to state 110
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 108
    FLOAT           shift and go to state 121
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 95
    STRING          shift and go to state 102
    LBRACK          shift and go to state 66
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53

    Conversion                     shift and go to state 96
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 123
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 98
    FloatLiteral                   shift and go to state 99
    Type                           shift and go to state 100
    OperandName                    shift and go to state 103
    BasicLit                       shift and go to state 104
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 59
    IntLiteral                     shift and go to state 111
    UnaryExpr                      shift and go to state 114
    RuneLiteral                    shift and go to state 115
    Operand                        shift and go to state 117
    Expression                     shift and go to state 220
    PointerType                    shift and go to state 68
    StringLiteral                  shift and go to state 97
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 112
    FunctionType                   shift and go to state 69

state 176

    (123) Expression -> Expression GEQ . Expression
    (115) Expression -> . UnaryExpr
    (116) Expression -> . Expression OROR Expression
    (117) Expression -> . Expression AMPAMP Expression
    (118) Expression -> . Expression EQEQ Expression
    (119) Expression -> . Expression NOTEQ Expression
    (120) Expression -> . Expression LESS Expression
    (121) Expression -> . Expression GREAT Expression
    (122) Expression -> . Expression LEQ Expression
    (123) Expression -> . Expression GEQ Expression
    (124) Expression -> . Expression PLUS Expression
    (125) Expression -> . Expression MINUS Expression
    (126) Expression -> . Expression OR Expression
    (127) Expression -> . Expression CARET Expression
    (128) Expression -> . Expression TIMES Expression
    (129) Expression -> . Expression DIVIDE Expression
    (130) Expression -> . Expression MOD Expression
    (131) Expression -> . Expression AMPERS Expression
    (132) Expression -> . Expression LL Expression
    (133) Expression -> . Expression GG Expression
    (134) Expression -> . Expression AMPCAR Expression
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (100) PrimaryExpr -> . Operand
    (101) PrimaryExpr -> . Conversion
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . PrimaryExpr Index
    (104) PrimaryExpr -> . PrimaryExpr Slice
    (105) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (99) Conversion -> . Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (98) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (88) BasicLit -> . IntLiteral
    (89) BasicLit -> . FloatLiteral
    (90) BasicLit -> . ImgLiteral
    (91) BasicLit -> . RuneLiteral
    (92) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (93) IntLiteral -> . INTEGER
    (94) FloatLiteral -> . FLOAT
    (95) ImgLiteral -> . IMAGINARY
    (96) RuneLiteral -> . RUNE
    (97) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . TIMES BaseType
    (26) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 107
    MINUS           shift and go to state 101
    TIMES           shift and go to state 116
    AMPERS          shift and go to state 122
    NOT             shift and go to state 106
    LPAREN          shift and go to state 119
    IDENTIFIER      shift and go to state 110
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 108
    FLOAT           shift and go to state 121
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 95
    STRING          shift and go to state 102
    LBRACK          shift and go to state 66
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53

    Conversion                     shift and go to state 96
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 123
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 98
    FloatLiteral                   shift and go to state 99
    Type                           shift and go to state 100
    OperandName                    shift and go to state 103
    BasicLit                       shift and go to state 104
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 59
    IntLiteral                     shift and go to state 111
    UnaryExpr                      shift and go to state 114
    RuneLiteral                    shift and go to state 115
    Operand                        shift and go to state 117
    Expression                     shift and go to state 221
    PointerType                    shift and go to state 68
    StringLiteral                  shift and go to state 97
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 112
    FunctionType                   shift and go to state 69

state 177

    (126) Expression -> Expression OR . Expression
    (115) Expression -> . UnaryExpr
    (116) Expression -> . Expression OROR Expression
    (117) Expression -> . Expression AMPAMP Expression
    (118) Expression -> . Expression EQEQ Expression
    (119) Expression -> . Expression NOTEQ Expression
    (120) Expression -> . Expression LESS Expression
    (121) Expression -> . Expression GREAT Expression
    (122) Expression -> . Expression LEQ Expression
    (123) Expression -> . Expression GEQ Expression
    (124) Expression -> . Expression PLUS Expression
    (125) Expression -> . Expression MINUS Expression
    (126) Expression -> . Expression OR Expression
    (127) Expression -> . Expression CARET Expression
    (128) Expression -> . Expression TIMES Expression
    (129) Expression -> . Expression DIVIDE Expression
    (130) Expression -> . Expression MOD Expression
    (131) Expression -> . Expression AMPERS Expression
    (132) Expression -> . Expression LL Expression
    (133) Expression -> . Expression GG Expression
    (134) Expression -> . Expression AMPCAR Expression
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (100) PrimaryExpr -> . Operand
    (101) PrimaryExpr -> . Conversion
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . PrimaryExpr Index
    (104) PrimaryExpr -> . PrimaryExpr Slice
    (105) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (99) Conversion -> . Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (98) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (88) BasicLit -> . IntLiteral
    (89) BasicLit -> . FloatLiteral
    (90) BasicLit -> . ImgLiteral
    (91) BasicLit -> . RuneLiteral
    (92) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (93) IntLiteral -> . INTEGER
    (94) FloatLiteral -> . FLOAT
    (95) ImgLiteral -> . IMAGINARY
    (96) RuneLiteral -> . RUNE
    (97) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . TIMES BaseType
    (26) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 107
    MINUS           shift and go to state 101
    TIMES           shift and go to state 116
    AMPERS          shift and go to state 122
    NOT             shift and go to state 106
    LPAREN          shift and go to state 119
    IDENTIFIER      shift and go to state 110
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 108
    FLOAT           shift and go to state 121
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 95
    STRING          shift and go to state 102
    LBRACK          shift and go to state 66
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53

    Conversion                     shift and go to state 96
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 123
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 98
    FloatLiteral                   shift and go to state 99
    Type                           shift and go to state 100
    OperandName                    shift and go to state 103
    BasicLit                       shift and go to state 104
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 59
    IntLiteral                     shift and go to state 111
    UnaryExpr                      shift and go to state 114
    RuneLiteral                    shift and go to state 115
    Operand                        shift and go to state 117
    Expression                     shift and go to state 222
    PointerType                    shift and go to state 68
    StringLiteral                  shift and go to state 97
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 112
    FunctionType                   shift and go to state 69

state 178

    (133) Expression -> Expression GG . Expression
    (115) Expression -> . UnaryExpr
    (116) Expression -> . Expression OROR Expression
    (117) Expression -> . Expression AMPAMP Expression
    (118) Expression -> . Expression EQEQ Expression
    (119) Expression -> . Expression NOTEQ Expression
    (120) Expression -> . Expression LESS Expression
    (121) Expression -> . Expression GREAT Expression
    (122) Expression -> . Expression LEQ Expression
    (123) Expression -> . Expression GEQ Expression
    (124) Expression -> . Expression PLUS Expression
    (125) Expression -> . Expression MINUS Expression
    (126) Expression -> . Expression OR Expression
    (127) Expression -> . Expression CARET Expression
    (128) Expression -> . Expression TIMES Expression
    (129) Expression -> . Expression DIVIDE Expression
    (130) Expression -> . Expression MOD Expression
    (131) Expression -> . Expression AMPERS Expression
    (132) Expression -> . Expression LL Expression
    (133) Expression -> . Expression GG Expression
    (134) Expression -> . Expression AMPCAR Expression
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (100) PrimaryExpr -> . Operand
    (101) PrimaryExpr -> . Conversion
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . PrimaryExpr Index
    (104) PrimaryExpr -> . PrimaryExpr Slice
    (105) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (99) Conversion -> . Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (98) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (88) BasicLit -> . IntLiteral
    (89) BasicLit -> . FloatLiteral
    (90) BasicLit -> . ImgLiteral
    (91) BasicLit -> . RuneLiteral
    (92) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (93) IntLiteral -> . INTEGER
    (94) FloatLiteral -> . FLOAT
    (95) ImgLiteral -> . IMAGINARY
    (96) RuneLiteral -> . RUNE
    (97) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . TIMES BaseType
    (26) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 107
    MINUS           shift and go to state 101
    TIMES           shift and go to state 116
    AMPERS          shift and go to state 122
    NOT             shift and go to state 106
    LPAREN          shift and go to state 119
    IDENTIFIER      shift and go to state 110
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 108
    FLOAT           shift and go to state 121
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 95
    STRING          shift and go to state 102
    LBRACK          shift and go to state 66
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53

    Conversion                     shift and go to state 96
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 123
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 98
    FloatLiteral                   shift and go to state 99
    Type                           shift and go to state 100
    OperandName                    shift and go to state 103
    BasicLit                       shift and go to state 104
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 59
    IntLiteral                     shift and go to state 111
    UnaryExpr                      shift and go to state 114
    RuneLiteral                    shift and go to state 115
    Operand                        shift and go to state 117
    Expression                     shift and go to state 223
    PointerType                    shift and go to state 68
    StringLiteral                  shift and go to state 97
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 112
    FunctionType                   shift and go to state 69

state 179

    (119) Expression -> Expression NOTEQ . Expression
    (115) Expression -> . UnaryExpr
    (116) Expression -> . Expression OROR Expression
    (117) Expression -> . Expression AMPAMP Expression
    (118) Expression -> . Expression EQEQ Expression
    (119) Expression -> . Expression NOTEQ Expression
    (120) Expression -> . Expression LESS Expression
    (121) Expression -> . Expression GREAT Expression
    (122) Expression -> . Expression LEQ Expression
    (123) Expression -> . Expression GEQ Expression
    (124) Expression -> . Expression PLUS Expression
    (125) Expression -> . Expression MINUS Expression
    (126) Expression -> . Expression OR Expression
    (127) Expression -> . Expression CARET Expression
    (128) Expression -> . Expression TIMES Expression
    (129) Expression -> . Expression DIVIDE Expression
    (130) Expression -> . Expression MOD Expression
    (131) Expression -> . Expression AMPERS Expression
    (132) Expression -> . Expression LL Expression
    (133) Expression -> . Expression GG Expression
    (134) Expression -> . Expression AMPCAR Expression
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (100) PrimaryExpr -> . Operand
    (101) PrimaryExpr -> . Conversion
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . PrimaryExpr Index
    (104) PrimaryExpr -> . PrimaryExpr Slice
    (105) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (99) Conversion -> . Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (98) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (88) BasicLit -> . IntLiteral
    (89) BasicLit -> . FloatLiteral
    (90) BasicLit -> . ImgLiteral
    (91) BasicLit -> . RuneLiteral
    (92) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (93) IntLiteral -> . INTEGER
    (94) FloatLiteral -> . FLOAT
    (95) ImgLiteral -> . IMAGINARY
    (96) RuneLiteral -> . RUNE
    (97) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . TIMES BaseType
    (26) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 107
    MINUS           shift and go to state 101
    TIMES           shift and go to state 116
    AMPERS          shift and go to state 122
    NOT             shift and go to state 106
    LPAREN          shift and go to state 119
    IDENTIFIER      shift and go to state 110
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 108
    FLOAT           shift and go to state 121
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 95
    STRING          shift and go to state 102
    LBRACK          shift and go to state 66
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53

    Conversion                     shift and go to state 96
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 123
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 98
    FloatLiteral                   shift and go to state 99
    Type                           shift and go to state 100
    OperandName                    shift and go to state 103
    BasicLit                       shift and go to state 104
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 59
    IntLiteral                     shift and go to state 111
    UnaryExpr                      shift and go to state 114
    RuneLiteral                    shift and go to state 115
    Operand                        shift and go to state 117
    Expression                     shift and go to state 224
    PointerType                    shift and go to state 68
    StringLiteral                  shift and go to state 97
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 112
    FunctionType                   shift and go to state 69

state 180

    (124) Expression -> Expression PLUS . Expression
    (115) Expression -> . UnaryExpr
    (116) Expression -> . Expression OROR Expression
    (117) Expression -> . Expression AMPAMP Expression
    (118) Expression -> . Expression EQEQ Expression
    (119) Expression -> . Expression NOTEQ Expression
    (120) Expression -> . Expression LESS Expression
    (121) Expression -> . Expression GREAT Expression
    (122) Expression -> . Expression LEQ Expression
    (123) Expression -> . Expression GEQ Expression
    (124) Expression -> . Expression PLUS Expression
    (125) Expression -> . Expression MINUS Expression
    (126) Expression -> . Expression OR Expression
    (127) Expression -> . Expression CARET Expression
    (128) Expression -> . Expression TIMES Expression
    (129) Expression -> . Expression DIVIDE Expression
    (130) Expression -> . Expression MOD Expression
    (131) Expression -> . Expression AMPERS Expression
    (132) Expression -> . Expression LL Expression
    (133) Expression -> . Expression GG Expression
    (134) Expression -> . Expression AMPCAR Expression
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (100) PrimaryExpr -> . Operand
    (101) PrimaryExpr -> . Conversion
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . PrimaryExpr Index
    (104) PrimaryExpr -> . PrimaryExpr Slice
    (105) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (99) Conversion -> . Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (98) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (88) BasicLit -> . IntLiteral
    (89) BasicLit -> . FloatLiteral
    (90) BasicLit -> . ImgLiteral
    (91) BasicLit -> . RuneLiteral
    (92) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (93) IntLiteral -> . INTEGER
    (94) FloatLiteral -> . FLOAT
    (95) ImgLiteral -> . IMAGINARY
    (96) RuneLiteral -> . RUNE
    (97) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . TIMES BaseType
    (26) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 107
    MINUS           shift and go to state 101
    TIMES           shift and go to state 116
    AMPERS          shift and go to state 122
    NOT             shift and go to state 106
    LPAREN          shift and go to state 119
    IDENTIFIER      shift and go to state 110
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 108
    FLOAT           shift and go to state 121
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 95
    STRING          shift and go to state 102
    LBRACK          shift and go to state 66
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53

    Conversion                     shift and go to state 96
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 123
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 98
    FloatLiteral                   shift and go to state 99
    Type                           shift and go to state 100
    OperandName                    shift and go to state 103
    BasicLit                       shift and go to state 104
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 59
    IntLiteral                     shift and go to state 111
    UnaryExpr                      shift and go to state 114
    RuneLiteral                    shift and go to state 115
    Operand                        shift and go to state 117
    Expression                     shift and go to state 225
    PointerType                    shift and go to state 68
    StringLiteral                  shift and go to state 97
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 112
    FunctionType                   shift and go to state 69

state 181

    (130) Expression -> Expression MOD . Expression
    (115) Expression -> . UnaryExpr
    (116) Expression -> . Expression OROR Expression
    (117) Expression -> . Expression AMPAMP Expression
    (118) Expression -> . Expression EQEQ Expression
    (119) Expression -> . Expression NOTEQ Expression
    (120) Expression -> . Expression LESS Expression
    (121) Expression -> . Expression GREAT Expression
    (122) Expression -> . Expression LEQ Expression
    (123) Expression -> . Expression GEQ Expression
    (124) Expression -> . Expression PLUS Expression
    (125) Expression -> . Expression MINUS Expression
    (126) Expression -> . Expression OR Expression
    (127) Expression -> . Expression CARET Expression
    (128) Expression -> . Expression TIMES Expression
    (129) Expression -> . Expression DIVIDE Expression
    (130) Expression -> . Expression MOD Expression
    (131) Expression -> . Expression AMPERS Expression
    (132) Expression -> . Expression LL Expression
    (133) Expression -> . Expression GG Expression
    (134) Expression -> . Expression AMPCAR Expression
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (100) PrimaryExpr -> . Operand
    (101) PrimaryExpr -> . Conversion
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . PrimaryExpr Index
    (104) PrimaryExpr -> . PrimaryExpr Slice
    (105) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (99) Conversion -> . Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (98) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (88) BasicLit -> . IntLiteral
    (89) BasicLit -> . FloatLiteral
    (90) BasicLit -> . ImgLiteral
    (91) BasicLit -> . RuneLiteral
    (92) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (93) IntLiteral -> . INTEGER
    (94) FloatLiteral -> . FLOAT
    (95) ImgLiteral -> . IMAGINARY
    (96) RuneLiteral -> . RUNE
    (97) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . TIMES BaseType
    (26) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 107
    MINUS           shift and go to state 101
    TIMES           shift and go to state 116
    AMPERS          shift and go to state 122
    NOT             shift and go to state 106
    LPAREN          shift and go to state 119
    IDENTIFIER      shift and go to state 110
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 108
    FLOAT           shift and go to state 121
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 95
    STRING          shift and go to state 102
    LBRACK          shift and go to state 66
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53

    Conversion                     shift and go to state 96
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 123
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 98
    FloatLiteral                   shift and go to state 99
    Type                           shift and go to state 100
    OperandName                    shift and go to state 103
    BasicLit                       shift and go to state 104
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 59
    IntLiteral                     shift and go to state 111
    UnaryExpr                      shift and go to state 114
    RuneLiteral                    shift and go to state 115
    Operand                        shift and go to state 117
    Expression                     shift and go to state 226
    PointerType                    shift and go to state 68
    StringLiteral                  shift and go to state 97
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 112
    FunctionType                   shift and go to state 69

state 182

    (117) Expression -> Expression AMPAMP . Expression
    (115) Expression -> . UnaryExpr
    (116) Expression -> . Expression OROR Expression
    (117) Expression -> . Expression AMPAMP Expression
    (118) Expression -> . Expression EQEQ Expression
    (119) Expression -> . Expression NOTEQ Expression
    (120) Expression -> . Expression LESS Expression
    (121) Expression -> . Expression GREAT Expression
    (122) Expression -> . Expression LEQ Expression
    (123) Expression -> . Expression GEQ Expression
    (124) Expression -> . Expression PLUS Expression
    (125) Expression -> . Expression MINUS Expression
    (126) Expression -> . Expression OR Expression
    (127) Expression -> . Expression CARET Expression
    (128) Expression -> . Expression TIMES Expression
    (129) Expression -> . Expression DIVIDE Expression
    (130) Expression -> . Expression MOD Expression
    (131) Expression -> . Expression AMPERS Expression
    (132) Expression -> . Expression LL Expression
    (133) Expression -> . Expression GG Expression
    (134) Expression -> . Expression AMPCAR Expression
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (100) PrimaryExpr -> . Operand
    (101) PrimaryExpr -> . Conversion
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . PrimaryExpr Index
    (104) PrimaryExpr -> . PrimaryExpr Slice
    (105) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (99) Conversion -> . Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (98) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (88) BasicLit -> . IntLiteral
    (89) BasicLit -> . FloatLiteral
    (90) BasicLit -> . ImgLiteral
    (91) BasicLit -> . RuneLiteral
    (92) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (93) IntLiteral -> . INTEGER
    (94) FloatLiteral -> . FLOAT
    (95) ImgLiteral -> . IMAGINARY
    (96) RuneLiteral -> . RUNE
    (97) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . TIMES BaseType
    (26) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 107
    MINUS           shift and go to state 101
    TIMES           shift and go to state 116
    AMPERS          shift and go to state 122
    NOT             shift and go to state 106
    LPAREN          shift and go to state 119
    IDENTIFIER      shift and go to state 110
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 108
    FLOAT           shift and go to state 121
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 95
    STRING          shift and go to state 102
    LBRACK          shift and go to state 66
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53

    Conversion                     shift and go to state 96
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 123
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 98
    FloatLiteral                   shift and go to state 99
    Type                           shift and go to state 100
    OperandName                    shift and go to state 103
    BasicLit                       shift and go to state 104
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 59
    IntLiteral                     shift and go to state 111
    UnaryExpr                      shift and go to state 114
    RuneLiteral                    shift and go to state 115
    Operand                        shift and go to state 117
    Expression                     shift and go to state 227
    PointerType                    shift and go to state 68
    StringLiteral                  shift and go to state 97
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 112
    FunctionType                   shift and go to state 69

state 183

    (128) Expression -> Expression TIMES . Expression
    (115) Expression -> . UnaryExpr
    (116) Expression -> . Expression OROR Expression
    (117) Expression -> . Expression AMPAMP Expression
    (118) Expression -> . Expression EQEQ Expression
    (119) Expression -> . Expression NOTEQ Expression
    (120) Expression -> . Expression LESS Expression
    (121) Expression -> . Expression GREAT Expression
    (122) Expression -> . Expression LEQ Expression
    (123) Expression -> . Expression GEQ Expression
    (124) Expression -> . Expression PLUS Expression
    (125) Expression -> . Expression MINUS Expression
    (126) Expression -> . Expression OR Expression
    (127) Expression -> . Expression CARET Expression
    (128) Expression -> . Expression TIMES Expression
    (129) Expression -> . Expression DIVIDE Expression
    (130) Expression -> . Expression MOD Expression
    (131) Expression -> . Expression AMPERS Expression
    (132) Expression -> . Expression LL Expression
    (133) Expression -> . Expression GG Expression
    (134) Expression -> . Expression AMPCAR Expression
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (100) PrimaryExpr -> . Operand
    (101) PrimaryExpr -> . Conversion
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . PrimaryExpr Index
    (104) PrimaryExpr -> . PrimaryExpr Slice
    (105) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (99) Conversion -> . Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (98) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (88) BasicLit -> . IntLiteral
    (89) BasicLit -> . FloatLiteral
    (90) BasicLit -> . ImgLiteral
    (91) BasicLit -> . RuneLiteral
    (92) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (93) IntLiteral -> . INTEGER
    (94) FloatLiteral -> . FLOAT
    (95) ImgLiteral -> . IMAGINARY
    (96) RuneLiteral -> . RUNE
    (97) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . TIMES BaseType
    (26) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 107
    MINUS           shift and go to state 101
    TIMES           shift and go to state 116
    AMPERS          shift and go to state 122
    NOT             shift and go to state 106
    LPAREN          shift and go to state 119
    IDENTIFIER      shift and go to state 110
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 108
    FLOAT           shift and go to state 121
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 95
    STRING          shift and go to state 102
    LBRACK          shift and go to state 66
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53

    Conversion                     shift and go to state 96
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 123
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 98
    FloatLiteral                   shift and go to state 99
    Type                           shift and go to state 100
    OperandName                    shift and go to state 103
    BasicLit                       shift and go to state 104
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 59
    IntLiteral                     shift and go to state 111
    UnaryExpr                      shift and go to state 114
    RuneLiteral                    shift and go to state 115
    Operand                        shift and go to state 117
    Expression                     shift and go to state 228
    PointerType                    shift and go to state 68
    StringLiteral                  shift and go to state 97
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 112
    FunctionType                   shift and go to state 69

state 184

    (125) Expression -> Expression MINUS . Expression
    (115) Expression -> . UnaryExpr
    (116) Expression -> . Expression OROR Expression
    (117) Expression -> . Expression AMPAMP Expression
    (118) Expression -> . Expression EQEQ Expression
    (119) Expression -> . Expression NOTEQ Expression
    (120) Expression -> . Expression LESS Expression
    (121) Expression -> . Expression GREAT Expression
    (122) Expression -> . Expression LEQ Expression
    (123) Expression -> . Expression GEQ Expression
    (124) Expression -> . Expression PLUS Expression
    (125) Expression -> . Expression MINUS Expression
    (126) Expression -> . Expression OR Expression
    (127) Expression -> . Expression CARET Expression
    (128) Expression -> . Expression TIMES Expression
    (129) Expression -> . Expression DIVIDE Expression
    (130) Expression -> . Expression MOD Expression
    (131) Expression -> . Expression AMPERS Expression
    (132) Expression -> . Expression LL Expression
    (133) Expression -> . Expression GG Expression
    (134) Expression -> . Expression AMPCAR Expression
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (100) PrimaryExpr -> . Operand
    (101) PrimaryExpr -> . Conversion
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . PrimaryExpr Index
    (104) PrimaryExpr -> . PrimaryExpr Slice
    (105) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (99) Conversion -> . Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (98) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (88) BasicLit -> . IntLiteral
    (89) BasicLit -> . FloatLiteral
    (90) BasicLit -> . ImgLiteral
    (91) BasicLit -> . RuneLiteral
    (92) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (93) IntLiteral -> . INTEGER
    (94) FloatLiteral -> . FLOAT
    (95) ImgLiteral -> . IMAGINARY
    (96) RuneLiteral -> . RUNE
    (97) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . TIMES BaseType
    (26) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 107
    MINUS           shift and go to state 101
    TIMES           shift and go to state 116
    AMPERS          shift and go to state 122
    NOT             shift and go to state 106
    LPAREN          shift and go to state 119
    IDENTIFIER      shift and go to state 110
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 108
    FLOAT           shift and go to state 121
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 95
    STRING          shift and go to state 102
    LBRACK          shift and go to state 66
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53

    Conversion                     shift and go to state 96
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 123
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 98
    FloatLiteral                   shift and go to state 99
    Type                           shift and go to state 100
    OperandName                    shift and go to state 103
    BasicLit                       shift and go to state 104
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 59
    IntLiteral                     shift and go to state 111
    UnaryExpr                      shift and go to state 114
    RuneLiteral                    shift and go to state 115
    Operand                        shift and go to state 117
    Expression                     shift and go to state 229
    PointerType                    shift and go to state 68
    StringLiteral                  shift and go to state 97
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 112
    FunctionType                   shift and go to state 69

state 185

    (122) Expression -> Expression LEQ . Expression
    (115) Expression -> . UnaryExpr
    (116) Expression -> . Expression OROR Expression
    (117) Expression -> . Expression AMPAMP Expression
    (118) Expression -> . Expression EQEQ Expression
    (119) Expression -> . Expression NOTEQ Expression
    (120) Expression -> . Expression LESS Expression
    (121) Expression -> . Expression GREAT Expression
    (122) Expression -> . Expression LEQ Expression
    (123) Expression -> . Expression GEQ Expression
    (124) Expression -> . Expression PLUS Expression
    (125) Expression -> . Expression MINUS Expression
    (126) Expression -> . Expression OR Expression
    (127) Expression -> . Expression CARET Expression
    (128) Expression -> . Expression TIMES Expression
    (129) Expression -> . Expression DIVIDE Expression
    (130) Expression -> . Expression MOD Expression
    (131) Expression -> . Expression AMPERS Expression
    (132) Expression -> . Expression LL Expression
    (133) Expression -> . Expression GG Expression
    (134) Expression -> . Expression AMPCAR Expression
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (100) PrimaryExpr -> . Operand
    (101) PrimaryExpr -> . Conversion
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . PrimaryExpr Index
    (104) PrimaryExpr -> . PrimaryExpr Slice
    (105) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (99) Conversion -> . Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (98) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (88) BasicLit -> . IntLiteral
    (89) BasicLit -> . FloatLiteral
    (90) BasicLit -> . ImgLiteral
    (91) BasicLit -> . RuneLiteral
    (92) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (93) IntLiteral -> . INTEGER
    (94) FloatLiteral -> . FLOAT
    (95) ImgLiteral -> . IMAGINARY
    (96) RuneLiteral -> . RUNE
    (97) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . TIMES BaseType
    (26) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 107
    MINUS           shift and go to state 101
    TIMES           shift and go to state 116
    AMPERS          shift and go to state 122
    NOT             shift and go to state 106
    LPAREN          shift and go to state 119
    IDENTIFIER      shift and go to state 110
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 108
    FLOAT           shift and go to state 121
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 95
    STRING          shift and go to state 102
    LBRACK          shift and go to state 66
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53

    Conversion                     shift and go to state 96
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 123
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 98
    FloatLiteral                   shift and go to state 99
    Type                           shift and go to state 100
    OperandName                    shift and go to state 103
    BasicLit                       shift and go to state 104
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 59
    IntLiteral                     shift and go to state 111
    UnaryExpr                      shift and go to state 114
    RuneLiteral                    shift and go to state 115
    Operand                        shift and go to state 117
    Expression                     shift and go to state 230
    PointerType                    shift and go to state 68
    StringLiteral                  shift and go to state 97
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 112
    FunctionType                   shift and go to state 69

state 186

    (103) PrimaryExpr -> PrimaryExpr Index .

    DOT             reduce using rule 103 (PrimaryExpr -> PrimaryExpr Index .)
    LBRACK          reduce using rule 103 (PrimaryExpr -> PrimaryExpr Index .)
    LPAREN          reduce using rule 103 (PrimaryExpr -> PrimaryExpr Index .)
    OROR            reduce using rule 103 (PrimaryExpr -> PrimaryExpr Index .)
    AMPAMP          reduce using rule 103 (PrimaryExpr -> PrimaryExpr Index .)
    EQEQ            reduce using rule 103 (PrimaryExpr -> PrimaryExpr Index .)
    NOTEQ           reduce using rule 103 (PrimaryExpr -> PrimaryExpr Index .)
    LESS            reduce using rule 103 (PrimaryExpr -> PrimaryExpr Index .)
    GREAT           reduce using rule 103 (PrimaryExpr -> PrimaryExpr Index .)
    LEQ             reduce using rule 103 (PrimaryExpr -> PrimaryExpr Index .)
    GEQ             reduce using rule 103 (PrimaryExpr -> PrimaryExpr Index .)
    PLUS            reduce using rule 103 (PrimaryExpr -> PrimaryExpr Index .)
    MINUS           reduce using rule 103 (PrimaryExpr -> PrimaryExpr Index .)
    OR              reduce using rule 103 (PrimaryExpr -> PrimaryExpr Index .)
    CARET           reduce using rule 103 (PrimaryExpr -> PrimaryExpr Index .)
    TIMES           reduce using rule 103 (PrimaryExpr -> PrimaryExpr Index .)
    DIVIDE          reduce using rule 103 (PrimaryExpr -> PrimaryExpr Index .)
    MOD             reduce using rule 103 (PrimaryExpr -> PrimaryExpr Index .)
    AMPERS          reduce using rule 103 (PrimaryExpr -> PrimaryExpr Index .)
    LL              reduce using rule 103 (PrimaryExpr -> PrimaryExpr Index .)
    GG              reduce using rule 103 (PrimaryExpr -> PrimaryExpr Index .)
    AMPCAR          reduce using rule 103 (PrimaryExpr -> PrimaryExpr Index .)
    SEMICOL         reduce using rule 103 (PrimaryExpr -> PrimaryExpr Index .)
    LBRACE          reduce using rule 103 (PrimaryExpr -> PrimaryExpr Index .)
    RBRACK          reduce using rule 103 (PrimaryExpr -> PrimaryExpr Index .)
    COMMA           reduce using rule 103 (PrimaryExpr -> PrimaryExpr Index .)
    RPAREN          reduce using rule 103 (PrimaryExpr -> PrimaryExpr Index .)
    COLON           reduce using rule 103 (PrimaryExpr -> PrimaryExpr Index .)
    PLUSEQ          reduce using rule 103 (PrimaryExpr -> PrimaryExpr Index .)
    MINUSEQ         reduce using rule 103 (PrimaryExpr -> PrimaryExpr Index .)
    TIMESEQ         reduce using rule 103 (PrimaryExpr -> PrimaryExpr Index .)
    DIVIDEEQ        reduce using rule 103 (PrimaryExpr -> PrimaryExpr Index .)
    MODEQ           reduce using rule 103 (PrimaryExpr -> PrimaryExpr Index .)
    AMPEQ           reduce using rule 103 (PrimaryExpr -> PrimaryExpr Index .)
    OREQ            reduce using rule 103 (PrimaryExpr -> PrimaryExpr Index .)
    CAREQ           reduce using rule 103 (PrimaryExpr -> PrimaryExpr Index .)
    LLEQ            reduce using rule 103 (PrimaryExpr -> PrimaryExpr Index .)
    GGEQ            reduce using rule 103 (PrimaryExpr -> PrimaryExpr Index .)
    EQUAL           reduce using rule 103 (PrimaryExpr -> PrimaryExpr Index .)
    PLUSPLUS        reduce using rule 103 (PrimaryExpr -> PrimaryExpr Index .)
    MINUSMIN        reduce using rule 103 (PrimaryExpr -> PrimaryExpr Index .)


state 187

    (104) PrimaryExpr -> PrimaryExpr Slice .

    DOT             reduce using rule 104 (PrimaryExpr -> PrimaryExpr Slice .)
    LBRACK          reduce using rule 104 (PrimaryExpr -> PrimaryExpr Slice .)
    LPAREN          reduce using rule 104 (PrimaryExpr -> PrimaryExpr Slice .)
    OROR            reduce using rule 104 (PrimaryExpr -> PrimaryExpr Slice .)
    AMPAMP          reduce using rule 104 (PrimaryExpr -> PrimaryExpr Slice .)
    EQEQ            reduce using rule 104 (PrimaryExpr -> PrimaryExpr Slice .)
    NOTEQ           reduce using rule 104 (PrimaryExpr -> PrimaryExpr Slice .)
    LESS            reduce using rule 104 (PrimaryExpr -> PrimaryExpr Slice .)
    GREAT           reduce using rule 104 (PrimaryExpr -> PrimaryExpr Slice .)
    LEQ             reduce using rule 104 (PrimaryExpr -> PrimaryExpr Slice .)
    GEQ             reduce using rule 104 (PrimaryExpr -> PrimaryExpr Slice .)
    PLUS            reduce using rule 104 (PrimaryExpr -> PrimaryExpr Slice .)
    MINUS           reduce using rule 104 (PrimaryExpr -> PrimaryExpr Slice .)
    OR              reduce using rule 104 (PrimaryExpr -> PrimaryExpr Slice .)
    CARET           reduce using rule 104 (PrimaryExpr -> PrimaryExpr Slice .)
    TIMES           reduce using rule 104 (PrimaryExpr -> PrimaryExpr Slice .)
    DIVIDE          reduce using rule 104 (PrimaryExpr -> PrimaryExpr Slice .)
    MOD             reduce using rule 104 (PrimaryExpr -> PrimaryExpr Slice .)
    AMPERS          reduce using rule 104 (PrimaryExpr -> PrimaryExpr Slice .)
    LL              reduce using rule 104 (PrimaryExpr -> PrimaryExpr Slice .)
    GG              reduce using rule 104 (PrimaryExpr -> PrimaryExpr Slice .)
    AMPCAR          reduce using rule 104 (PrimaryExpr -> PrimaryExpr Slice .)
    SEMICOL         reduce using rule 104 (PrimaryExpr -> PrimaryExpr Slice .)
    LBRACE          reduce using rule 104 (PrimaryExpr -> PrimaryExpr Slice .)
    RBRACK          reduce using rule 104 (PrimaryExpr -> PrimaryExpr Slice .)
    COMMA           reduce using rule 104 (PrimaryExpr -> PrimaryExpr Slice .)
    RPAREN          reduce using rule 104 (PrimaryExpr -> PrimaryExpr Slice .)
    COLON           reduce using rule 104 (PrimaryExpr -> PrimaryExpr Slice .)
    PLUSEQ          reduce using rule 104 (PrimaryExpr -> PrimaryExpr Slice .)
    MINUSEQ         reduce using rule 104 (PrimaryExpr -> PrimaryExpr Slice .)
    TIMESEQ         reduce using rule 104 (PrimaryExpr -> PrimaryExpr Slice .)
    DIVIDEEQ        reduce using rule 104 (PrimaryExpr -> PrimaryExpr Slice .)
    MODEQ           reduce using rule 104 (PrimaryExpr -> PrimaryExpr Slice .)
    AMPEQ           reduce using rule 104 (PrimaryExpr -> PrimaryExpr Slice .)
    OREQ            reduce using rule 104 (PrimaryExpr -> PrimaryExpr Slice .)
    CAREQ           reduce using rule 104 (PrimaryExpr -> PrimaryExpr Slice .)
    LLEQ            reduce using rule 104 (PrimaryExpr -> PrimaryExpr Slice .)
    GGEQ            reduce using rule 104 (PrimaryExpr -> PrimaryExpr Slice .)
    EQUAL           reduce using rule 104 (PrimaryExpr -> PrimaryExpr Slice .)
    PLUSPLUS        reduce using rule 104 (PrimaryExpr -> PrimaryExpr Slice .)
    MINUSMIN        reduce using rule 104 (PrimaryExpr -> PrimaryExpr Slice .)


state 188

    (107) Index -> LBRACK . Expression RBRACK
    (108) Slice -> LBRACK . ExpressionOpt COLON ExpressionOpt RBRACK
    (115) Expression -> . UnaryExpr
    (116) Expression -> . Expression OROR Expression
    (117) Expression -> . Expression AMPAMP Expression
    (118) Expression -> . Expression EQEQ Expression
    (119) Expression -> . Expression NOTEQ Expression
    (120) Expression -> . Expression LESS Expression
    (121) Expression -> . Expression GREAT Expression
    (122) Expression -> . Expression LEQ Expression
    (123) Expression -> . Expression GEQ Expression
    (124) Expression -> . Expression PLUS Expression
    (125) Expression -> . Expression MINUS Expression
    (126) Expression -> . Expression OR Expression
    (127) Expression -> . Expression CARET Expression
    (128) Expression -> . Expression TIMES Expression
    (129) Expression -> . Expression DIVIDE Expression
    (130) Expression -> . Expression MOD Expression
    (131) Expression -> . Expression AMPERS Expression
    (132) Expression -> . Expression LL Expression
    (133) Expression -> . Expression GG Expression
    (134) Expression -> . Expression AMPCAR Expression
    (135) ExpressionOpt -> . Expression
    (136) ExpressionOpt -> . epsilon
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (221) epsilon -> .
    (100) PrimaryExpr -> . Operand
    (101) PrimaryExpr -> . Conversion
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . PrimaryExpr Index
    (104) PrimaryExpr -> . PrimaryExpr Slice
    (105) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (99) Conversion -> . Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (98) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (88) BasicLit -> . IntLiteral
    (89) BasicLit -> . FloatLiteral
    (90) BasicLit -> . ImgLiteral
    (91) BasicLit -> . RuneLiteral
    (92) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (93) IntLiteral -> . INTEGER
    (94) FloatLiteral -> . FLOAT
    (95) ImgLiteral -> . IMAGINARY
    (96) RuneLiteral -> . RUNE
    (97) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . TIMES BaseType
    (26) FunctionType -> . FUNC Signature

    COLON           reduce using rule 221 (epsilon -> .)
    PLUS            shift and go to state 107
    MINUS           shift and go to state 101
    TIMES           shift and go to state 116
    AMPERS          shift and go to state 122
    NOT             shift and go to state 106
    LPAREN          shift and go to state 119
    IDENTIFIER      shift and go to state 110
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 108
    FLOAT           shift and go to state 121
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 95
    STRING          shift and go to state 102
    LBRACK          shift and go to state 66
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53

    Conversion                     shift and go to state 96
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 123
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 98
    FloatLiteral                   shift and go to state 99
    Type                           shift and go to state 100
    OperandName                    shift and go to state 103
    BasicLit                       shift and go to state 104
    TypeName                       shift and go to state 57
    ExpressionOpt                  shift and go to state 231
    StructType                     shift and go to state 59
    IntLiteral                     shift and go to state 111
    epsilon                        shift and go to state 232
    UnaryExpr                      shift and go to state 114
    RuneLiteral                    shift and go to state 115
    Operand                        shift and go to state 117
    Expression                     shift and go to state 233
    PointerType                    shift and go to state 68
    StringLiteral                  shift and go to state 97
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 112
    FunctionType                   shift and go to state 69

state 189

    (102) PrimaryExpr -> PrimaryExpr Selector .

    DOT             reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    LBRACK          reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    LPAREN          reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    OROR            reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    AMPAMP          reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    EQEQ            reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    NOTEQ           reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    LESS            reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    GREAT           reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    LEQ             reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    GEQ             reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    PLUS            reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    MINUS           reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    OR              reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    CARET           reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    TIMES           reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    DIVIDE          reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    MOD             reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    AMPERS          reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    LL              reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    GG              reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    AMPCAR          reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    SEMICOL         reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    LBRACE          reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    RBRACK          reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    COMMA           reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    RPAREN          reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    COLON           reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    PLUSEQ          reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    MINUSEQ         reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    TIMESEQ         reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    DIVIDEEQ        reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    MODEQ           reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    AMPEQ           reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    OREQ            reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    CAREQ           reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    LLEQ            reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    GGEQ            reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    EQUAL           reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    PLUSPLUS        reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    MINUSMIN        reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)


state 190

    (105) PrimaryExpr -> PrimaryExpr Arguments .

    DOT             reduce using rule 105 (PrimaryExpr -> PrimaryExpr Arguments .)
    LBRACK          reduce using rule 105 (PrimaryExpr -> PrimaryExpr Arguments .)
    LPAREN          reduce using rule 105 (PrimaryExpr -> PrimaryExpr Arguments .)
    OROR            reduce using rule 105 (PrimaryExpr -> PrimaryExpr Arguments .)
    AMPAMP          reduce using rule 105 (PrimaryExpr -> PrimaryExpr Arguments .)
    EQEQ            reduce using rule 105 (PrimaryExpr -> PrimaryExpr Arguments .)
    NOTEQ           reduce using rule 105 (PrimaryExpr -> PrimaryExpr Arguments .)
    LESS            reduce using rule 105 (PrimaryExpr -> PrimaryExpr Arguments .)
    GREAT           reduce using rule 105 (PrimaryExpr -> PrimaryExpr Arguments .)
    LEQ             reduce using rule 105 (PrimaryExpr -> PrimaryExpr Arguments .)
    GEQ             reduce using rule 105 (PrimaryExpr -> PrimaryExpr Arguments .)
    PLUS            reduce using rule 105 (PrimaryExpr -> PrimaryExpr Arguments .)
    MINUS           reduce using rule 105 (PrimaryExpr -> PrimaryExpr Arguments .)
    OR              reduce using rule 105 (PrimaryExpr -> PrimaryExpr Arguments .)
    CARET           reduce using rule 105 (PrimaryExpr -> PrimaryExpr Arguments .)
    TIMES           reduce using rule 105 (PrimaryExpr -> PrimaryExpr Arguments .)
    DIVIDE          reduce using rule 105 (PrimaryExpr -> PrimaryExpr Arguments .)
    MOD             reduce using rule 105 (PrimaryExpr -> PrimaryExpr Arguments .)
    AMPERS          reduce using rule 105 (PrimaryExpr -> PrimaryExpr Arguments .)
    LL              reduce using rule 105 (PrimaryExpr -> PrimaryExpr Arguments .)
    GG              reduce using rule 105 (PrimaryExpr -> PrimaryExpr Arguments .)
    AMPCAR          reduce using rule 105 (PrimaryExpr -> PrimaryExpr Arguments .)
    SEMICOL         reduce using rule 105 (PrimaryExpr -> PrimaryExpr Arguments .)
    LBRACE          reduce using rule 105 (PrimaryExpr -> PrimaryExpr Arguments .)
    RBRACK          reduce using rule 105 (PrimaryExpr -> PrimaryExpr Arguments .)
    COMMA           reduce using rule 105 (PrimaryExpr -> PrimaryExpr Arguments .)
    RPAREN          reduce using rule 105 (PrimaryExpr -> PrimaryExpr Arguments .)
    COLON           reduce using rule 105 (PrimaryExpr -> PrimaryExpr Arguments .)
    PLUSEQ          reduce using rule 105 (PrimaryExpr -> PrimaryExpr Arguments .)
    MINUSEQ         reduce using rule 105 (PrimaryExpr -> PrimaryExpr Arguments .)
    TIMESEQ         reduce using rule 105 (PrimaryExpr -> PrimaryExpr Arguments .)
    DIVIDEEQ        reduce using rule 105 (PrimaryExpr -> PrimaryExpr Arguments .)
    MODEQ           reduce using rule 105 (PrimaryExpr -> PrimaryExpr Arguments .)
    AMPEQ           reduce using rule 105 (PrimaryExpr -> PrimaryExpr Arguments .)
    OREQ            reduce using rule 105 (PrimaryExpr -> PrimaryExpr Arguments .)
    CAREQ           reduce using rule 105 (PrimaryExpr -> PrimaryExpr Arguments .)
    LLEQ            reduce using rule 105 (PrimaryExpr -> PrimaryExpr Arguments .)
    GGEQ            reduce using rule 105 (PrimaryExpr -> PrimaryExpr Arguments .)
    EQUAL           reduce using rule 105 (PrimaryExpr -> PrimaryExpr Arguments .)
    PLUSPLUS        reduce using rule 105 (PrimaryExpr -> PrimaryExpr Arguments .)
    MINUSMIN        reduce using rule 105 (PrimaryExpr -> PrimaryExpr Arguments .)


state 191

    (109) Arguments -> LPAREN . ExpressionListTypeOpt RPAREN
    (110) ExpressionListTypeOpt -> . ExpressionList
    (111) ExpressionListTypeOpt -> . epsilon
    (112) ExpressionList -> . Expression ExpressionRep
    (221) epsilon -> .
    (115) Expression -> . UnaryExpr
    (116) Expression -> . Expression OROR Expression
    (117) Expression -> . Expression AMPAMP Expression
    (118) Expression -> . Expression EQEQ Expression
    (119) Expression -> . Expression NOTEQ Expression
    (120) Expression -> . Expression LESS Expression
    (121) Expression -> . Expression GREAT Expression
    (122) Expression -> . Expression LEQ Expression
    (123) Expression -> . Expression GEQ Expression
    (124) Expression -> . Expression PLUS Expression
    (125) Expression -> . Expression MINUS Expression
    (126) Expression -> . Expression OR Expression
    (127) Expression -> . Expression CARET Expression
    (128) Expression -> . Expression TIMES Expression
    (129) Expression -> . Expression DIVIDE Expression
    (130) Expression -> . Expression MOD Expression
    (131) Expression -> . Expression AMPERS Expression
    (132) Expression -> . Expression LL Expression
    (133) Expression -> . Expression GG Expression
    (134) Expression -> . Expression AMPCAR Expression
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (100) PrimaryExpr -> . Operand
    (101) PrimaryExpr -> . Conversion
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . PrimaryExpr Index
    (104) PrimaryExpr -> . PrimaryExpr Slice
    (105) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (99) Conversion -> . Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (98) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (88) BasicLit -> . IntLiteral
    (89) BasicLit -> . FloatLiteral
    (90) BasicLit -> . ImgLiteral
    (91) BasicLit -> . RuneLiteral
    (92) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (93) IntLiteral -> . INTEGER
    (94) FloatLiteral -> . FLOAT
    (95) ImgLiteral -> . IMAGINARY
    (96) RuneLiteral -> . RUNE
    (97) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . TIMES BaseType
    (26) FunctionType -> . FUNC Signature

    RPAREN          reduce using rule 221 (epsilon -> .)
    PLUS            shift and go to state 107
    MINUS           shift and go to state 101
    TIMES           shift and go to state 116
    AMPERS          shift and go to state 122
    NOT             shift and go to state 106
    LPAREN          shift and go to state 119
    IDENTIFIER      shift and go to state 110
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 108
    FLOAT           shift and go to state 121
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 95
    STRING          shift and go to state 102
    LBRACK          shift and go to state 66
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53

    UnaryOp                        shift and go to state 105
    Conversion                     shift and go to state 96
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 98
    Operand                        shift and go to state 117
    FloatLiteral                   shift and go to state 99
    Type                           shift and go to state 100
    OperandName                    shift and go to state 103
    BasicLit                       shift and go to state 104
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 59
    IntLiteral                     shift and go to state 111
    ImgLiteral                     shift and go to state 112
    epsilon                        shift and go to state 234
    UnaryExpr                      shift and go to state 114
    RuneLiteral                    shift and go to state 115
    ExpressionListTypeOpt          shift and go to state 236
    ExpressionList                 shift and go to state 235
    Expression                     shift and go to state 145
    PointerType                    shift and go to state 68
    StringLiteral                  shift and go to state 97
    TypeLit                        shift and go to state 56
    PrimaryExpr                    shift and go to state 123
    FunctionType                   shift and go to state 69

state 192

    (106) Selector -> DOT . IDENTIFIER

    IDENTIFIER      shift and go to state 237


state 193

    (60) IdentifierRep -> IdentifierRep COMMA IDENTIFIER .

    COMMA           reduce using rule 60 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    LPAREN          reduce using rule 60 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    TYPEX           reduce using rule 60 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    TTYPE           reduce using rule 60 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    LBRACK          reduce using rule 60 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    STRUCT          reduce using rule 60 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    TIMES           reduce using rule 60 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    FUNC            reduce using rule 60 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    EQUAL           reduce using rule 60 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    SEMICOL         reduce using rule 60 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)


state 194

    (4) Type -> LPAREN Type . RPAREN
    (35) ParametersList -> Type .
    (41) ParameterDecl -> Type .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 155
    COMMA           reduce using rule 41 (ParameterDecl -> Type .)

  ! RPAREN          [ reduce using rule 35 (ParametersList -> Type .) ]


state 195

    (42) Block -> CreateScope LBRACE . StatementList RBRACE
    (44) StatementList -> . StatementRep
    (45) StatementRep -> . StatementRep Statement SEMICOL
    (46) StatementRep -> . epsilon
    (221) epsilon -> .

    RETURN          reduce using rule 221 (epsilon -> .)
    BREAK           reduce using rule 221 (epsilon -> .)
    CONTINUE        reduce using rule 221 (epsilon -> .)
    GOTO            reduce using rule 221 (epsilon -> .)
    IF              reduce using rule 221 (epsilon -> .)
    PRINT           reduce using rule 221 (epsilon -> .)
    CONST           reduce using rule 221 (epsilon -> .)
    TYPE            reduce using rule 221 (epsilon -> .)
    VAR             reduce using rule 221 (epsilon -> .)
    IDENTIFIER      reduce using rule 221 (epsilon -> .)
    LPAREN          reduce using rule 221 (epsilon -> .)
    PLUS            reduce using rule 221 (epsilon -> .)
    MINUS           reduce using rule 221 (epsilon -> .)
    TIMES           reduce using rule 221 (epsilon -> .)
    AMPERS          reduce using rule 221 (epsilon -> .)
    NOT             reduce using rule 221 (epsilon -> .)
    TYPEX           reduce using rule 221 (epsilon -> .)
    TTYPE           reduce using rule 221 (epsilon -> .)
    INTEGER         reduce using rule 221 (epsilon -> .)
    FLOAT           reduce using rule 221 (epsilon -> .)
    IMAGINARY       reduce using rule 221 (epsilon -> .)
    RUNE            reduce using rule 221 (epsilon -> .)
    STRING          reduce using rule 221 (epsilon -> .)
    LBRACK          reduce using rule 221 (epsilon -> .)
    STRUCT          reduce using rule 221 (epsilon -> .)
    FUNC            reduce using rule 221 (epsilon -> .)
    SEMICOL         reduce using rule 221 (epsilon -> .)
    LBRACE          reduce using rule 221 (epsilon -> .)
    FOR             reduce using rule 221 (epsilon -> .)
    RBRACE          reduce using rule 221 (epsilon -> .)

    epsilon                        shift and go to state 239
    StatementRep                   shift and go to state 238
    StatementList                  shift and go to state 240

state 196

    (32) Parameters -> LPAREN ParameterListOpt RPAREN .

    LPAREN          reduce using rule 32 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    TYPEX           reduce using rule 32 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    TTYPE           reduce using rule 32 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    LBRACK          reduce using rule 32 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    STRUCT          reduce using rule 32 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    TIMES           reduce using rule 32 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    FUNC            reduce using rule 32 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    EQUAL           reduce using rule 32 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    SEMICOL         reduce using rule 32 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    RPAREN          reduce using rule 32 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    LBRACE          reduce using rule 32 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    COMMA           reduce using rule 32 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    STRING          reduce using rule 32 (Parameters -> LPAREN ParameterListOpt RPAREN .)


state 197

    (36) ParametersList -> IdentifierList Type .
    (40) ParameterDecl -> IdentifierList Type .

    RPAREN          reduce using rule 36 (ParametersList -> IdentifierList Type .)
    COMMA           reduce using rule 40 (ParameterDecl -> IdentifierList Type .)


state 198

    (38) ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA . ParameterDecl
    (40) ParameterDecl -> . IdentifierList Type
    (41) ParameterDecl -> . Type
    (59) IdentifierList -> . IDENTIFIER IdentifierRep
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . TIMES BaseType
    (26) FunctionType -> . FUNC Signature

    IDENTIFIER      shift and go to state 34
    LPAREN          shift and go to state 62
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    LBRACK          shift and go to state 66
    STRUCT          shift and go to state 65
    TIMES           shift and go to state 61
    FUNC            shift and go to state 53

    StructType                     shift and go to state 59
    ParameterDecl                  shift and go to state 243
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 57
    TypeLit                        shift and go to state 56
    IdentifierList                 shift and go to state 241
    PointerType                    shift and go to state 68
    FunctionType                   shift and go to state 69
    Type                           shift and go to state 242

state 199

    (39) ParameterDeclCommaRep -> ParameterDecl COMMA . ParameterDecl
    (40) ParameterDecl -> . IdentifierList Type
    (41) ParameterDecl -> . Type
    (59) IdentifierList -> . IDENTIFIER IdentifierRep
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . TIMES BaseType
    (26) FunctionType -> . FUNC Signature

    IDENTIFIER      shift and go to state 34
    LPAREN          shift and go to state 62
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    LBRACK          shift and go to state 66
    STRUCT          shift and go to state 65
    TIMES           shift and go to state 61
    FUNC            shift and go to state 53

    StructType                     shift and go to state 59
    TypeLit                        shift and go to state 56
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 57
    IdentifierList                 shift and go to state 241
    PointerType                    shift and go to state 68
    FunctionType                   shift and go to state 69
    Type                           shift and go to state 242
    ParameterDecl                  shift and go to state 244

state 200

    (72) VarSpecRep -> VarSpecRep VarSpec SEMICOL .

    RPAREN          reduce using rule 72 (VarSpecRep -> VarSpecRep VarSpec SEMICOL .)
    IDENTIFIER      reduce using rule 72 (VarSpecRep -> VarSpecRep VarSpec SEMICOL .)


state 201

    (112) ExpressionList -> Expression ExpressionRep .
    (113) ExpressionRep -> ExpressionRep . COMMA Expression

    SEMICOL         reduce using rule 112 (ExpressionList -> Expression ExpressionRep .)
    LBRACE          reduce using rule 112 (ExpressionList -> Expression ExpressionRep .)
    PLUSEQ          reduce using rule 112 (ExpressionList -> Expression ExpressionRep .)
    MINUSEQ         reduce using rule 112 (ExpressionList -> Expression ExpressionRep .)
    TIMESEQ         reduce using rule 112 (ExpressionList -> Expression ExpressionRep .)
    DIVIDEEQ        reduce using rule 112 (ExpressionList -> Expression ExpressionRep .)
    MODEQ           reduce using rule 112 (ExpressionList -> Expression ExpressionRep .)
    AMPEQ           reduce using rule 112 (ExpressionList -> Expression ExpressionRep .)
    OREQ            reduce using rule 112 (ExpressionList -> Expression ExpressionRep .)
    CAREQ           reduce using rule 112 (ExpressionList -> Expression ExpressionRep .)
    LLEQ            reduce using rule 112 (ExpressionList -> Expression ExpressionRep .)
    GGEQ            reduce using rule 112 (ExpressionList -> Expression ExpressionRep .)
    EQUAL           reduce using rule 112 (ExpressionList -> Expression ExpressionRep .)
    RPAREN          reduce using rule 112 (ExpressionList -> Expression ExpressionRep .)
    COMMA           shift and go to state 245


state 202

    (114) ExpressionRep -> epsilon .

    COMMA           reduce using rule 114 (ExpressionRep -> epsilon .)
    PLUSEQ          reduce using rule 114 (ExpressionRep -> epsilon .)
    MINUSEQ         reduce using rule 114 (ExpressionRep -> epsilon .)
    TIMESEQ         reduce using rule 114 (ExpressionRep -> epsilon .)
    DIVIDEEQ        reduce using rule 114 (ExpressionRep -> epsilon .)
    MODEQ           reduce using rule 114 (ExpressionRep -> epsilon .)
    AMPEQ           reduce using rule 114 (ExpressionRep -> epsilon .)
    OREQ            reduce using rule 114 (ExpressionRep -> epsilon .)
    CAREQ           reduce using rule 114 (ExpressionRep -> epsilon .)
    LLEQ            reduce using rule 114 (ExpressionRep -> epsilon .)
    GGEQ            reduce using rule 114 (ExpressionRep -> epsilon .)
    EQUAL           reduce using rule 114 (ExpressionRep -> epsilon .)
    SEMICOL         reduce using rule 114 (ExpressionRep -> epsilon .)
    RPAREN          reduce using rule 114 (ExpressionRep -> epsilon .)
    LBRACE          reduce using rule 114 (ExpressionRep -> epsilon .)


state 203

    (76) ExpressionListOpt -> EQUAL ExpressionList .

    SEMICOL         reduce using rule 76 (ExpressionListOpt -> EQUAL ExpressionList .)


state 204

    (64) TypeSpecRep -> TypeSpecRep TypeSpec SEMICOL .

    RPAREN          reduce using rule 64 (TypeSpecRep -> TypeSpecRep TypeSpec SEMICOL .)
    IDENTIFIER      reduce using rule 64 (TypeSpecRep -> TypeSpecRep TypeSpec SEMICOL .)
    TTYPE           reduce using rule 64 (TypeSpecRep -> TypeSpecRep TypeSpec SEMICOL .)


state 205

    (18) FieldDeclRep -> FieldDeclRep FieldDecl . SEMICOL

    SEMICOL         shift and go to state 246


state 206

    (20) FieldDecl -> IdentifierList . Type TagOpt
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . TIMES BaseType
    (26) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 62
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    LBRACK          shift and go to state 66
    STRUCT          shift and go to state 65
    TIMES           shift and go to state 61
    FUNC            shift and go to state 53

    StructType                     shift and go to state 59
    Type                           shift and go to state 247
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 57
    PointerType                    shift and go to state 68
    FunctionType                   shift and go to state 69
    TypeLit                        shift and go to state 56

state 207

    (17) StructType -> STRUCT LBRACE FieldDeclRep RBRACE .

    LPAREN          reduce using rule 17 (StructType -> STRUCT LBRACE FieldDeclRep RBRACE .)
    EQUAL           reduce using rule 17 (StructType -> STRUCT LBRACE FieldDeclRep RBRACE .)
    SEMICOL         reduce using rule 17 (StructType -> STRUCT LBRACE FieldDeclRep RBRACE .)
    RPAREN          reduce using rule 17 (StructType -> STRUCT LBRACE FieldDeclRep RBRACE .)
    LBRACE          reduce using rule 17 (StructType -> STRUCT LBRACE FieldDeclRep RBRACE .)
    COMMA           reduce using rule 17 (StructType -> STRUCT LBRACE FieldDeclRep RBRACE .)
    STRING          reduce using rule 17 (StructType -> STRUCT LBRACE FieldDeclRep RBRACE .)


state 208

    (99) Conversion -> Type LPAREN Expression . RPAREN
    (116) Expression -> Expression . OROR Expression
    (117) Expression -> Expression . AMPAMP Expression
    (118) Expression -> Expression . EQEQ Expression
    (119) Expression -> Expression . NOTEQ Expression
    (120) Expression -> Expression . LESS Expression
    (121) Expression -> Expression . GREAT Expression
    (122) Expression -> Expression . LEQ Expression
    (123) Expression -> Expression . GEQ Expression
    (124) Expression -> Expression . PLUS Expression
    (125) Expression -> Expression . MINUS Expression
    (126) Expression -> Expression . OR Expression
    (127) Expression -> Expression . CARET Expression
    (128) Expression -> Expression . TIMES Expression
    (129) Expression -> Expression . DIVIDE Expression
    (130) Expression -> Expression . MOD Expression
    (131) Expression -> Expression . AMPERS Expression
    (132) Expression -> Expression . LL Expression
    (133) Expression -> Expression . GG Expression
    (134) Expression -> Expression . AMPCAR Expression

    RPAREN          shift and go to state 248
    OROR            shift and go to state 167
    AMPAMP          shift and go to state 182
    EQEQ            shift and go to state 173
    NOTEQ           shift and go to state 179
    LESS            shift and go to state 172
    GREAT           shift and go to state 169
    LEQ             shift and go to state 185
    GEQ             shift and go to state 176
    PLUS            shift and go to state 180
    MINUS           shift and go to state 184
    OR              shift and go to state 177
    CARET           shift and go to state 168
    TIMES           shift and go to state 183
    DIVIDE          shift and go to state 170
    MOD             shift and go to state 181
    AMPERS          shift and go to state 175
    LL              shift and go to state 174
    GG              shift and go to state 178
    AMPCAR          shift and go to state 171


state 209

    (13) ArrayType -> LBRACK ArrayLength RBRACK ElementType .

    LPAREN          reduce using rule 13 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    SEMICOL         reduce using rule 13 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    EQUAL           reduce using rule 13 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    STRING          reduce using rule 13 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    RPAREN          reduce using rule 13 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    LBRACE          reduce using rule 13 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    COMMA           reduce using rule 13 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)


state 210

    (24) PointerType -> TIMES . BaseType
    (141) UnaryOp -> TIMES .
    (25) BaseType -> . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . TIMES BaseType
    (26) FunctionType -> . FUNC Signature

    PLUS            reduce using rule 141 (UnaryOp -> TIMES .)
    MINUS           reduce using rule 141 (UnaryOp -> TIMES .)
    TIMES           reduce using rule 141 (UnaryOp -> TIMES .)
    AMPERS          reduce using rule 141 (UnaryOp -> TIMES .)
    NOT             reduce using rule 141 (UnaryOp -> TIMES .)
    LPAREN          reduce using rule 141 (UnaryOp -> TIMES .)
    IDENTIFIER      reduce using rule 141 (UnaryOp -> TIMES .)
    TYPEX           reduce using rule 141 (UnaryOp -> TIMES .)
    TTYPE           reduce using rule 141 (UnaryOp -> TIMES .)
    INTEGER         reduce using rule 141 (UnaryOp -> TIMES .)
    FLOAT           reduce using rule 141 (UnaryOp -> TIMES .)
    IMAGINARY       reduce using rule 141 (UnaryOp -> TIMES .)
    RUNE            reduce using rule 141 (UnaryOp -> TIMES .)
    STRING          reduce using rule 141 (UnaryOp -> TIMES .)
    LBRACK          reduce using rule 141 (UnaryOp -> TIMES .)
    STRUCT          reduce using rule 141 (UnaryOp -> TIMES .)
    FUNC            reduce using rule 141 (UnaryOp -> TIMES .)

  ! LPAREN          [ shift and go to state 62 ]
  ! TYPEX           [ shift and go to state 58 ]
  ! TTYPE           [ shift and go to state 63 ]
  ! LBRACK          [ shift and go to state 66 ]
  ! STRUCT          [ shift and go to state 65 ]
  ! TIMES           [ shift and go to state 61 ]
  ! FUNC            [ shift and go to state 53 ]

    StructType                     shift and go to state 59
    BaseType                       shift and go to state 90
    Type                           shift and go to state 89
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 57
    PointerType                    shift and go to state 68
    FunctionType                   shift and go to state 69
    TypeLit                        shift and go to state 56

state 211

    (86) Operand -> LPAREN Expression RPAREN .

    DOT             reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    LBRACK          reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    LPAREN          reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    OROR            reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    AMPAMP          reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    EQEQ            reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    NOTEQ           reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    LESS            reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    GREAT           reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    LEQ             reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    GEQ             reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    PLUS            reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    MINUS           reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    OR              reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    CARET           reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    TIMES           reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    DIVIDE          reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    MOD             reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    AMPERS          reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    LL              reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    GG              reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    AMPCAR          reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    COMMA           reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    SEMICOL         reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    LBRACE          reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    PLUSPLUS        reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    MINUSMIN        reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    PLUSEQ          reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    MINUSEQ         reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    TIMESEQ         reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    DIVIDEEQ        reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    MODEQ           reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    AMPEQ           reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    OREQ            reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    CAREQ           reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    LLEQ            reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    GGEQ            reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    EQUAL           reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    RBRACK          reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    RPAREN          reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    COLON           reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)


state 212

    (116) Expression -> Expression OROR Expression .
    (116) Expression -> Expression . OROR Expression
    (117) Expression -> Expression . AMPAMP Expression
    (118) Expression -> Expression . EQEQ Expression
    (119) Expression -> Expression . NOTEQ Expression
    (120) Expression -> Expression . LESS Expression
    (121) Expression -> Expression . GREAT Expression
    (122) Expression -> Expression . LEQ Expression
    (123) Expression -> Expression . GEQ Expression
    (124) Expression -> Expression . PLUS Expression
    (125) Expression -> Expression . MINUS Expression
    (126) Expression -> Expression . OR Expression
    (127) Expression -> Expression . CARET Expression
    (128) Expression -> Expression . TIMES Expression
    (129) Expression -> Expression . DIVIDE Expression
    (130) Expression -> Expression . MOD Expression
    (131) Expression -> Expression . AMPERS Expression
    (132) Expression -> Expression . LL Expression
    (133) Expression -> Expression . GG Expression
    (134) Expression -> Expression . AMPCAR Expression

    OROR            reduce using rule 116 (Expression -> Expression OROR Expression .)
    RBRACK          reduce using rule 116 (Expression -> Expression OROR Expression .)
    COMMA           reduce using rule 116 (Expression -> Expression OROR Expression .)
    SEMICOL         reduce using rule 116 (Expression -> Expression OROR Expression .)
    RPAREN          reduce using rule 116 (Expression -> Expression OROR Expression .)
    COLON           reduce using rule 116 (Expression -> Expression OROR Expression .)
    PLUSEQ          reduce using rule 116 (Expression -> Expression OROR Expression .)
    MINUSEQ         reduce using rule 116 (Expression -> Expression OROR Expression .)
    TIMESEQ         reduce using rule 116 (Expression -> Expression OROR Expression .)
    DIVIDEEQ        reduce using rule 116 (Expression -> Expression OROR Expression .)
    MODEQ           reduce using rule 116 (Expression -> Expression OROR Expression .)
    AMPEQ           reduce using rule 116 (Expression -> Expression OROR Expression .)
    OREQ            reduce using rule 116 (Expression -> Expression OROR Expression .)
    CAREQ           reduce using rule 116 (Expression -> Expression OROR Expression .)
    LLEQ            reduce using rule 116 (Expression -> Expression OROR Expression .)
    GGEQ            reduce using rule 116 (Expression -> Expression OROR Expression .)
    EQUAL           reduce using rule 116 (Expression -> Expression OROR Expression .)
    LBRACE          reduce using rule 116 (Expression -> Expression OROR Expression .)
    AMPAMP          shift and go to state 182
    EQEQ            shift and go to state 173
    NOTEQ           shift and go to state 179
    LESS            shift and go to state 172
    GREAT           shift and go to state 169
    LEQ             shift and go to state 185
    GEQ             shift and go to state 176
    PLUS            shift and go to state 180
    MINUS           shift and go to state 184
    OR              shift and go to state 177
    CARET           shift and go to state 168
    TIMES           shift and go to state 183
    DIVIDE          shift and go to state 170
    MOD             shift and go to state 181
    AMPERS          shift and go to state 175
    LL              shift and go to state 174
    GG              shift and go to state 178
    AMPCAR          shift and go to state 171

  ! AMPAMP          [ reduce using rule 116 (Expression -> Expression OROR Expression .) ]
  ! EQEQ            [ reduce using rule 116 (Expression -> Expression OROR Expression .) ]
  ! NOTEQ           [ reduce using rule 116 (Expression -> Expression OROR Expression .) ]
  ! LESS            [ reduce using rule 116 (Expression -> Expression OROR Expression .) ]
  ! GREAT           [ reduce using rule 116 (Expression -> Expression OROR Expression .) ]
  ! LEQ             [ reduce using rule 116 (Expression -> Expression OROR Expression .) ]
  ! GEQ             [ reduce using rule 116 (Expression -> Expression OROR Expression .) ]
  ! PLUS            [ reduce using rule 116 (Expression -> Expression OROR Expression .) ]
  ! MINUS           [ reduce using rule 116 (Expression -> Expression OROR Expression .) ]
  ! OR              [ reduce using rule 116 (Expression -> Expression OROR Expression .) ]
  ! CARET           [ reduce using rule 116 (Expression -> Expression OROR Expression .) ]
  ! TIMES           [ reduce using rule 116 (Expression -> Expression OROR Expression .) ]
  ! DIVIDE          [ reduce using rule 116 (Expression -> Expression OROR Expression .) ]
  ! MOD             [ reduce using rule 116 (Expression -> Expression OROR Expression .) ]
  ! AMPERS          [ reduce using rule 116 (Expression -> Expression OROR Expression .) ]
  ! LL              [ reduce using rule 116 (Expression -> Expression OROR Expression .) ]
  ! GG              [ reduce using rule 116 (Expression -> Expression OROR Expression .) ]
  ! AMPCAR          [ reduce using rule 116 (Expression -> Expression OROR Expression .) ]
  ! OROR            [ shift and go to state 167 ]


state 213

    (127) Expression -> Expression CARET Expression .
    (116) Expression -> Expression . OROR Expression
    (117) Expression -> Expression . AMPAMP Expression
    (118) Expression -> Expression . EQEQ Expression
    (119) Expression -> Expression . NOTEQ Expression
    (120) Expression -> Expression . LESS Expression
    (121) Expression -> Expression . GREAT Expression
    (122) Expression -> Expression . LEQ Expression
    (123) Expression -> Expression . GEQ Expression
    (124) Expression -> Expression . PLUS Expression
    (125) Expression -> Expression . MINUS Expression
    (126) Expression -> Expression . OR Expression
    (127) Expression -> Expression . CARET Expression
    (128) Expression -> Expression . TIMES Expression
    (129) Expression -> Expression . DIVIDE Expression
    (130) Expression -> Expression . MOD Expression
    (131) Expression -> Expression . AMPERS Expression
    (132) Expression -> Expression . LL Expression
    (133) Expression -> Expression . GG Expression
    (134) Expression -> Expression . AMPCAR Expression

    OROR            reduce using rule 127 (Expression -> Expression CARET Expression .)
    AMPAMP          reduce using rule 127 (Expression -> Expression CARET Expression .)
    EQEQ            reduce using rule 127 (Expression -> Expression CARET Expression .)
    NOTEQ           reduce using rule 127 (Expression -> Expression CARET Expression .)
    LESS            reduce using rule 127 (Expression -> Expression CARET Expression .)
    GREAT           reduce using rule 127 (Expression -> Expression CARET Expression .)
    LEQ             reduce using rule 127 (Expression -> Expression CARET Expression .)
    GEQ             reduce using rule 127 (Expression -> Expression CARET Expression .)
    PLUS            reduce using rule 127 (Expression -> Expression CARET Expression .)
    MINUS           reduce using rule 127 (Expression -> Expression CARET Expression .)
    OR              reduce using rule 127 (Expression -> Expression CARET Expression .)
    CARET           reduce using rule 127 (Expression -> Expression CARET Expression .)
    RBRACK          reduce using rule 127 (Expression -> Expression CARET Expression .)
    COMMA           reduce using rule 127 (Expression -> Expression CARET Expression .)
    SEMICOL         reduce using rule 127 (Expression -> Expression CARET Expression .)
    RPAREN          reduce using rule 127 (Expression -> Expression CARET Expression .)
    COLON           reduce using rule 127 (Expression -> Expression CARET Expression .)
    PLUSEQ          reduce using rule 127 (Expression -> Expression CARET Expression .)
    MINUSEQ         reduce using rule 127 (Expression -> Expression CARET Expression .)
    TIMESEQ         reduce using rule 127 (Expression -> Expression CARET Expression .)
    DIVIDEEQ        reduce using rule 127 (Expression -> Expression CARET Expression .)
    MODEQ           reduce using rule 127 (Expression -> Expression CARET Expression .)
    AMPEQ           reduce using rule 127 (Expression -> Expression CARET Expression .)
    OREQ            reduce using rule 127 (Expression -> Expression CARET Expression .)
    CAREQ           reduce using rule 127 (Expression -> Expression CARET Expression .)
    LLEQ            reduce using rule 127 (Expression -> Expression CARET Expression .)
    GGEQ            reduce using rule 127 (Expression -> Expression CARET Expression .)
    EQUAL           reduce using rule 127 (Expression -> Expression CARET Expression .)
    LBRACE          reduce using rule 127 (Expression -> Expression CARET Expression .)
    TIMES           shift and go to state 183
    DIVIDE          shift and go to state 170
    MOD             shift and go to state 181
    AMPERS          shift and go to state 175
    LL              shift and go to state 174
    GG              shift and go to state 178
    AMPCAR          shift and go to state 171

  ! TIMES           [ reduce using rule 127 (Expression -> Expression CARET Expression .) ]
  ! DIVIDE          [ reduce using rule 127 (Expression -> Expression CARET Expression .) ]
  ! MOD             [ reduce using rule 127 (Expression -> Expression CARET Expression .) ]
  ! AMPERS          [ reduce using rule 127 (Expression -> Expression CARET Expression .) ]
  ! LL              [ reduce using rule 127 (Expression -> Expression CARET Expression .) ]
  ! GG              [ reduce using rule 127 (Expression -> Expression CARET Expression .) ]
  ! AMPCAR          [ reduce using rule 127 (Expression -> Expression CARET Expression .) ]
  ! OROR            [ shift and go to state 167 ]
  ! AMPAMP          [ shift and go to state 182 ]
  ! EQEQ            [ shift and go to state 173 ]
  ! NOTEQ           [ shift and go to state 179 ]
  ! LESS            [ shift and go to state 172 ]
  ! GREAT           [ shift and go to state 169 ]
  ! LEQ             [ shift and go to state 185 ]
  ! GEQ             [ shift and go to state 176 ]
  ! PLUS            [ shift and go to state 180 ]
  ! MINUS           [ shift and go to state 184 ]
  ! OR              [ shift and go to state 177 ]
  ! CARET           [ shift and go to state 168 ]


state 214

    (121) Expression -> Expression GREAT Expression .
    (116) Expression -> Expression . OROR Expression
    (117) Expression -> Expression . AMPAMP Expression
    (118) Expression -> Expression . EQEQ Expression
    (119) Expression -> Expression . NOTEQ Expression
    (120) Expression -> Expression . LESS Expression
    (121) Expression -> Expression . GREAT Expression
    (122) Expression -> Expression . LEQ Expression
    (123) Expression -> Expression . GEQ Expression
    (124) Expression -> Expression . PLUS Expression
    (125) Expression -> Expression . MINUS Expression
    (126) Expression -> Expression . OR Expression
    (127) Expression -> Expression . CARET Expression
    (128) Expression -> Expression . TIMES Expression
    (129) Expression -> Expression . DIVIDE Expression
    (130) Expression -> Expression . MOD Expression
    (131) Expression -> Expression . AMPERS Expression
    (132) Expression -> Expression . LL Expression
    (133) Expression -> Expression . GG Expression
    (134) Expression -> Expression . AMPCAR Expression

    OROR            reduce using rule 121 (Expression -> Expression GREAT Expression .)
    AMPAMP          reduce using rule 121 (Expression -> Expression GREAT Expression .)
    EQEQ            reduce using rule 121 (Expression -> Expression GREAT Expression .)
    NOTEQ           reduce using rule 121 (Expression -> Expression GREAT Expression .)
    LESS            reduce using rule 121 (Expression -> Expression GREAT Expression .)
    GREAT           reduce using rule 121 (Expression -> Expression GREAT Expression .)
    LEQ             reduce using rule 121 (Expression -> Expression GREAT Expression .)
    GEQ             reduce using rule 121 (Expression -> Expression GREAT Expression .)
    RBRACK          reduce using rule 121 (Expression -> Expression GREAT Expression .)
    COMMA           reduce using rule 121 (Expression -> Expression GREAT Expression .)
    SEMICOL         reduce using rule 121 (Expression -> Expression GREAT Expression .)
    RPAREN          reduce using rule 121 (Expression -> Expression GREAT Expression .)
    COLON           reduce using rule 121 (Expression -> Expression GREAT Expression .)
    PLUSEQ          reduce using rule 121 (Expression -> Expression GREAT Expression .)
    MINUSEQ         reduce using rule 121 (Expression -> Expression GREAT Expression .)
    TIMESEQ         reduce using rule 121 (Expression -> Expression GREAT Expression .)
    DIVIDEEQ        reduce using rule 121 (Expression -> Expression GREAT Expression .)
    MODEQ           reduce using rule 121 (Expression -> Expression GREAT Expression .)
    AMPEQ           reduce using rule 121 (Expression -> Expression GREAT Expression .)
    OREQ            reduce using rule 121 (Expression -> Expression GREAT Expression .)
    CAREQ           reduce using rule 121 (Expression -> Expression GREAT Expression .)
    LLEQ            reduce using rule 121 (Expression -> Expression GREAT Expression .)
    GGEQ            reduce using rule 121 (Expression -> Expression GREAT Expression .)
    EQUAL           reduce using rule 121 (Expression -> Expression GREAT Expression .)
    LBRACE          reduce using rule 121 (Expression -> Expression GREAT Expression .)
    PLUS            shift and go to state 180
    MINUS           shift and go to state 184
    OR              shift and go to state 177
    CARET           shift and go to state 168
    TIMES           shift and go to state 183
    DIVIDE          shift and go to state 170
    MOD             shift and go to state 181
    AMPERS          shift and go to state 175
    LL              shift and go to state 174
    GG              shift and go to state 178
    AMPCAR          shift and go to state 171

  ! PLUS            [ reduce using rule 121 (Expression -> Expression GREAT Expression .) ]
  ! MINUS           [ reduce using rule 121 (Expression -> Expression GREAT Expression .) ]
  ! OR              [ reduce using rule 121 (Expression -> Expression GREAT Expression .) ]
  ! CARET           [ reduce using rule 121 (Expression -> Expression GREAT Expression .) ]
  ! TIMES           [ reduce using rule 121 (Expression -> Expression GREAT Expression .) ]
  ! DIVIDE          [ reduce using rule 121 (Expression -> Expression GREAT Expression .) ]
  ! MOD             [ reduce using rule 121 (Expression -> Expression GREAT Expression .) ]
  ! AMPERS          [ reduce using rule 121 (Expression -> Expression GREAT Expression .) ]
  ! LL              [ reduce using rule 121 (Expression -> Expression GREAT Expression .) ]
  ! GG              [ reduce using rule 121 (Expression -> Expression GREAT Expression .) ]
  ! AMPCAR          [ reduce using rule 121 (Expression -> Expression GREAT Expression .) ]
  ! OROR            [ shift and go to state 167 ]
  ! AMPAMP          [ shift and go to state 182 ]
  ! EQEQ            [ shift and go to state 173 ]
  ! NOTEQ           [ shift and go to state 179 ]
  ! LESS            [ shift and go to state 172 ]
  ! GREAT           [ shift and go to state 169 ]
  ! LEQ             [ shift and go to state 185 ]
  ! GEQ             [ shift and go to state 176 ]


state 215

    (129) Expression -> Expression DIVIDE Expression .
    (116) Expression -> Expression . OROR Expression
    (117) Expression -> Expression . AMPAMP Expression
    (118) Expression -> Expression . EQEQ Expression
    (119) Expression -> Expression . NOTEQ Expression
    (120) Expression -> Expression . LESS Expression
    (121) Expression -> Expression . GREAT Expression
    (122) Expression -> Expression . LEQ Expression
    (123) Expression -> Expression . GEQ Expression
    (124) Expression -> Expression . PLUS Expression
    (125) Expression -> Expression . MINUS Expression
    (126) Expression -> Expression . OR Expression
    (127) Expression -> Expression . CARET Expression
    (128) Expression -> Expression . TIMES Expression
    (129) Expression -> Expression . DIVIDE Expression
    (130) Expression -> Expression . MOD Expression
    (131) Expression -> Expression . AMPERS Expression
    (132) Expression -> Expression . LL Expression
    (133) Expression -> Expression . GG Expression
    (134) Expression -> Expression . AMPCAR Expression

    OROR            reduce using rule 129 (Expression -> Expression DIVIDE Expression .)
    AMPAMP          reduce using rule 129 (Expression -> Expression DIVIDE Expression .)
    EQEQ            reduce using rule 129 (Expression -> Expression DIVIDE Expression .)
    NOTEQ           reduce using rule 129 (Expression -> Expression DIVIDE Expression .)
    LESS            reduce using rule 129 (Expression -> Expression DIVIDE Expression .)
    GREAT           reduce using rule 129 (Expression -> Expression DIVIDE Expression .)
    LEQ             reduce using rule 129 (Expression -> Expression DIVIDE Expression .)
    GEQ             reduce using rule 129 (Expression -> Expression DIVIDE Expression .)
    PLUS            reduce using rule 129 (Expression -> Expression DIVIDE Expression .)
    MINUS           reduce using rule 129 (Expression -> Expression DIVIDE Expression .)
    OR              reduce using rule 129 (Expression -> Expression DIVIDE Expression .)
    CARET           reduce using rule 129 (Expression -> Expression DIVIDE Expression .)
    TIMES           reduce using rule 129 (Expression -> Expression DIVIDE Expression .)
    DIVIDE          reduce using rule 129 (Expression -> Expression DIVIDE Expression .)
    MOD             reduce using rule 129 (Expression -> Expression DIVIDE Expression .)
    AMPERS          reduce using rule 129 (Expression -> Expression DIVIDE Expression .)
    LL              reduce using rule 129 (Expression -> Expression DIVIDE Expression .)
    GG              reduce using rule 129 (Expression -> Expression DIVIDE Expression .)
    AMPCAR          reduce using rule 129 (Expression -> Expression DIVIDE Expression .)
    RBRACK          reduce using rule 129 (Expression -> Expression DIVIDE Expression .)
    COMMA           reduce using rule 129 (Expression -> Expression DIVIDE Expression .)
    SEMICOL         reduce using rule 129 (Expression -> Expression DIVIDE Expression .)
    RPAREN          reduce using rule 129 (Expression -> Expression DIVIDE Expression .)
    COLON           reduce using rule 129 (Expression -> Expression DIVIDE Expression .)
    PLUSEQ          reduce using rule 129 (Expression -> Expression DIVIDE Expression .)
    MINUSEQ         reduce using rule 129 (Expression -> Expression DIVIDE Expression .)
    TIMESEQ         reduce using rule 129 (Expression -> Expression DIVIDE Expression .)
    DIVIDEEQ        reduce using rule 129 (Expression -> Expression DIVIDE Expression .)
    MODEQ           reduce using rule 129 (Expression -> Expression DIVIDE Expression .)
    AMPEQ           reduce using rule 129 (Expression -> Expression DIVIDE Expression .)
    OREQ            reduce using rule 129 (Expression -> Expression DIVIDE Expression .)
    CAREQ           reduce using rule 129 (Expression -> Expression DIVIDE Expression .)
    LLEQ            reduce using rule 129 (Expression -> Expression DIVIDE Expression .)
    GGEQ            reduce using rule 129 (Expression -> Expression DIVIDE Expression .)
    EQUAL           reduce using rule 129 (Expression -> Expression DIVIDE Expression .)
    LBRACE          reduce using rule 129 (Expression -> Expression DIVIDE Expression .)

  ! OROR            [ shift and go to state 167 ]
  ! AMPAMP          [ shift and go to state 182 ]
  ! EQEQ            [ shift and go to state 173 ]
  ! NOTEQ           [ shift and go to state 179 ]
  ! LESS            [ shift and go to state 172 ]
  ! GREAT           [ shift and go to state 169 ]
  ! LEQ             [ shift and go to state 185 ]
  ! GEQ             [ shift and go to state 176 ]
  ! PLUS            [ shift and go to state 180 ]
  ! MINUS           [ shift and go to state 184 ]
  ! OR              [ shift and go to state 177 ]
  ! CARET           [ shift and go to state 168 ]
  ! TIMES           [ shift and go to state 183 ]
  ! DIVIDE          [ shift and go to state 170 ]
  ! MOD             [ shift and go to state 181 ]
  ! AMPERS          [ shift and go to state 175 ]
  ! LL              [ shift and go to state 174 ]
  ! GG              [ shift and go to state 178 ]
  ! AMPCAR          [ shift and go to state 171 ]


state 216

    (134) Expression -> Expression AMPCAR Expression .
    (116) Expression -> Expression . OROR Expression
    (117) Expression -> Expression . AMPAMP Expression
    (118) Expression -> Expression . EQEQ Expression
    (119) Expression -> Expression . NOTEQ Expression
    (120) Expression -> Expression . LESS Expression
    (121) Expression -> Expression . GREAT Expression
    (122) Expression -> Expression . LEQ Expression
    (123) Expression -> Expression . GEQ Expression
    (124) Expression -> Expression . PLUS Expression
    (125) Expression -> Expression . MINUS Expression
    (126) Expression -> Expression . OR Expression
    (127) Expression -> Expression . CARET Expression
    (128) Expression -> Expression . TIMES Expression
    (129) Expression -> Expression . DIVIDE Expression
    (130) Expression -> Expression . MOD Expression
    (131) Expression -> Expression . AMPERS Expression
    (132) Expression -> Expression . LL Expression
    (133) Expression -> Expression . GG Expression
    (134) Expression -> Expression . AMPCAR Expression

    OROR            reduce using rule 134 (Expression -> Expression AMPCAR Expression .)
    AMPAMP          reduce using rule 134 (Expression -> Expression AMPCAR Expression .)
    EQEQ            reduce using rule 134 (Expression -> Expression AMPCAR Expression .)
    NOTEQ           reduce using rule 134 (Expression -> Expression AMPCAR Expression .)
    LESS            reduce using rule 134 (Expression -> Expression AMPCAR Expression .)
    GREAT           reduce using rule 134 (Expression -> Expression AMPCAR Expression .)
    LEQ             reduce using rule 134 (Expression -> Expression AMPCAR Expression .)
    GEQ             reduce using rule 134 (Expression -> Expression AMPCAR Expression .)
    PLUS            reduce using rule 134 (Expression -> Expression AMPCAR Expression .)
    MINUS           reduce using rule 134 (Expression -> Expression AMPCAR Expression .)
    OR              reduce using rule 134 (Expression -> Expression AMPCAR Expression .)
    CARET           reduce using rule 134 (Expression -> Expression AMPCAR Expression .)
    TIMES           reduce using rule 134 (Expression -> Expression AMPCAR Expression .)
    DIVIDE          reduce using rule 134 (Expression -> Expression AMPCAR Expression .)
    MOD             reduce using rule 134 (Expression -> Expression AMPCAR Expression .)
    AMPERS          reduce using rule 134 (Expression -> Expression AMPCAR Expression .)
    LL              reduce using rule 134 (Expression -> Expression AMPCAR Expression .)
    GG              reduce using rule 134 (Expression -> Expression AMPCAR Expression .)
    AMPCAR          reduce using rule 134 (Expression -> Expression AMPCAR Expression .)
    RBRACK          reduce using rule 134 (Expression -> Expression AMPCAR Expression .)
    COMMA           reduce using rule 134 (Expression -> Expression AMPCAR Expression .)
    SEMICOL         reduce using rule 134 (Expression -> Expression AMPCAR Expression .)
    RPAREN          reduce using rule 134 (Expression -> Expression AMPCAR Expression .)
    COLON           reduce using rule 134 (Expression -> Expression AMPCAR Expression .)
    PLUSEQ          reduce using rule 134 (Expression -> Expression AMPCAR Expression .)
    MINUSEQ         reduce using rule 134 (Expression -> Expression AMPCAR Expression .)
    TIMESEQ         reduce using rule 134 (Expression -> Expression AMPCAR Expression .)
    DIVIDEEQ        reduce using rule 134 (Expression -> Expression AMPCAR Expression .)
    MODEQ           reduce using rule 134 (Expression -> Expression AMPCAR Expression .)
    AMPEQ           reduce using rule 134 (Expression -> Expression AMPCAR Expression .)
    OREQ            reduce using rule 134 (Expression -> Expression AMPCAR Expression .)
    CAREQ           reduce using rule 134 (Expression -> Expression AMPCAR Expression .)
    LLEQ            reduce using rule 134 (Expression -> Expression AMPCAR Expression .)
    GGEQ            reduce using rule 134 (Expression -> Expression AMPCAR Expression .)
    EQUAL           reduce using rule 134 (Expression -> Expression AMPCAR Expression .)
    LBRACE          reduce using rule 134 (Expression -> Expression AMPCAR Expression .)

  ! OROR            [ shift and go to state 167 ]
  ! AMPAMP          [ shift and go to state 182 ]
  ! EQEQ            [ shift and go to state 173 ]
  ! NOTEQ           [ shift and go to state 179 ]
  ! LESS            [ shift and go to state 172 ]
  ! GREAT           [ shift and go to state 169 ]
  ! LEQ             [ shift and go to state 185 ]
  ! GEQ             [ shift and go to state 176 ]
  ! PLUS            [ shift and go to state 180 ]
  ! MINUS           [ shift and go to state 184 ]
  ! OR              [ shift and go to state 177 ]
  ! CARET           [ shift and go to state 168 ]
  ! TIMES           [ shift and go to state 183 ]
  ! DIVIDE          [ shift and go to state 170 ]
  ! MOD             [ shift and go to state 181 ]
  ! AMPERS          [ shift and go to state 175 ]
  ! LL              [ shift and go to state 174 ]
  ! GG              [ shift and go to state 178 ]
  ! AMPCAR          [ shift and go to state 171 ]


state 217

    (120) Expression -> Expression LESS Expression .
    (116) Expression -> Expression . OROR Expression
    (117) Expression -> Expression . AMPAMP Expression
    (118) Expression -> Expression . EQEQ Expression
    (119) Expression -> Expression . NOTEQ Expression
    (120) Expression -> Expression . LESS Expression
    (121) Expression -> Expression . GREAT Expression
    (122) Expression -> Expression . LEQ Expression
    (123) Expression -> Expression . GEQ Expression
    (124) Expression -> Expression . PLUS Expression
    (125) Expression -> Expression . MINUS Expression
    (126) Expression -> Expression . OR Expression
    (127) Expression -> Expression . CARET Expression
    (128) Expression -> Expression . TIMES Expression
    (129) Expression -> Expression . DIVIDE Expression
    (130) Expression -> Expression . MOD Expression
    (131) Expression -> Expression . AMPERS Expression
    (132) Expression -> Expression . LL Expression
    (133) Expression -> Expression . GG Expression
    (134) Expression -> Expression . AMPCAR Expression

    OROR            reduce using rule 120 (Expression -> Expression LESS Expression .)
    AMPAMP          reduce using rule 120 (Expression -> Expression LESS Expression .)
    EQEQ            reduce using rule 120 (Expression -> Expression LESS Expression .)
    NOTEQ           reduce using rule 120 (Expression -> Expression LESS Expression .)
    LESS            reduce using rule 120 (Expression -> Expression LESS Expression .)
    GREAT           reduce using rule 120 (Expression -> Expression LESS Expression .)
    LEQ             reduce using rule 120 (Expression -> Expression LESS Expression .)
    GEQ             reduce using rule 120 (Expression -> Expression LESS Expression .)
    RBRACK          reduce using rule 120 (Expression -> Expression LESS Expression .)
    COMMA           reduce using rule 120 (Expression -> Expression LESS Expression .)
    SEMICOL         reduce using rule 120 (Expression -> Expression LESS Expression .)
    RPAREN          reduce using rule 120 (Expression -> Expression LESS Expression .)
    COLON           reduce using rule 120 (Expression -> Expression LESS Expression .)
    PLUSEQ          reduce using rule 120 (Expression -> Expression LESS Expression .)
    MINUSEQ         reduce using rule 120 (Expression -> Expression LESS Expression .)
    TIMESEQ         reduce using rule 120 (Expression -> Expression LESS Expression .)
    DIVIDEEQ        reduce using rule 120 (Expression -> Expression LESS Expression .)
    MODEQ           reduce using rule 120 (Expression -> Expression LESS Expression .)
    AMPEQ           reduce using rule 120 (Expression -> Expression LESS Expression .)
    OREQ            reduce using rule 120 (Expression -> Expression LESS Expression .)
    CAREQ           reduce using rule 120 (Expression -> Expression LESS Expression .)
    LLEQ            reduce using rule 120 (Expression -> Expression LESS Expression .)
    GGEQ            reduce using rule 120 (Expression -> Expression LESS Expression .)
    EQUAL           reduce using rule 120 (Expression -> Expression LESS Expression .)
    LBRACE          reduce using rule 120 (Expression -> Expression LESS Expression .)
    PLUS            shift and go to state 180
    MINUS           shift and go to state 184
    OR              shift and go to state 177
    CARET           shift and go to state 168
    TIMES           shift and go to state 183
    DIVIDE          shift and go to state 170
    MOD             shift and go to state 181
    AMPERS          shift and go to state 175
    LL              shift and go to state 174
    GG              shift and go to state 178
    AMPCAR          shift and go to state 171

  ! PLUS            [ reduce using rule 120 (Expression -> Expression LESS Expression .) ]
  ! MINUS           [ reduce using rule 120 (Expression -> Expression LESS Expression .) ]
  ! OR              [ reduce using rule 120 (Expression -> Expression LESS Expression .) ]
  ! CARET           [ reduce using rule 120 (Expression -> Expression LESS Expression .) ]
  ! TIMES           [ reduce using rule 120 (Expression -> Expression LESS Expression .) ]
  ! DIVIDE          [ reduce using rule 120 (Expression -> Expression LESS Expression .) ]
  ! MOD             [ reduce using rule 120 (Expression -> Expression LESS Expression .) ]
  ! AMPERS          [ reduce using rule 120 (Expression -> Expression LESS Expression .) ]
  ! LL              [ reduce using rule 120 (Expression -> Expression LESS Expression .) ]
  ! GG              [ reduce using rule 120 (Expression -> Expression LESS Expression .) ]
  ! AMPCAR          [ reduce using rule 120 (Expression -> Expression LESS Expression .) ]
  ! OROR            [ shift and go to state 167 ]
  ! AMPAMP          [ shift and go to state 182 ]
  ! EQEQ            [ shift and go to state 173 ]
  ! NOTEQ           [ shift and go to state 179 ]
  ! LESS            [ shift and go to state 172 ]
  ! GREAT           [ shift and go to state 169 ]
  ! LEQ             [ shift and go to state 185 ]
  ! GEQ             [ shift and go to state 176 ]


state 218

    (118) Expression -> Expression EQEQ Expression .
    (116) Expression -> Expression . OROR Expression
    (117) Expression -> Expression . AMPAMP Expression
    (118) Expression -> Expression . EQEQ Expression
    (119) Expression -> Expression . NOTEQ Expression
    (120) Expression -> Expression . LESS Expression
    (121) Expression -> Expression . GREAT Expression
    (122) Expression -> Expression . LEQ Expression
    (123) Expression -> Expression . GEQ Expression
    (124) Expression -> Expression . PLUS Expression
    (125) Expression -> Expression . MINUS Expression
    (126) Expression -> Expression . OR Expression
    (127) Expression -> Expression . CARET Expression
    (128) Expression -> Expression . TIMES Expression
    (129) Expression -> Expression . DIVIDE Expression
    (130) Expression -> Expression . MOD Expression
    (131) Expression -> Expression . AMPERS Expression
    (132) Expression -> Expression . LL Expression
    (133) Expression -> Expression . GG Expression
    (134) Expression -> Expression . AMPCAR Expression

    OROR            reduce using rule 118 (Expression -> Expression EQEQ Expression .)
    AMPAMP          reduce using rule 118 (Expression -> Expression EQEQ Expression .)
    EQEQ            reduce using rule 118 (Expression -> Expression EQEQ Expression .)
    NOTEQ           reduce using rule 118 (Expression -> Expression EQEQ Expression .)
    LESS            reduce using rule 118 (Expression -> Expression EQEQ Expression .)
    GREAT           reduce using rule 118 (Expression -> Expression EQEQ Expression .)
    LEQ             reduce using rule 118 (Expression -> Expression EQEQ Expression .)
    GEQ             reduce using rule 118 (Expression -> Expression EQEQ Expression .)
    RBRACK          reduce using rule 118 (Expression -> Expression EQEQ Expression .)
    COMMA           reduce using rule 118 (Expression -> Expression EQEQ Expression .)
    SEMICOL         reduce using rule 118 (Expression -> Expression EQEQ Expression .)
    RPAREN          reduce using rule 118 (Expression -> Expression EQEQ Expression .)
    COLON           reduce using rule 118 (Expression -> Expression EQEQ Expression .)
    PLUSEQ          reduce using rule 118 (Expression -> Expression EQEQ Expression .)
    MINUSEQ         reduce using rule 118 (Expression -> Expression EQEQ Expression .)
    TIMESEQ         reduce using rule 118 (Expression -> Expression EQEQ Expression .)
    DIVIDEEQ        reduce using rule 118 (Expression -> Expression EQEQ Expression .)
    MODEQ           reduce using rule 118 (Expression -> Expression EQEQ Expression .)
    AMPEQ           reduce using rule 118 (Expression -> Expression EQEQ Expression .)
    OREQ            reduce using rule 118 (Expression -> Expression EQEQ Expression .)
    CAREQ           reduce using rule 118 (Expression -> Expression EQEQ Expression .)
    LLEQ            reduce using rule 118 (Expression -> Expression EQEQ Expression .)
    GGEQ            reduce using rule 118 (Expression -> Expression EQEQ Expression .)
    EQUAL           reduce using rule 118 (Expression -> Expression EQEQ Expression .)
    LBRACE          reduce using rule 118 (Expression -> Expression EQEQ Expression .)
    PLUS            shift and go to state 180
    MINUS           shift and go to state 184
    OR              shift and go to state 177
    CARET           shift and go to state 168
    TIMES           shift and go to state 183
    DIVIDE          shift and go to state 170
    MOD             shift and go to state 181
    AMPERS          shift and go to state 175
    LL              shift and go to state 174
    GG              shift and go to state 178
    AMPCAR          shift and go to state 171

  ! PLUS            [ reduce using rule 118 (Expression -> Expression EQEQ Expression .) ]
  ! MINUS           [ reduce using rule 118 (Expression -> Expression EQEQ Expression .) ]
  ! OR              [ reduce using rule 118 (Expression -> Expression EQEQ Expression .) ]
  ! CARET           [ reduce using rule 118 (Expression -> Expression EQEQ Expression .) ]
  ! TIMES           [ reduce using rule 118 (Expression -> Expression EQEQ Expression .) ]
  ! DIVIDE          [ reduce using rule 118 (Expression -> Expression EQEQ Expression .) ]
  ! MOD             [ reduce using rule 118 (Expression -> Expression EQEQ Expression .) ]
  ! AMPERS          [ reduce using rule 118 (Expression -> Expression EQEQ Expression .) ]
  ! LL              [ reduce using rule 118 (Expression -> Expression EQEQ Expression .) ]
  ! GG              [ reduce using rule 118 (Expression -> Expression EQEQ Expression .) ]
  ! AMPCAR          [ reduce using rule 118 (Expression -> Expression EQEQ Expression .) ]
  ! OROR            [ shift and go to state 167 ]
  ! AMPAMP          [ shift and go to state 182 ]
  ! EQEQ            [ shift and go to state 173 ]
  ! NOTEQ           [ shift and go to state 179 ]
  ! LESS            [ shift and go to state 172 ]
  ! GREAT           [ shift and go to state 169 ]
  ! LEQ             [ shift and go to state 185 ]
  ! GEQ             [ shift and go to state 176 ]


state 219

    (132) Expression -> Expression LL Expression .
    (116) Expression -> Expression . OROR Expression
    (117) Expression -> Expression . AMPAMP Expression
    (118) Expression -> Expression . EQEQ Expression
    (119) Expression -> Expression . NOTEQ Expression
    (120) Expression -> Expression . LESS Expression
    (121) Expression -> Expression . GREAT Expression
    (122) Expression -> Expression . LEQ Expression
    (123) Expression -> Expression . GEQ Expression
    (124) Expression -> Expression . PLUS Expression
    (125) Expression -> Expression . MINUS Expression
    (126) Expression -> Expression . OR Expression
    (127) Expression -> Expression . CARET Expression
    (128) Expression -> Expression . TIMES Expression
    (129) Expression -> Expression . DIVIDE Expression
    (130) Expression -> Expression . MOD Expression
    (131) Expression -> Expression . AMPERS Expression
    (132) Expression -> Expression . LL Expression
    (133) Expression -> Expression . GG Expression
    (134) Expression -> Expression . AMPCAR Expression

    OROR            reduce using rule 132 (Expression -> Expression LL Expression .)
    AMPAMP          reduce using rule 132 (Expression -> Expression LL Expression .)
    EQEQ            reduce using rule 132 (Expression -> Expression LL Expression .)
    NOTEQ           reduce using rule 132 (Expression -> Expression LL Expression .)
    LESS            reduce using rule 132 (Expression -> Expression LL Expression .)
    GREAT           reduce using rule 132 (Expression -> Expression LL Expression .)
    LEQ             reduce using rule 132 (Expression -> Expression LL Expression .)
    GEQ             reduce using rule 132 (Expression -> Expression LL Expression .)
    PLUS            reduce using rule 132 (Expression -> Expression LL Expression .)
    MINUS           reduce using rule 132 (Expression -> Expression LL Expression .)
    OR              reduce using rule 132 (Expression -> Expression LL Expression .)
    CARET           reduce using rule 132 (Expression -> Expression LL Expression .)
    TIMES           reduce using rule 132 (Expression -> Expression LL Expression .)
    DIVIDE          reduce using rule 132 (Expression -> Expression LL Expression .)
    MOD             reduce using rule 132 (Expression -> Expression LL Expression .)
    AMPERS          reduce using rule 132 (Expression -> Expression LL Expression .)
    LL              reduce using rule 132 (Expression -> Expression LL Expression .)
    GG              reduce using rule 132 (Expression -> Expression LL Expression .)
    AMPCAR          reduce using rule 132 (Expression -> Expression LL Expression .)
    RBRACK          reduce using rule 132 (Expression -> Expression LL Expression .)
    COMMA           reduce using rule 132 (Expression -> Expression LL Expression .)
    SEMICOL         reduce using rule 132 (Expression -> Expression LL Expression .)
    RPAREN          reduce using rule 132 (Expression -> Expression LL Expression .)
    COLON           reduce using rule 132 (Expression -> Expression LL Expression .)
    PLUSEQ          reduce using rule 132 (Expression -> Expression LL Expression .)
    MINUSEQ         reduce using rule 132 (Expression -> Expression LL Expression .)
    TIMESEQ         reduce using rule 132 (Expression -> Expression LL Expression .)
    DIVIDEEQ        reduce using rule 132 (Expression -> Expression LL Expression .)
    MODEQ           reduce using rule 132 (Expression -> Expression LL Expression .)
    AMPEQ           reduce using rule 132 (Expression -> Expression LL Expression .)
    OREQ            reduce using rule 132 (Expression -> Expression LL Expression .)
    CAREQ           reduce using rule 132 (Expression -> Expression LL Expression .)
    LLEQ            reduce using rule 132 (Expression -> Expression LL Expression .)
    GGEQ            reduce using rule 132 (Expression -> Expression LL Expression .)
    EQUAL           reduce using rule 132 (Expression -> Expression LL Expression .)
    LBRACE          reduce using rule 132 (Expression -> Expression LL Expression .)

  ! OROR            [ shift and go to state 167 ]
  ! AMPAMP          [ shift and go to state 182 ]
  ! EQEQ            [ shift and go to state 173 ]
  ! NOTEQ           [ shift and go to state 179 ]
  ! LESS            [ shift and go to state 172 ]
  ! GREAT           [ shift and go to state 169 ]
  ! LEQ             [ shift and go to state 185 ]
  ! GEQ             [ shift and go to state 176 ]
  ! PLUS            [ shift and go to state 180 ]
  ! MINUS           [ shift and go to state 184 ]
  ! OR              [ shift and go to state 177 ]
  ! CARET           [ shift and go to state 168 ]
  ! TIMES           [ shift and go to state 183 ]
  ! DIVIDE          [ shift and go to state 170 ]
  ! MOD             [ shift and go to state 181 ]
  ! AMPERS          [ shift and go to state 175 ]
  ! LL              [ shift and go to state 174 ]
  ! GG              [ shift and go to state 178 ]
  ! AMPCAR          [ shift and go to state 171 ]


state 220

    (131) Expression -> Expression AMPERS Expression .
    (116) Expression -> Expression . OROR Expression
    (117) Expression -> Expression . AMPAMP Expression
    (118) Expression -> Expression . EQEQ Expression
    (119) Expression -> Expression . NOTEQ Expression
    (120) Expression -> Expression . LESS Expression
    (121) Expression -> Expression . GREAT Expression
    (122) Expression -> Expression . LEQ Expression
    (123) Expression -> Expression . GEQ Expression
    (124) Expression -> Expression . PLUS Expression
    (125) Expression -> Expression . MINUS Expression
    (126) Expression -> Expression . OR Expression
    (127) Expression -> Expression . CARET Expression
    (128) Expression -> Expression . TIMES Expression
    (129) Expression -> Expression . DIVIDE Expression
    (130) Expression -> Expression . MOD Expression
    (131) Expression -> Expression . AMPERS Expression
    (132) Expression -> Expression . LL Expression
    (133) Expression -> Expression . GG Expression
    (134) Expression -> Expression . AMPCAR Expression

    OROR            reduce using rule 131 (Expression -> Expression AMPERS Expression .)
    AMPAMP          reduce using rule 131 (Expression -> Expression AMPERS Expression .)
    EQEQ            reduce using rule 131 (Expression -> Expression AMPERS Expression .)
    NOTEQ           reduce using rule 131 (Expression -> Expression AMPERS Expression .)
    LESS            reduce using rule 131 (Expression -> Expression AMPERS Expression .)
    GREAT           reduce using rule 131 (Expression -> Expression AMPERS Expression .)
    LEQ             reduce using rule 131 (Expression -> Expression AMPERS Expression .)
    GEQ             reduce using rule 131 (Expression -> Expression AMPERS Expression .)
    PLUS            reduce using rule 131 (Expression -> Expression AMPERS Expression .)
    MINUS           reduce using rule 131 (Expression -> Expression AMPERS Expression .)
    OR              reduce using rule 131 (Expression -> Expression AMPERS Expression .)
    CARET           reduce using rule 131 (Expression -> Expression AMPERS Expression .)
    TIMES           reduce using rule 131 (Expression -> Expression AMPERS Expression .)
    DIVIDE          reduce using rule 131 (Expression -> Expression AMPERS Expression .)
    MOD             reduce using rule 131 (Expression -> Expression AMPERS Expression .)
    AMPERS          reduce using rule 131 (Expression -> Expression AMPERS Expression .)
    LL              reduce using rule 131 (Expression -> Expression AMPERS Expression .)
    GG              reduce using rule 131 (Expression -> Expression AMPERS Expression .)
    AMPCAR          reduce using rule 131 (Expression -> Expression AMPERS Expression .)
    RBRACK          reduce using rule 131 (Expression -> Expression AMPERS Expression .)
    COMMA           reduce using rule 131 (Expression -> Expression AMPERS Expression .)
    SEMICOL         reduce using rule 131 (Expression -> Expression AMPERS Expression .)
    RPAREN          reduce using rule 131 (Expression -> Expression AMPERS Expression .)
    COLON           reduce using rule 131 (Expression -> Expression AMPERS Expression .)
    PLUSEQ          reduce using rule 131 (Expression -> Expression AMPERS Expression .)
    MINUSEQ         reduce using rule 131 (Expression -> Expression AMPERS Expression .)
    TIMESEQ         reduce using rule 131 (Expression -> Expression AMPERS Expression .)
    DIVIDEEQ        reduce using rule 131 (Expression -> Expression AMPERS Expression .)
    MODEQ           reduce using rule 131 (Expression -> Expression AMPERS Expression .)
    AMPEQ           reduce using rule 131 (Expression -> Expression AMPERS Expression .)
    OREQ            reduce using rule 131 (Expression -> Expression AMPERS Expression .)
    CAREQ           reduce using rule 131 (Expression -> Expression AMPERS Expression .)
    LLEQ            reduce using rule 131 (Expression -> Expression AMPERS Expression .)
    GGEQ            reduce using rule 131 (Expression -> Expression AMPERS Expression .)
    EQUAL           reduce using rule 131 (Expression -> Expression AMPERS Expression .)
    LBRACE          reduce using rule 131 (Expression -> Expression AMPERS Expression .)

  ! OROR            [ shift and go to state 167 ]
  ! AMPAMP          [ shift and go to state 182 ]
  ! EQEQ            [ shift and go to state 173 ]
  ! NOTEQ           [ shift and go to state 179 ]
  ! LESS            [ shift and go to state 172 ]
  ! GREAT           [ shift and go to state 169 ]
  ! LEQ             [ shift and go to state 185 ]
  ! GEQ             [ shift and go to state 176 ]
  ! PLUS            [ shift and go to state 180 ]
  ! MINUS           [ shift and go to state 184 ]
  ! OR              [ shift and go to state 177 ]
  ! CARET           [ shift and go to state 168 ]
  ! TIMES           [ shift and go to state 183 ]
  ! DIVIDE          [ shift and go to state 170 ]
  ! MOD             [ shift and go to state 181 ]
  ! AMPERS          [ shift and go to state 175 ]
  ! LL              [ shift and go to state 174 ]
  ! GG              [ shift and go to state 178 ]
  ! AMPCAR          [ shift and go to state 171 ]


state 221

    (123) Expression -> Expression GEQ Expression .
    (116) Expression -> Expression . OROR Expression
    (117) Expression -> Expression . AMPAMP Expression
    (118) Expression -> Expression . EQEQ Expression
    (119) Expression -> Expression . NOTEQ Expression
    (120) Expression -> Expression . LESS Expression
    (121) Expression -> Expression . GREAT Expression
    (122) Expression -> Expression . LEQ Expression
    (123) Expression -> Expression . GEQ Expression
    (124) Expression -> Expression . PLUS Expression
    (125) Expression -> Expression . MINUS Expression
    (126) Expression -> Expression . OR Expression
    (127) Expression -> Expression . CARET Expression
    (128) Expression -> Expression . TIMES Expression
    (129) Expression -> Expression . DIVIDE Expression
    (130) Expression -> Expression . MOD Expression
    (131) Expression -> Expression . AMPERS Expression
    (132) Expression -> Expression . LL Expression
    (133) Expression -> Expression . GG Expression
    (134) Expression -> Expression . AMPCAR Expression

    OROR            reduce using rule 123 (Expression -> Expression GEQ Expression .)
    AMPAMP          reduce using rule 123 (Expression -> Expression GEQ Expression .)
    EQEQ            reduce using rule 123 (Expression -> Expression GEQ Expression .)
    NOTEQ           reduce using rule 123 (Expression -> Expression GEQ Expression .)
    LESS            reduce using rule 123 (Expression -> Expression GEQ Expression .)
    GREAT           reduce using rule 123 (Expression -> Expression GEQ Expression .)
    LEQ             reduce using rule 123 (Expression -> Expression GEQ Expression .)
    GEQ             reduce using rule 123 (Expression -> Expression GEQ Expression .)
    RBRACK          reduce using rule 123 (Expression -> Expression GEQ Expression .)
    COMMA           reduce using rule 123 (Expression -> Expression GEQ Expression .)
    SEMICOL         reduce using rule 123 (Expression -> Expression GEQ Expression .)
    RPAREN          reduce using rule 123 (Expression -> Expression GEQ Expression .)
    COLON           reduce using rule 123 (Expression -> Expression GEQ Expression .)
    PLUSEQ          reduce using rule 123 (Expression -> Expression GEQ Expression .)
    MINUSEQ         reduce using rule 123 (Expression -> Expression GEQ Expression .)
    TIMESEQ         reduce using rule 123 (Expression -> Expression GEQ Expression .)
    DIVIDEEQ        reduce using rule 123 (Expression -> Expression GEQ Expression .)
    MODEQ           reduce using rule 123 (Expression -> Expression GEQ Expression .)
    AMPEQ           reduce using rule 123 (Expression -> Expression GEQ Expression .)
    OREQ            reduce using rule 123 (Expression -> Expression GEQ Expression .)
    CAREQ           reduce using rule 123 (Expression -> Expression GEQ Expression .)
    LLEQ            reduce using rule 123 (Expression -> Expression GEQ Expression .)
    GGEQ            reduce using rule 123 (Expression -> Expression GEQ Expression .)
    EQUAL           reduce using rule 123 (Expression -> Expression GEQ Expression .)
    LBRACE          reduce using rule 123 (Expression -> Expression GEQ Expression .)
    PLUS            shift and go to state 180
    MINUS           shift and go to state 184
    OR              shift and go to state 177
    CARET           shift and go to state 168
    TIMES           shift and go to state 183
    DIVIDE          shift and go to state 170
    MOD             shift and go to state 181
    AMPERS          shift and go to state 175
    LL              shift and go to state 174
    GG              shift and go to state 178
    AMPCAR          shift and go to state 171

  ! PLUS            [ reduce using rule 123 (Expression -> Expression GEQ Expression .) ]
  ! MINUS           [ reduce using rule 123 (Expression -> Expression GEQ Expression .) ]
  ! OR              [ reduce using rule 123 (Expression -> Expression GEQ Expression .) ]
  ! CARET           [ reduce using rule 123 (Expression -> Expression GEQ Expression .) ]
  ! TIMES           [ reduce using rule 123 (Expression -> Expression GEQ Expression .) ]
  ! DIVIDE          [ reduce using rule 123 (Expression -> Expression GEQ Expression .) ]
  ! MOD             [ reduce using rule 123 (Expression -> Expression GEQ Expression .) ]
  ! AMPERS          [ reduce using rule 123 (Expression -> Expression GEQ Expression .) ]
  ! LL              [ reduce using rule 123 (Expression -> Expression GEQ Expression .) ]
  ! GG              [ reduce using rule 123 (Expression -> Expression GEQ Expression .) ]
  ! AMPCAR          [ reduce using rule 123 (Expression -> Expression GEQ Expression .) ]
  ! OROR            [ shift and go to state 167 ]
  ! AMPAMP          [ shift and go to state 182 ]
  ! EQEQ            [ shift and go to state 173 ]
  ! NOTEQ           [ shift and go to state 179 ]
  ! LESS            [ shift and go to state 172 ]
  ! GREAT           [ shift and go to state 169 ]
  ! LEQ             [ shift and go to state 185 ]
  ! GEQ             [ shift and go to state 176 ]


state 222

    (126) Expression -> Expression OR Expression .
    (116) Expression -> Expression . OROR Expression
    (117) Expression -> Expression . AMPAMP Expression
    (118) Expression -> Expression . EQEQ Expression
    (119) Expression -> Expression . NOTEQ Expression
    (120) Expression -> Expression . LESS Expression
    (121) Expression -> Expression . GREAT Expression
    (122) Expression -> Expression . LEQ Expression
    (123) Expression -> Expression . GEQ Expression
    (124) Expression -> Expression . PLUS Expression
    (125) Expression -> Expression . MINUS Expression
    (126) Expression -> Expression . OR Expression
    (127) Expression -> Expression . CARET Expression
    (128) Expression -> Expression . TIMES Expression
    (129) Expression -> Expression . DIVIDE Expression
    (130) Expression -> Expression . MOD Expression
    (131) Expression -> Expression . AMPERS Expression
    (132) Expression -> Expression . LL Expression
    (133) Expression -> Expression . GG Expression
    (134) Expression -> Expression . AMPCAR Expression

    OROR            reduce using rule 126 (Expression -> Expression OR Expression .)
    AMPAMP          reduce using rule 126 (Expression -> Expression OR Expression .)
    EQEQ            reduce using rule 126 (Expression -> Expression OR Expression .)
    NOTEQ           reduce using rule 126 (Expression -> Expression OR Expression .)
    LESS            reduce using rule 126 (Expression -> Expression OR Expression .)
    GREAT           reduce using rule 126 (Expression -> Expression OR Expression .)
    LEQ             reduce using rule 126 (Expression -> Expression OR Expression .)
    GEQ             reduce using rule 126 (Expression -> Expression OR Expression .)
    PLUS            reduce using rule 126 (Expression -> Expression OR Expression .)
    MINUS           reduce using rule 126 (Expression -> Expression OR Expression .)
    OR              reduce using rule 126 (Expression -> Expression OR Expression .)
    CARET           reduce using rule 126 (Expression -> Expression OR Expression .)
    RBRACK          reduce using rule 126 (Expression -> Expression OR Expression .)
    COMMA           reduce using rule 126 (Expression -> Expression OR Expression .)
    SEMICOL         reduce using rule 126 (Expression -> Expression OR Expression .)
    RPAREN          reduce using rule 126 (Expression -> Expression OR Expression .)
    COLON           reduce using rule 126 (Expression -> Expression OR Expression .)
    PLUSEQ          reduce using rule 126 (Expression -> Expression OR Expression .)
    MINUSEQ         reduce using rule 126 (Expression -> Expression OR Expression .)
    TIMESEQ         reduce using rule 126 (Expression -> Expression OR Expression .)
    DIVIDEEQ        reduce using rule 126 (Expression -> Expression OR Expression .)
    MODEQ           reduce using rule 126 (Expression -> Expression OR Expression .)
    AMPEQ           reduce using rule 126 (Expression -> Expression OR Expression .)
    OREQ            reduce using rule 126 (Expression -> Expression OR Expression .)
    CAREQ           reduce using rule 126 (Expression -> Expression OR Expression .)
    LLEQ            reduce using rule 126 (Expression -> Expression OR Expression .)
    GGEQ            reduce using rule 126 (Expression -> Expression OR Expression .)
    EQUAL           reduce using rule 126 (Expression -> Expression OR Expression .)
    LBRACE          reduce using rule 126 (Expression -> Expression OR Expression .)
    TIMES           shift and go to state 183
    DIVIDE          shift and go to state 170
    MOD             shift and go to state 181
    AMPERS          shift and go to state 175
    LL              shift and go to state 174
    GG              shift and go to state 178
    AMPCAR          shift and go to state 171

  ! TIMES           [ reduce using rule 126 (Expression -> Expression OR Expression .) ]
  ! DIVIDE          [ reduce using rule 126 (Expression -> Expression OR Expression .) ]
  ! MOD             [ reduce using rule 126 (Expression -> Expression OR Expression .) ]
  ! AMPERS          [ reduce using rule 126 (Expression -> Expression OR Expression .) ]
  ! LL              [ reduce using rule 126 (Expression -> Expression OR Expression .) ]
  ! GG              [ reduce using rule 126 (Expression -> Expression OR Expression .) ]
  ! AMPCAR          [ reduce using rule 126 (Expression -> Expression OR Expression .) ]
  ! OROR            [ shift and go to state 167 ]
  ! AMPAMP          [ shift and go to state 182 ]
  ! EQEQ            [ shift and go to state 173 ]
  ! NOTEQ           [ shift and go to state 179 ]
  ! LESS            [ shift and go to state 172 ]
  ! GREAT           [ shift and go to state 169 ]
  ! LEQ             [ shift and go to state 185 ]
  ! GEQ             [ shift and go to state 176 ]
  ! PLUS            [ shift and go to state 180 ]
  ! MINUS           [ shift and go to state 184 ]
  ! OR              [ shift and go to state 177 ]
  ! CARET           [ shift and go to state 168 ]


state 223

    (133) Expression -> Expression GG Expression .
    (116) Expression -> Expression . OROR Expression
    (117) Expression -> Expression . AMPAMP Expression
    (118) Expression -> Expression . EQEQ Expression
    (119) Expression -> Expression . NOTEQ Expression
    (120) Expression -> Expression . LESS Expression
    (121) Expression -> Expression . GREAT Expression
    (122) Expression -> Expression . LEQ Expression
    (123) Expression -> Expression . GEQ Expression
    (124) Expression -> Expression . PLUS Expression
    (125) Expression -> Expression . MINUS Expression
    (126) Expression -> Expression . OR Expression
    (127) Expression -> Expression . CARET Expression
    (128) Expression -> Expression . TIMES Expression
    (129) Expression -> Expression . DIVIDE Expression
    (130) Expression -> Expression . MOD Expression
    (131) Expression -> Expression . AMPERS Expression
    (132) Expression -> Expression . LL Expression
    (133) Expression -> Expression . GG Expression
    (134) Expression -> Expression . AMPCAR Expression

    OROR            reduce using rule 133 (Expression -> Expression GG Expression .)
    AMPAMP          reduce using rule 133 (Expression -> Expression GG Expression .)
    EQEQ            reduce using rule 133 (Expression -> Expression GG Expression .)
    NOTEQ           reduce using rule 133 (Expression -> Expression GG Expression .)
    LESS            reduce using rule 133 (Expression -> Expression GG Expression .)
    GREAT           reduce using rule 133 (Expression -> Expression GG Expression .)
    LEQ             reduce using rule 133 (Expression -> Expression GG Expression .)
    GEQ             reduce using rule 133 (Expression -> Expression GG Expression .)
    PLUS            reduce using rule 133 (Expression -> Expression GG Expression .)
    MINUS           reduce using rule 133 (Expression -> Expression GG Expression .)
    OR              reduce using rule 133 (Expression -> Expression GG Expression .)
    CARET           reduce using rule 133 (Expression -> Expression GG Expression .)
    TIMES           reduce using rule 133 (Expression -> Expression GG Expression .)
    DIVIDE          reduce using rule 133 (Expression -> Expression GG Expression .)
    MOD             reduce using rule 133 (Expression -> Expression GG Expression .)
    AMPERS          reduce using rule 133 (Expression -> Expression GG Expression .)
    LL              reduce using rule 133 (Expression -> Expression GG Expression .)
    GG              reduce using rule 133 (Expression -> Expression GG Expression .)
    AMPCAR          reduce using rule 133 (Expression -> Expression GG Expression .)
    RBRACK          reduce using rule 133 (Expression -> Expression GG Expression .)
    COMMA           reduce using rule 133 (Expression -> Expression GG Expression .)
    SEMICOL         reduce using rule 133 (Expression -> Expression GG Expression .)
    RPAREN          reduce using rule 133 (Expression -> Expression GG Expression .)
    COLON           reduce using rule 133 (Expression -> Expression GG Expression .)
    PLUSEQ          reduce using rule 133 (Expression -> Expression GG Expression .)
    MINUSEQ         reduce using rule 133 (Expression -> Expression GG Expression .)
    TIMESEQ         reduce using rule 133 (Expression -> Expression GG Expression .)
    DIVIDEEQ        reduce using rule 133 (Expression -> Expression GG Expression .)
    MODEQ           reduce using rule 133 (Expression -> Expression GG Expression .)
    AMPEQ           reduce using rule 133 (Expression -> Expression GG Expression .)
    OREQ            reduce using rule 133 (Expression -> Expression GG Expression .)
    CAREQ           reduce using rule 133 (Expression -> Expression GG Expression .)
    LLEQ            reduce using rule 133 (Expression -> Expression GG Expression .)
    GGEQ            reduce using rule 133 (Expression -> Expression GG Expression .)
    EQUAL           reduce using rule 133 (Expression -> Expression GG Expression .)
    LBRACE          reduce using rule 133 (Expression -> Expression GG Expression .)

  ! OROR            [ shift and go to state 167 ]
  ! AMPAMP          [ shift and go to state 182 ]
  ! EQEQ            [ shift and go to state 173 ]
  ! NOTEQ           [ shift and go to state 179 ]
  ! LESS            [ shift and go to state 172 ]
  ! GREAT           [ shift and go to state 169 ]
  ! LEQ             [ shift and go to state 185 ]
  ! GEQ             [ shift and go to state 176 ]
  ! PLUS            [ shift and go to state 180 ]
  ! MINUS           [ shift and go to state 184 ]
  ! OR              [ shift and go to state 177 ]
  ! CARET           [ shift and go to state 168 ]
  ! TIMES           [ shift and go to state 183 ]
  ! DIVIDE          [ shift and go to state 170 ]
  ! MOD             [ shift and go to state 181 ]
  ! AMPERS          [ shift and go to state 175 ]
  ! LL              [ shift and go to state 174 ]
  ! GG              [ shift and go to state 178 ]
  ! AMPCAR          [ shift and go to state 171 ]


state 224

    (119) Expression -> Expression NOTEQ Expression .
    (116) Expression -> Expression . OROR Expression
    (117) Expression -> Expression . AMPAMP Expression
    (118) Expression -> Expression . EQEQ Expression
    (119) Expression -> Expression . NOTEQ Expression
    (120) Expression -> Expression . LESS Expression
    (121) Expression -> Expression . GREAT Expression
    (122) Expression -> Expression . LEQ Expression
    (123) Expression -> Expression . GEQ Expression
    (124) Expression -> Expression . PLUS Expression
    (125) Expression -> Expression . MINUS Expression
    (126) Expression -> Expression . OR Expression
    (127) Expression -> Expression . CARET Expression
    (128) Expression -> Expression . TIMES Expression
    (129) Expression -> Expression . DIVIDE Expression
    (130) Expression -> Expression . MOD Expression
    (131) Expression -> Expression . AMPERS Expression
    (132) Expression -> Expression . LL Expression
    (133) Expression -> Expression . GG Expression
    (134) Expression -> Expression . AMPCAR Expression

    OROR            reduce using rule 119 (Expression -> Expression NOTEQ Expression .)
    AMPAMP          reduce using rule 119 (Expression -> Expression NOTEQ Expression .)
    EQEQ            reduce using rule 119 (Expression -> Expression NOTEQ Expression .)
    NOTEQ           reduce using rule 119 (Expression -> Expression NOTEQ Expression .)
    LESS            reduce using rule 119 (Expression -> Expression NOTEQ Expression .)
    GREAT           reduce using rule 119 (Expression -> Expression NOTEQ Expression .)
    LEQ             reduce using rule 119 (Expression -> Expression NOTEQ Expression .)
    GEQ             reduce using rule 119 (Expression -> Expression NOTEQ Expression .)
    RBRACK          reduce using rule 119 (Expression -> Expression NOTEQ Expression .)
    COMMA           reduce using rule 119 (Expression -> Expression NOTEQ Expression .)
    SEMICOL         reduce using rule 119 (Expression -> Expression NOTEQ Expression .)
    RPAREN          reduce using rule 119 (Expression -> Expression NOTEQ Expression .)
    COLON           reduce using rule 119 (Expression -> Expression NOTEQ Expression .)
    PLUSEQ          reduce using rule 119 (Expression -> Expression NOTEQ Expression .)
    MINUSEQ         reduce using rule 119 (Expression -> Expression NOTEQ Expression .)
    TIMESEQ         reduce using rule 119 (Expression -> Expression NOTEQ Expression .)
    DIVIDEEQ        reduce using rule 119 (Expression -> Expression NOTEQ Expression .)
    MODEQ           reduce using rule 119 (Expression -> Expression NOTEQ Expression .)
    AMPEQ           reduce using rule 119 (Expression -> Expression NOTEQ Expression .)
    OREQ            reduce using rule 119 (Expression -> Expression NOTEQ Expression .)
    CAREQ           reduce using rule 119 (Expression -> Expression NOTEQ Expression .)
    LLEQ            reduce using rule 119 (Expression -> Expression NOTEQ Expression .)
    GGEQ            reduce using rule 119 (Expression -> Expression NOTEQ Expression .)
    EQUAL           reduce using rule 119 (Expression -> Expression NOTEQ Expression .)
    LBRACE          reduce using rule 119 (Expression -> Expression NOTEQ Expression .)
    PLUS            shift and go to state 180
    MINUS           shift and go to state 184
    OR              shift and go to state 177
    CARET           shift and go to state 168
    TIMES           shift and go to state 183
    DIVIDE          shift and go to state 170
    MOD             shift and go to state 181
    AMPERS          shift and go to state 175
    LL              shift and go to state 174
    GG              shift and go to state 178
    AMPCAR          shift and go to state 171

  ! PLUS            [ reduce using rule 119 (Expression -> Expression NOTEQ Expression .) ]
  ! MINUS           [ reduce using rule 119 (Expression -> Expression NOTEQ Expression .) ]
  ! OR              [ reduce using rule 119 (Expression -> Expression NOTEQ Expression .) ]
  ! CARET           [ reduce using rule 119 (Expression -> Expression NOTEQ Expression .) ]
  ! TIMES           [ reduce using rule 119 (Expression -> Expression NOTEQ Expression .) ]
  ! DIVIDE          [ reduce using rule 119 (Expression -> Expression NOTEQ Expression .) ]
  ! MOD             [ reduce using rule 119 (Expression -> Expression NOTEQ Expression .) ]
  ! AMPERS          [ reduce using rule 119 (Expression -> Expression NOTEQ Expression .) ]
  ! LL              [ reduce using rule 119 (Expression -> Expression NOTEQ Expression .) ]
  ! GG              [ reduce using rule 119 (Expression -> Expression NOTEQ Expression .) ]
  ! AMPCAR          [ reduce using rule 119 (Expression -> Expression NOTEQ Expression .) ]
  ! OROR            [ shift and go to state 167 ]
  ! AMPAMP          [ shift and go to state 182 ]
  ! EQEQ            [ shift and go to state 173 ]
  ! NOTEQ           [ shift and go to state 179 ]
  ! LESS            [ shift and go to state 172 ]
  ! GREAT           [ shift and go to state 169 ]
  ! LEQ             [ shift and go to state 185 ]
  ! GEQ             [ shift and go to state 176 ]


state 225

    (124) Expression -> Expression PLUS Expression .
    (116) Expression -> Expression . OROR Expression
    (117) Expression -> Expression . AMPAMP Expression
    (118) Expression -> Expression . EQEQ Expression
    (119) Expression -> Expression . NOTEQ Expression
    (120) Expression -> Expression . LESS Expression
    (121) Expression -> Expression . GREAT Expression
    (122) Expression -> Expression . LEQ Expression
    (123) Expression -> Expression . GEQ Expression
    (124) Expression -> Expression . PLUS Expression
    (125) Expression -> Expression . MINUS Expression
    (126) Expression -> Expression . OR Expression
    (127) Expression -> Expression . CARET Expression
    (128) Expression -> Expression . TIMES Expression
    (129) Expression -> Expression . DIVIDE Expression
    (130) Expression -> Expression . MOD Expression
    (131) Expression -> Expression . AMPERS Expression
    (132) Expression -> Expression . LL Expression
    (133) Expression -> Expression . GG Expression
    (134) Expression -> Expression . AMPCAR Expression

    OROR            reduce using rule 124 (Expression -> Expression PLUS Expression .)
    AMPAMP          reduce using rule 124 (Expression -> Expression PLUS Expression .)
    EQEQ            reduce using rule 124 (Expression -> Expression PLUS Expression .)
    NOTEQ           reduce using rule 124 (Expression -> Expression PLUS Expression .)
    LESS            reduce using rule 124 (Expression -> Expression PLUS Expression .)
    GREAT           reduce using rule 124 (Expression -> Expression PLUS Expression .)
    LEQ             reduce using rule 124 (Expression -> Expression PLUS Expression .)
    GEQ             reduce using rule 124 (Expression -> Expression PLUS Expression .)
    PLUS            reduce using rule 124 (Expression -> Expression PLUS Expression .)
    MINUS           reduce using rule 124 (Expression -> Expression PLUS Expression .)
    OR              reduce using rule 124 (Expression -> Expression PLUS Expression .)
    CARET           reduce using rule 124 (Expression -> Expression PLUS Expression .)
    RBRACK          reduce using rule 124 (Expression -> Expression PLUS Expression .)
    COMMA           reduce using rule 124 (Expression -> Expression PLUS Expression .)
    SEMICOL         reduce using rule 124 (Expression -> Expression PLUS Expression .)
    RPAREN          reduce using rule 124 (Expression -> Expression PLUS Expression .)
    COLON           reduce using rule 124 (Expression -> Expression PLUS Expression .)
    PLUSEQ          reduce using rule 124 (Expression -> Expression PLUS Expression .)
    MINUSEQ         reduce using rule 124 (Expression -> Expression PLUS Expression .)
    TIMESEQ         reduce using rule 124 (Expression -> Expression PLUS Expression .)
    DIVIDEEQ        reduce using rule 124 (Expression -> Expression PLUS Expression .)
    MODEQ           reduce using rule 124 (Expression -> Expression PLUS Expression .)
    AMPEQ           reduce using rule 124 (Expression -> Expression PLUS Expression .)
    OREQ            reduce using rule 124 (Expression -> Expression PLUS Expression .)
    CAREQ           reduce using rule 124 (Expression -> Expression PLUS Expression .)
    LLEQ            reduce using rule 124 (Expression -> Expression PLUS Expression .)
    GGEQ            reduce using rule 124 (Expression -> Expression PLUS Expression .)
    EQUAL           reduce using rule 124 (Expression -> Expression PLUS Expression .)
    LBRACE          reduce using rule 124 (Expression -> Expression PLUS Expression .)
    TIMES           shift and go to state 183
    DIVIDE          shift and go to state 170
    MOD             shift and go to state 181
    AMPERS          shift and go to state 175
    LL              shift and go to state 174
    GG              shift and go to state 178
    AMPCAR          shift and go to state 171

  ! TIMES           [ reduce using rule 124 (Expression -> Expression PLUS Expression .) ]
  ! DIVIDE          [ reduce using rule 124 (Expression -> Expression PLUS Expression .) ]
  ! MOD             [ reduce using rule 124 (Expression -> Expression PLUS Expression .) ]
  ! AMPERS          [ reduce using rule 124 (Expression -> Expression PLUS Expression .) ]
  ! LL              [ reduce using rule 124 (Expression -> Expression PLUS Expression .) ]
  ! GG              [ reduce using rule 124 (Expression -> Expression PLUS Expression .) ]
  ! AMPCAR          [ reduce using rule 124 (Expression -> Expression PLUS Expression .) ]
  ! OROR            [ shift and go to state 167 ]
  ! AMPAMP          [ shift and go to state 182 ]
  ! EQEQ            [ shift and go to state 173 ]
  ! NOTEQ           [ shift and go to state 179 ]
  ! LESS            [ shift and go to state 172 ]
  ! GREAT           [ shift and go to state 169 ]
  ! LEQ             [ shift and go to state 185 ]
  ! GEQ             [ shift and go to state 176 ]
  ! PLUS            [ shift and go to state 180 ]
  ! MINUS           [ shift and go to state 184 ]
  ! OR              [ shift and go to state 177 ]
  ! CARET           [ shift and go to state 168 ]


state 226

    (130) Expression -> Expression MOD Expression .
    (116) Expression -> Expression . OROR Expression
    (117) Expression -> Expression . AMPAMP Expression
    (118) Expression -> Expression . EQEQ Expression
    (119) Expression -> Expression . NOTEQ Expression
    (120) Expression -> Expression . LESS Expression
    (121) Expression -> Expression . GREAT Expression
    (122) Expression -> Expression . LEQ Expression
    (123) Expression -> Expression . GEQ Expression
    (124) Expression -> Expression . PLUS Expression
    (125) Expression -> Expression . MINUS Expression
    (126) Expression -> Expression . OR Expression
    (127) Expression -> Expression . CARET Expression
    (128) Expression -> Expression . TIMES Expression
    (129) Expression -> Expression . DIVIDE Expression
    (130) Expression -> Expression . MOD Expression
    (131) Expression -> Expression . AMPERS Expression
    (132) Expression -> Expression . LL Expression
    (133) Expression -> Expression . GG Expression
    (134) Expression -> Expression . AMPCAR Expression

    OROR            reduce using rule 130 (Expression -> Expression MOD Expression .)
    AMPAMP          reduce using rule 130 (Expression -> Expression MOD Expression .)
    EQEQ            reduce using rule 130 (Expression -> Expression MOD Expression .)
    NOTEQ           reduce using rule 130 (Expression -> Expression MOD Expression .)
    LESS            reduce using rule 130 (Expression -> Expression MOD Expression .)
    GREAT           reduce using rule 130 (Expression -> Expression MOD Expression .)
    LEQ             reduce using rule 130 (Expression -> Expression MOD Expression .)
    GEQ             reduce using rule 130 (Expression -> Expression MOD Expression .)
    PLUS            reduce using rule 130 (Expression -> Expression MOD Expression .)
    MINUS           reduce using rule 130 (Expression -> Expression MOD Expression .)
    OR              reduce using rule 130 (Expression -> Expression MOD Expression .)
    CARET           reduce using rule 130 (Expression -> Expression MOD Expression .)
    TIMES           reduce using rule 130 (Expression -> Expression MOD Expression .)
    DIVIDE          reduce using rule 130 (Expression -> Expression MOD Expression .)
    MOD             reduce using rule 130 (Expression -> Expression MOD Expression .)
    AMPERS          reduce using rule 130 (Expression -> Expression MOD Expression .)
    LL              reduce using rule 130 (Expression -> Expression MOD Expression .)
    GG              reduce using rule 130 (Expression -> Expression MOD Expression .)
    AMPCAR          reduce using rule 130 (Expression -> Expression MOD Expression .)
    RBRACK          reduce using rule 130 (Expression -> Expression MOD Expression .)
    COMMA           reduce using rule 130 (Expression -> Expression MOD Expression .)
    SEMICOL         reduce using rule 130 (Expression -> Expression MOD Expression .)
    RPAREN          reduce using rule 130 (Expression -> Expression MOD Expression .)
    COLON           reduce using rule 130 (Expression -> Expression MOD Expression .)
    PLUSEQ          reduce using rule 130 (Expression -> Expression MOD Expression .)
    MINUSEQ         reduce using rule 130 (Expression -> Expression MOD Expression .)
    TIMESEQ         reduce using rule 130 (Expression -> Expression MOD Expression .)
    DIVIDEEQ        reduce using rule 130 (Expression -> Expression MOD Expression .)
    MODEQ           reduce using rule 130 (Expression -> Expression MOD Expression .)
    AMPEQ           reduce using rule 130 (Expression -> Expression MOD Expression .)
    OREQ            reduce using rule 130 (Expression -> Expression MOD Expression .)
    CAREQ           reduce using rule 130 (Expression -> Expression MOD Expression .)
    LLEQ            reduce using rule 130 (Expression -> Expression MOD Expression .)
    GGEQ            reduce using rule 130 (Expression -> Expression MOD Expression .)
    EQUAL           reduce using rule 130 (Expression -> Expression MOD Expression .)
    LBRACE          reduce using rule 130 (Expression -> Expression MOD Expression .)

  ! OROR            [ shift and go to state 167 ]
  ! AMPAMP          [ shift and go to state 182 ]
  ! EQEQ            [ shift and go to state 173 ]
  ! NOTEQ           [ shift and go to state 179 ]
  ! LESS            [ shift and go to state 172 ]
  ! GREAT           [ shift and go to state 169 ]
  ! LEQ             [ shift and go to state 185 ]
  ! GEQ             [ shift and go to state 176 ]
  ! PLUS            [ shift and go to state 180 ]
  ! MINUS           [ shift and go to state 184 ]
  ! OR              [ shift and go to state 177 ]
  ! CARET           [ shift and go to state 168 ]
  ! TIMES           [ shift and go to state 183 ]
  ! DIVIDE          [ shift and go to state 170 ]
  ! MOD             [ shift and go to state 181 ]
  ! AMPERS          [ shift and go to state 175 ]
  ! LL              [ shift and go to state 174 ]
  ! GG              [ shift and go to state 178 ]
  ! AMPCAR          [ shift and go to state 171 ]


state 227

    (117) Expression -> Expression AMPAMP Expression .
    (116) Expression -> Expression . OROR Expression
    (117) Expression -> Expression . AMPAMP Expression
    (118) Expression -> Expression . EQEQ Expression
    (119) Expression -> Expression . NOTEQ Expression
    (120) Expression -> Expression . LESS Expression
    (121) Expression -> Expression . GREAT Expression
    (122) Expression -> Expression . LEQ Expression
    (123) Expression -> Expression . GEQ Expression
    (124) Expression -> Expression . PLUS Expression
    (125) Expression -> Expression . MINUS Expression
    (126) Expression -> Expression . OR Expression
    (127) Expression -> Expression . CARET Expression
    (128) Expression -> Expression . TIMES Expression
    (129) Expression -> Expression . DIVIDE Expression
    (130) Expression -> Expression . MOD Expression
    (131) Expression -> Expression . AMPERS Expression
    (132) Expression -> Expression . LL Expression
    (133) Expression -> Expression . GG Expression
    (134) Expression -> Expression . AMPCAR Expression

    OROR            reduce using rule 117 (Expression -> Expression AMPAMP Expression .)
    AMPAMP          reduce using rule 117 (Expression -> Expression AMPAMP Expression .)
    RBRACK          reduce using rule 117 (Expression -> Expression AMPAMP Expression .)
    COMMA           reduce using rule 117 (Expression -> Expression AMPAMP Expression .)
    SEMICOL         reduce using rule 117 (Expression -> Expression AMPAMP Expression .)
    RPAREN          reduce using rule 117 (Expression -> Expression AMPAMP Expression .)
    COLON           reduce using rule 117 (Expression -> Expression AMPAMP Expression .)
    PLUSEQ          reduce using rule 117 (Expression -> Expression AMPAMP Expression .)
    MINUSEQ         reduce using rule 117 (Expression -> Expression AMPAMP Expression .)
    TIMESEQ         reduce using rule 117 (Expression -> Expression AMPAMP Expression .)
    DIVIDEEQ        reduce using rule 117 (Expression -> Expression AMPAMP Expression .)
    MODEQ           reduce using rule 117 (Expression -> Expression AMPAMP Expression .)
    AMPEQ           reduce using rule 117 (Expression -> Expression AMPAMP Expression .)
    OREQ            reduce using rule 117 (Expression -> Expression AMPAMP Expression .)
    CAREQ           reduce using rule 117 (Expression -> Expression AMPAMP Expression .)
    LLEQ            reduce using rule 117 (Expression -> Expression AMPAMP Expression .)
    GGEQ            reduce using rule 117 (Expression -> Expression AMPAMP Expression .)
    EQUAL           reduce using rule 117 (Expression -> Expression AMPAMP Expression .)
    LBRACE          reduce using rule 117 (Expression -> Expression AMPAMP Expression .)
    EQEQ            shift and go to state 173
    NOTEQ           shift and go to state 179
    LESS            shift and go to state 172
    GREAT           shift and go to state 169
    LEQ             shift and go to state 185
    GEQ             shift and go to state 176
    PLUS            shift and go to state 180
    MINUS           shift and go to state 184
    OR              shift and go to state 177
    CARET           shift and go to state 168
    TIMES           shift and go to state 183
    DIVIDE          shift and go to state 170
    MOD             shift and go to state 181
    AMPERS          shift and go to state 175
    LL              shift and go to state 174
    GG              shift and go to state 178
    AMPCAR          shift and go to state 171

  ! EQEQ            [ reduce using rule 117 (Expression -> Expression AMPAMP Expression .) ]
  ! NOTEQ           [ reduce using rule 117 (Expression -> Expression AMPAMP Expression .) ]
  ! LESS            [ reduce using rule 117 (Expression -> Expression AMPAMP Expression .) ]
  ! GREAT           [ reduce using rule 117 (Expression -> Expression AMPAMP Expression .) ]
  ! LEQ             [ reduce using rule 117 (Expression -> Expression AMPAMP Expression .) ]
  ! GEQ             [ reduce using rule 117 (Expression -> Expression AMPAMP Expression .) ]
  ! PLUS            [ reduce using rule 117 (Expression -> Expression AMPAMP Expression .) ]
  ! MINUS           [ reduce using rule 117 (Expression -> Expression AMPAMP Expression .) ]
  ! OR              [ reduce using rule 117 (Expression -> Expression AMPAMP Expression .) ]
  ! CARET           [ reduce using rule 117 (Expression -> Expression AMPAMP Expression .) ]
  ! TIMES           [ reduce using rule 117 (Expression -> Expression AMPAMP Expression .) ]
  ! DIVIDE          [ reduce using rule 117 (Expression -> Expression AMPAMP Expression .) ]
  ! MOD             [ reduce using rule 117 (Expression -> Expression AMPAMP Expression .) ]
  ! AMPERS          [ reduce using rule 117 (Expression -> Expression AMPAMP Expression .) ]
  ! LL              [ reduce using rule 117 (Expression -> Expression AMPAMP Expression .) ]
  ! GG              [ reduce using rule 117 (Expression -> Expression AMPAMP Expression .) ]
  ! AMPCAR          [ reduce using rule 117 (Expression -> Expression AMPAMP Expression .) ]
  ! OROR            [ shift and go to state 167 ]
  ! AMPAMP          [ shift and go to state 182 ]


state 228

    (128) Expression -> Expression TIMES Expression .
    (116) Expression -> Expression . OROR Expression
    (117) Expression -> Expression . AMPAMP Expression
    (118) Expression -> Expression . EQEQ Expression
    (119) Expression -> Expression . NOTEQ Expression
    (120) Expression -> Expression . LESS Expression
    (121) Expression -> Expression . GREAT Expression
    (122) Expression -> Expression . LEQ Expression
    (123) Expression -> Expression . GEQ Expression
    (124) Expression -> Expression . PLUS Expression
    (125) Expression -> Expression . MINUS Expression
    (126) Expression -> Expression . OR Expression
    (127) Expression -> Expression . CARET Expression
    (128) Expression -> Expression . TIMES Expression
    (129) Expression -> Expression . DIVIDE Expression
    (130) Expression -> Expression . MOD Expression
    (131) Expression -> Expression . AMPERS Expression
    (132) Expression -> Expression . LL Expression
    (133) Expression -> Expression . GG Expression
    (134) Expression -> Expression . AMPCAR Expression

    OROR            reduce using rule 128 (Expression -> Expression TIMES Expression .)
    AMPAMP          reduce using rule 128 (Expression -> Expression TIMES Expression .)
    EQEQ            reduce using rule 128 (Expression -> Expression TIMES Expression .)
    NOTEQ           reduce using rule 128 (Expression -> Expression TIMES Expression .)
    LESS            reduce using rule 128 (Expression -> Expression TIMES Expression .)
    GREAT           reduce using rule 128 (Expression -> Expression TIMES Expression .)
    LEQ             reduce using rule 128 (Expression -> Expression TIMES Expression .)
    GEQ             reduce using rule 128 (Expression -> Expression TIMES Expression .)
    PLUS            reduce using rule 128 (Expression -> Expression TIMES Expression .)
    MINUS           reduce using rule 128 (Expression -> Expression TIMES Expression .)
    OR              reduce using rule 128 (Expression -> Expression TIMES Expression .)
    CARET           reduce using rule 128 (Expression -> Expression TIMES Expression .)
    TIMES           reduce using rule 128 (Expression -> Expression TIMES Expression .)
    DIVIDE          reduce using rule 128 (Expression -> Expression TIMES Expression .)
    MOD             reduce using rule 128 (Expression -> Expression TIMES Expression .)
    AMPERS          reduce using rule 128 (Expression -> Expression TIMES Expression .)
    LL              reduce using rule 128 (Expression -> Expression TIMES Expression .)
    GG              reduce using rule 128 (Expression -> Expression TIMES Expression .)
    AMPCAR          reduce using rule 128 (Expression -> Expression TIMES Expression .)
    RBRACK          reduce using rule 128 (Expression -> Expression TIMES Expression .)
    COMMA           reduce using rule 128 (Expression -> Expression TIMES Expression .)
    SEMICOL         reduce using rule 128 (Expression -> Expression TIMES Expression .)
    RPAREN          reduce using rule 128 (Expression -> Expression TIMES Expression .)
    COLON           reduce using rule 128 (Expression -> Expression TIMES Expression .)
    PLUSEQ          reduce using rule 128 (Expression -> Expression TIMES Expression .)
    MINUSEQ         reduce using rule 128 (Expression -> Expression TIMES Expression .)
    TIMESEQ         reduce using rule 128 (Expression -> Expression TIMES Expression .)
    DIVIDEEQ        reduce using rule 128 (Expression -> Expression TIMES Expression .)
    MODEQ           reduce using rule 128 (Expression -> Expression TIMES Expression .)
    AMPEQ           reduce using rule 128 (Expression -> Expression TIMES Expression .)
    OREQ            reduce using rule 128 (Expression -> Expression TIMES Expression .)
    CAREQ           reduce using rule 128 (Expression -> Expression TIMES Expression .)
    LLEQ            reduce using rule 128 (Expression -> Expression TIMES Expression .)
    GGEQ            reduce using rule 128 (Expression -> Expression TIMES Expression .)
    EQUAL           reduce using rule 128 (Expression -> Expression TIMES Expression .)
    LBRACE          reduce using rule 128 (Expression -> Expression TIMES Expression .)

  ! OROR            [ shift and go to state 167 ]
  ! AMPAMP          [ shift and go to state 182 ]
  ! EQEQ            [ shift and go to state 173 ]
  ! NOTEQ           [ shift and go to state 179 ]
  ! LESS            [ shift and go to state 172 ]
  ! GREAT           [ shift and go to state 169 ]
  ! LEQ             [ shift and go to state 185 ]
  ! GEQ             [ shift and go to state 176 ]
  ! PLUS            [ shift and go to state 180 ]
  ! MINUS           [ shift and go to state 184 ]
  ! OR              [ shift and go to state 177 ]
  ! CARET           [ shift and go to state 168 ]
  ! TIMES           [ shift and go to state 183 ]
  ! DIVIDE          [ shift and go to state 170 ]
  ! MOD             [ shift and go to state 181 ]
  ! AMPERS          [ shift and go to state 175 ]
  ! LL              [ shift and go to state 174 ]
  ! GG              [ shift and go to state 178 ]
  ! AMPCAR          [ shift and go to state 171 ]


state 229

    (125) Expression -> Expression MINUS Expression .
    (116) Expression -> Expression . OROR Expression
    (117) Expression -> Expression . AMPAMP Expression
    (118) Expression -> Expression . EQEQ Expression
    (119) Expression -> Expression . NOTEQ Expression
    (120) Expression -> Expression . LESS Expression
    (121) Expression -> Expression . GREAT Expression
    (122) Expression -> Expression . LEQ Expression
    (123) Expression -> Expression . GEQ Expression
    (124) Expression -> Expression . PLUS Expression
    (125) Expression -> Expression . MINUS Expression
    (126) Expression -> Expression . OR Expression
    (127) Expression -> Expression . CARET Expression
    (128) Expression -> Expression . TIMES Expression
    (129) Expression -> Expression . DIVIDE Expression
    (130) Expression -> Expression . MOD Expression
    (131) Expression -> Expression . AMPERS Expression
    (132) Expression -> Expression . LL Expression
    (133) Expression -> Expression . GG Expression
    (134) Expression -> Expression . AMPCAR Expression

    OROR            reduce using rule 125 (Expression -> Expression MINUS Expression .)
    AMPAMP          reduce using rule 125 (Expression -> Expression MINUS Expression .)
    EQEQ            reduce using rule 125 (Expression -> Expression MINUS Expression .)
    NOTEQ           reduce using rule 125 (Expression -> Expression MINUS Expression .)
    LESS            reduce using rule 125 (Expression -> Expression MINUS Expression .)
    GREAT           reduce using rule 125 (Expression -> Expression MINUS Expression .)
    LEQ             reduce using rule 125 (Expression -> Expression MINUS Expression .)
    GEQ             reduce using rule 125 (Expression -> Expression MINUS Expression .)
    PLUS            reduce using rule 125 (Expression -> Expression MINUS Expression .)
    MINUS           reduce using rule 125 (Expression -> Expression MINUS Expression .)
    OR              reduce using rule 125 (Expression -> Expression MINUS Expression .)
    CARET           reduce using rule 125 (Expression -> Expression MINUS Expression .)
    RBRACK          reduce using rule 125 (Expression -> Expression MINUS Expression .)
    COMMA           reduce using rule 125 (Expression -> Expression MINUS Expression .)
    SEMICOL         reduce using rule 125 (Expression -> Expression MINUS Expression .)
    RPAREN          reduce using rule 125 (Expression -> Expression MINUS Expression .)
    COLON           reduce using rule 125 (Expression -> Expression MINUS Expression .)
    PLUSEQ          reduce using rule 125 (Expression -> Expression MINUS Expression .)
    MINUSEQ         reduce using rule 125 (Expression -> Expression MINUS Expression .)
    TIMESEQ         reduce using rule 125 (Expression -> Expression MINUS Expression .)
    DIVIDEEQ        reduce using rule 125 (Expression -> Expression MINUS Expression .)
    MODEQ           reduce using rule 125 (Expression -> Expression MINUS Expression .)
    AMPEQ           reduce using rule 125 (Expression -> Expression MINUS Expression .)
    OREQ            reduce using rule 125 (Expression -> Expression MINUS Expression .)
    CAREQ           reduce using rule 125 (Expression -> Expression MINUS Expression .)
    LLEQ            reduce using rule 125 (Expression -> Expression MINUS Expression .)
    GGEQ            reduce using rule 125 (Expression -> Expression MINUS Expression .)
    EQUAL           reduce using rule 125 (Expression -> Expression MINUS Expression .)
    LBRACE          reduce using rule 125 (Expression -> Expression MINUS Expression .)
    TIMES           shift and go to state 183
    DIVIDE          shift and go to state 170
    MOD             shift and go to state 181
    AMPERS          shift and go to state 175
    LL              shift and go to state 174
    GG              shift and go to state 178
    AMPCAR          shift and go to state 171

  ! TIMES           [ reduce using rule 125 (Expression -> Expression MINUS Expression .) ]
  ! DIVIDE          [ reduce using rule 125 (Expression -> Expression MINUS Expression .) ]
  ! MOD             [ reduce using rule 125 (Expression -> Expression MINUS Expression .) ]
  ! AMPERS          [ reduce using rule 125 (Expression -> Expression MINUS Expression .) ]
  ! LL              [ reduce using rule 125 (Expression -> Expression MINUS Expression .) ]
  ! GG              [ reduce using rule 125 (Expression -> Expression MINUS Expression .) ]
  ! AMPCAR          [ reduce using rule 125 (Expression -> Expression MINUS Expression .) ]
  ! OROR            [ shift and go to state 167 ]
  ! AMPAMP          [ shift and go to state 182 ]
  ! EQEQ            [ shift and go to state 173 ]
  ! NOTEQ           [ shift and go to state 179 ]
  ! LESS            [ shift and go to state 172 ]
  ! GREAT           [ shift and go to state 169 ]
  ! LEQ             [ shift and go to state 185 ]
  ! GEQ             [ shift and go to state 176 ]
  ! PLUS            [ shift and go to state 180 ]
  ! MINUS           [ shift and go to state 184 ]
  ! OR              [ shift and go to state 177 ]
  ! CARET           [ shift and go to state 168 ]


state 230

    (122) Expression -> Expression LEQ Expression .
    (116) Expression -> Expression . OROR Expression
    (117) Expression -> Expression . AMPAMP Expression
    (118) Expression -> Expression . EQEQ Expression
    (119) Expression -> Expression . NOTEQ Expression
    (120) Expression -> Expression . LESS Expression
    (121) Expression -> Expression . GREAT Expression
    (122) Expression -> Expression . LEQ Expression
    (123) Expression -> Expression . GEQ Expression
    (124) Expression -> Expression . PLUS Expression
    (125) Expression -> Expression . MINUS Expression
    (126) Expression -> Expression . OR Expression
    (127) Expression -> Expression . CARET Expression
    (128) Expression -> Expression . TIMES Expression
    (129) Expression -> Expression . DIVIDE Expression
    (130) Expression -> Expression . MOD Expression
    (131) Expression -> Expression . AMPERS Expression
    (132) Expression -> Expression . LL Expression
    (133) Expression -> Expression . GG Expression
    (134) Expression -> Expression . AMPCAR Expression

    OROR            reduce using rule 122 (Expression -> Expression LEQ Expression .)
    AMPAMP          reduce using rule 122 (Expression -> Expression LEQ Expression .)
    EQEQ            reduce using rule 122 (Expression -> Expression LEQ Expression .)
    NOTEQ           reduce using rule 122 (Expression -> Expression LEQ Expression .)
    LESS            reduce using rule 122 (Expression -> Expression LEQ Expression .)
    GREAT           reduce using rule 122 (Expression -> Expression LEQ Expression .)
    LEQ             reduce using rule 122 (Expression -> Expression LEQ Expression .)
    GEQ             reduce using rule 122 (Expression -> Expression LEQ Expression .)
    RBRACK          reduce using rule 122 (Expression -> Expression LEQ Expression .)
    COMMA           reduce using rule 122 (Expression -> Expression LEQ Expression .)
    SEMICOL         reduce using rule 122 (Expression -> Expression LEQ Expression .)
    RPAREN          reduce using rule 122 (Expression -> Expression LEQ Expression .)
    COLON           reduce using rule 122 (Expression -> Expression LEQ Expression .)
    PLUSEQ          reduce using rule 122 (Expression -> Expression LEQ Expression .)
    MINUSEQ         reduce using rule 122 (Expression -> Expression LEQ Expression .)
    TIMESEQ         reduce using rule 122 (Expression -> Expression LEQ Expression .)
    DIVIDEEQ        reduce using rule 122 (Expression -> Expression LEQ Expression .)
    MODEQ           reduce using rule 122 (Expression -> Expression LEQ Expression .)
    AMPEQ           reduce using rule 122 (Expression -> Expression LEQ Expression .)
    OREQ            reduce using rule 122 (Expression -> Expression LEQ Expression .)
    CAREQ           reduce using rule 122 (Expression -> Expression LEQ Expression .)
    LLEQ            reduce using rule 122 (Expression -> Expression LEQ Expression .)
    GGEQ            reduce using rule 122 (Expression -> Expression LEQ Expression .)
    EQUAL           reduce using rule 122 (Expression -> Expression LEQ Expression .)
    LBRACE          reduce using rule 122 (Expression -> Expression LEQ Expression .)
    PLUS            shift and go to state 180
    MINUS           shift and go to state 184
    OR              shift and go to state 177
    CARET           shift and go to state 168
    TIMES           shift and go to state 183
    DIVIDE          shift and go to state 170
    MOD             shift and go to state 181
    AMPERS          shift and go to state 175
    LL              shift and go to state 174
    GG              shift and go to state 178
    AMPCAR          shift and go to state 171

  ! PLUS            [ reduce using rule 122 (Expression -> Expression LEQ Expression .) ]
  ! MINUS           [ reduce using rule 122 (Expression -> Expression LEQ Expression .) ]
  ! OR              [ reduce using rule 122 (Expression -> Expression LEQ Expression .) ]
  ! CARET           [ reduce using rule 122 (Expression -> Expression LEQ Expression .) ]
  ! TIMES           [ reduce using rule 122 (Expression -> Expression LEQ Expression .) ]
  ! DIVIDE          [ reduce using rule 122 (Expression -> Expression LEQ Expression .) ]
  ! MOD             [ reduce using rule 122 (Expression -> Expression LEQ Expression .) ]
  ! AMPERS          [ reduce using rule 122 (Expression -> Expression LEQ Expression .) ]
  ! LL              [ reduce using rule 122 (Expression -> Expression LEQ Expression .) ]
  ! GG              [ reduce using rule 122 (Expression -> Expression LEQ Expression .) ]
  ! AMPCAR          [ reduce using rule 122 (Expression -> Expression LEQ Expression .) ]
  ! OROR            [ shift and go to state 167 ]
  ! AMPAMP          [ shift and go to state 182 ]
  ! EQEQ            [ shift and go to state 173 ]
  ! NOTEQ           [ shift and go to state 179 ]
  ! LESS            [ shift and go to state 172 ]
  ! GREAT           [ shift and go to state 169 ]
  ! LEQ             [ shift and go to state 185 ]
  ! GEQ             [ shift and go to state 176 ]


state 231

    (108) Slice -> LBRACK ExpressionOpt . COLON ExpressionOpt RBRACK

    COLON           shift and go to state 249


state 232

    (136) ExpressionOpt -> epsilon .

    COLON           reduce using rule 136 (ExpressionOpt -> epsilon .)
    RBRACK          reduce using rule 136 (ExpressionOpt -> epsilon .)


state 233

    (107) Index -> LBRACK Expression . RBRACK
    (116) Expression -> Expression . OROR Expression
    (117) Expression -> Expression . AMPAMP Expression
    (118) Expression -> Expression . EQEQ Expression
    (119) Expression -> Expression . NOTEQ Expression
    (120) Expression -> Expression . LESS Expression
    (121) Expression -> Expression . GREAT Expression
    (122) Expression -> Expression . LEQ Expression
    (123) Expression -> Expression . GEQ Expression
    (124) Expression -> Expression . PLUS Expression
    (125) Expression -> Expression . MINUS Expression
    (126) Expression -> Expression . OR Expression
    (127) Expression -> Expression . CARET Expression
    (128) Expression -> Expression . TIMES Expression
    (129) Expression -> Expression . DIVIDE Expression
    (130) Expression -> Expression . MOD Expression
    (131) Expression -> Expression . AMPERS Expression
    (132) Expression -> Expression . LL Expression
    (133) Expression -> Expression . GG Expression
    (134) Expression -> Expression . AMPCAR Expression
    (135) ExpressionOpt -> Expression .

    RBRACK          shift and go to state 250
    OROR            shift and go to state 167
    AMPAMP          shift and go to state 182
    EQEQ            shift and go to state 173
    NOTEQ           shift and go to state 179
    LESS            shift and go to state 172
    GREAT           shift and go to state 169
    LEQ             shift and go to state 185
    GEQ             shift and go to state 176
    PLUS            shift and go to state 180
    MINUS           shift and go to state 184
    OR              shift and go to state 177
    CARET           shift and go to state 168
    TIMES           shift and go to state 183
    DIVIDE          shift and go to state 170
    MOD             shift and go to state 181
    AMPERS          shift and go to state 175
    LL              shift and go to state 174
    GG              shift and go to state 178
    AMPCAR          shift and go to state 171
    COLON           reduce using rule 135 (ExpressionOpt -> Expression .)


state 234

    (111) ExpressionListTypeOpt -> epsilon .

    RPAREN          reduce using rule 111 (ExpressionListTypeOpt -> epsilon .)


state 235

    (110) ExpressionListTypeOpt -> ExpressionList .

    RPAREN          reduce using rule 110 (ExpressionListTypeOpt -> ExpressionList .)


state 236

    (109) Arguments -> LPAREN ExpressionListTypeOpt . RPAREN

    RPAREN          shift and go to state 251


state 237

    (106) Selector -> DOT IDENTIFIER .

    PLUSPLUS        reduce using rule 106 (Selector -> DOT IDENTIFIER .)
    MINUSMIN        reduce using rule 106 (Selector -> DOT IDENTIFIER .)
    DOT             reduce using rule 106 (Selector -> DOT IDENTIFIER .)
    LBRACK          reduce using rule 106 (Selector -> DOT IDENTIFIER .)
    LPAREN          reduce using rule 106 (Selector -> DOT IDENTIFIER .)
    OROR            reduce using rule 106 (Selector -> DOT IDENTIFIER .)
    AMPAMP          reduce using rule 106 (Selector -> DOT IDENTIFIER .)
    EQEQ            reduce using rule 106 (Selector -> DOT IDENTIFIER .)
    NOTEQ           reduce using rule 106 (Selector -> DOT IDENTIFIER .)
    LESS            reduce using rule 106 (Selector -> DOT IDENTIFIER .)
    GREAT           reduce using rule 106 (Selector -> DOT IDENTIFIER .)
    LEQ             reduce using rule 106 (Selector -> DOT IDENTIFIER .)
    GEQ             reduce using rule 106 (Selector -> DOT IDENTIFIER .)
    PLUS            reduce using rule 106 (Selector -> DOT IDENTIFIER .)
    MINUS           reduce using rule 106 (Selector -> DOT IDENTIFIER .)
    OR              reduce using rule 106 (Selector -> DOT IDENTIFIER .)
    CARET           reduce using rule 106 (Selector -> DOT IDENTIFIER .)
    TIMES           reduce using rule 106 (Selector -> DOT IDENTIFIER .)
    DIVIDE          reduce using rule 106 (Selector -> DOT IDENTIFIER .)
    MOD             reduce using rule 106 (Selector -> DOT IDENTIFIER .)
    AMPERS          reduce using rule 106 (Selector -> DOT IDENTIFIER .)
    LL              reduce using rule 106 (Selector -> DOT IDENTIFIER .)
    GG              reduce using rule 106 (Selector -> DOT IDENTIFIER .)
    AMPCAR          reduce using rule 106 (Selector -> DOT IDENTIFIER .)
    COMMA           reduce using rule 106 (Selector -> DOT IDENTIFIER .)
    LBRACE          reduce using rule 106 (Selector -> DOT IDENTIFIER .)
    SEMICOL         reduce using rule 106 (Selector -> DOT IDENTIFIER .)
    PLUSEQ          reduce using rule 106 (Selector -> DOT IDENTIFIER .)
    MINUSEQ         reduce using rule 106 (Selector -> DOT IDENTIFIER .)
    TIMESEQ         reduce using rule 106 (Selector -> DOT IDENTIFIER .)
    DIVIDEEQ        reduce using rule 106 (Selector -> DOT IDENTIFIER .)
    MODEQ           reduce using rule 106 (Selector -> DOT IDENTIFIER .)
    AMPEQ           reduce using rule 106 (Selector -> DOT IDENTIFIER .)
    OREQ            reduce using rule 106 (Selector -> DOT IDENTIFIER .)
    CAREQ           reduce using rule 106 (Selector -> DOT IDENTIFIER .)
    LLEQ            reduce using rule 106 (Selector -> DOT IDENTIFIER .)
    GGEQ            reduce using rule 106 (Selector -> DOT IDENTIFIER .)
    EQUAL           reduce using rule 106 (Selector -> DOT IDENTIFIER .)
    RBRACK          reduce using rule 106 (Selector -> DOT IDENTIFIER .)
    RPAREN          reduce using rule 106 (Selector -> DOT IDENTIFIER .)
    COLON           reduce using rule 106 (Selector -> DOT IDENTIFIER .)


state 238

    (44) StatementList -> StatementRep .
    (45) StatementRep -> StatementRep . Statement SEMICOL
    (144) Statement -> . Declaration
    (145) Statement -> . LabeledStmt
    (146) Statement -> . SimpleStmt
    (147) Statement -> . ReturnStmt
    (148) Statement -> . BreakStmt
    (149) Statement -> . ContinueStmt
    (150) Statement -> . GotoStmt
    (151) Statement -> . Block
    (152) Statement -> . IfStmt
    (153) Statement -> . PrintStmt
    (154) Statement -> . ForStmt
    (47) Declaration -> . ConstDecl
    (48) Declaration -> . TypeDecl
    (49) Declaration -> . VarDecl
    (162) LabeledStmt -> . Label COLON Statement
    (157) SimpleStmt -> . epsilon
    (158) SimpleStmt -> . ExpressionStmt
    (159) SimpleStmt -> . IncDecStmt
    (160) SimpleStmt -> . Assignment
    (161) SimpleStmt -> . ShortVarDecl
    (197) ReturnStmt -> . RETURN ExpressionListPureOpt
    (200) BreakStmt -> . BREAK LabelOpt
    (201) ContinueStmt -> . CONTINUE LabelOpt
    (204) GotoStmt -> . GOTO Label
    (42) Block -> . CreateScope LBRACE StatementList RBRACE
    (180) IfStmt -> . IF Expression Block ElseOpt
    (155) PrintStmt -> . PRINT PD Expression
    (156) PrintStmt -> . PRINT PS Expression
    (184) ForStmt -> . CreateForScope FOR ConditionBlockOpt Block
    (52) ConstDecl -> . CONST ConstSpec
    (53) ConstDecl -> . CONST LPAREN ConstSpecRep RPAREN
    (62) TypeDecl -> . TYPE TypeSpec
    (63) TypeDecl -> . TYPE LPAREN TypeSpecRep RPAREN
    (70) VarDecl -> . VAR VarSpec
    (71) VarDecl -> . VAR LPAREN VarSpecRep RPAREN
    (163) Label -> . IDENTIFIER
    (221) epsilon -> .
    (164) ExpressionStmt -> . Expression
    (165) IncDecStmt -> . PrimaryExpr PLUSPLUS
    (166) IncDecStmt -> . PrimaryExpr MINUSMIN
    (167) Assignment -> . ExpressionList assign_op ExpressionList
    (78) ShortVarDecl -> . IDENTIFIER COLONEQ Expression
    (43) CreateScope -> . epsilon
    (185) CreateForScope -> . epsilon
    (115) Expression -> . UnaryExpr
    (116) Expression -> . Expression OROR Expression
    (117) Expression -> . Expression AMPAMP Expression
    (118) Expression -> . Expression EQEQ Expression
    (119) Expression -> . Expression NOTEQ Expression
    (120) Expression -> . Expression LESS Expression
    (121) Expression -> . Expression GREAT Expression
    (122) Expression -> . Expression LEQ Expression
    (123) Expression -> . Expression GEQ Expression
    (124) Expression -> . Expression PLUS Expression
    (125) Expression -> . Expression MINUS Expression
    (126) Expression -> . Expression OR Expression
    (127) Expression -> . Expression CARET Expression
    (128) Expression -> . Expression TIMES Expression
    (129) Expression -> . Expression DIVIDE Expression
    (130) Expression -> . Expression MOD Expression
    (131) Expression -> . Expression AMPERS Expression
    (132) Expression -> . Expression LL Expression
    (133) Expression -> . Expression GG Expression
    (134) Expression -> . Expression AMPCAR Expression
    (100) PrimaryExpr -> . Operand
    (101) PrimaryExpr -> . Conversion
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . PrimaryExpr Index
    (104) PrimaryExpr -> . PrimaryExpr Slice
    (105) PrimaryExpr -> . PrimaryExpr Arguments
    (112) ExpressionList -> . Expression ExpressionRep
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (99) Conversion -> . Type LPAREN Expression RPAREN
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (87) Literal -> . BasicLit
    (98) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (88) BasicLit -> . IntLiteral
    (89) BasicLit -> . FloatLiteral
    (90) BasicLit -> . ImgLiteral
    (91) BasicLit -> . RuneLiteral
    (92) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (93) IntLiteral -> . INTEGER
    (94) FloatLiteral -> . FLOAT
    (95) ImgLiteral -> . IMAGINARY
    (96) RuneLiteral -> . RUNE
    (97) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . TIMES BaseType
    (26) FunctionType -> . FUNC Signature

    RBRACE          reduce using rule 44 (StatementList -> StatementRep .)
    RETURN          shift and go to state 259
    BREAK           shift and go to state 273
    CONTINUE        shift and go to state 266
    GOTO            shift and go to state 277
    IF              shift and go to state 279
    PRINT           shift and go to state 261
    CONST           shift and go to state 14
    TYPE            shift and go to state 23
    VAR             shift and go to state 21
    IDENTIFIER      shift and go to state 268
    SEMICOL         reduce using rule 221 (epsilon -> .)
    LBRACE          reduce using rule 221 (epsilon -> .)
    FOR             reduce using rule 221 (epsilon -> .)
    LPAREN          shift and go to state 119
    PLUS            shift and go to state 107
    MINUS           shift and go to state 101
    TIMES           shift and go to state 116
    AMPERS          shift and go to state 122
    NOT             shift and go to state 106
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 108
    FLOAT           shift and go to state 121
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 95
    STRING          shift and go to state 102
    LBRACK          shift and go to state 66
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53

    CreateForScope                 shift and go to state 258
    UnaryOp                        shift and go to state 105
    ContinueStmt                   shift and go to state 252
    Conversion                     shift and go to state 96
    SimpleStmt                     shift and go to state 275
    Label                          shift and go to state 260
    ExpressionStmt                 shift and go to state 253
    PointerType                    shift and go to state 68
    ForStmt                        shift and go to state 276
    Statement                      shift and go to state 254
    RuneLiteral                    shift and go to state 115
    ImgLiteral                     shift and go to state 112
    FloatLiteral                   shift and go to state 99
    Type                           shift and go to state 100
    IfStmt                         shift and go to state 270
    OperandName                    shift and go to state 103
    ArrayType                      shift and go to state 54
    Assignment                     shift and go to state 255
    TypeName                       shift and go to state 57
    IncDecStmt                     shift and go to state 262
    Declaration                    shift and go to state 267
    FunctionType                   shift and go to state 69
    CreateScope                    shift and go to state 133
    StringLiteral                  shift and go to state 97
    GotoStmt                       shift and go to state 263
    StructType                     shift and go to state 59
    IntLiteral                     shift and go to state 111
    TypeDecl                       shift and go to state 19
    LabeledStmt                    shift and go to state 256
    epsilon                        shift and go to state 269
    UnaryExpr                      shift and go to state 114
    Operand                        shift and go to state 117
    ExpressionList                 shift and go to state 271
    Expression                     shift and go to state 272
    ShortVarDecl                   shift and go to state 278
    Block                          shift and go to state 265
    BreakStmt                      shift and go to state 280
    VarDecl                        shift and go to state 22
    Literal                        shift and go to state 98
    PrintStmt                      shift and go to state 257
    TypeLit                        shift and go to state 56
    BasicLit                       shift and go to state 104
    PrimaryExpr                    shift and go to state 264
    ReturnStmt                     shift and go to state 274
    ConstDecl                      shift and go to state 18

state 239

    (46) StatementRep -> epsilon .

    RETURN          reduce using rule 46 (StatementRep -> epsilon .)
    BREAK           reduce using rule 46 (StatementRep -> epsilon .)
    CONTINUE        reduce using rule 46 (StatementRep -> epsilon .)
    GOTO            reduce using rule 46 (StatementRep -> epsilon .)
    IF              reduce using rule 46 (StatementRep -> epsilon .)
    PRINT           reduce using rule 46 (StatementRep -> epsilon .)
    CONST           reduce using rule 46 (StatementRep -> epsilon .)
    TYPE            reduce using rule 46 (StatementRep -> epsilon .)
    VAR             reduce using rule 46 (StatementRep -> epsilon .)
    IDENTIFIER      reduce using rule 46 (StatementRep -> epsilon .)
    LPAREN          reduce using rule 46 (StatementRep -> epsilon .)
    PLUS            reduce using rule 46 (StatementRep -> epsilon .)
    MINUS           reduce using rule 46 (StatementRep -> epsilon .)
    TIMES           reduce using rule 46 (StatementRep -> epsilon .)
    AMPERS          reduce using rule 46 (StatementRep -> epsilon .)
    NOT             reduce using rule 46 (StatementRep -> epsilon .)
    TYPEX           reduce using rule 46 (StatementRep -> epsilon .)
    TTYPE           reduce using rule 46 (StatementRep -> epsilon .)
    INTEGER         reduce using rule 46 (StatementRep -> epsilon .)
    FLOAT           reduce using rule 46 (StatementRep -> epsilon .)
    IMAGINARY       reduce using rule 46 (StatementRep -> epsilon .)
    RUNE            reduce using rule 46 (StatementRep -> epsilon .)
    STRING          reduce using rule 46 (StatementRep -> epsilon .)
    LBRACK          reduce using rule 46 (StatementRep -> epsilon .)
    STRUCT          reduce using rule 46 (StatementRep -> epsilon .)
    FUNC            reduce using rule 46 (StatementRep -> epsilon .)
    SEMICOL         reduce using rule 46 (StatementRep -> epsilon .)
    LBRACE          reduce using rule 46 (StatementRep -> epsilon .)
    FOR             reduce using rule 46 (StatementRep -> epsilon .)
    RBRACE          reduce using rule 46 (StatementRep -> epsilon .)


state 240

    (42) Block -> CreateScope LBRACE StatementList . RBRACE

    RBRACE          shift and go to state 281


state 241

    (40) ParameterDecl -> IdentifierList . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . TIMES BaseType
    (26) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 62
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    LBRACK          shift and go to state 66
    STRUCT          shift and go to state 65
    TIMES           shift and go to state 61
    FUNC            shift and go to state 53

    StructType                     shift and go to state 59
    Type                           shift and go to state 282
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 57
    PointerType                    shift and go to state 68
    FunctionType                   shift and go to state 69
    TypeLit                        shift and go to state 56

state 242

    (41) ParameterDecl -> Type .

    COMMA           reduce using rule 41 (ParameterDecl -> Type .)
    RPAREN          reduce using rule 41 (ParameterDecl -> Type .)


state 243

    (38) ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA ParameterDecl .

    COMMA           reduce using rule 38 (ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA ParameterDecl .)
    RPAREN          reduce using rule 38 (ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA ParameterDecl .)


state 244

    (39) ParameterDeclCommaRep -> ParameterDecl COMMA ParameterDecl .

    COMMA           reduce using rule 39 (ParameterDeclCommaRep -> ParameterDecl COMMA ParameterDecl .)
    RPAREN          reduce using rule 39 (ParameterDeclCommaRep -> ParameterDecl COMMA ParameterDecl .)


state 245

    (113) ExpressionRep -> ExpressionRep COMMA . Expression
    (115) Expression -> . UnaryExpr
    (116) Expression -> . Expression OROR Expression
    (117) Expression -> . Expression AMPAMP Expression
    (118) Expression -> . Expression EQEQ Expression
    (119) Expression -> . Expression NOTEQ Expression
    (120) Expression -> . Expression LESS Expression
    (121) Expression -> . Expression GREAT Expression
    (122) Expression -> . Expression LEQ Expression
    (123) Expression -> . Expression GEQ Expression
    (124) Expression -> . Expression PLUS Expression
    (125) Expression -> . Expression MINUS Expression
    (126) Expression -> . Expression OR Expression
    (127) Expression -> . Expression CARET Expression
    (128) Expression -> . Expression TIMES Expression
    (129) Expression -> . Expression DIVIDE Expression
    (130) Expression -> . Expression MOD Expression
    (131) Expression -> . Expression AMPERS Expression
    (132) Expression -> . Expression LL Expression
    (133) Expression -> . Expression GG Expression
    (134) Expression -> . Expression AMPCAR Expression
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (100) PrimaryExpr -> . Operand
    (101) PrimaryExpr -> . Conversion
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . PrimaryExpr Index
    (104) PrimaryExpr -> . PrimaryExpr Slice
    (105) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (99) Conversion -> . Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (98) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (88) BasicLit -> . IntLiteral
    (89) BasicLit -> . FloatLiteral
    (90) BasicLit -> . ImgLiteral
    (91) BasicLit -> . RuneLiteral
    (92) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (93) IntLiteral -> . INTEGER
    (94) FloatLiteral -> . FLOAT
    (95) ImgLiteral -> . IMAGINARY
    (96) RuneLiteral -> . RUNE
    (97) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . TIMES BaseType
    (26) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 107
    MINUS           shift and go to state 101
    TIMES           shift and go to state 116
    AMPERS          shift and go to state 122
    NOT             shift and go to state 106
    LPAREN          shift and go to state 119
    IDENTIFIER      shift and go to state 110
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 108
    FLOAT           shift and go to state 121
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 95
    STRING          shift and go to state 102
    LBRACK          shift and go to state 66
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53

    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 123
    Conversion                     shift and go to state 96
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 98
    FloatLiteral                   shift and go to state 99
    Type                           shift and go to state 100
    OperandName                    shift and go to state 103
    BasicLit                       shift and go to state 104
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 59
    IntLiteral                     shift and go to state 111
    UnaryExpr                      shift and go to state 114
    RuneLiteral                    shift and go to state 115
    Operand                        shift and go to state 117
    Expression                     shift and go to state 283
    PointerType                    shift and go to state 68
    StringLiteral                  shift and go to state 97
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 112
    FunctionType                   shift and go to state 69

state 246

    (18) FieldDeclRep -> FieldDeclRep FieldDecl SEMICOL .

    RBRACE          reduce using rule 18 (FieldDeclRep -> FieldDeclRep FieldDecl SEMICOL .)
    IDENTIFIER      reduce using rule 18 (FieldDeclRep -> FieldDeclRep FieldDecl SEMICOL .)


state 247

    (20) FieldDecl -> IdentifierList Type . TagOpt
    (21) TagOpt -> . Tag
    (22) TagOpt -> . epsilon
    (23) Tag -> . STRING
    (221) epsilon -> .

    STRING          shift and go to state 284
    SEMICOL         reduce using rule 221 (epsilon -> .)

    epsilon                        shift and go to state 285
    Tag                            shift and go to state 286
    TagOpt                         shift and go to state 287

state 248

    (99) Conversion -> Type LPAREN Expression RPAREN .

    DOT             reduce using rule 99 (Conversion -> Type LPAREN Expression RPAREN .)
    LBRACK          reduce using rule 99 (Conversion -> Type LPAREN Expression RPAREN .)
    LPAREN          reduce using rule 99 (Conversion -> Type LPAREN Expression RPAREN .)
    OROR            reduce using rule 99 (Conversion -> Type LPAREN Expression RPAREN .)
    AMPAMP          reduce using rule 99 (Conversion -> Type LPAREN Expression RPAREN .)
    EQEQ            reduce using rule 99 (Conversion -> Type LPAREN Expression RPAREN .)
    NOTEQ           reduce using rule 99 (Conversion -> Type LPAREN Expression RPAREN .)
    LESS            reduce using rule 99 (Conversion -> Type LPAREN Expression RPAREN .)
    GREAT           reduce using rule 99 (Conversion -> Type LPAREN Expression RPAREN .)
    LEQ             reduce using rule 99 (Conversion -> Type LPAREN Expression RPAREN .)
    GEQ             reduce using rule 99 (Conversion -> Type LPAREN Expression RPAREN .)
    PLUS            reduce using rule 99 (Conversion -> Type LPAREN Expression RPAREN .)
    MINUS           reduce using rule 99 (Conversion -> Type LPAREN Expression RPAREN .)
    OR              reduce using rule 99 (Conversion -> Type LPAREN Expression RPAREN .)
    CARET           reduce using rule 99 (Conversion -> Type LPAREN Expression RPAREN .)
    TIMES           reduce using rule 99 (Conversion -> Type LPAREN Expression RPAREN .)
    DIVIDE          reduce using rule 99 (Conversion -> Type LPAREN Expression RPAREN .)
    MOD             reduce using rule 99 (Conversion -> Type LPAREN Expression RPAREN .)
    AMPERS          reduce using rule 99 (Conversion -> Type LPAREN Expression RPAREN .)
    LL              reduce using rule 99 (Conversion -> Type LPAREN Expression RPAREN .)
    GG              reduce using rule 99 (Conversion -> Type LPAREN Expression RPAREN .)
    AMPCAR          reduce using rule 99 (Conversion -> Type LPAREN Expression RPAREN .)
    RBRACK          reduce using rule 99 (Conversion -> Type LPAREN Expression RPAREN .)
    COMMA           reduce using rule 99 (Conversion -> Type LPAREN Expression RPAREN .)
    SEMICOL         reduce using rule 99 (Conversion -> Type LPAREN Expression RPAREN .)
    RPAREN          reduce using rule 99 (Conversion -> Type LPAREN Expression RPAREN .)
    COLON           reduce using rule 99 (Conversion -> Type LPAREN Expression RPAREN .)
    PLUSEQ          reduce using rule 99 (Conversion -> Type LPAREN Expression RPAREN .)
    MINUSEQ         reduce using rule 99 (Conversion -> Type LPAREN Expression RPAREN .)
    TIMESEQ         reduce using rule 99 (Conversion -> Type LPAREN Expression RPAREN .)
    DIVIDEEQ        reduce using rule 99 (Conversion -> Type LPAREN Expression RPAREN .)
    MODEQ           reduce using rule 99 (Conversion -> Type LPAREN Expression RPAREN .)
    AMPEQ           reduce using rule 99 (Conversion -> Type LPAREN Expression RPAREN .)
    OREQ            reduce using rule 99 (Conversion -> Type LPAREN Expression RPAREN .)
    CAREQ           reduce using rule 99 (Conversion -> Type LPAREN Expression RPAREN .)
    LLEQ            reduce using rule 99 (Conversion -> Type LPAREN Expression RPAREN .)
    GGEQ            reduce using rule 99 (Conversion -> Type LPAREN Expression RPAREN .)
    EQUAL           reduce using rule 99 (Conversion -> Type LPAREN Expression RPAREN .)
    LBRACE          reduce using rule 99 (Conversion -> Type LPAREN Expression RPAREN .)
    PLUSPLUS        reduce using rule 99 (Conversion -> Type LPAREN Expression RPAREN .)
    MINUSMIN        reduce using rule 99 (Conversion -> Type LPAREN Expression RPAREN .)


state 249

    (108) Slice -> LBRACK ExpressionOpt COLON . ExpressionOpt RBRACK
    (135) ExpressionOpt -> . Expression
    (136) ExpressionOpt -> . epsilon
    (115) Expression -> . UnaryExpr
    (116) Expression -> . Expression OROR Expression
    (117) Expression -> . Expression AMPAMP Expression
    (118) Expression -> . Expression EQEQ Expression
    (119) Expression -> . Expression NOTEQ Expression
    (120) Expression -> . Expression LESS Expression
    (121) Expression -> . Expression GREAT Expression
    (122) Expression -> . Expression LEQ Expression
    (123) Expression -> . Expression GEQ Expression
    (124) Expression -> . Expression PLUS Expression
    (125) Expression -> . Expression MINUS Expression
    (126) Expression -> . Expression OR Expression
    (127) Expression -> . Expression CARET Expression
    (128) Expression -> . Expression TIMES Expression
    (129) Expression -> . Expression DIVIDE Expression
    (130) Expression -> . Expression MOD Expression
    (131) Expression -> . Expression AMPERS Expression
    (132) Expression -> . Expression LL Expression
    (133) Expression -> . Expression GG Expression
    (134) Expression -> . Expression AMPCAR Expression
    (221) epsilon -> .
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (100) PrimaryExpr -> . Operand
    (101) PrimaryExpr -> . Conversion
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . PrimaryExpr Index
    (104) PrimaryExpr -> . PrimaryExpr Slice
    (105) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (99) Conversion -> . Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (98) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (88) BasicLit -> . IntLiteral
    (89) BasicLit -> . FloatLiteral
    (90) BasicLit -> . ImgLiteral
    (91) BasicLit -> . RuneLiteral
    (92) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (93) IntLiteral -> . INTEGER
    (94) FloatLiteral -> . FLOAT
    (95) ImgLiteral -> . IMAGINARY
    (96) RuneLiteral -> . RUNE
    (97) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . TIMES BaseType
    (26) FunctionType -> . FUNC Signature

    RBRACK          reduce using rule 221 (epsilon -> .)
    PLUS            shift and go to state 107
    MINUS           shift and go to state 101
    TIMES           shift and go to state 116
    AMPERS          shift and go to state 122
    NOT             shift and go to state 106
    LPAREN          shift and go to state 119
    IDENTIFIER      shift and go to state 110
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 108
    FLOAT           shift and go to state 121
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 95
    STRING          shift and go to state 102
    LBRACK          shift and go to state 66
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53

    Conversion                     shift and go to state 96
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 123
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 98
    FloatLiteral                   shift and go to state 99
    Type                           shift and go to state 100
    OperandName                    shift and go to state 103
    BasicLit                       shift and go to state 104
    TypeName                       shift and go to state 57
    ExpressionOpt                  shift and go to state 288
    StructType                     shift and go to state 59
    IntLiteral                     shift and go to state 111
    epsilon                        shift and go to state 232
    UnaryExpr                      shift and go to state 114
    RuneLiteral                    shift and go to state 115
    Operand                        shift and go to state 117
    Expression                     shift and go to state 289
    PointerType                    shift and go to state 68
    StringLiteral                  shift and go to state 97
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 112
    FunctionType                   shift and go to state 69

state 250

    (107) Index -> LBRACK Expression RBRACK .

    PLUSPLUS        reduce using rule 107 (Index -> LBRACK Expression RBRACK .)
    MINUSMIN        reduce using rule 107 (Index -> LBRACK Expression RBRACK .)
    DOT             reduce using rule 107 (Index -> LBRACK Expression RBRACK .)
    LBRACK          reduce using rule 107 (Index -> LBRACK Expression RBRACK .)
    LPAREN          reduce using rule 107 (Index -> LBRACK Expression RBRACK .)
    OROR            reduce using rule 107 (Index -> LBRACK Expression RBRACK .)
    AMPAMP          reduce using rule 107 (Index -> LBRACK Expression RBRACK .)
    EQEQ            reduce using rule 107 (Index -> LBRACK Expression RBRACK .)
    NOTEQ           reduce using rule 107 (Index -> LBRACK Expression RBRACK .)
    LESS            reduce using rule 107 (Index -> LBRACK Expression RBRACK .)
    GREAT           reduce using rule 107 (Index -> LBRACK Expression RBRACK .)
    LEQ             reduce using rule 107 (Index -> LBRACK Expression RBRACK .)
    GEQ             reduce using rule 107 (Index -> LBRACK Expression RBRACK .)
    PLUS            reduce using rule 107 (Index -> LBRACK Expression RBRACK .)
    MINUS           reduce using rule 107 (Index -> LBRACK Expression RBRACK .)
    OR              reduce using rule 107 (Index -> LBRACK Expression RBRACK .)
    CARET           reduce using rule 107 (Index -> LBRACK Expression RBRACK .)
    TIMES           reduce using rule 107 (Index -> LBRACK Expression RBRACK .)
    DIVIDE          reduce using rule 107 (Index -> LBRACK Expression RBRACK .)
    MOD             reduce using rule 107 (Index -> LBRACK Expression RBRACK .)
    AMPERS          reduce using rule 107 (Index -> LBRACK Expression RBRACK .)
    LL              reduce using rule 107 (Index -> LBRACK Expression RBRACK .)
    GG              reduce using rule 107 (Index -> LBRACK Expression RBRACK .)
    AMPCAR          reduce using rule 107 (Index -> LBRACK Expression RBRACK .)
    COMMA           reduce using rule 107 (Index -> LBRACK Expression RBRACK .)
    SEMICOL         reduce using rule 107 (Index -> LBRACK Expression RBRACK .)
    PLUSEQ          reduce using rule 107 (Index -> LBRACK Expression RBRACK .)
    MINUSEQ         reduce using rule 107 (Index -> LBRACK Expression RBRACK .)
    TIMESEQ         reduce using rule 107 (Index -> LBRACK Expression RBRACK .)
    DIVIDEEQ        reduce using rule 107 (Index -> LBRACK Expression RBRACK .)
    MODEQ           reduce using rule 107 (Index -> LBRACK Expression RBRACK .)
    AMPEQ           reduce using rule 107 (Index -> LBRACK Expression RBRACK .)
    OREQ            reduce using rule 107 (Index -> LBRACK Expression RBRACK .)
    CAREQ           reduce using rule 107 (Index -> LBRACK Expression RBRACK .)
    LLEQ            reduce using rule 107 (Index -> LBRACK Expression RBRACK .)
    GGEQ            reduce using rule 107 (Index -> LBRACK Expression RBRACK .)
    EQUAL           reduce using rule 107 (Index -> LBRACK Expression RBRACK .)
    LBRACE          reduce using rule 107 (Index -> LBRACK Expression RBRACK .)
    RBRACK          reduce using rule 107 (Index -> LBRACK Expression RBRACK .)
    RPAREN          reduce using rule 107 (Index -> LBRACK Expression RBRACK .)
    COLON           reduce using rule 107 (Index -> LBRACK Expression RBRACK .)


state 251

    (109) Arguments -> LPAREN ExpressionListTypeOpt RPAREN .

    PLUSPLUS        reduce using rule 109 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    MINUSMIN        reduce using rule 109 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    DOT             reduce using rule 109 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LBRACK          reduce using rule 109 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LPAREN          reduce using rule 109 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    OROR            reduce using rule 109 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    AMPAMP          reduce using rule 109 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    EQEQ            reduce using rule 109 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    NOTEQ           reduce using rule 109 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LESS            reduce using rule 109 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    GREAT           reduce using rule 109 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LEQ             reduce using rule 109 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    GEQ             reduce using rule 109 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    PLUS            reduce using rule 109 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    MINUS           reduce using rule 109 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    OR              reduce using rule 109 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    CARET           reduce using rule 109 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    TIMES           reduce using rule 109 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    DIVIDE          reduce using rule 109 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    MOD             reduce using rule 109 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    AMPERS          reduce using rule 109 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LL              reduce using rule 109 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    GG              reduce using rule 109 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    AMPCAR          reduce using rule 109 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    COMMA           reduce using rule 109 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    SEMICOL         reduce using rule 109 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    PLUSEQ          reduce using rule 109 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    MINUSEQ         reduce using rule 109 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    TIMESEQ         reduce using rule 109 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    DIVIDEEQ        reduce using rule 109 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    MODEQ           reduce using rule 109 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    AMPEQ           reduce using rule 109 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    OREQ            reduce using rule 109 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    CAREQ           reduce using rule 109 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LLEQ            reduce using rule 109 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    GGEQ            reduce using rule 109 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    EQUAL           reduce using rule 109 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LBRACE          reduce using rule 109 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    RBRACK          reduce using rule 109 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    RPAREN          reduce using rule 109 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    COLON           reduce using rule 109 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)


state 252

    (149) Statement -> ContinueStmt .

    SEMICOL         reduce using rule 149 (Statement -> ContinueStmt .)


state 253

    (158) SimpleStmt -> ExpressionStmt .

    SEMICOL         reduce using rule 158 (SimpleStmt -> ExpressionStmt .)
    LBRACE          reduce using rule 158 (SimpleStmt -> ExpressionStmt .)


state 254

    (45) StatementRep -> StatementRep Statement . SEMICOL

    SEMICOL         shift and go to state 290


state 255

    (160) SimpleStmt -> Assignment .

    SEMICOL         reduce using rule 160 (SimpleStmt -> Assignment .)
    LBRACE          reduce using rule 160 (SimpleStmt -> Assignment .)


state 256

    (145) Statement -> LabeledStmt .

    SEMICOL         reduce using rule 145 (Statement -> LabeledStmt .)


state 257

    (153) Statement -> PrintStmt .

    SEMICOL         reduce using rule 153 (Statement -> PrintStmt .)


state 258

    (184) ForStmt -> CreateForScope . FOR ConditionBlockOpt Block

    FOR             shift and go to state 291


state 259

    (197) ReturnStmt -> RETURN . ExpressionListPureOpt
    (198) ExpressionListPureOpt -> . ExpressionList
    (199) ExpressionListPureOpt -> . epsilon
    (112) ExpressionList -> . Expression ExpressionRep
    (221) epsilon -> .
    (115) Expression -> . UnaryExpr
    (116) Expression -> . Expression OROR Expression
    (117) Expression -> . Expression AMPAMP Expression
    (118) Expression -> . Expression EQEQ Expression
    (119) Expression -> . Expression NOTEQ Expression
    (120) Expression -> . Expression LESS Expression
    (121) Expression -> . Expression GREAT Expression
    (122) Expression -> . Expression LEQ Expression
    (123) Expression -> . Expression GEQ Expression
    (124) Expression -> . Expression PLUS Expression
    (125) Expression -> . Expression MINUS Expression
    (126) Expression -> . Expression OR Expression
    (127) Expression -> . Expression CARET Expression
    (128) Expression -> . Expression TIMES Expression
    (129) Expression -> . Expression DIVIDE Expression
    (130) Expression -> . Expression MOD Expression
    (131) Expression -> . Expression AMPERS Expression
    (132) Expression -> . Expression LL Expression
    (133) Expression -> . Expression GG Expression
    (134) Expression -> . Expression AMPCAR Expression
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (100) PrimaryExpr -> . Operand
    (101) PrimaryExpr -> . Conversion
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . PrimaryExpr Index
    (104) PrimaryExpr -> . PrimaryExpr Slice
    (105) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (99) Conversion -> . Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (98) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (88) BasicLit -> . IntLiteral
    (89) BasicLit -> . FloatLiteral
    (90) BasicLit -> . ImgLiteral
    (91) BasicLit -> . RuneLiteral
    (92) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (93) IntLiteral -> . INTEGER
    (94) FloatLiteral -> . FLOAT
    (95) ImgLiteral -> . IMAGINARY
    (96) RuneLiteral -> . RUNE
    (97) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . TIMES BaseType
    (26) FunctionType -> . FUNC Signature

    SEMICOL         reduce using rule 221 (epsilon -> .)
    PLUS            shift and go to state 107
    MINUS           shift and go to state 101
    TIMES           shift and go to state 116
    AMPERS          shift and go to state 122
    NOT             shift and go to state 106
    LPAREN          shift and go to state 119
    IDENTIFIER      shift and go to state 110
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 108
    FLOAT           shift and go to state 121
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 95
    STRING          shift and go to state 102
    LBRACK          shift and go to state 66
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53

    UnaryOp                        shift and go to state 105
    Conversion                     shift and go to state 96
    ExpressionListPureOpt          shift and go to state 292
    Literal                        shift and go to state 98
    FloatLiteral                   shift and go to state 99
    Type                           shift and go to state 100
    OperandName                    shift and go to state 103
    BasicLit                       shift and go to state 104
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 59
    IntLiteral                     shift and go to state 111
    ImgLiteral                     shift and go to state 112
    epsilon                        shift and go to state 293
    UnaryExpr                      shift and go to state 114
    RuneLiteral                    shift and go to state 115
    PrimaryExpr                    shift and go to state 123
    ExpressionList                 shift and go to state 294
    ArrayType                      shift and go to state 54
    Expression                     shift and go to state 145
    PointerType                    shift and go to state 68
    StringLiteral                  shift and go to state 97
    TypeLit                        shift and go to state 56
    Operand                        shift and go to state 117
    FunctionType                   shift and go to state 69

state 260

    (162) LabeledStmt -> Label . COLON Statement

    COLON           shift and go to state 295


state 261

    (155) PrintStmt -> PRINT . PD Expression
    (156) PrintStmt -> PRINT . PS Expression

    PD              shift and go to state 297
    PS              shift and go to state 296


state 262

    (159) SimpleStmt -> IncDecStmt .

    SEMICOL         reduce using rule 159 (SimpleStmt -> IncDecStmt .)
    LBRACE          reduce using rule 159 (SimpleStmt -> IncDecStmt .)


state 263

    (150) Statement -> GotoStmt .

    SEMICOL         reduce using rule 150 (Statement -> GotoStmt .)


state 264

    (165) IncDecStmt -> PrimaryExpr . PLUSPLUS
    (166) IncDecStmt -> PrimaryExpr . MINUSMIN
    (102) PrimaryExpr -> PrimaryExpr . Selector
    (103) PrimaryExpr -> PrimaryExpr . Index
    (104) PrimaryExpr -> PrimaryExpr . Slice
    (105) PrimaryExpr -> PrimaryExpr . Arguments
    (137) UnaryExpr -> PrimaryExpr .
    (106) Selector -> . DOT IDENTIFIER
    (107) Index -> . LBRACK Expression RBRACK
    (108) Slice -> . LBRACK ExpressionOpt COLON ExpressionOpt RBRACK
    (109) Arguments -> . LPAREN ExpressionListTypeOpt RPAREN

    PLUSPLUS        shift and go to state 298
    MINUSMIN        shift and go to state 299
    OROR            reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    AMPAMP          reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    EQEQ            reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    NOTEQ           reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    LESS            reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    GREAT           reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    LEQ             reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    GEQ             reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    PLUS            reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    MINUS           reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    OR              reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    CARET           reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    TIMES           reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    DIVIDE          reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    MOD             reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    AMPERS          reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    LL              reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    GG              reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    AMPCAR          reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    COMMA           reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    SEMICOL         reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    PLUSEQ          reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    MINUSEQ         reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    TIMESEQ         reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    DIVIDEEQ        reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    MODEQ           reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    AMPEQ           reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    OREQ            reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    CAREQ           reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    LLEQ            reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    GGEQ            reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    EQUAL           reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    LBRACE          reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    DOT             shift and go to state 192
    LBRACK          shift and go to state 188
    LPAREN          shift and go to state 191

    Index                          shift and go to state 186
    Slice                          shift and go to state 187
    Selector                       shift and go to state 189
    Arguments                      shift and go to state 190

state 265

    (151) Statement -> Block .

    SEMICOL         reduce using rule 151 (Statement -> Block .)


state 266

    (201) ContinueStmt -> CONTINUE . LabelOpt
    (202) LabelOpt -> . Label
    (203) LabelOpt -> . epsilon
    (163) Label -> . IDENTIFIER
    (221) epsilon -> .

    IDENTIFIER      shift and go to state 301
    SEMICOL         reduce using rule 221 (epsilon -> .)

    epsilon                        shift and go to state 300
    LabelOpt                       shift and go to state 302
    Label                          shift and go to state 303

state 267

    (144) Statement -> Declaration .

    SEMICOL         reduce using rule 144 (Statement -> Declaration .)


state 268

    (163) Label -> IDENTIFIER .
    (78) ShortVarDecl -> IDENTIFIER . COLONEQ Expression
    (98) OperandName -> IDENTIFIER .

    COLON           reduce using rule 163 (Label -> IDENTIFIER .)
    COLONEQ         shift and go to state 304
    PLUSPLUS        reduce using rule 98 (OperandName -> IDENTIFIER .)
    MINUSMIN        reduce using rule 98 (OperandName -> IDENTIFIER .)
    DOT             reduce using rule 98 (OperandName -> IDENTIFIER .)
    LBRACK          reduce using rule 98 (OperandName -> IDENTIFIER .)
    LPAREN          reduce using rule 98 (OperandName -> IDENTIFIER .)
    OROR            reduce using rule 98 (OperandName -> IDENTIFIER .)
    AMPAMP          reduce using rule 98 (OperandName -> IDENTIFIER .)
    EQEQ            reduce using rule 98 (OperandName -> IDENTIFIER .)
    NOTEQ           reduce using rule 98 (OperandName -> IDENTIFIER .)
    LESS            reduce using rule 98 (OperandName -> IDENTIFIER .)
    GREAT           reduce using rule 98 (OperandName -> IDENTIFIER .)
    LEQ             reduce using rule 98 (OperandName -> IDENTIFIER .)
    GEQ             reduce using rule 98 (OperandName -> IDENTIFIER .)
    PLUS            reduce using rule 98 (OperandName -> IDENTIFIER .)
    MINUS           reduce using rule 98 (OperandName -> IDENTIFIER .)
    OR              reduce using rule 98 (OperandName -> IDENTIFIER .)
    CARET           reduce using rule 98 (OperandName -> IDENTIFIER .)
    TIMES           reduce using rule 98 (OperandName -> IDENTIFIER .)
    DIVIDE          reduce using rule 98 (OperandName -> IDENTIFIER .)
    MOD             reduce using rule 98 (OperandName -> IDENTIFIER .)
    AMPERS          reduce using rule 98 (OperandName -> IDENTIFIER .)
    LL              reduce using rule 98 (OperandName -> IDENTIFIER .)
    GG              reduce using rule 98 (OperandName -> IDENTIFIER .)
    AMPCAR          reduce using rule 98 (OperandName -> IDENTIFIER .)
    COMMA           reduce using rule 98 (OperandName -> IDENTIFIER .)
    SEMICOL         reduce using rule 98 (OperandName -> IDENTIFIER .)
    PLUSEQ          reduce using rule 98 (OperandName -> IDENTIFIER .)
    MINUSEQ         reduce using rule 98 (OperandName -> IDENTIFIER .)
    TIMESEQ         reduce using rule 98 (OperandName -> IDENTIFIER .)
    DIVIDEEQ        reduce using rule 98 (OperandName -> IDENTIFIER .)
    MODEQ           reduce using rule 98 (OperandName -> IDENTIFIER .)
    AMPEQ           reduce using rule 98 (OperandName -> IDENTIFIER .)
    OREQ            reduce using rule 98 (OperandName -> IDENTIFIER .)
    CAREQ           reduce using rule 98 (OperandName -> IDENTIFIER .)
    LLEQ            reduce using rule 98 (OperandName -> IDENTIFIER .)
    GGEQ            reduce using rule 98 (OperandName -> IDENTIFIER .)
    EQUAL           reduce using rule 98 (OperandName -> IDENTIFIER .)


state 269

    (157) SimpleStmt -> epsilon .
    (43) CreateScope -> epsilon .
    (185) CreateForScope -> epsilon .

    SEMICOL         reduce using rule 157 (SimpleStmt -> epsilon .)
    LBRACE          reduce using rule 43 (CreateScope -> epsilon .)
    FOR             reduce using rule 185 (CreateForScope -> epsilon .)


state 270

    (152) Statement -> IfStmt .

    SEMICOL         reduce using rule 152 (Statement -> IfStmt .)


state 271

    (167) Assignment -> ExpressionList . assign_op ExpressionList
    (168) assign_op -> . AssignOp
    (169) AssignOp -> . PLUSEQ
    (170) AssignOp -> . MINUSEQ
    (171) AssignOp -> . TIMESEQ
    (172) AssignOp -> . DIVIDEEQ
    (173) AssignOp -> . MODEQ
    (174) AssignOp -> . AMPEQ
    (175) AssignOp -> . OREQ
    (176) AssignOp -> . CAREQ
    (177) AssignOp -> . LLEQ
    (178) AssignOp -> . GGEQ
    (179) AssignOp -> . EQUAL

    PLUSEQ          shift and go to state 309
    MINUSEQ         shift and go to state 314
    TIMESEQ         shift and go to state 308
    DIVIDEEQ        shift and go to state 317
    MODEQ           shift and go to state 310
    AMPEQ           shift and go to state 315
    OREQ            shift and go to state 313
    CAREQ           shift and go to state 307
    LLEQ            shift and go to state 312
    GGEQ            shift and go to state 311
    EQUAL           shift and go to state 306

    AssignOp                       shift and go to state 305
    assign_op                      shift and go to state 316

state 272

    (164) ExpressionStmt -> Expression .
    (116) Expression -> Expression . OROR Expression
    (117) Expression -> Expression . AMPAMP Expression
    (118) Expression -> Expression . EQEQ Expression
    (119) Expression -> Expression . NOTEQ Expression
    (120) Expression -> Expression . LESS Expression
    (121) Expression -> Expression . GREAT Expression
    (122) Expression -> Expression . LEQ Expression
    (123) Expression -> Expression . GEQ Expression
    (124) Expression -> Expression . PLUS Expression
    (125) Expression -> Expression . MINUS Expression
    (126) Expression -> Expression . OR Expression
    (127) Expression -> Expression . CARET Expression
    (128) Expression -> Expression . TIMES Expression
    (129) Expression -> Expression . DIVIDE Expression
    (130) Expression -> Expression . MOD Expression
    (131) Expression -> Expression . AMPERS Expression
    (132) Expression -> Expression . LL Expression
    (133) Expression -> Expression . GG Expression
    (134) Expression -> Expression . AMPCAR Expression
    (112) ExpressionList -> Expression . ExpressionRep
    (113) ExpressionRep -> . ExpressionRep COMMA Expression
    (114) ExpressionRep -> . epsilon
    (221) epsilon -> .

    SEMICOL         reduce using rule 164 (ExpressionStmt -> Expression .)
    LBRACE          reduce using rule 164 (ExpressionStmt -> Expression .)
    OROR            shift and go to state 167
    AMPAMP          shift and go to state 182
    EQEQ            shift and go to state 173
    NOTEQ           shift and go to state 179
    LESS            shift and go to state 172
    GREAT           shift and go to state 169
    LEQ             shift and go to state 185
    GEQ             shift and go to state 176
    PLUS            shift and go to state 180
    MINUS           shift and go to state 184
    OR              shift and go to state 177
    CARET           shift and go to state 168
    TIMES           shift and go to state 183
    DIVIDE          shift and go to state 170
    MOD             shift and go to state 181
    AMPERS          shift and go to state 175
    LL              shift and go to state 174
    GG              shift and go to state 178
    AMPCAR          shift and go to state 171
    COMMA           reduce using rule 221 (epsilon -> .)
    PLUSEQ          reduce using rule 221 (epsilon -> .)
    MINUSEQ         reduce using rule 221 (epsilon -> .)
    TIMESEQ         reduce using rule 221 (epsilon -> .)
    DIVIDEEQ        reduce using rule 221 (epsilon -> .)
    MODEQ           reduce using rule 221 (epsilon -> .)
    AMPEQ           reduce using rule 221 (epsilon -> .)
    OREQ            reduce using rule 221 (epsilon -> .)
    CAREQ           reduce using rule 221 (epsilon -> .)
    LLEQ            reduce using rule 221 (epsilon -> .)
    GGEQ            reduce using rule 221 (epsilon -> .)
    EQUAL           reduce using rule 221 (epsilon -> .)

    epsilon                        shift and go to state 202
    ExpressionRep                  shift and go to state 201

state 273

    (200) BreakStmt -> BREAK . LabelOpt
    (202) LabelOpt -> . Label
    (203) LabelOpt -> . epsilon
    (163) Label -> . IDENTIFIER
    (221) epsilon -> .

    IDENTIFIER      shift and go to state 301
    SEMICOL         reduce using rule 221 (epsilon -> .)

    epsilon                        shift and go to state 300
    LabelOpt                       shift and go to state 318
    Label                          shift and go to state 303

state 274

    (147) Statement -> ReturnStmt .

    SEMICOL         reduce using rule 147 (Statement -> ReturnStmt .)


state 275

    (146) Statement -> SimpleStmt .

    SEMICOL         reduce using rule 146 (Statement -> SimpleStmt .)


state 276

    (154) Statement -> ForStmt .

    SEMICOL         reduce using rule 154 (Statement -> ForStmt .)


state 277

    (204) GotoStmt -> GOTO . Label
    (163) Label -> . IDENTIFIER

    IDENTIFIER      shift and go to state 301

    Label                          shift and go to state 319

state 278

    (161) SimpleStmt -> ShortVarDecl .

    SEMICOL         reduce using rule 161 (SimpleStmt -> ShortVarDecl .)
    LBRACE          reduce using rule 161 (SimpleStmt -> ShortVarDecl .)


state 279

    (180) IfStmt -> IF . Expression Block ElseOpt
    (115) Expression -> . UnaryExpr
    (116) Expression -> . Expression OROR Expression
    (117) Expression -> . Expression AMPAMP Expression
    (118) Expression -> . Expression EQEQ Expression
    (119) Expression -> . Expression NOTEQ Expression
    (120) Expression -> . Expression LESS Expression
    (121) Expression -> . Expression GREAT Expression
    (122) Expression -> . Expression LEQ Expression
    (123) Expression -> . Expression GEQ Expression
    (124) Expression -> . Expression PLUS Expression
    (125) Expression -> . Expression MINUS Expression
    (126) Expression -> . Expression OR Expression
    (127) Expression -> . Expression CARET Expression
    (128) Expression -> . Expression TIMES Expression
    (129) Expression -> . Expression DIVIDE Expression
    (130) Expression -> . Expression MOD Expression
    (131) Expression -> . Expression AMPERS Expression
    (132) Expression -> . Expression LL Expression
    (133) Expression -> . Expression GG Expression
    (134) Expression -> . Expression AMPCAR Expression
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (100) PrimaryExpr -> . Operand
    (101) PrimaryExpr -> . Conversion
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . PrimaryExpr Index
    (104) PrimaryExpr -> . PrimaryExpr Slice
    (105) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (99) Conversion -> . Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (98) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (88) BasicLit -> . IntLiteral
    (89) BasicLit -> . FloatLiteral
    (90) BasicLit -> . ImgLiteral
    (91) BasicLit -> . RuneLiteral
    (92) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (93) IntLiteral -> . INTEGER
    (94) FloatLiteral -> . FLOAT
    (95) ImgLiteral -> . IMAGINARY
    (96) RuneLiteral -> . RUNE
    (97) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . TIMES BaseType
    (26) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 107
    MINUS           shift and go to state 101
    TIMES           shift and go to state 116
    AMPERS          shift and go to state 122
    NOT             shift and go to state 106
    LPAREN          shift and go to state 119
    IDENTIFIER      shift and go to state 110
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 108
    FLOAT           shift and go to state 121
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 95
    STRING          shift and go to state 102
    LBRACK          shift and go to state 66
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53

    Conversion                     shift and go to state 96
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 123
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 98
    PointerType                    shift and go to state 68
    FloatLiteral                   shift and go to state 99
    Type                           shift and go to state 100
    OperandName                    shift and go to state 103
    BasicLit                       shift and go to state 104
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 59
    IntLiteral                     shift and go to state 111
    UnaryExpr                      shift and go to state 114
    RuneLiteral                    shift and go to state 115
    Operand                        shift and go to state 117
    Expression                     shift and go to state 320
    StringLiteral                  shift and go to state 97
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 112
    FunctionType                   shift and go to state 69

state 280

    (148) Statement -> BreakStmt .

    SEMICOL         reduce using rule 148 (Statement -> BreakStmt .)


state 281

    (42) Block -> CreateScope LBRACE StatementList RBRACE .

    SEMICOL         reduce using rule 42 (Block -> CreateScope LBRACE StatementList RBRACE .)
    ELSE            reduce using rule 42 (Block -> CreateScope LBRACE StatementList RBRACE .)


state 282

    (40) ParameterDecl -> IdentifierList Type .

    COMMA           reduce using rule 40 (ParameterDecl -> IdentifierList Type .)
    RPAREN          reduce using rule 40 (ParameterDecl -> IdentifierList Type .)


state 283

    (113) ExpressionRep -> ExpressionRep COMMA Expression .
    (116) Expression -> Expression . OROR Expression
    (117) Expression -> Expression . AMPAMP Expression
    (118) Expression -> Expression . EQEQ Expression
    (119) Expression -> Expression . NOTEQ Expression
    (120) Expression -> Expression . LESS Expression
    (121) Expression -> Expression . GREAT Expression
    (122) Expression -> Expression . LEQ Expression
    (123) Expression -> Expression . GEQ Expression
    (124) Expression -> Expression . PLUS Expression
    (125) Expression -> Expression . MINUS Expression
    (126) Expression -> Expression . OR Expression
    (127) Expression -> Expression . CARET Expression
    (128) Expression -> Expression . TIMES Expression
    (129) Expression -> Expression . DIVIDE Expression
    (130) Expression -> Expression . MOD Expression
    (131) Expression -> Expression . AMPERS Expression
    (132) Expression -> Expression . LL Expression
    (133) Expression -> Expression . GG Expression
    (134) Expression -> Expression . AMPCAR Expression

    COMMA           reduce using rule 113 (ExpressionRep -> ExpressionRep COMMA Expression .)
    PLUSEQ          reduce using rule 113 (ExpressionRep -> ExpressionRep COMMA Expression .)
    MINUSEQ         reduce using rule 113 (ExpressionRep -> ExpressionRep COMMA Expression .)
    TIMESEQ         reduce using rule 113 (ExpressionRep -> ExpressionRep COMMA Expression .)
    DIVIDEEQ        reduce using rule 113 (ExpressionRep -> ExpressionRep COMMA Expression .)
    MODEQ           reduce using rule 113 (ExpressionRep -> ExpressionRep COMMA Expression .)
    AMPEQ           reduce using rule 113 (ExpressionRep -> ExpressionRep COMMA Expression .)
    OREQ            reduce using rule 113 (ExpressionRep -> ExpressionRep COMMA Expression .)
    CAREQ           reduce using rule 113 (ExpressionRep -> ExpressionRep COMMA Expression .)
    LLEQ            reduce using rule 113 (ExpressionRep -> ExpressionRep COMMA Expression .)
    GGEQ            reduce using rule 113 (ExpressionRep -> ExpressionRep COMMA Expression .)
    EQUAL           reduce using rule 113 (ExpressionRep -> ExpressionRep COMMA Expression .)
    SEMICOL         reduce using rule 113 (ExpressionRep -> ExpressionRep COMMA Expression .)
    RPAREN          reduce using rule 113 (ExpressionRep -> ExpressionRep COMMA Expression .)
    LBRACE          reduce using rule 113 (ExpressionRep -> ExpressionRep COMMA Expression .)
    OROR            shift and go to state 167
    AMPAMP          shift and go to state 182
    EQEQ            shift and go to state 173
    NOTEQ           shift and go to state 179
    LESS            shift and go to state 172
    GREAT           shift and go to state 169
    LEQ             shift and go to state 185
    GEQ             shift and go to state 176
    PLUS            shift and go to state 180
    MINUS           shift and go to state 184
    OR              shift and go to state 177
    CARET           shift and go to state 168
    TIMES           shift and go to state 183
    DIVIDE          shift and go to state 170
    MOD             shift and go to state 181
    AMPERS          shift and go to state 175
    LL              shift and go to state 174
    GG              shift and go to state 178
    AMPCAR          shift and go to state 171


state 284

    (23) Tag -> STRING .

    SEMICOL         reduce using rule 23 (Tag -> STRING .)


state 285

    (22) TagOpt -> epsilon .

    SEMICOL         reduce using rule 22 (TagOpt -> epsilon .)


state 286

    (21) TagOpt -> Tag .

    SEMICOL         reduce using rule 21 (TagOpt -> Tag .)


state 287

    (20) FieldDecl -> IdentifierList Type TagOpt .

    SEMICOL         reduce using rule 20 (FieldDecl -> IdentifierList Type TagOpt .)


state 288

    (108) Slice -> LBRACK ExpressionOpt COLON ExpressionOpt . RBRACK

    RBRACK          shift and go to state 321


state 289

    (135) ExpressionOpt -> Expression .
    (116) Expression -> Expression . OROR Expression
    (117) Expression -> Expression . AMPAMP Expression
    (118) Expression -> Expression . EQEQ Expression
    (119) Expression -> Expression . NOTEQ Expression
    (120) Expression -> Expression . LESS Expression
    (121) Expression -> Expression . GREAT Expression
    (122) Expression -> Expression . LEQ Expression
    (123) Expression -> Expression . GEQ Expression
    (124) Expression -> Expression . PLUS Expression
    (125) Expression -> Expression . MINUS Expression
    (126) Expression -> Expression . OR Expression
    (127) Expression -> Expression . CARET Expression
    (128) Expression -> Expression . TIMES Expression
    (129) Expression -> Expression . DIVIDE Expression
    (130) Expression -> Expression . MOD Expression
    (131) Expression -> Expression . AMPERS Expression
    (132) Expression -> Expression . LL Expression
    (133) Expression -> Expression . GG Expression
    (134) Expression -> Expression . AMPCAR Expression

    RBRACK          reduce using rule 135 (ExpressionOpt -> Expression .)
    OROR            shift and go to state 167
    AMPAMP          shift and go to state 182
    EQEQ            shift and go to state 173
    NOTEQ           shift and go to state 179
    LESS            shift and go to state 172
    GREAT           shift and go to state 169
    LEQ             shift and go to state 185
    GEQ             shift and go to state 176
    PLUS            shift and go to state 180
    MINUS           shift and go to state 184
    OR              shift and go to state 177
    CARET           shift and go to state 168
    TIMES           shift and go to state 183
    DIVIDE          shift and go to state 170
    MOD             shift and go to state 181
    AMPERS          shift and go to state 175
    LL              shift and go to state 174
    GG              shift and go to state 178
    AMPCAR          shift and go to state 171


state 290

    (45) StatementRep -> StatementRep Statement SEMICOL .

    RETURN          reduce using rule 45 (StatementRep -> StatementRep Statement SEMICOL .)
    BREAK           reduce using rule 45 (StatementRep -> StatementRep Statement SEMICOL .)
    CONTINUE        reduce using rule 45 (StatementRep -> StatementRep Statement SEMICOL .)
    GOTO            reduce using rule 45 (StatementRep -> StatementRep Statement SEMICOL .)
    IF              reduce using rule 45 (StatementRep -> StatementRep Statement SEMICOL .)
    PRINT           reduce using rule 45 (StatementRep -> StatementRep Statement SEMICOL .)
    CONST           reduce using rule 45 (StatementRep -> StatementRep Statement SEMICOL .)
    TYPE            reduce using rule 45 (StatementRep -> StatementRep Statement SEMICOL .)
    VAR             reduce using rule 45 (StatementRep -> StatementRep Statement SEMICOL .)
    IDENTIFIER      reduce using rule 45 (StatementRep -> StatementRep Statement SEMICOL .)
    LPAREN          reduce using rule 45 (StatementRep -> StatementRep Statement SEMICOL .)
    PLUS            reduce using rule 45 (StatementRep -> StatementRep Statement SEMICOL .)
    MINUS           reduce using rule 45 (StatementRep -> StatementRep Statement SEMICOL .)
    TIMES           reduce using rule 45 (StatementRep -> StatementRep Statement SEMICOL .)
    AMPERS          reduce using rule 45 (StatementRep -> StatementRep Statement SEMICOL .)
    NOT             reduce using rule 45 (StatementRep -> StatementRep Statement SEMICOL .)
    TYPEX           reduce using rule 45 (StatementRep -> StatementRep Statement SEMICOL .)
    TTYPE           reduce using rule 45 (StatementRep -> StatementRep Statement SEMICOL .)
    INTEGER         reduce using rule 45 (StatementRep -> StatementRep Statement SEMICOL .)
    FLOAT           reduce using rule 45 (StatementRep -> StatementRep Statement SEMICOL .)
    IMAGINARY       reduce using rule 45 (StatementRep -> StatementRep Statement SEMICOL .)
    RUNE            reduce using rule 45 (StatementRep -> StatementRep Statement SEMICOL .)
    STRING          reduce using rule 45 (StatementRep -> StatementRep Statement SEMICOL .)
    LBRACK          reduce using rule 45 (StatementRep -> StatementRep Statement SEMICOL .)
    STRUCT          reduce using rule 45 (StatementRep -> StatementRep Statement SEMICOL .)
    FUNC            reduce using rule 45 (StatementRep -> StatementRep Statement SEMICOL .)
    SEMICOL         reduce using rule 45 (StatementRep -> StatementRep Statement SEMICOL .)
    LBRACE          reduce using rule 45 (StatementRep -> StatementRep Statement SEMICOL .)
    FOR             reduce using rule 45 (StatementRep -> StatementRep Statement SEMICOL .)
    RBRACE          reduce using rule 45 (StatementRep -> StatementRep Statement SEMICOL .)


state 291

    (184) ForStmt -> CreateForScope FOR . ConditionBlockOpt Block
    (186) ConditionBlockOpt -> . epsilon
    (187) ConditionBlockOpt -> . Condition
    (188) ConditionBlockOpt -> . ForClause
    (221) epsilon -> .
    (189) Condition -> . Expression
    (190) ForClause -> . SimpleStmt SEMICOL ConditionOpt SEMICOL SimpleStmt
    (115) Expression -> . UnaryExpr
    (116) Expression -> . Expression OROR Expression
    (117) Expression -> . Expression AMPAMP Expression
    (118) Expression -> . Expression EQEQ Expression
    (119) Expression -> . Expression NOTEQ Expression
    (120) Expression -> . Expression LESS Expression
    (121) Expression -> . Expression GREAT Expression
    (122) Expression -> . Expression LEQ Expression
    (123) Expression -> . Expression GEQ Expression
    (124) Expression -> . Expression PLUS Expression
    (125) Expression -> . Expression MINUS Expression
    (126) Expression -> . Expression OR Expression
    (127) Expression -> . Expression CARET Expression
    (128) Expression -> . Expression TIMES Expression
    (129) Expression -> . Expression DIVIDE Expression
    (130) Expression -> . Expression MOD Expression
    (131) Expression -> . Expression AMPERS Expression
    (132) Expression -> . Expression LL Expression
    (133) Expression -> . Expression GG Expression
    (134) Expression -> . Expression AMPCAR Expression
    (157) SimpleStmt -> . epsilon
    (158) SimpleStmt -> . ExpressionStmt
    (159) SimpleStmt -> . IncDecStmt
    (160) SimpleStmt -> . Assignment
    (161) SimpleStmt -> . ShortVarDecl
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (164) ExpressionStmt -> . Expression
    (165) IncDecStmt -> . PrimaryExpr PLUSPLUS
    (166) IncDecStmt -> . PrimaryExpr MINUSMIN
    (167) Assignment -> . ExpressionList assign_op ExpressionList
    (78) ShortVarDecl -> . IDENTIFIER COLONEQ Expression
    (100) PrimaryExpr -> . Operand
    (101) PrimaryExpr -> . Conversion
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . PrimaryExpr Index
    (104) PrimaryExpr -> . PrimaryExpr Slice
    (105) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (112) ExpressionList -> . Expression ExpressionRep
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (99) Conversion -> . Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (98) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (88) BasicLit -> . IntLiteral
    (89) BasicLit -> . FloatLiteral
    (90) BasicLit -> . ImgLiteral
    (91) BasicLit -> . RuneLiteral
    (92) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (93) IntLiteral -> . INTEGER
    (94) FloatLiteral -> . FLOAT
    (95) ImgLiteral -> . IMAGINARY
    (96) RuneLiteral -> . RUNE
    (97) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . TIMES BaseType
    (26) FunctionType -> . FUNC Signature

    LBRACE          reduce using rule 221 (epsilon -> .)
    SEMICOL         reduce using rule 221 (epsilon -> .)
    IDENTIFIER      shift and go to state 323
    PLUS            shift and go to state 107
    MINUS           shift and go to state 101
    TIMES           shift and go to state 116
    AMPERS          shift and go to state 122
    NOT             shift and go to state 106
    LPAREN          shift and go to state 119
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 108
    FLOAT           shift and go to state 121
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 95
    STRING          shift and go to state 102
    LBRACK          shift and go to state 66
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53

    Conversion                     shift and go to state 96
    UnaryOp                        shift and go to state 105
    SimpleStmt                     shift and go to state 328
    StringLiteral                  shift and go to state 97
    ExpressionStmt                 shift and go to state 253
    PointerType                    shift and go to state 68
    FloatLiteral                   shift and go to state 99
    Type                           shift and go to state 100
    OperandName                    shift and go to state 103
    Assignment                     shift and go to state 255
    TypeName                       shift and go to state 57
    IncDecStmt                     shift and go to state 262
    Condition                      shift and go to state 324
    StructType                     shift and go to state 59
    IntLiteral                     shift and go to state 111
    ImgLiteral                     shift and go to state 112
    epsilon                        shift and go to state 325
    UnaryExpr                      shift and go to state 114
    RuneLiteral                    shift and go to state 115
    ConditionBlockOpt              shift and go to state 326
    PrimaryExpr                    shift and go to state 322
    ExpressionList                 shift and go to state 271
    ArrayType                      shift and go to state 54
    ForClause                      shift and go to state 329
    Expression                     shift and go to state 327
    ShortVarDecl                   shift and go to state 278
    Literal                        shift and go to state 98
    TypeLit                        shift and go to state 56
    BasicLit                       shift and go to state 104
    Operand                        shift and go to state 117
    FunctionType                   shift and go to state 69

state 292

    (197) ReturnStmt -> RETURN ExpressionListPureOpt .

    SEMICOL         reduce using rule 197 (ReturnStmt -> RETURN ExpressionListPureOpt .)


state 293

    (199) ExpressionListPureOpt -> epsilon .

    SEMICOL         reduce using rule 199 (ExpressionListPureOpt -> epsilon .)


state 294

    (198) ExpressionListPureOpt -> ExpressionList .

    SEMICOL         reduce using rule 198 (ExpressionListPureOpt -> ExpressionList .)


state 295

    (162) LabeledStmt -> Label COLON . Statement
    (144) Statement -> . Declaration
    (145) Statement -> . LabeledStmt
    (146) Statement -> . SimpleStmt
    (147) Statement -> . ReturnStmt
    (148) Statement -> . BreakStmt
    (149) Statement -> . ContinueStmt
    (150) Statement -> . GotoStmt
    (151) Statement -> . Block
    (152) Statement -> . IfStmt
    (153) Statement -> . PrintStmt
    (154) Statement -> . ForStmt
    (47) Declaration -> . ConstDecl
    (48) Declaration -> . TypeDecl
    (49) Declaration -> . VarDecl
    (162) LabeledStmt -> . Label COLON Statement
    (157) SimpleStmt -> . epsilon
    (158) SimpleStmt -> . ExpressionStmt
    (159) SimpleStmt -> . IncDecStmt
    (160) SimpleStmt -> . Assignment
    (161) SimpleStmt -> . ShortVarDecl
    (197) ReturnStmt -> . RETURN ExpressionListPureOpt
    (200) BreakStmt -> . BREAK LabelOpt
    (201) ContinueStmt -> . CONTINUE LabelOpt
    (204) GotoStmt -> . GOTO Label
    (42) Block -> . CreateScope LBRACE StatementList RBRACE
    (180) IfStmt -> . IF Expression Block ElseOpt
    (155) PrintStmt -> . PRINT PD Expression
    (156) PrintStmt -> . PRINT PS Expression
    (184) ForStmt -> . CreateForScope FOR ConditionBlockOpt Block
    (52) ConstDecl -> . CONST ConstSpec
    (53) ConstDecl -> . CONST LPAREN ConstSpecRep RPAREN
    (62) TypeDecl -> . TYPE TypeSpec
    (63) TypeDecl -> . TYPE LPAREN TypeSpecRep RPAREN
    (70) VarDecl -> . VAR VarSpec
    (71) VarDecl -> . VAR LPAREN VarSpecRep RPAREN
    (163) Label -> . IDENTIFIER
    (221) epsilon -> .
    (164) ExpressionStmt -> . Expression
    (165) IncDecStmt -> . PrimaryExpr PLUSPLUS
    (166) IncDecStmt -> . PrimaryExpr MINUSMIN
    (167) Assignment -> . ExpressionList assign_op ExpressionList
    (78) ShortVarDecl -> . IDENTIFIER COLONEQ Expression
    (43) CreateScope -> . epsilon
    (185) CreateForScope -> . epsilon
    (115) Expression -> . UnaryExpr
    (116) Expression -> . Expression OROR Expression
    (117) Expression -> . Expression AMPAMP Expression
    (118) Expression -> . Expression EQEQ Expression
    (119) Expression -> . Expression NOTEQ Expression
    (120) Expression -> . Expression LESS Expression
    (121) Expression -> . Expression GREAT Expression
    (122) Expression -> . Expression LEQ Expression
    (123) Expression -> . Expression GEQ Expression
    (124) Expression -> . Expression PLUS Expression
    (125) Expression -> . Expression MINUS Expression
    (126) Expression -> . Expression OR Expression
    (127) Expression -> . Expression CARET Expression
    (128) Expression -> . Expression TIMES Expression
    (129) Expression -> . Expression DIVIDE Expression
    (130) Expression -> . Expression MOD Expression
    (131) Expression -> . Expression AMPERS Expression
    (132) Expression -> . Expression LL Expression
    (133) Expression -> . Expression GG Expression
    (134) Expression -> . Expression AMPCAR Expression
    (100) PrimaryExpr -> . Operand
    (101) PrimaryExpr -> . Conversion
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . PrimaryExpr Index
    (104) PrimaryExpr -> . PrimaryExpr Slice
    (105) PrimaryExpr -> . PrimaryExpr Arguments
    (112) ExpressionList -> . Expression ExpressionRep
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (99) Conversion -> . Type LPAREN Expression RPAREN
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (87) Literal -> . BasicLit
    (98) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (88) BasicLit -> . IntLiteral
    (89) BasicLit -> . FloatLiteral
    (90) BasicLit -> . ImgLiteral
    (91) BasicLit -> . RuneLiteral
    (92) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (93) IntLiteral -> . INTEGER
    (94) FloatLiteral -> . FLOAT
    (95) ImgLiteral -> . IMAGINARY
    (96) RuneLiteral -> . RUNE
    (97) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . TIMES BaseType
    (26) FunctionType -> . FUNC Signature

    RETURN          shift and go to state 259
    BREAK           shift and go to state 273
    CONTINUE        shift and go to state 266
    GOTO            shift and go to state 277
    IF              shift and go to state 279
    PRINT           shift and go to state 261
    CONST           shift and go to state 14
    TYPE            shift and go to state 23
    VAR             shift and go to state 21
    IDENTIFIER      shift and go to state 268
    SEMICOL         reduce using rule 221 (epsilon -> .)
    LBRACE          reduce using rule 221 (epsilon -> .)
    FOR             reduce using rule 221 (epsilon -> .)
    LPAREN          shift and go to state 119
    PLUS            shift and go to state 107
    MINUS           shift and go to state 101
    TIMES           shift and go to state 116
    AMPERS          shift and go to state 122
    NOT             shift and go to state 106
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 108
    FLOAT           shift and go to state 121
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 95
    STRING          shift and go to state 102
    LBRACK          shift and go to state 66
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53

    CreateForScope                 shift and go to state 258
    UnaryOp                        shift and go to state 105
    ContinueStmt                   shift and go to state 252
    Conversion                     shift and go to state 96
    SimpleStmt                     shift and go to state 275
    Label                          shift and go to state 260
    ExpressionStmt                 shift and go to state 253
    PointerType                    shift and go to state 68
    ForStmt                        shift and go to state 276
    Statement                      shift and go to state 330
    RuneLiteral                    shift and go to state 115
    ImgLiteral                     shift and go to state 112
    FloatLiteral                   shift and go to state 99
    Type                           shift and go to state 100
    IfStmt                         shift and go to state 270
    OperandName                    shift and go to state 103
    ArrayType                      shift and go to state 54
    Assignment                     shift and go to state 255
    TypeName                       shift and go to state 57
    IncDecStmt                     shift and go to state 262
    Declaration                    shift and go to state 267
    FunctionType                   shift and go to state 69
    CreateScope                    shift and go to state 133
    StringLiteral                  shift and go to state 97
    GotoStmt                       shift and go to state 263
    StructType                     shift and go to state 59
    IntLiteral                     shift and go to state 111
    TypeDecl                       shift and go to state 19
    LabeledStmt                    shift and go to state 256
    epsilon                        shift and go to state 269
    UnaryExpr                      shift and go to state 114
    Operand                        shift and go to state 117
    ExpressionList                 shift and go to state 271
    Expression                     shift and go to state 272
    ShortVarDecl                   shift and go to state 278
    Block                          shift and go to state 265
    BreakStmt                      shift and go to state 280
    VarDecl                        shift and go to state 22
    Literal                        shift and go to state 98
    PrintStmt                      shift and go to state 257
    TypeLit                        shift and go to state 56
    BasicLit                       shift and go to state 104
    PrimaryExpr                    shift and go to state 264
    ReturnStmt                     shift and go to state 274
    ConstDecl                      shift and go to state 18

state 296

    (156) PrintStmt -> PRINT PS . Expression
    (115) Expression -> . UnaryExpr
    (116) Expression -> . Expression OROR Expression
    (117) Expression -> . Expression AMPAMP Expression
    (118) Expression -> . Expression EQEQ Expression
    (119) Expression -> . Expression NOTEQ Expression
    (120) Expression -> . Expression LESS Expression
    (121) Expression -> . Expression GREAT Expression
    (122) Expression -> . Expression LEQ Expression
    (123) Expression -> . Expression GEQ Expression
    (124) Expression -> . Expression PLUS Expression
    (125) Expression -> . Expression MINUS Expression
    (126) Expression -> . Expression OR Expression
    (127) Expression -> . Expression CARET Expression
    (128) Expression -> . Expression TIMES Expression
    (129) Expression -> . Expression DIVIDE Expression
    (130) Expression -> . Expression MOD Expression
    (131) Expression -> . Expression AMPERS Expression
    (132) Expression -> . Expression LL Expression
    (133) Expression -> . Expression GG Expression
    (134) Expression -> . Expression AMPCAR Expression
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (100) PrimaryExpr -> . Operand
    (101) PrimaryExpr -> . Conversion
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . PrimaryExpr Index
    (104) PrimaryExpr -> . PrimaryExpr Slice
    (105) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (99) Conversion -> . Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (98) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (88) BasicLit -> . IntLiteral
    (89) BasicLit -> . FloatLiteral
    (90) BasicLit -> . ImgLiteral
    (91) BasicLit -> . RuneLiteral
    (92) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (93) IntLiteral -> . INTEGER
    (94) FloatLiteral -> . FLOAT
    (95) ImgLiteral -> . IMAGINARY
    (96) RuneLiteral -> . RUNE
    (97) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . TIMES BaseType
    (26) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 107
    MINUS           shift and go to state 101
    TIMES           shift and go to state 116
    AMPERS          shift and go to state 122
    NOT             shift and go to state 106
    LPAREN          shift and go to state 119
    IDENTIFIER      shift and go to state 110
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 108
    FLOAT           shift and go to state 121
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 95
    STRING          shift and go to state 102
    LBRACK          shift and go to state 66
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53

    Conversion                     shift and go to state 96
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 123
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 98
    FloatLiteral                   shift and go to state 99
    Type                           shift and go to state 100
    OperandName                    shift and go to state 103
    BasicLit                       shift and go to state 104
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 59
    IntLiteral                     shift and go to state 111
    UnaryExpr                      shift and go to state 114
    RuneLiteral                    shift and go to state 115
    Operand                        shift and go to state 117
    Expression                     shift and go to state 331
    PointerType                    shift and go to state 68
    StringLiteral                  shift and go to state 97
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 112
    FunctionType                   shift and go to state 69

state 297

    (155) PrintStmt -> PRINT PD . Expression
    (115) Expression -> . UnaryExpr
    (116) Expression -> . Expression OROR Expression
    (117) Expression -> . Expression AMPAMP Expression
    (118) Expression -> . Expression EQEQ Expression
    (119) Expression -> . Expression NOTEQ Expression
    (120) Expression -> . Expression LESS Expression
    (121) Expression -> . Expression GREAT Expression
    (122) Expression -> . Expression LEQ Expression
    (123) Expression -> . Expression GEQ Expression
    (124) Expression -> . Expression PLUS Expression
    (125) Expression -> . Expression MINUS Expression
    (126) Expression -> . Expression OR Expression
    (127) Expression -> . Expression CARET Expression
    (128) Expression -> . Expression TIMES Expression
    (129) Expression -> . Expression DIVIDE Expression
    (130) Expression -> . Expression MOD Expression
    (131) Expression -> . Expression AMPERS Expression
    (132) Expression -> . Expression LL Expression
    (133) Expression -> . Expression GG Expression
    (134) Expression -> . Expression AMPCAR Expression
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (100) PrimaryExpr -> . Operand
    (101) PrimaryExpr -> . Conversion
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . PrimaryExpr Index
    (104) PrimaryExpr -> . PrimaryExpr Slice
    (105) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (99) Conversion -> . Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (98) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (88) BasicLit -> . IntLiteral
    (89) BasicLit -> . FloatLiteral
    (90) BasicLit -> . ImgLiteral
    (91) BasicLit -> . RuneLiteral
    (92) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (93) IntLiteral -> . INTEGER
    (94) FloatLiteral -> . FLOAT
    (95) ImgLiteral -> . IMAGINARY
    (96) RuneLiteral -> . RUNE
    (97) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . TIMES BaseType
    (26) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 107
    MINUS           shift and go to state 101
    TIMES           shift and go to state 116
    AMPERS          shift and go to state 122
    NOT             shift and go to state 106
    LPAREN          shift and go to state 119
    IDENTIFIER      shift and go to state 110
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 108
    FLOAT           shift and go to state 121
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 95
    STRING          shift and go to state 102
    LBRACK          shift and go to state 66
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53

    Conversion                     shift and go to state 96
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 123
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 98
    FloatLiteral                   shift and go to state 99
    Type                           shift and go to state 100
    OperandName                    shift and go to state 103
    BasicLit                       shift and go to state 104
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 59
    IntLiteral                     shift and go to state 111
    UnaryExpr                      shift and go to state 114
    RuneLiteral                    shift and go to state 115
    Operand                        shift and go to state 117
    Expression                     shift and go to state 332
    PointerType                    shift and go to state 68
    StringLiteral                  shift and go to state 97
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 112
    FunctionType                   shift and go to state 69

state 298

    (165) IncDecStmt -> PrimaryExpr PLUSPLUS .

    SEMICOL         reduce using rule 165 (IncDecStmt -> PrimaryExpr PLUSPLUS .)
    LBRACE          reduce using rule 165 (IncDecStmt -> PrimaryExpr PLUSPLUS .)


state 299

    (166) IncDecStmt -> PrimaryExpr MINUSMIN .

    SEMICOL         reduce using rule 166 (IncDecStmt -> PrimaryExpr MINUSMIN .)
    LBRACE          reduce using rule 166 (IncDecStmt -> PrimaryExpr MINUSMIN .)


state 300

    (203) LabelOpt -> epsilon .

    SEMICOL         reduce using rule 203 (LabelOpt -> epsilon .)


state 301

    (163) Label -> IDENTIFIER .

    SEMICOL         reduce using rule 163 (Label -> IDENTIFIER .)


state 302

    (201) ContinueStmt -> CONTINUE LabelOpt .

    SEMICOL         reduce using rule 201 (ContinueStmt -> CONTINUE LabelOpt .)


state 303

    (202) LabelOpt -> Label .

    SEMICOL         reduce using rule 202 (LabelOpt -> Label .)


state 304

    (78) ShortVarDecl -> IDENTIFIER COLONEQ . Expression
    (115) Expression -> . UnaryExpr
    (116) Expression -> . Expression OROR Expression
    (117) Expression -> . Expression AMPAMP Expression
    (118) Expression -> . Expression EQEQ Expression
    (119) Expression -> . Expression NOTEQ Expression
    (120) Expression -> . Expression LESS Expression
    (121) Expression -> . Expression GREAT Expression
    (122) Expression -> . Expression LEQ Expression
    (123) Expression -> . Expression GEQ Expression
    (124) Expression -> . Expression PLUS Expression
    (125) Expression -> . Expression MINUS Expression
    (126) Expression -> . Expression OR Expression
    (127) Expression -> . Expression CARET Expression
    (128) Expression -> . Expression TIMES Expression
    (129) Expression -> . Expression DIVIDE Expression
    (130) Expression -> . Expression MOD Expression
    (131) Expression -> . Expression AMPERS Expression
    (132) Expression -> . Expression LL Expression
    (133) Expression -> . Expression GG Expression
    (134) Expression -> . Expression AMPCAR Expression
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (100) PrimaryExpr -> . Operand
    (101) PrimaryExpr -> . Conversion
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . PrimaryExpr Index
    (104) PrimaryExpr -> . PrimaryExpr Slice
    (105) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (99) Conversion -> . Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (98) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (88) BasicLit -> . IntLiteral
    (89) BasicLit -> . FloatLiteral
    (90) BasicLit -> . ImgLiteral
    (91) BasicLit -> . RuneLiteral
    (92) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (93) IntLiteral -> . INTEGER
    (94) FloatLiteral -> . FLOAT
    (95) ImgLiteral -> . IMAGINARY
    (96) RuneLiteral -> . RUNE
    (97) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . TIMES BaseType
    (26) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 107
    MINUS           shift and go to state 101
    TIMES           shift and go to state 116
    AMPERS          shift and go to state 122
    NOT             shift and go to state 106
    LPAREN          shift and go to state 119
    IDENTIFIER      shift and go to state 110
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 108
    FLOAT           shift and go to state 121
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 95
    STRING          shift and go to state 102
    LBRACK          shift and go to state 66
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53

    Conversion                     shift and go to state 96
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 123
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 98
    FloatLiteral                   shift and go to state 99
    Type                           shift and go to state 100
    OperandName                    shift and go to state 103
    BasicLit                       shift and go to state 104
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 59
    IntLiteral                     shift and go to state 111
    UnaryExpr                      shift and go to state 114
    RuneLiteral                    shift and go to state 115
    Operand                        shift and go to state 117
    Expression                     shift and go to state 333
    PointerType                    shift and go to state 68
    StringLiteral                  shift and go to state 97
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 112
    FunctionType                   shift and go to state 69

state 305

    (168) assign_op -> AssignOp .

    PLUS            reduce using rule 168 (assign_op -> AssignOp .)
    MINUS           reduce using rule 168 (assign_op -> AssignOp .)
    TIMES           reduce using rule 168 (assign_op -> AssignOp .)
    AMPERS          reduce using rule 168 (assign_op -> AssignOp .)
    NOT             reduce using rule 168 (assign_op -> AssignOp .)
    LPAREN          reduce using rule 168 (assign_op -> AssignOp .)
    IDENTIFIER      reduce using rule 168 (assign_op -> AssignOp .)
    TYPEX           reduce using rule 168 (assign_op -> AssignOp .)
    TTYPE           reduce using rule 168 (assign_op -> AssignOp .)
    INTEGER         reduce using rule 168 (assign_op -> AssignOp .)
    FLOAT           reduce using rule 168 (assign_op -> AssignOp .)
    IMAGINARY       reduce using rule 168 (assign_op -> AssignOp .)
    RUNE            reduce using rule 168 (assign_op -> AssignOp .)
    STRING          reduce using rule 168 (assign_op -> AssignOp .)
    LBRACK          reduce using rule 168 (assign_op -> AssignOp .)
    STRUCT          reduce using rule 168 (assign_op -> AssignOp .)
    FUNC            reduce using rule 168 (assign_op -> AssignOp .)


state 306

    (179) AssignOp -> EQUAL .

    PLUS            reduce using rule 179 (AssignOp -> EQUAL .)
    MINUS           reduce using rule 179 (AssignOp -> EQUAL .)
    TIMES           reduce using rule 179 (AssignOp -> EQUAL .)
    AMPERS          reduce using rule 179 (AssignOp -> EQUAL .)
    NOT             reduce using rule 179 (AssignOp -> EQUAL .)
    LPAREN          reduce using rule 179 (AssignOp -> EQUAL .)
    IDENTIFIER      reduce using rule 179 (AssignOp -> EQUAL .)
    TYPEX           reduce using rule 179 (AssignOp -> EQUAL .)
    TTYPE           reduce using rule 179 (AssignOp -> EQUAL .)
    INTEGER         reduce using rule 179 (AssignOp -> EQUAL .)
    FLOAT           reduce using rule 179 (AssignOp -> EQUAL .)
    IMAGINARY       reduce using rule 179 (AssignOp -> EQUAL .)
    RUNE            reduce using rule 179 (AssignOp -> EQUAL .)
    STRING          reduce using rule 179 (AssignOp -> EQUAL .)
    LBRACK          reduce using rule 179 (AssignOp -> EQUAL .)
    STRUCT          reduce using rule 179 (AssignOp -> EQUAL .)
    FUNC            reduce using rule 179 (AssignOp -> EQUAL .)


state 307

    (176) AssignOp -> CAREQ .

    PLUS            reduce using rule 176 (AssignOp -> CAREQ .)
    MINUS           reduce using rule 176 (AssignOp -> CAREQ .)
    TIMES           reduce using rule 176 (AssignOp -> CAREQ .)
    AMPERS          reduce using rule 176 (AssignOp -> CAREQ .)
    NOT             reduce using rule 176 (AssignOp -> CAREQ .)
    LPAREN          reduce using rule 176 (AssignOp -> CAREQ .)
    IDENTIFIER      reduce using rule 176 (AssignOp -> CAREQ .)
    TYPEX           reduce using rule 176 (AssignOp -> CAREQ .)
    TTYPE           reduce using rule 176 (AssignOp -> CAREQ .)
    INTEGER         reduce using rule 176 (AssignOp -> CAREQ .)
    FLOAT           reduce using rule 176 (AssignOp -> CAREQ .)
    IMAGINARY       reduce using rule 176 (AssignOp -> CAREQ .)
    RUNE            reduce using rule 176 (AssignOp -> CAREQ .)
    STRING          reduce using rule 176 (AssignOp -> CAREQ .)
    LBRACK          reduce using rule 176 (AssignOp -> CAREQ .)
    STRUCT          reduce using rule 176 (AssignOp -> CAREQ .)
    FUNC            reduce using rule 176 (AssignOp -> CAREQ .)


state 308

    (171) AssignOp -> TIMESEQ .

    PLUS            reduce using rule 171 (AssignOp -> TIMESEQ .)
    MINUS           reduce using rule 171 (AssignOp -> TIMESEQ .)
    TIMES           reduce using rule 171 (AssignOp -> TIMESEQ .)
    AMPERS          reduce using rule 171 (AssignOp -> TIMESEQ .)
    NOT             reduce using rule 171 (AssignOp -> TIMESEQ .)
    LPAREN          reduce using rule 171 (AssignOp -> TIMESEQ .)
    IDENTIFIER      reduce using rule 171 (AssignOp -> TIMESEQ .)
    TYPEX           reduce using rule 171 (AssignOp -> TIMESEQ .)
    TTYPE           reduce using rule 171 (AssignOp -> TIMESEQ .)
    INTEGER         reduce using rule 171 (AssignOp -> TIMESEQ .)
    FLOAT           reduce using rule 171 (AssignOp -> TIMESEQ .)
    IMAGINARY       reduce using rule 171 (AssignOp -> TIMESEQ .)
    RUNE            reduce using rule 171 (AssignOp -> TIMESEQ .)
    STRING          reduce using rule 171 (AssignOp -> TIMESEQ .)
    LBRACK          reduce using rule 171 (AssignOp -> TIMESEQ .)
    STRUCT          reduce using rule 171 (AssignOp -> TIMESEQ .)
    FUNC            reduce using rule 171 (AssignOp -> TIMESEQ .)


state 309

    (169) AssignOp -> PLUSEQ .

    PLUS            reduce using rule 169 (AssignOp -> PLUSEQ .)
    MINUS           reduce using rule 169 (AssignOp -> PLUSEQ .)
    TIMES           reduce using rule 169 (AssignOp -> PLUSEQ .)
    AMPERS          reduce using rule 169 (AssignOp -> PLUSEQ .)
    NOT             reduce using rule 169 (AssignOp -> PLUSEQ .)
    LPAREN          reduce using rule 169 (AssignOp -> PLUSEQ .)
    IDENTIFIER      reduce using rule 169 (AssignOp -> PLUSEQ .)
    TYPEX           reduce using rule 169 (AssignOp -> PLUSEQ .)
    TTYPE           reduce using rule 169 (AssignOp -> PLUSEQ .)
    INTEGER         reduce using rule 169 (AssignOp -> PLUSEQ .)
    FLOAT           reduce using rule 169 (AssignOp -> PLUSEQ .)
    IMAGINARY       reduce using rule 169 (AssignOp -> PLUSEQ .)
    RUNE            reduce using rule 169 (AssignOp -> PLUSEQ .)
    STRING          reduce using rule 169 (AssignOp -> PLUSEQ .)
    LBRACK          reduce using rule 169 (AssignOp -> PLUSEQ .)
    STRUCT          reduce using rule 169 (AssignOp -> PLUSEQ .)
    FUNC            reduce using rule 169 (AssignOp -> PLUSEQ .)


state 310

    (173) AssignOp -> MODEQ .

    PLUS            reduce using rule 173 (AssignOp -> MODEQ .)
    MINUS           reduce using rule 173 (AssignOp -> MODEQ .)
    TIMES           reduce using rule 173 (AssignOp -> MODEQ .)
    AMPERS          reduce using rule 173 (AssignOp -> MODEQ .)
    NOT             reduce using rule 173 (AssignOp -> MODEQ .)
    LPAREN          reduce using rule 173 (AssignOp -> MODEQ .)
    IDENTIFIER      reduce using rule 173 (AssignOp -> MODEQ .)
    TYPEX           reduce using rule 173 (AssignOp -> MODEQ .)
    TTYPE           reduce using rule 173 (AssignOp -> MODEQ .)
    INTEGER         reduce using rule 173 (AssignOp -> MODEQ .)
    FLOAT           reduce using rule 173 (AssignOp -> MODEQ .)
    IMAGINARY       reduce using rule 173 (AssignOp -> MODEQ .)
    RUNE            reduce using rule 173 (AssignOp -> MODEQ .)
    STRING          reduce using rule 173 (AssignOp -> MODEQ .)
    LBRACK          reduce using rule 173 (AssignOp -> MODEQ .)
    STRUCT          reduce using rule 173 (AssignOp -> MODEQ .)
    FUNC            reduce using rule 173 (AssignOp -> MODEQ .)


state 311

    (178) AssignOp -> GGEQ .

    PLUS            reduce using rule 178 (AssignOp -> GGEQ .)
    MINUS           reduce using rule 178 (AssignOp -> GGEQ .)
    TIMES           reduce using rule 178 (AssignOp -> GGEQ .)
    AMPERS          reduce using rule 178 (AssignOp -> GGEQ .)
    NOT             reduce using rule 178 (AssignOp -> GGEQ .)
    LPAREN          reduce using rule 178 (AssignOp -> GGEQ .)
    IDENTIFIER      reduce using rule 178 (AssignOp -> GGEQ .)
    TYPEX           reduce using rule 178 (AssignOp -> GGEQ .)
    TTYPE           reduce using rule 178 (AssignOp -> GGEQ .)
    INTEGER         reduce using rule 178 (AssignOp -> GGEQ .)
    FLOAT           reduce using rule 178 (AssignOp -> GGEQ .)
    IMAGINARY       reduce using rule 178 (AssignOp -> GGEQ .)
    RUNE            reduce using rule 178 (AssignOp -> GGEQ .)
    STRING          reduce using rule 178 (AssignOp -> GGEQ .)
    LBRACK          reduce using rule 178 (AssignOp -> GGEQ .)
    STRUCT          reduce using rule 178 (AssignOp -> GGEQ .)
    FUNC            reduce using rule 178 (AssignOp -> GGEQ .)


state 312

    (177) AssignOp -> LLEQ .

    PLUS            reduce using rule 177 (AssignOp -> LLEQ .)
    MINUS           reduce using rule 177 (AssignOp -> LLEQ .)
    TIMES           reduce using rule 177 (AssignOp -> LLEQ .)
    AMPERS          reduce using rule 177 (AssignOp -> LLEQ .)
    NOT             reduce using rule 177 (AssignOp -> LLEQ .)
    LPAREN          reduce using rule 177 (AssignOp -> LLEQ .)
    IDENTIFIER      reduce using rule 177 (AssignOp -> LLEQ .)
    TYPEX           reduce using rule 177 (AssignOp -> LLEQ .)
    TTYPE           reduce using rule 177 (AssignOp -> LLEQ .)
    INTEGER         reduce using rule 177 (AssignOp -> LLEQ .)
    FLOAT           reduce using rule 177 (AssignOp -> LLEQ .)
    IMAGINARY       reduce using rule 177 (AssignOp -> LLEQ .)
    RUNE            reduce using rule 177 (AssignOp -> LLEQ .)
    STRING          reduce using rule 177 (AssignOp -> LLEQ .)
    LBRACK          reduce using rule 177 (AssignOp -> LLEQ .)
    STRUCT          reduce using rule 177 (AssignOp -> LLEQ .)
    FUNC            reduce using rule 177 (AssignOp -> LLEQ .)


state 313

    (175) AssignOp -> OREQ .

    PLUS            reduce using rule 175 (AssignOp -> OREQ .)
    MINUS           reduce using rule 175 (AssignOp -> OREQ .)
    TIMES           reduce using rule 175 (AssignOp -> OREQ .)
    AMPERS          reduce using rule 175 (AssignOp -> OREQ .)
    NOT             reduce using rule 175 (AssignOp -> OREQ .)
    LPAREN          reduce using rule 175 (AssignOp -> OREQ .)
    IDENTIFIER      reduce using rule 175 (AssignOp -> OREQ .)
    TYPEX           reduce using rule 175 (AssignOp -> OREQ .)
    TTYPE           reduce using rule 175 (AssignOp -> OREQ .)
    INTEGER         reduce using rule 175 (AssignOp -> OREQ .)
    FLOAT           reduce using rule 175 (AssignOp -> OREQ .)
    IMAGINARY       reduce using rule 175 (AssignOp -> OREQ .)
    RUNE            reduce using rule 175 (AssignOp -> OREQ .)
    STRING          reduce using rule 175 (AssignOp -> OREQ .)
    LBRACK          reduce using rule 175 (AssignOp -> OREQ .)
    STRUCT          reduce using rule 175 (AssignOp -> OREQ .)
    FUNC            reduce using rule 175 (AssignOp -> OREQ .)


state 314

    (170) AssignOp -> MINUSEQ .

    PLUS            reduce using rule 170 (AssignOp -> MINUSEQ .)
    MINUS           reduce using rule 170 (AssignOp -> MINUSEQ .)
    TIMES           reduce using rule 170 (AssignOp -> MINUSEQ .)
    AMPERS          reduce using rule 170 (AssignOp -> MINUSEQ .)
    NOT             reduce using rule 170 (AssignOp -> MINUSEQ .)
    LPAREN          reduce using rule 170 (AssignOp -> MINUSEQ .)
    IDENTIFIER      reduce using rule 170 (AssignOp -> MINUSEQ .)
    TYPEX           reduce using rule 170 (AssignOp -> MINUSEQ .)
    TTYPE           reduce using rule 170 (AssignOp -> MINUSEQ .)
    INTEGER         reduce using rule 170 (AssignOp -> MINUSEQ .)
    FLOAT           reduce using rule 170 (AssignOp -> MINUSEQ .)
    IMAGINARY       reduce using rule 170 (AssignOp -> MINUSEQ .)
    RUNE            reduce using rule 170 (AssignOp -> MINUSEQ .)
    STRING          reduce using rule 170 (AssignOp -> MINUSEQ .)
    LBRACK          reduce using rule 170 (AssignOp -> MINUSEQ .)
    STRUCT          reduce using rule 170 (AssignOp -> MINUSEQ .)
    FUNC            reduce using rule 170 (AssignOp -> MINUSEQ .)


state 315

    (174) AssignOp -> AMPEQ .

    PLUS            reduce using rule 174 (AssignOp -> AMPEQ .)
    MINUS           reduce using rule 174 (AssignOp -> AMPEQ .)
    TIMES           reduce using rule 174 (AssignOp -> AMPEQ .)
    AMPERS          reduce using rule 174 (AssignOp -> AMPEQ .)
    NOT             reduce using rule 174 (AssignOp -> AMPEQ .)
    LPAREN          reduce using rule 174 (AssignOp -> AMPEQ .)
    IDENTIFIER      reduce using rule 174 (AssignOp -> AMPEQ .)
    TYPEX           reduce using rule 174 (AssignOp -> AMPEQ .)
    TTYPE           reduce using rule 174 (AssignOp -> AMPEQ .)
    INTEGER         reduce using rule 174 (AssignOp -> AMPEQ .)
    FLOAT           reduce using rule 174 (AssignOp -> AMPEQ .)
    IMAGINARY       reduce using rule 174 (AssignOp -> AMPEQ .)
    RUNE            reduce using rule 174 (AssignOp -> AMPEQ .)
    STRING          reduce using rule 174 (AssignOp -> AMPEQ .)
    LBRACK          reduce using rule 174 (AssignOp -> AMPEQ .)
    STRUCT          reduce using rule 174 (AssignOp -> AMPEQ .)
    FUNC            reduce using rule 174 (AssignOp -> AMPEQ .)


state 316

    (167) Assignment -> ExpressionList assign_op . ExpressionList
    (112) ExpressionList -> . Expression ExpressionRep
    (115) Expression -> . UnaryExpr
    (116) Expression -> . Expression OROR Expression
    (117) Expression -> . Expression AMPAMP Expression
    (118) Expression -> . Expression EQEQ Expression
    (119) Expression -> . Expression NOTEQ Expression
    (120) Expression -> . Expression LESS Expression
    (121) Expression -> . Expression GREAT Expression
    (122) Expression -> . Expression LEQ Expression
    (123) Expression -> . Expression GEQ Expression
    (124) Expression -> . Expression PLUS Expression
    (125) Expression -> . Expression MINUS Expression
    (126) Expression -> . Expression OR Expression
    (127) Expression -> . Expression CARET Expression
    (128) Expression -> . Expression TIMES Expression
    (129) Expression -> . Expression DIVIDE Expression
    (130) Expression -> . Expression MOD Expression
    (131) Expression -> . Expression AMPERS Expression
    (132) Expression -> . Expression LL Expression
    (133) Expression -> . Expression GG Expression
    (134) Expression -> . Expression AMPCAR Expression
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (100) PrimaryExpr -> . Operand
    (101) PrimaryExpr -> . Conversion
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . PrimaryExpr Index
    (104) PrimaryExpr -> . PrimaryExpr Slice
    (105) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (99) Conversion -> . Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (98) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (88) BasicLit -> . IntLiteral
    (89) BasicLit -> . FloatLiteral
    (90) BasicLit -> . ImgLiteral
    (91) BasicLit -> . RuneLiteral
    (92) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (93) IntLiteral -> . INTEGER
    (94) FloatLiteral -> . FLOAT
    (95) ImgLiteral -> . IMAGINARY
    (96) RuneLiteral -> . RUNE
    (97) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . TIMES BaseType
    (26) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 107
    MINUS           shift and go to state 101
    TIMES           shift and go to state 116
    AMPERS          shift and go to state 122
    NOT             shift and go to state 106
    LPAREN          shift and go to state 119
    IDENTIFIER      shift and go to state 110
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 108
    FLOAT           shift and go to state 121
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 95
    STRING          shift and go to state 102
    LBRACK          shift and go to state 66
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53

    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 123
    Conversion                     shift and go to state 96
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 98
    FloatLiteral                   shift and go to state 99
    Type                           shift and go to state 100
    OperandName                    shift and go to state 103
    BasicLit                       shift and go to state 104
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 59
    IntLiteral                     shift and go to state 111
    UnaryExpr                      shift and go to state 114
    RuneLiteral                    shift and go to state 115
    Operand                        shift and go to state 117
    ExpressionList                 shift and go to state 334
    Expression                     shift and go to state 145
    PointerType                    shift and go to state 68
    StringLiteral                  shift and go to state 97
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 112
    FunctionType                   shift and go to state 69

state 317

    (172) AssignOp -> DIVIDEEQ .

    PLUS            reduce using rule 172 (AssignOp -> DIVIDEEQ .)
    MINUS           reduce using rule 172 (AssignOp -> DIVIDEEQ .)
    TIMES           reduce using rule 172 (AssignOp -> DIVIDEEQ .)
    AMPERS          reduce using rule 172 (AssignOp -> DIVIDEEQ .)
    NOT             reduce using rule 172 (AssignOp -> DIVIDEEQ .)
    LPAREN          reduce using rule 172 (AssignOp -> DIVIDEEQ .)
    IDENTIFIER      reduce using rule 172 (AssignOp -> DIVIDEEQ .)
    TYPEX           reduce using rule 172 (AssignOp -> DIVIDEEQ .)
    TTYPE           reduce using rule 172 (AssignOp -> DIVIDEEQ .)
    INTEGER         reduce using rule 172 (AssignOp -> DIVIDEEQ .)
    FLOAT           reduce using rule 172 (AssignOp -> DIVIDEEQ .)
    IMAGINARY       reduce using rule 172 (AssignOp -> DIVIDEEQ .)
    RUNE            reduce using rule 172 (AssignOp -> DIVIDEEQ .)
    STRING          reduce using rule 172 (AssignOp -> DIVIDEEQ .)
    LBRACK          reduce using rule 172 (AssignOp -> DIVIDEEQ .)
    STRUCT          reduce using rule 172 (AssignOp -> DIVIDEEQ .)
    FUNC            reduce using rule 172 (AssignOp -> DIVIDEEQ .)


state 318

    (200) BreakStmt -> BREAK LabelOpt .

    SEMICOL         reduce using rule 200 (BreakStmt -> BREAK LabelOpt .)


state 319

    (204) GotoStmt -> GOTO Label .

    SEMICOL         reduce using rule 204 (GotoStmt -> GOTO Label .)


state 320

    (180) IfStmt -> IF Expression . Block ElseOpt
    (116) Expression -> Expression . OROR Expression
    (117) Expression -> Expression . AMPAMP Expression
    (118) Expression -> Expression . EQEQ Expression
    (119) Expression -> Expression . NOTEQ Expression
    (120) Expression -> Expression . LESS Expression
    (121) Expression -> Expression . GREAT Expression
    (122) Expression -> Expression . LEQ Expression
    (123) Expression -> Expression . GEQ Expression
    (124) Expression -> Expression . PLUS Expression
    (125) Expression -> Expression . MINUS Expression
    (126) Expression -> Expression . OR Expression
    (127) Expression -> Expression . CARET Expression
    (128) Expression -> Expression . TIMES Expression
    (129) Expression -> Expression . DIVIDE Expression
    (130) Expression -> Expression . MOD Expression
    (131) Expression -> Expression . AMPERS Expression
    (132) Expression -> Expression . LL Expression
    (133) Expression -> Expression . GG Expression
    (134) Expression -> Expression . AMPCAR Expression
    (42) Block -> . CreateScope LBRACE StatementList RBRACE
    (43) CreateScope -> . epsilon
    (221) epsilon -> .

    OROR            shift and go to state 167
    AMPAMP          shift and go to state 182
    EQEQ            shift and go to state 173
    NOTEQ           shift and go to state 179
    LESS            shift and go to state 172
    GREAT           shift and go to state 169
    LEQ             shift and go to state 185
    GEQ             shift and go to state 176
    PLUS            shift and go to state 180
    MINUS           shift and go to state 184
    OR              shift and go to state 177
    CARET           shift and go to state 168
    TIMES           shift and go to state 183
    DIVIDE          shift and go to state 170
    MOD             shift and go to state 181
    AMPERS          shift and go to state 175
    LL              shift and go to state 174
    GG              shift and go to state 178
    AMPCAR          shift and go to state 171
    LBRACE          reduce using rule 221 (epsilon -> .)

    epsilon                        shift and go to state 132
    CreateScope                    shift and go to state 133
    Block                          shift and go to state 335

state 321

    (108) Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .

    PLUSPLUS        reduce using rule 108 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    MINUSMIN        reduce using rule 108 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    DOT             reduce using rule 108 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    LBRACK          reduce using rule 108 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    LPAREN          reduce using rule 108 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    OROR            reduce using rule 108 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    AMPAMP          reduce using rule 108 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    EQEQ            reduce using rule 108 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    NOTEQ           reduce using rule 108 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    LESS            reduce using rule 108 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    GREAT           reduce using rule 108 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    LEQ             reduce using rule 108 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    GEQ             reduce using rule 108 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    PLUS            reduce using rule 108 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    MINUS           reduce using rule 108 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    OR              reduce using rule 108 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    CARET           reduce using rule 108 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    TIMES           reduce using rule 108 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    DIVIDE          reduce using rule 108 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    MOD             reduce using rule 108 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    AMPERS          reduce using rule 108 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    LL              reduce using rule 108 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    GG              reduce using rule 108 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    AMPCAR          reduce using rule 108 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    COMMA           reduce using rule 108 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    SEMICOL         reduce using rule 108 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    PLUSEQ          reduce using rule 108 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    MINUSEQ         reduce using rule 108 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    TIMESEQ         reduce using rule 108 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    DIVIDEEQ        reduce using rule 108 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    MODEQ           reduce using rule 108 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    AMPEQ           reduce using rule 108 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    OREQ            reduce using rule 108 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    CAREQ           reduce using rule 108 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    LLEQ            reduce using rule 108 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    GGEQ            reduce using rule 108 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    EQUAL           reduce using rule 108 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    LBRACE          reduce using rule 108 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    RBRACK          reduce using rule 108 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    RPAREN          reduce using rule 108 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    COLON           reduce using rule 108 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)


state 322

    (137) UnaryExpr -> PrimaryExpr .
    (165) IncDecStmt -> PrimaryExpr . PLUSPLUS
    (166) IncDecStmt -> PrimaryExpr . MINUSMIN
    (102) PrimaryExpr -> PrimaryExpr . Selector
    (103) PrimaryExpr -> PrimaryExpr . Index
    (104) PrimaryExpr -> PrimaryExpr . Slice
    (105) PrimaryExpr -> PrimaryExpr . Arguments
    (106) Selector -> . DOT IDENTIFIER
    (107) Index -> . LBRACK Expression RBRACK
    (108) Slice -> . LBRACK ExpressionOpt COLON ExpressionOpt RBRACK
    (109) Arguments -> . LPAREN ExpressionListTypeOpt RPAREN

    OROR            reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    AMPAMP          reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    EQEQ            reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    NOTEQ           reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    LESS            reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    GREAT           reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    LEQ             reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    GEQ             reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    PLUS            reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    MINUS           reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    OR              reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    CARET           reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    TIMES           reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    DIVIDE          reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    MOD             reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    AMPERS          reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    LL              reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    GG              reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    AMPCAR          reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    COMMA           reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    LBRACE          reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    SEMICOL         reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    PLUSEQ          reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    MINUSEQ         reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    TIMESEQ         reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    DIVIDEEQ        reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    MODEQ           reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    AMPEQ           reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    OREQ            reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    CAREQ           reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    LLEQ            reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    GGEQ            reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    EQUAL           reduce using rule 137 (UnaryExpr -> PrimaryExpr .)
    PLUSPLUS        shift and go to state 298
    MINUSMIN        shift and go to state 299
    DOT             shift and go to state 192
    LBRACK          shift and go to state 188
    LPAREN          shift and go to state 191

    Index                          shift and go to state 186
    Slice                          shift and go to state 187
    Selector                       shift and go to state 189
    Arguments                      shift and go to state 190

state 323

    (78) ShortVarDecl -> IDENTIFIER . COLONEQ Expression
    (98) OperandName -> IDENTIFIER .

    COLONEQ         shift and go to state 304
    PLUSPLUS        reduce using rule 98 (OperandName -> IDENTIFIER .)
    MINUSMIN        reduce using rule 98 (OperandName -> IDENTIFIER .)
    DOT             reduce using rule 98 (OperandName -> IDENTIFIER .)
    LBRACK          reduce using rule 98 (OperandName -> IDENTIFIER .)
    LPAREN          reduce using rule 98 (OperandName -> IDENTIFIER .)
    OROR            reduce using rule 98 (OperandName -> IDENTIFIER .)
    AMPAMP          reduce using rule 98 (OperandName -> IDENTIFIER .)
    EQEQ            reduce using rule 98 (OperandName -> IDENTIFIER .)
    NOTEQ           reduce using rule 98 (OperandName -> IDENTIFIER .)
    LESS            reduce using rule 98 (OperandName -> IDENTIFIER .)
    GREAT           reduce using rule 98 (OperandName -> IDENTIFIER .)
    LEQ             reduce using rule 98 (OperandName -> IDENTIFIER .)
    GEQ             reduce using rule 98 (OperandName -> IDENTIFIER .)
    PLUS            reduce using rule 98 (OperandName -> IDENTIFIER .)
    MINUS           reduce using rule 98 (OperandName -> IDENTIFIER .)
    OR              reduce using rule 98 (OperandName -> IDENTIFIER .)
    CARET           reduce using rule 98 (OperandName -> IDENTIFIER .)
    TIMES           reduce using rule 98 (OperandName -> IDENTIFIER .)
    DIVIDE          reduce using rule 98 (OperandName -> IDENTIFIER .)
    MOD             reduce using rule 98 (OperandName -> IDENTIFIER .)
    AMPERS          reduce using rule 98 (OperandName -> IDENTIFIER .)
    LL              reduce using rule 98 (OperandName -> IDENTIFIER .)
    GG              reduce using rule 98 (OperandName -> IDENTIFIER .)
    AMPCAR          reduce using rule 98 (OperandName -> IDENTIFIER .)
    COMMA           reduce using rule 98 (OperandName -> IDENTIFIER .)
    LBRACE          reduce using rule 98 (OperandName -> IDENTIFIER .)
    PLUSEQ          reduce using rule 98 (OperandName -> IDENTIFIER .)
    MINUSEQ         reduce using rule 98 (OperandName -> IDENTIFIER .)
    TIMESEQ         reduce using rule 98 (OperandName -> IDENTIFIER .)
    DIVIDEEQ        reduce using rule 98 (OperandName -> IDENTIFIER .)
    MODEQ           reduce using rule 98 (OperandName -> IDENTIFIER .)
    AMPEQ           reduce using rule 98 (OperandName -> IDENTIFIER .)
    OREQ            reduce using rule 98 (OperandName -> IDENTIFIER .)
    CAREQ           reduce using rule 98 (OperandName -> IDENTIFIER .)
    LLEQ            reduce using rule 98 (OperandName -> IDENTIFIER .)
    GGEQ            reduce using rule 98 (OperandName -> IDENTIFIER .)
    EQUAL           reduce using rule 98 (OperandName -> IDENTIFIER .)
    SEMICOL         reduce using rule 98 (OperandName -> IDENTIFIER .)


state 324

    (187) ConditionBlockOpt -> Condition .

    LBRACE          reduce using rule 187 (ConditionBlockOpt -> Condition .)


state 325

    (186) ConditionBlockOpt -> epsilon .
    (157) SimpleStmt -> epsilon .

    LBRACE          reduce using rule 186 (ConditionBlockOpt -> epsilon .)
    SEMICOL         reduce using rule 157 (SimpleStmt -> epsilon .)


state 326

    (184) ForStmt -> CreateForScope FOR ConditionBlockOpt . Block
    (42) Block -> . CreateScope LBRACE StatementList RBRACE
    (43) CreateScope -> . epsilon
    (221) epsilon -> .

    LBRACE          reduce using rule 221 (epsilon -> .)

    epsilon                        shift and go to state 132
    CreateScope                    shift and go to state 133
    Block                          shift and go to state 336

state 327

    (189) Condition -> Expression .
    (116) Expression -> Expression . OROR Expression
    (117) Expression -> Expression . AMPAMP Expression
    (118) Expression -> Expression . EQEQ Expression
    (119) Expression -> Expression . NOTEQ Expression
    (120) Expression -> Expression . LESS Expression
    (121) Expression -> Expression . GREAT Expression
    (122) Expression -> Expression . LEQ Expression
    (123) Expression -> Expression . GEQ Expression
    (124) Expression -> Expression . PLUS Expression
    (125) Expression -> Expression . MINUS Expression
    (126) Expression -> Expression . OR Expression
    (127) Expression -> Expression . CARET Expression
    (128) Expression -> Expression . TIMES Expression
    (129) Expression -> Expression . DIVIDE Expression
    (130) Expression -> Expression . MOD Expression
    (131) Expression -> Expression . AMPERS Expression
    (132) Expression -> Expression . LL Expression
    (133) Expression -> Expression . GG Expression
    (134) Expression -> Expression . AMPCAR Expression
    (164) ExpressionStmt -> Expression .
    (112) ExpressionList -> Expression . ExpressionRep
    (113) ExpressionRep -> . ExpressionRep COMMA Expression
    (114) ExpressionRep -> . epsilon
    (221) epsilon -> .

    LBRACE          reduce using rule 189 (Condition -> Expression .)
    OROR            shift and go to state 167
    AMPAMP          shift and go to state 182
    EQEQ            shift and go to state 173
    NOTEQ           shift and go to state 179
    LESS            shift and go to state 172
    GREAT           shift and go to state 169
    LEQ             shift and go to state 185
    GEQ             shift and go to state 176
    PLUS            shift and go to state 180
    MINUS           shift and go to state 184
    OR              shift and go to state 177
    CARET           shift and go to state 168
    TIMES           shift and go to state 183
    DIVIDE          shift and go to state 170
    MOD             shift and go to state 181
    AMPERS          shift and go to state 175
    LL              shift and go to state 174
    GG              shift and go to state 178
    AMPCAR          shift and go to state 171
    SEMICOL         reduce using rule 164 (ExpressionStmt -> Expression .)
    COMMA           reduce using rule 221 (epsilon -> .)
    PLUSEQ          reduce using rule 221 (epsilon -> .)
    MINUSEQ         reduce using rule 221 (epsilon -> .)
    TIMESEQ         reduce using rule 221 (epsilon -> .)
    DIVIDEEQ        reduce using rule 221 (epsilon -> .)
    MODEQ           reduce using rule 221 (epsilon -> .)
    AMPEQ           reduce using rule 221 (epsilon -> .)
    OREQ            reduce using rule 221 (epsilon -> .)
    CAREQ           reduce using rule 221 (epsilon -> .)
    LLEQ            reduce using rule 221 (epsilon -> .)
    GGEQ            reduce using rule 221 (epsilon -> .)
    EQUAL           reduce using rule 221 (epsilon -> .)

    epsilon                        shift and go to state 202
    ExpressionRep                  shift and go to state 201

state 328

    (190) ForClause -> SimpleStmt . SEMICOL ConditionOpt SEMICOL SimpleStmt

    SEMICOL         shift and go to state 337


state 329

    (188) ConditionBlockOpt -> ForClause .

    LBRACE          reduce using rule 188 (ConditionBlockOpt -> ForClause .)


state 330

    (162) LabeledStmt -> Label COLON Statement .

    SEMICOL         reduce using rule 162 (LabeledStmt -> Label COLON Statement .)


state 331

    (156) PrintStmt -> PRINT PS Expression .
    (116) Expression -> Expression . OROR Expression
    (117) Expression -> Expression . AMPAMP Expression
    (118) Expression -> Expression . EQEQ Expression
    (119) Expression -> Expression . NOTEQ Expression
    (120) Expression -> Expression . LESS Expression
    (121) Expression -> Expression . GREAT Expression
    (122) Expression -> Expression . LEQ Expression
    (123) Expression -> Expression . GEQ Expression
    (124) Expression -> Expression . PLUS Expression
    (125) Expression -> Expression . MINUS Expression
    (126) Expression -> Expression . OR Expression
    (127) Expression -> Expression . CARET Expression
    (128) Expression -> Expression . TIMES Expression
    (129) Expression -> Expression . DIVIDE Expression
    (130) Expression -> Expression . MOD Expression
    (131) Expression -> Expression . AMPERS Expression
    (132) Expression -> Expression . LL Expression
    (133) Expression -> Expression . GG Expression
    (134) Expression -> Expression . AMPCAR Expression

    SEMICOL         reduce using rule 156 (PrintStmt -> PRINT PS Expression .)
    OROR            shift and go to state 167
    AMPAMP          shift and go to state 182
    EQEQ            shift and go to state 173
    NOTEQ           shift and go to state 179
    LESS            shift and go to state 172
    GREAT           shift and go to state 169
    LEQ             shift and go to state 185
    GEQ             shift and go to state 176
    PLUS            shift and go to state 180
    MINUS           shift and go to state 184
    OR              shift and go to state 177
    CARET           shift and go to state 168
    TIMES           shift and go to state 183
    DIVIDE          shift and go to state 170
    MOD             shift and go to state 181
    AMPERS          shift and go to state 175
    LL              shift and go to state 174
    GG              shift and go to state 178
    AMPCAR          shift and go to state 171


state 332

    (155) PrintStmt -> PRINT PD Expression .
    (116) Expression -> Expression . OROR Expression
    (117) Expression -> Expression . AMPAMP Expression
    (118) Expression -> Expression . EQEQ Expression
    (119) Expression -> Expression . NOTEQ Expression
    (120) Expression -> Expression . LESS Expression
    (121) Expression -> Expression . GREAT Expression
    (122) Expression -> Expression . LEQ Expression
    (123) Expression -> Expression . GEQ Expression
    (124) Expression -> Expression . PLUS Expression
    (125) Expression -> Expression . MINUS Expression
    (126) Expression -> Expression . OR Expression
    (127) Expression -> Expression . CARET Expression
    (128) Expression -> Expression . TIMES Expression
    (129) Expression -> Expression . DIVIDE Expression
    (130) Expression -> Expression . MOD Expression
    (131) Expression -> Expression . AMPERS Expression
    (132) Expression -> Expression . LL Expression
    (133) Expression -> Expression . GG Expression
    (134) Expression -> Expression . AMPCAR Expression

    SEMICOL         reduce using rule 155 (PrintStmt -> PRINT PD Expression .)
    OROR            shift and go to state 167
    AMPAMP          shift and go to state 182
    EQEQ            shift and go to state 173
    NOTEQ           shift and go to state 179
    LESS            shift and go to state 172
    GREAT           shift and go to state 169
    LEQ             shift and go to state 185
    GEQ             shift and go to state 176
    PLUS            shift and go to state 180
    MINUS           shift and go to state 184
    OR              shift and go to state 177
    CARET           shift and go to state 168
    TIMES           shift and go to state 183
    DIVIDE          shift and go to state 170
    MOD             shift and go to state 181
    AMPERS          shift and go to state 175
    LL              shift and go to state 174
    GG              shift and go to state 178
    AMPCAR          shift and go to state 171


state 333

    (78) ShortVarDecl -> IDENTIFIER COLONEQ Expression .
    (116) Expression -> Expression . OROR Expression
    (117) Expression -> Expression . AMPAMP Expression
    (118) Expression -> Expression . EQEQ Expression
    (119) Expression -> Expression . NOTEQ Expression
    (120) Expression -> Expression . LESS Expression
    (121) Expression -> Expression . GREAT Expression
    (122) Expression -> Expression . LEQ Expression
    (123) Expression -> Expression . GEQ Expression
    (124) Expression -> Expression . PLUS Expression
    (125) Expression -> Expression . MINUS Expression
    (126) Expression -> Expression . OR Expression
    (127) Expression -> Expression . CARET Expression
    (128) Expression -> Expression . TIMES Expression
    (129) Expression -> Expression . DIVIDE Expression
    (130) Expression -> Expression . MOD Expression
    (131) Expression -> Expression . AMPERS Expression
    (132) Expression -> Expression . LL Expression
    (133) Expression -> Expression . GG Expression
    (134) Expression -> Expression . AMPCAR Expression

    SEMICOL         reduce using rule 78 (ShortVarDecl -> IDENTIFIER COLONEQ Expression .)
    LBRACE          reduce using rule 78 (ShortVarDecl -> IDENTIFIER COLONEQ Expression .)
    OROR            shift and go to state 167
    AMPAMP          shift and go to state 182
    EQEQ            shift and go to state 173
    NOTEQ           shift and go to state 179
    LESS            shift and go to state 172
    GREAT           shift and go to state 169
    LEQ             shift and go to state 185
    GEQ             shift and go to state 176
    PLUS            shift and go to state 180
    MINUS           shift and go to state 184
    OR              shift and go to state 177
    CARET           shift and go to state 168
    TIMES           shift and go to state 183
    DIVIDE          shift and go to state 170
    MOD             shift and go to state 181
    AMPERS          shift and go to state 175
    LL              shift and go to state 174
    GG              shift and go to state 178
    AMPCAR          shift and go to state 171


state 334

    (167) Assignment -> ExpressionList assign_op ExpressionList .

    SEMICOL         reduce using rule 167 (Assignment -> ExpressionList assign_op ExpressionList .)
    LBRACE          reduce using rule 167 (Assignment -> ExpressionList assign_op ExpressionList .)


state 335

    (180) IfStmt -> IF Expression Block . ElseOpt
    (181) ElseOpt -> . ELSE IfStmt
    (182) ElseOpt -> . ELSE Block
    (183) ElseOpt -> . epsilon
    (221) epsilon -> .

    ELSE            shift and go to state 339
    SEMICOL         reduce using rule 221 (epsilon -> .)

    epsilon                        shift and go to state 338
    ElseOpt                        shift and go to state 340

state 336

    (184) ForStmt -> CreateForScope FOR ConditionBlockOpt Block .

    SEMICOL         reduce using rule 184 (ForStmt -> CreateForScope FOR ConditionBlockOpt Block .)


state 337

    (190) ForClause -> SimpleStmt SEMICOL . ConditionOpt SEMICOL SimpleStmt
    (191) ConditionOpt -> . epsilon
    (192) ConditionOpt -> . Condition
    (221) epsilon -> .
    (189) Condition -> . Expression
    (115) Expression -> . UnaryExpr
    (116) Expression -> . Expression OROR Expression
    (117) Expression -> . Expression AMPAMP Expression
    (118) Expression -> . Expression EQEQ Expression
    (119) Expression -> . Expression NOTEQ Expression
    (120) Expression -> . Expression LESS Expression
    (121) Expression -> . Expression GREAT Expression
    (122) Expression -> . Expression LEQ Expression
    (123) Expression -> . Expression GEQ Expression
    (124) Expression -> . Expression PLUS Expression
    (125) Expression -> . Expression MINUS Expression
    (126) Expression -> . Expression OR Expression
    (127) Expression -> . Expression CARET Expression
    (128) Expression -> . Expression TIMES Expression
    (129) Expression -> . Expression DIVIDE Expression
    (130) Expression -> . Expression MOD Expression
    (131) Expression -> . Expression AMPERS Expression
    (132) Expression -> . Expression LL Expression
    (133) Expression -> . Expression GG Expression
    (134) Expression -> . Expression AMPCAR Expression
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (100) PrimaryExpr -> . Operand
    (101) PrimaryExpr -> . Conversion
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . PrimaryExpr Index
    (104) PrimaryExpr -> . PrimaryExpr Slice
    (105) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (99) Conversion -> . Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (98) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (88) BasicLit -> . IntLiteral
    (89) BasicLit -> . FloatLiteral
    (90) BasicLit -> . ImgLiteral
    (91) BasicLit -> . RuneLiteral
    (92) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (93) IntLiteral -> . INTEGER
    (94) FloatLiteral -> . FLOAT
    (95) ImgLiteral -> . IMAGINARY
    (96) RuneLiteral -> . RUNE
    (97) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . TIMES BaseType
    (26) FunctionType -> . FUNC Signature

    SEMICOL         reduce using rule 221 (epsilon -> .)
    PLUS            shift and go to state 107
    MINUS           shift and go to state 101
    TIMES           shift and go to state 116
    AMPERS          shift and go to state 122
    NOT             shift and go to state 106
    LPAREN          shift and go to state 119
    IDENTIFIER      shift and go to state 110
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 108
    FLOAT           shift and go to state 121
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 95
    STRING          shift and go to state 102
    LBRACK          shift and go to state 66
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53

    Conversion                     shift and go to state 96
    UnaryOp                        shift and go to state 105
    Literal                        shift and go to state 98
    FloatLiteral                   shift and go to state 99
    Type                           shift and go to state 100
    OperandName                    shift and go to state 103
    BasicLit                       shift and go to state 104
    TypeName                       shift and go to state 57
    Condition                      shift and go to state 341
    StructType                     shift and go to state 59
    IntLiteral                     shift and go to state 111
    ImgLiteral                     shift and go to state 112
    epsilon                        shift and go to state 342
    UnaryExpr                      shift and go to state 114
    RuneLiteral                    shift and go to state 115
    PrimaryExpr                    shift and go to state 123
    ConditionOpt                   shift and go to state 343
    ArrayType                      shift and go to state 54
    Expression                     shift and go to state 344
    PointerType                    shift and go to state 68
    StringLiteral                  shift and go to state 97
    TypeLit                        shift and go to state 56
    Operand                        shift and go to state 117
    FunctionType                   shift and go to state 69

state 338

    (183) ElseOpt -> epsilon .

    SEMICOL         reduce using rule 183 (ElseOpt -> epsilon .)


state 339

    (181) ElseOpt -> ELSE . IfStmt
    (182) ElseOpt -> ELSE . Block
    (180) IfStmt -> . IF Expression Block ElseOpt
    (42) Block -> . CreateScope LBRACE StatementList RBRACE
    (43) CreateScope -> . epsilon
    (221) epsilon -> .

    IF              shift and go to state 279
    LBRACE          reduce using rule 221 (epsilon -> .)

    epsilon                        shift and go to state 132
    CreateScope                    shift and go to state 133
    IfStmt                         shift and go to state 345
    Block                          shift and go to state 346

state 340

    (180) IfStmt -> IF Expression Block ElseOpt .

    SEMICOL         reduce using rule 180 (IfStmt -> IF Expression Block ElseOpt .)


state 341

    (192) ConditionOpt -> Condition .

    SEMICOL         reduce using rule 192 (ConditionOpt -> Condition .)


state 342

    (191) ConditionOpt -> epsilon .

    SEMICOL         reduce using rule 191 (ConditionOpt -> epsilon .)


state 343

    (190) ForClause -> SimpleStmt SEMICOL ConditionOpt . SEMICOL SimpleStmt

    SEMICOL         shift and go to state 347


state 344

    (189) Condition -> Expression .
    (116) Expression -> Expression . OROR Expression
    (117) Expression -> Expression . AMPAMP Expression
    (118) Expression -> Expression . EQEQ Expression
    (119) Expression -> Expression . NOTEQ Expression
    (120) Expression -> Expression . LESS Expression
    (121) Expression -> Expression . GREAT Expression
    (122) Expression -> Expression . LEQ Expression
    (123) Expression -> Expression . GEQ Expression
    (124) Expression -> Expression . PLUS Expression
    (125) Expression -> Expression . MINUS Expression
    (126) Expression -> Expression . OR Expression
    (127) Expression -> Expression . CARET Expression
    (128) Expression -> Expression . TIMES Expression
    (129) Expression -> Expression . DIVIDE Expression
    (130) Expression -> Expression . MOD Expression
    (131) Expression -> Expression . AMPERS Expression
    (132) Expression -> Expression . LL Expression
    (133) Expression -> Expression . GG Expression
    (134) Expression -> Expression . AMPCAR Expression

    SEMICOL         reduce using rule 189 (Condition -> Expression .)
    OROR            shift and go to state 167
    AMPAMP          shift and go to state 182
    EQEQ            shift and go to state 173
    NOTEQ           shift and go to state 179
    LESS            shift and go to state 172
    GREAT           shift and go to state 169
    LEQ             shift and go to state 185
    GEQ             shift and go to state 176
    PLUS            shift and go to state 180
    MINUS           shift and go to state 184
    OR              shift and go to state 177
    CARET           shift and go to state 168
    TIMES           shift and go to state 183
    DIVIDE          shift and go to state 170
    MOD             shift and go to state 181
    AMPERS          shift and go to state 175
    LL              shift and go to state 174
    GG              shift and go to state 178
    AMPCAR          shift and go to state 171


state 345

    (181) ElseOpt -> ELSE IfStmt .

    SEMICOL         reduce using rule 181 (ElseOpt -> ELSE IfStmt .)


state 346

    (182) ElseOpt -> ELSE Block .

    SEMICOL         reduce using rule 182 (ElseOpt -> ELSE Block .)


state 347

    (190) ForClause -> SimpleStmt SEMICOL ConditionOpt SEMICOL . SimpleStmt
    (157) SimpleStmt -> . epsilon
    (158) SimpleStmt -> . ExpressionStmt
    (159) SimpleStmt -> . IncDecStmt
    (160) SimpleStmt -> . Assignment
    (161) SimpleStmt -> . ShortVarDecl
    (221) epsilon -> .
    (164) ExpressionStmt -> . Expression
    (165) IncDecStmt -> . PrimaryExpr PLUSPLUS
    (166) IncDecStmt -> . PrimaryExpr MINUSMIN
    (167) Assignment -> . ExpressionList assign_op ExpressionList
    (78) ShortVarDecl -> . IDENTIFIER COLONEQ Expression
    (115) Expression -> . UnaryExpr
    (116) Expression -> . Expression OROR Expression
    (117) Expression -> . Expression AMPAMP Expression
    (118) Expression -> . Expression EQEQ Expression
    (119) Expression -> . Expression NOTEQ Expression
    (120) Expression -> . Expression LESS Expression
    (121) Expression -> . Expression GREAT Expression
    (122) Expression -> . Expression LEQ Expression
    (123) Expression -> . Expression GEQ Expression
    (124) Expression -> . Expression PLUS Expression
    (125) Expression -> . Expression MINUS Expression
    (126) Expression -> . Expression OR Expression
    (127) Expression -> . Expression CARET Expression
    (128) Expression -> . Expression TIMES Expression
    (129) Expression -> . Expression DIVIDE Expression
    (130) Expression -> . Expression MOD Expression
    (131) Expression -> . Expression AMPERS Expression
    (132) Expression -> . Expression LL Expression
    (133) Expression -> . Expression GG Expression
    (134) Expression -> . Expression AMPCAR Expression
    (100) PrimaryExpr -> . Operand
    (101) PrimaryExpr -> . Conversion
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . PrimaryExpr Index
    (104) PrimaryExpr -> . PrimaryExpr Slice
    (105) PrimaryExpr -> . PrimaryExpr Arguments
    (112) ExpressionList -> . Expression ExpressionRep
    (137) UnaryExpr -> . PrimaryExpr
    (138) UnaryExpr -> . UnaryOp UnaryExpr
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (99) Conversion -> . Type LPAREN Expression RPAREN
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (87) Literal -> . BasicLit
    (98) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (88) BasicLit -> . IntLiteral
    (89) BasicLit -> . FloatLiteral
    (90) BasicLit -> . ImgLiteral
    (91) BasicLit -> . RuneLiteral
    (92) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (93) IntLiteral -> . INTEGER
    (94) FloatLiteral -> . FLOAT
    (95) ImgLiteral -> . IMAGINARY
    (96) RuneLiteral -> . RUNE
    (97) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . TIMES BaseType
    (26) FunctionType -> . FUNC Signature

    LBRACE          reduce using rule 221 (epsilon -> .)
    IDENTIFIER      shift and go to state 323
    LPAREN          shift and go to state 119
    PLUS            shift and go to state 107
    MINUS           shift and go to state 101
    TIMES           shift and go to state 116
    AMPERS          shift and go to state 122
    NOT             shift and go to state 106
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 108
    FLOAT           shift and go to state 121
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 95
    STRING          shift and go to state 102
    LBRACK          shift and go to state 66
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53

    UnaryOp                        shift and go to state 105
    Conversion                     shift and go to state 96
    SimpleStmt                     shift and go to state 348
    StringLiteral                  shift and go to state 97
    ExpressionStmt                 shift and go to state 253
    FloatLiteral                   shift and go to state 99
    Type                           shift and go to state 100
    OperandName                    shift and go to state 103
    Assignment                     shift and go to state 255
    TypeName                       shift and go to state 57
    IncDecStmt                     shift and go to state 262
    StructType                     shift and go to state 59
    IntLiteral                     shift and go to state 111
    ImgLiteral                     shift and go to state 112
    epsilon                        shift and go to state 349
    UnaryExpr                      shift and go to state 114
    RuneLiteral                    shift and go to state 115
    PrimaryExpr                    shift and go to state 264
    ExpressionList                 shift and go to state 271
    ArrayType                      shift and go to state 54
    Expression                     shift and go to state 272
    ShortVarDecl                   shift and go to state 278
    PointerType                    shift and go to state 68
    Literal                        shift and go to state 98
    TypeLit                        shift and go to state 56
    BasicLit                       shift and go to state 104
    Operand                        shift and go to state 117
    FunctionType                   shift and go to state 69

state 348

    (190) ForClause -> SimpleStmt SEMICOL ConditionOpt SEMICOL SimpleStmt .

    LBRACE          reduce using rule 190 (ForClause -> SimpleStmt SEMICOL ConditionOpt SEMICOL SimpleStmt .)


state 349

    (157) SimpleStmt -> epsilon .

    LBRACE          reduce using rule 157 (SimpleStmt -> epsilon .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LPAREN in state 73 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 194 resolved as shift
