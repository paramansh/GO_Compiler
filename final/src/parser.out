Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    GO
    DEFER
    FALLTHROUGH
    LMINUS
    AMPCAREQ
    MAP
    INTERFACE
    CONSTANT
    SELECT
    DDD
    DEFAULT
    CHAN
    CASE
    SWITCH

Grammar

Rule 0     S' -> start
Rule 1     start -> Source
Rule 2     Type -> TypeName
Rule 3     Type -> TypeLit
Rule 4     Type -> LPAREN Type RPAREN
Rule 5     TypeName -> TYPEX
Rule 6     TypeName -> TTYPE IDENTIFIER
Rule 7     TypeLit -> ArrayType
Rule 8     TypeLit -> StructType
Rule 9     TypeLit -> PointerType
Rule 10    TypeLit -> FunctionType
Rule 11    TypeOpt -> Type
Rule 12    TypeOpt -> epsilon
Rule 13    ArrayType -> LBRACK ArrayLength RBRACK ElementType
Rule 14    ArrayType -> LBRACK RBRACK ElementType
Rule 15    ArrayLength -> Expression
Rule 16    ElementType -> Type
Rule 17    StructType -> STRUCT LBRACE FieldDeclRep RBRACE
Rule 18    FieldDeclRep -> FieldDeclRep FieldDecl SEMICOL
Rule 19    FieldDeclRep -> epsilon
Rule 20    FieldDecl -> IdentifierList Type TagOpt
Rule 21    TagOpt -> Tag
Rule 22    TagOpt -> epsilon
Rule 23    Tag -> STRING
Rule 24    PointerType -> Pointer BaseType
Rule 25    Pointer -> POINTER
Rule 26    BaseType -> Type
Rule 27    FunctionType -> FUNC Signature
Rule 28    Signature -> Parameters ResultOpt
Rule 29    ResultOpt -> Result
Rule 30    ResultOpt -> epsilon
Rule 31    Result -> Parameters
Rule 32    Result -> Type
Rule 33    Parameters -> LPAREN ParameterListOpt RPAREN
Rule 34    ParameterListOpt -> ParametersList
Rule 35    ParameterListOpt -> epsilon
Rule 36    ParametersList -> Type
Rule 37    ParametersList -> IdentifierList Type
Rule 38    ParametersList -> ParameterDeclCommaRep
Rule 39    ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA ParameterDecl
Rule 40    ParameterDeclCommaRep -> ParameterDecl COMMA ParameterDecl
Rule 41    ParameterDecl -> IdentifierList Type
Rule 42    ParameterDecl -> Type
Rule 43    Block -> CreateScope LBRACE StatementList RBRACE
Rule 44    CreateScope -> epsilon
Rule 45    StatementList -> StatementRep
Rule 46    StatementRep -> StatementRep Statement SEMICOL
Rule 47    StatementRep -> epsilon
Rule 48    Declaration -> ConstDecl
Rule 49    Declaration -> TypeDecl
Rule 50    Declaration -> VarDecl
Rule 51    TopLevelDecl -> Declaration
Rule 52    TopLevelDecl -> FunctionDecl
Rule 53    ConstDecl -> CONST ConstSpec
Rule 54    ConstDecl -> CONST LPAREN ConstSpecRep RPAREN
Rule 55    ConstSpecRep -> ConstSpecRep ConstSpec SEMICOL
Rule 56    ConstSpecRep -> epsilon
Rule 57    ConstSpec -> IdentifierList TypeExprListOpt
Rule 58    TypeExprListOpt -> TypeOpt EQUAL ExpressionList
Rule 59    TypeExprListOpt -> epsilon
Rule 60    IdentifierList -> IDENTIFIER IdentifierRep
Rule 61    IdentifierRep -> IdentifierRep COMMA IDENTIFIER
Rule 62    IdentifierRep -> epsilon
Rule 63    TypeDecl -> TYPE TypeSpec
Rule 64    TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN
Rule 65    TypeSpecRep -> TypeSpecRep TypeSpec SEMICOL
Rule 66    TypeSpecRep -> epsilon
Rule 67    TypeSpec -> AliasDecl
Rule 68    TypeSpec -> TypeDef
Rule 69    AliasDecl -> IDENTIFIER EQUAL Type
Rule 70    TypeDef -> TTYPE IDENTIFIER Type
Rule 71    VarDecl -> VAR VarSpec
Rule 72    VarDecl -> VAR LPAREN VarSpecRep RPAREN
Rule 73    VarSpecRep -> VarSpecRep VarSpec SEMICOL
Rule 74    VarSpecRep -> epsilon
Rule 75    VarSpec -> IdentifierList Type ExpressionListOpt
Rule 76    VarSpec -> IdentifierList EQUAL ExpressionList
Rule 77    ExpressionListOpt -> EQUAL ExpressionList
Rule 78    ExpressionListOpt -> epsilon
Rule 79    ShortVarDecl -> IDENTIFIER COLONEQ Expression
Rule 80    FunctionDecl -> FUNC FunctionName Function
Rule 81    FunctionDecl -> FUNC FunctionName Signature
Rule 82    FunctionName -> IDENTIFIER
Rule 83    Function -> Signature FunctionBody
Rule 84    FunctionBody -> Block
Rule 85    Operand -> Literal
Rule 86    Operand -> OperandName
Rule 87    Operand -> LPAREN Expression RPAREN
Rule 88    Literal -> BasicLit
Rule 89    BasicLit -> IntLiteral
Rule 90    BasicLit -> FloatLiteral
Rule 91    BasicLit -> ImgLiteral
Rule 92    BasicLit -> RuneLiteral
Rule 93    BasicLit -> StringLiteral
Rule 94    IntLiteral -> INTEGER
Rule 95    FloatLiteral -> FLOAT
Rule 96    ImgLiteral -> IMAGINARY
Rule 97    RuneLiteral -> RUNE
Rule 98    StringLiteral -> STRING
Rule 99    OperandName -> IDENTIFIER
Rule 100   Conversion -> Type LPAREN Expression RPAREN
Rule 101   PrimaryExpr -> Operand
Rule 102   PrimaryExpr -> Conversion
Rule 103   PrimaryExpr -> PrimaryExpr Selector
Rule 104   PrimaryExpr -> PrimaryExpr Index
Rule 105   PrimaryExpr -> PrimaryExpr Slice
Rule 106   PrimaryExpr -> PrimaryExpr Arguments
Rule 107   Selector -> DOT IDENTIFIER
Rule 108   Index -> LBRACK Expression RBRACK
Rule 109   Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK
Rule 110   Arguments -> LPAREN ExpressionListTypeOpt RPAREN
Rule 111   ExpressionListTypeOpt -> ExpressionList
Rule 112   ExpressionListTypeOpt -> epsilon
Rule 113   ExpressionList -> Expression ExpressionRep
Rule 114   ExpressionRep -> ExpressionRep COMMA Expression
Rule 115   ExpressionRep -> epsilon
Rule 116   Expression -> UnaryExpr
Rule 117   Expression -> Expression OROR Expression
Rule 118   Expression -> Expression AMPAMP Expression
Rule 119   Expression -> Expression EQEQ Expression
Rule 120   Expression -> Expression NOTEQ Expression
Rule 121   Expression -> Expression LESS Expression
Rule 122   Expression -> Expression GREAT Expression
Rule 123   Expression -> Expression LEQ Expression
Rule 124   Expression -> Expression GEQ Expression
Rule 125   Expression -> Expression PLUS Expression
Rule 126   Expression -> Expression MINUS Expression
Rule 127   Expression -> Expression OR Expression
Rule 128   Expression -> Expression CARET Expression
Rule 129   Expression -> Expression TIMES Expression
Rule 130   Expression -> Expression DIVIDE Expression
Rule 131   Expression -> Expression MOD Expression
Rule 132   Expression -> Expression AMPERS Expression
Rule 133   Expression -> Expression LL Expression
Rule 134   Expression -> Expression GG Expression
Rule 135   Expression -> Expression AMPCAR Expression
Rule 136   ExpressionOpt -> Expression
Rule 137   ExpressionOpt -> epsilon
Rule 138   UnaryExpr -> PrimaryExpr
Rule 139   UnaryExpr -> UnaryOp UnaryExpr
Rule 140   UnaryOp -> PLUS
Rule 141   UnaryOp -> MINUS
Rule 142   UnaryOp -> TIMES
Rule 143   UnaryOp -> AMPERS
Rule 144   UnaryOp -> NOT
Rule 145   Statement -> Declaration
Rule 146   Statement -> LabeledStmt
Rule 147   Statement -> SimpleStmt
Rule 148   Statement -> ReturnStmt
Rule 149   Statement -> BreakStmt
Rule 150   Statement -> ContinueStmt
Rule 151   Statement -> GotoStmt
Rule 152   Statement -> Block
Rule 153   Statement -> IfStmt
Rule 154   Statement -> PrintStmt
Rule 155   Statement -> MallocStmt
Rule 156   Statement -> ForStmt
Rule 157   MallocStmt -> MALLOC IDENTIFIER
Rule 158   PrintStmt -> PRINT PD Expression
Rule 159   PrintStmt -> PRINT PS Expression
Rule 160   SimpleStmt -> epsilon
Rule 161   SimpleStmt -> ExpressionStmt
Rule 162   SimpleStmt -> IncDecStmt
Rule 163   SimpleStmt -> Assignment
Rule 164   SimpleStmt -> ShortVarDecl
Rule 165   LabeledStmt -> Label COLON Statement
Rule 166   Label -> IDENTIFIER
Rule 167   ExpressionStmt -> Expression
Rule 168   IncDecStmt -> PrimaryExpr PLUSPLUS
Rule 169   IncDecStmt -> PrimaryExpr MINUSMIN
Rule 170   Assignment -> ExpressionList assign_op ExpressionList
Rule 171   assign_op -> AssignOp
Rule 172   AssignOp -> PLUSEQ
Rule 173   AssignOp -> MINUSEQ
Rule 174   AssignOp -> TIMESEQ
Rule 175   AssignOp -> DIVIDEEQ
Rule 176   AssignOp -> MODEQ
Rule 177   AssignOp -> AMPEQ
Rule 178   AssignOp -> OREQ
Rule 179   AssignOp -> CAREQ
Rule 180   AssignOp -> LLEQ
Rule 181   AssignOp -> GGEQ
Rule 182   AssignOp -> EQUAL
Rule 183   IfStmt -> IF Expression Block ElseOpt
Rule 184   ElseOpt -> ELSE IfStmt
Rule 185   ElseOpt -> ELSE Block
Rule 186   ElseOpt -> epsilon
Rule 187   ForStmt -> CreateForScope FOR ConditionBlockOpt Block
Rule 188   CreateForScope -> epsilon
Rule 189   ConditionBlockOpt -> epsilon
Rule 190   ConditionBlockOpt -> Condition
Rule 191   ConditionBlockOpt -> ForClause
Rule 192   Condition -> Expression
Rule 193   ForClause -> SimpleStmt SEMICOL ConditionOpt SEMICOL SimpleStmt
Rule 194   ConditionOpt -> epsilon
Rule 195   ConditionOpt -> Condition
Rule 196   RangeClause -> ExpressionIdentListOpt RANGE Expression
Rule 197   ExpressionIdentListOpt -> epsilon
Rule 198   ExpressionIdentListOpt -> ExpressionIdentifier
Rule 199   ExpressionIdentifier -> ExpressionList EQUAL
Rule 200   ReturnStmt -> RETURN ExpressionListPureOpt
Rule 201   ExpressionListPureOpt -> ExpressionList
Rule 202   ExpressionListPureOpt -> epsilon
Rule 203   BreakStmt -> BREAK LabelOpt
Rule 204   ContinueStmt -> CONTINUE LabelOpt
Rule 205   LabelOpt -> Label
Rule 206   LabelOpt -> epsilon
Rule 207   GotoStmt -> GOTO Label
Rule 208   Source -> PackageClause SEMICOL ImportDeclRep TopLevelDeclRep
Rule 209   ImportDeclRep -> epsilon
Rule 210   ImportDeclRep -> ImportDeclRep ImportDecl SEMICOL
Rule 211   TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOL
Rule 212   TopLevelDeclRep -> epsilon
Rule 213   PackageClause -> PACKAGE PackageName
Rule 214   PackageName -> IDENTIFIER
Rule 215   ImportDecl -> IMPORT ImportSpec
Rule 216   ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN
Rule 217   ImportSpecRep -> ImportSpecRep ImportSpec SEMICOL
Rule 218   ImportSpecRep -> epsilon
Rule 219   ImportSpec -> PackageNameDotOpt ImportPath
Rule 220   PackageNameDotOpt -> DOT
Rule 221   PackageNameDotOpt -> PackageName
Rule 222   PackageNameDotOpt -> epsilon
Rule 223   ImportPath -> STRING
Rule 224   epsilon -> <empty>

Terminals, with rules where they appear

AMPAMP               : 118
AMPCAR               : 135
AMPCAREQ             : 
AMPEQ                : 177
AMPERS               : 132 143
BREAK                : 203
CAREQ                : 179
CARET                : 128
CASE                 : 
CHAN                 : 
COLON                : 109 165
COLONEQ              : 79
COMMA                : 39 40 61 114
CONST                : 53 54
CONSTANT             : 
CONTINUE             : 204
DDD                  : 
DEFAULT              : 
DEFER                : 
DIVIDE               : 130
DIVIDEEQ             : 175
DOT                  : 107 220
ELSE                 : 184 185
EQEQ                 : 119
EQUAL                : 58 69 76 77 182 199
FALLTHROUGH          : 
FLOAT                : 95
FOR                  : 187
FUNC                 : 27 80 81
GEQ                  : 124
GG                   : 134
GGEQ                 : 181
GO                   : 
GOTO                 : 207
GREAT                : 122
IDENTIFIER           : 6 60 61 69 70 79 82 99 107 157 166 214
IF                   : 183
IMAGINARY            : 96
IMPORT               : 215 216
INTEGER              : 94
INTERFACE            : 
LBRACE               : 17 43
LBRACK               : 13 14 108 109
LEQ                  : 123
LESS                 : 121
LL                   : 133
LLEQ                 : 180
LMINUS               : 
LPAREN               : 4 33 54 64 72 87 100 110 216
MALLOC               : 157
MAP                  : 
MINUS                : 126 141
MINUSEQ              : 173
MINUSMIN             : 169
MOD                  : 131
MODEQ                : 176
NOT                  : 144
NOTEQ                : 120
OR                   : 127
OREQ                 : 178
OROR                 : 117
PACKAGE              : 213
PD                   : 158
PLUS                 : 125 140
PLUSEQ               : 172
PLUSPLUS             : 168
POINTER              : 25
PRINT                : 158 159
PS                   : 159
RANGE                : 196
RBRACE               : 17 43
RBRACK               : 13 14 108 109
RETURN               : 200
RPAREN               : 4 33 54 64 72 87 100 110 216
RUNE                 : 97
SELECT               : 
SEMICOL              : 18 46 55 65 73 193 193 208 210 211 217
STRING               : 23 98 223
STRUCT               : 17
SWITCH               : 
TIMES                : 129 142
TIMESEQ              : 174
TTYPE                : 6 70
TYPE                 : 63 64
TYPEX                : 5
VAR                  : 71 72
error                : 

Nonterminals, with rules where they appear

AliasDecl            : 67
Arguments            : 106
ArrayLength          : 13
ArrayType            : 7
AssignOp             : 171
Assignment           : 163
BaseType             : 24
BasicLit             : 88
Block                : 84 152 183 185 187
BreakStmt            : 149
Condition            : 190 195
ConditionBlockOpt    : 187
ConditionOpt         : 193
ConstDecl            : 48
ConstSpec            : 53 55
ConstSpecRep         : 54 55
ContinueStmt         : 150
Conversion           : 102
CreateForScope       : 187
CreateScope          : 43
Declaration          : 51 145
ElementType          : 13 14
ElseOpt              : 183
Expression           : 15 79 87 100 108 113 114 117 117 118 118 119 119 120 120 121 121 122 122 123 123 124 124 125 125 126 126 127 127 128 128 129 129 130 130 131 131 132 132 133 133 134 134 135 135 136 158 159 167 183 192 196
ExpressionIdentListOpt : 196
ExpressionIdentifier : 198
ExpressionList       : 58 76 77 111 170 170 199 201
ExpressionListOpt    : 75
ExpressionListPureOpt : 200
ExpressionListTypeOpt : 110
ExpressionOpt        : 109 109
ExpressionRep        : 113 114
ExpressionStmt       : 161
FieldDecl            : 18
FieldDeclRep         : 17 18
FloatLiteral         : 90
ForClause            : 191
ForStmt              : 156
Function             : 80
FunctionBody         : 83
FunctionDecl         : 52
FunctionName         : 80 81
FunctionType         : 10
GotoStmt             : 151
IdentifierList       : 20 37 41 57 75 76
IdentifierRep        : 60 61
IfStmt               : 153 184
ImgLiteral           : 91
ImportDecl           : 210
ImportDeclRep        : 208 210
ImportPath           : 219
ImportSpec           : 215 217
ImportSpecRep        : 216 217
IncDecStmt           : 162
Index                : 104
IntLiteral           : 89
Label                : 165 205 207
LabelOpt             : 203 204
LabeledStmt          : 146
Literal              : 85
MallocStmt           : 155
Operand              : 101
OperandName          : 86
PackageClause        : 208
PackageName          : 213 221
PackageNameDotOpt    : 219
ParameterDecl        : 39 40 40
ParameterDeclCommaRep : 38 39
ParameterListOpt     : 33
Parameters           : 28 31
ParametersList       : 34
Pointer              : 24
PointerType          : 9
PrimaryExpr          : 103 104 105 106 138 168 169
PrintStmt            : 154
RangeClause          : 
Result               : 29
ResultOpt            : 28
ReturnStmt           : 148
RuneLiteral          : 92
Selector             : 103
ShortVarDecl         : 164
Signature            : 27 81 83
SimpleStmt           : 147 193 193
Slice                : 105
Source               : 1
Statement            : 46 165
StatementList        : 43
StatementRep         : 45 46
StringLiteral        : 93
StructType           : 8
Tag                  : 21
TagOpt               : 20
TopLevelDecl         : 211
TopLevelDeclRep      : 208 211
Type                 : 4 11 16 20 26 32 36 37 41 42 69 70 75 100
TypeDecl             : 49
TypeDef              : 68
TypeExprListOpt      : 57
TypeLit              : 3
TypeName             : 2
TypeOpt              : 58
TypeSpec             : 63 65
TypeSpecRep          : 64 65
UnaryExpr            : 116 139
UnaryOp              : 139
VarDecl              : 50
VarSpec              : 71 73
VarSpecRep           : 72 73
assign_op            : 170
epsilon              : 12 19 22 30 35 44 47 56 59 62 66 74 78 112 115 137 160 186 188 189 194 197 202 206 209 212 218 222
start                : 0

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . Source
    (208) Source -> . PackageClause SEMICOL ImportDeclRep TopLevelDeclRep
    (213) PackageClause -> . PACKAGE PackageName

    PACKAGE         shift and go to state 2

    PackageClause                  shift and go to state 1
    Source                         shift and go to state 3
    start                          shift and go to state 4

state 1

    (208) Source -> PackageClause . SEMICOL ImportDeclRep TopLevelDeclRep

    SEMICOL         shift and go to state 5


state 2

    (213) PackageClause -> PACKAGE . PackageName
    (214) PackageName -> . IDENTIFIER

    IDENTIFIER      shift and go to state 7

    PackageName                    shift and go to state 6

state 3

    (1) start -> Source .

    $end            reduce using rule 1 (start -> Source .)


state 4

    (0) S' -> start .



state 5

    (208) Source -> PackageClause SEMICOL . ImportDeclRep TopLevelDeclRep
    (209) ImportDeclRep -> . epsilon
    (210) ImportDeclRep -> . ImportDeclRep ImportDecl SEMICOL
    (224) epsilon -> .

    IMPORT          reduce using rule 224 (epsilon -> .)
    FUNC            reduce using rule 224 (epsilon -> .)
    CONST           reduce using rule 224 (epsilon -> .)
    TYPE            reduce using rule 224 (epsilon -> .)
    VAR             reduce using rule 224 (epsilon -> .)
    $end            reduce using rule 224 (epsilon -> .)

    ImportDeclRep                  shift and go to state 9
    epsilon                        shift and go to state 8

state 6

    (213) PackageClause -> PACKAGE PackageName .

    SEMICOL         reduce using rule 213 (PackageClause -> PACKAGE PackageName .)


state 7

    (214) PackageName -> IDENTIFIER .

    STRING          reduce using rule 214 (PackageName -> IDENTIFIER .)
    SEMICOL         reduce using rule 214 (PackageName -> IDENTIFIER .)


state 8

    (209) ImportDeclRep -> epsilon .

    IMPORT          reduce using rule 209 (ImportDeclRep -> epsilon .)
    FUNC            reduce using rule 209 (ImportDeclRep -> epsilon .)
    CONST           reduce using rule 209 (ImportDeclRep -> epsilon .)
    TYPE            reduce using rule 209 (ImportDeclRep -> epsilon .)
    VAR             reduce using rule 209 (ImportDeclRep -> epsilon .)
    $end            reduce using rule 209 (ImportDeclRep -> epsilon .)


state 9

    (208) Source -> PackageClause SEMICOL ImportDeclRep . TopLevelDeclRep
    (210) ImportDeclRep -> ImportDeclRep . ImportDecl SEMICOL
    (211) TopLevelDeclRep -> . TopLevelDeclRep TopLevelDecl SEMICOL
    (212) TopLevelDeclRep -> . epsilon
    (215) ImportDecl -> . IMPORT ImportSpec
    (216) ImportDecl -> . IMPORT LPAREN ImportSpecRep RPAREN
    (224) epsilon -> .

    IMPORT          shift and go to state 13
    FUNC            reduce using rule 224 (epsilon -> .)
    CONST           reduce using rule 224 (epsilon -> .)
    TYPE            reduce using rule 224 (epsilon -> .)
    VAR             reduce using rule 224 (epsilon -> .)
    $end            reduce using rule 224 (epsilon -> .)

    TopLevelDeclRep                shift and go to state 10
    epsilon                        shift and go to state 11
    ImportDecl                     shift and go to state 12

state 10

    (208) Source -> PackageClause SEMICOL ImportDeclRep TopLevelDeclRep .
    (211) TopLevelDeclRep -> TopLevelDeclRep . TopLevelDecl SEMICOL
    (51) TopLevelDecl -> . Declaration
    (52) TopLevelDecl -> . FunctionDecl
    (48) Declaration -> . ConstDecl
    (49) Declaration -> . TypeDecl
    (50) Declaration -> . VarDecl
    (80) FunctionDecl -> . FUNC FunctionName Function
    (81) FunctionDecl -> . FUNC FunctionName Signature
    (53) ConstDecl -> . CONST ConstSpec
    (54) ConstDecl -> . CONST LPAREN ConstSpecRep RPAREN
    (63) TypeDecl -> . TYPE TypeSpec
    (64) TypeDecl -> . TYPE LPAREN TypeSpecRep RPAREN
    (71) VarDecl -> . VAR VarSpec
    (72) VarDecl -> . VAR LPAREN VarSpecRep RPAREN

    $end            reduce using rule 208 (Source -> PackageClause SEMICOL ImportDeclRep TopLevelDeclRep .)
    FUNC            shift and go to state 20
    CONST           shift and go to state 14
    TYPE            shift and go to state 23
    VAR             shift and go to state 21

    TypeDecl                       shift and go to state 19
    VarDecl                        shift and go to state 22
    FunctionDecl                   shift and go to state 15
    TopLevelDecl                   shift and go to state 16
    Declaration                    shift and go to state 17
    ConstDecl                      shift and go to state 18

state 11

    (212) TopLevelDeclRep -> epsilon .

    FUNC            reduce using rule 212 (TopLevelDeclRep -> epsilon .)
    CONST           reduce using rule 212 (TopLevelDeclRep -> epsilon .)
    TYPE            reduce using rule 212 (TopLevelDeclRep -> epsilon .)
    VAR             reduce using rule 212 (TopLevelDeclRep -> epsilon .)
    $end            reduce using rule 212 (TopLevelDeclRep -> epsilon .)


state 12

    (210) ImportDeclRep -> ImportDeclRep ImportDecl . SEMICOL

    SEMICOL         shift and go to state 24


state 13

    (215) ImportDecl -> IMPORT . ImportSpec
    (216) ImportDecl -> IMPORT . LPAREN ImportSpecRep RPAREN
    (219) ImportSpec -> . PackageNameDotOpt ImportPath
    (220) PackageNameDotOpt -> . DOT
    (221) PackageNameDotOpt -> . PackageName
    (222) PackageNameDotOpt -> . epsilon
    (214) PackageName -> . IDENTIFIER
    (224) epsilon -> .

    LPAREN          shift and go to state 25
    DOT             shift and go to state 30
    IDENTIFIER      shift and go to state 7
    STRING          reduce using rule 224 (epsilon -> .)

    ImportSpec                     shift and go to state 26
    epsilon                        shift and go to state 27
    PackageName                    shift and go to state 28
    PackageNameDotOpt              shift and go to state 29

state 14

    (53) ConstDecl -> CONST . ConstSpec
    (54) ConstDecl -> CONST . LPAREN ConstSpecRep RPAREN
    (57) ConstSpec -> . IdentifierList TypeExprListOpt
    (60) IdentifierList -> . IDENTIFIER IdentifierRep

    LPAREN          shift and go to state 32
    IDENTIFIER      shift and go to state 34

    ConstSpec                      shift and go to state 31
    IdentifierList                 shift and go to state 33

state 15

    (52) TopLevelDecl -> FunctionDecl .

    SEMICOL         reduce using rule 52 (TopLevelDecl -> FunctionDecl .)


state 16

    (211) TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl . SEMICOL

    SEMICOL         shift and go to state 35


state 17

    (51) TopLevelDecl -> Declaration .

    SEMICOL         reduce using rule 51 (TopLevelDecl -> Declaration .)


state 18

    (48) Declaration -> ConstDecl .

    SEMICOL         reduce using rule 48 (Declaration -> ConstDecl .)


state 19

    (49) Declaration -> TypeDecl .

    SEMICOL         reduce using rule 49 (Declaration -> TypeDecl .)


state 20

    (80) FunctionDecl -> FUNC . FunctionName Function
    (81) FunctionDecl -> FUNC . FunctionName Signature
    (82) FunctionName -> . IDENTIFIER

    IDENTIFIER      shift and go to state 36

    FunctionName                   shift and go to state 37

state 21

    (71) VarDecl -> VAR . VarSpec
    (72) VarDecl -> VAR . LPAREN VarSpecRep RPAREN
    (75) VarSpec -> . IdentifierList Type ExpressionListOpt
    (76) VarSpec -> . IdentifierList EQUAL ExpressionList
    (60) IdentifierList -> . IDENTIFIER IdentifierRep

    LPAREN          shift and go to state 39
    IDENTIFIER      shift and go to state 34

    VarSpec                        shift and go to state 38
    IdentifierList                 shift and go to state 40

state 22

    (50) Declaration -> VarDecl .

    SEMICOL         reduce using rule 50 (Declaration -> VarDecl .)


state 23

    (63) TypeDecl -> TYPE . TypeSpec
    (64) TypeDecl -> TYPE . LPAREN TypeSpecRep RPAREN
    (67) TypeSpec -> . AliasDecl
    (68) TypeSpec -> . TypeDef
    (69) AliasDecl -> . IDENTIFIER EQUAL Type
    (70) TypeDef -> . TTYPE IDENTIFIER Type

    LPAREN          shift and go to state 44
    IDENTIFIER      shift and go to state 46
    TTYPE           shift and go to state 42

    TypeSpec                       shift and go to state 45
    TypeDef                        shift and go to state 41
    AliasDecl                      shift and go to state 43

state 24

    (210) ImportDeclRep -> ImportDeclRep ImportDecl SEMICOL .

    IMPORT          reduce using rule 210 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOL .)
    FUNC            reduce using rule 210 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOL .)
    CONST           reduce using rule 210 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOL .)
    TYPE            reduce using rule 210 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOL .)
    VAR             reduce using rule 210 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOL .)
    $end            reduce using rule 210 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOL .)


state 25

    (216) ImportDecl -> IMPORT LPAREN . ImportSpecRep RPAREN
    (217) ImportSpecRep -> . ImportSpecRep ImportSpec SEMICOL
    (218) ImportSpecRep -> . epsilon
    (224) epsilon -> .

    RPAREN          reduce using rule 224 (epsilon -> .)
    DOT             reduce using rule 224 (epsilon -> .)
    IDENTIFIER      reduce using rule 224 (epsilon -> .)
    STRING          reduce using rule 224 (epsilon -> .)

    epsilon                        shift and go to state 47
    ImportSpecRep                  shift and go to state 48

state 26

    (215) ImportDecl -> IMPORT ImportSpec .

    SEMICOL         reduce using rule 215 (ImportDecl -> IMPORT ImportSpec .)


state 27

    (222) PackageNameDotOpt -> epsilon .

    STRING          reduce using rule 222 (PackageNameDotOpt -> epsilon .)


state 28

    (221) PackageNameDotOpt -> PackageName .

    STRING          reduce using rule 221 (PackageNameDotOpt -> PackageName .)


state 29

    (219) ImportSpec -> PackageNameDotOpt . ImportPath
    (223) ImportPath -> . STRING

    STRING          shift and go to state 50

    ImportPath                     shift and go to state 49

state 30

    (220) PackageNameDotOpt -> DOT .

    STRING          reduce using rule 220 (PackageNameDotOpt -> DOT .)


state 31

    (53) ConstDecl -> CONST ConstSpec .

    SEMICOL         reduce using rule 53 (ConstDecl -> CONST ConstSpec .)


state 32

    (54) ConstDecl -> CONST LPAREN . ConstSpecRep RPAREN
    (55) ConstSpecRep -> . ConstSpecRep ConstSpec SEMICOL
    (56) ConstSpecRep -> . epsilon
    (224) epsilon -> .

    RPAREN          reduce using rule 224 (epsilon -> .)
    IDENTIFIER      reduce using rule 224 (epsilon -> .)

    ConstSpecRep                   shift and go to state 51
    epsilon                        shift and go to state 52

state 33

    (57) ConstSpec -> IdentifierList . TypeExprListOpt
    (58) TypeExprListOpt -> . TypeOpt EQUAL ExpressionList
    (59) TypeExprListOpt -> . epsilon
    (11) TypeOpt -> . Type
    (12) TypeOpt -> . epsilon
    (224) epsilon -> .
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . Pointer BaseType
    (27) FunctionType -> . FUNC Signature
    (25) Pointer -> . POINTER

    SEMICOL         reduce using rule 224 (epsilon -> .)
    EQUAL           reduce using rule 224 (epsilon -> .)
    LPAREN          shift and go to state 62
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    LBRACK          shift and go to state 67
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53
    POINTER         shift and go to state 59

    StructType                     shift and go to state 60
    TypeOpt                        shift and go to state 64
    ArrayType                      shift and go to state 54
    Pointer                        shift and go to state 66
    TypeName                       shift and go to state 57
    TypeLit                        shift and go to state 56
    TypeExprListOpt                shift and go to state 68
    epsilon                        shift and go to state 61
    PointerType                    shift and go to state 69
    FunctionType                   shift and go to state 70
    Type                           shift and go to state 55

state 34

    (60) IdentifierList -> IDENTIFIER . IdentifierRep
    (61) IdentifierRep -> . IdentifierRep COMMA IDENTIFIER
    (62) IdentifierRep -> . epsilon
    (224) epsilon -> .

    COMMA           reduce using rule 224 (epsilon -> .)
    LPAREN          reduce using rule 224 (epsilon -> .)
    TYPEX           reduce using rule 224 (epsilon -> .)
    TTYPE           reduce using rule 224 (epsilon -> .)
    LBRACK          reduce using rule 224 (epsilon -> .)
    STRUCT          reduce using rule 224 (epsilon -> .)
    FUNC            reduce using rule 224 (epsilon -> .)
    POINTER         reduce using rule 224 (epsilon -> .)
    EQUAL           reduce using rule 224 (epsilon -> .)
    SEMICOL         reduce using rule 224 (epsilon -> .)

    epsilon                        shift and go to state 71
    IdentifierRep                  shift and go to state 72

state 35

    (211) TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOL .

    FUNC            reduce using rule 211 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOL .)
    CONST           reduce using rule 211 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOL .)
    TYPE            reduce using rule 211 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOL .)
    VAR             reduce using rule 211 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOL .)
    $end            reduce using rule 211 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOL .)


state 36

    (82) FunctionName -> IDENTIFIER .

    LPAREN          reduce using rule 82 (FunctionName -> IDENTIFIER .)


state 37

    (80) FunctionDecl -> FUNC FunctionName . Function
    (81) FunctionDecl -> FUNC FunctionName . Signature
    (83) Function -> . Signature FunctionBody
    (28) Signature -> . Parameters ResultOpt
    (33) Parameters -> . LPAREN ParameterListOpt RPAREN

    LPAREN          shift and go to state 76

    Function                       shift and go to state 73
    Parameters                     shift and go to state 74
    Signature                      shift and go to state 75

state 38

    (71) VarDecl -> VAR VarSpec .

    SEMICOL         reduce using rule 71 (VarDecl -> VAR VarSpec .)


state 39

    (72) VarDecl -> VAR LPAREN . VarSpecRep RPAREN
    (73) VarSpecRep -> . VarSpecRep VarSpec SEMICOL
    (74) VarSpecRep -> . epsilon
    (224) epsilon -> .

    RPAREN          reduce using rule 224 (epsilon -> .)
    IDENTIFIER      reduce using rule 224 (epsilon -> .)

    VarSpecRep                     shift and go to state 77
    epsilon                        shift and go to state 78

state 40

    (75) VarSpec -> IdentifierList . Type ExpressionListOpt
    (76) VarSpec -> IdentifierList . EQUAL ExpressionList
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . Pointer BaseType
    (27) FunctionType -> . FUNC Signature
    (25) Pointer -> . POINTER

    EQUAL           shift and go to state 79
    LPAREN          shift and go to state 62
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    LBRACK          shift and go to state 67
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53
    POINTER         shift and go to state 59

    StructType                     shift and go to state 60
    Type                           shift and go to state 80
    TypeLit                        shift and go to state 56
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 57
    Pointer                        shift and go to state 66
    PointerType                    shift and go to state 69
    FunctionType                   shift and go to state 70

state 41

    (68) TypeSpec -> TypeDef .

    SEMICOL         reduce using rule 68 (TypeSpec -> TypeDef .)


state 42

    (70) TypeDef -> TTYPE . IDENTIFIER Type

    IDENTIFIER      shift and go to state 81


state 43

    (67) TypeSpec -> AliasDecl .

    SEMICOL         reduce using rule 67 (TypeSpec -> AliasDecl .)


state 44

    (64) TypeDecl -> TYPE LPAREN . TypeSpecRep RPAREN
    (65) TypeSpecRep -> . TypeSpecRep TypeSpec SEMICOL
    (66) TypeSpecRep -> . epsilon
    (224) epsilon -> .

    RPAREN          reduce using rule 224 (epsilon -> .)
    IDENTIFIER      reduce using rule 224 (epsilon -> .)
    TTYPE           reduce using rule 224 (epsilon -> .)

    TypeSpecRep                    shift and go to state 82
    epsilon                        shift and go to state 83

state 45

    (63) TypeDecl -> TYPE TypeSpec .

    SEMICOL         reduce using rule 63 (TypeDecl -> TYPE TypeSpec .)


state 46

    (69) AliasDecl -> IDENTIFIER . EQUAL Type

    EQUAL           shift and go to state 84


state 47

    (218) ImportSpecRep -> epsilon .

    RPAREN          reduce using rule 218 (ImportSpecRep -> epsilon .)
    DOT             reduce using rule 218 (ImportSpecRep -> epsilon .)
    IDENTIFIER      reduce using rule 218 (ImportSpecRep -> epsilon .)
    STRING          reduce using rule 218 (ImportSpecRep -> epsilon .)


state 48

    (216) ImportDecl -> IMPORT LPAREN ImportSpecRep . RPAREN
    (217) ImportSpecRep -> ImportSpecRep . ImportSpec SEMICOL
    (219) ImportSpec -> . PackageNameDotOpt ImportPath
    (220) PackageNameDotOpt -> . DOT
    (221) PackageNameDotOpt -> . PackageName
    (222) PackageNameDotOpt -> . epsilon
    (214) PackageName -> . IDENTIFIER
    (224) epsilon -> .

    RPAREN          shift and go to state 85
    DOT             shift and go to state 30
    IDENTIFIER      shift and go to state 7
    STRING          reduce using rule 224 (epsilon -> .)

    ImportSpec                     shift and go to state 86
    epsilon                        shift and go to state 27
    PackageName                    shift and go to state 28
    PackageNameDotOpt              shift and go to state 29

state 49

    (219) ImportSpec -> PackageNameDotOpt ImportPath .

    SEMICOL         reduce using rule 219 (ImportSpec -> PackageNameDotOpt ImportPath .)


state 50

    (223) ImportPath -> STRING .

    SEMICOL         reduce using rule 223 (ImportPath -> STRING .)


state 51

    (54) ConstDecl -> CONST LPAREN ConstSpecRep . RPAREN
    (55) ConstSpecRep -> ConstSpecRep . ConstSpec SEMICOL
    (57) ConstSpec -> . IdentifierList TypeExprListOpt
    (60) IdentifierList -> . IDENTIFIER IdentifierRep

    RPAREN          shift and go to state 88
    IDENTIFIER      shift and go to state 34

    ConstSpec                      shift and go to state 87
    IdentifierList                 shift and go to state 33

state 52

    (56) ConstSpecRep -> epsilon .

    RPAREN          reduce using rule 56 (ConstSpecRep -> epsilon .)
    IDENTIFIER      reduce using rule 56 (ConstSpecRep -> epsilon .)


state 53

    (27) FunctionType -> FUNC . Signature
    (28) Signature -> . Parameters ResultOpt
    (33) Parameters -> . LPAREN ParameterListOpt RPAREN

    LPAREN          shift and go to state 76

    Parameters                     shift and go to state 74
    Signature                      shift and go to state 89

state 54

    (7) TypeLit -> ArrayType .

    LPAREN          reduce using rule 7 (TypeLit -> ArrayType .)
    EQUAL           reduce using rule 7 (TypeLit -> ArrayType .)
    SEMICOL         reduce using rule 7 (TypeLit -> ArrayType .)
    RPAREN          reduce using rule 7 (TypeLit -> ArrayType .)
    LBRACE          reduce using rule 7 (TypeLit -> ArrayType .)
    COMMA           reduce using rule 7 (TypeLit -> ArrayType .)
    STRING          reduce using rule 7 (TypeLit -> ArrayType .)


state 55

    (11) TypeOpt -> Type .

    EQUAL           reduce using rule 11 (TypeOpt -> Type .)


state 56

    (3) Type -> TypeLit .

    LPAREN          reduce using rule 3 (Type -> TypeLit .)
    EQUAL           reduce using rule 3 (Type -> TypeLit .)
    SEMICOL         reduce using rule 3 (Type -> TypeLit .)
    RPAREN          reduce using rule 3 (Type -> TypeLit .)
    LBRACE          reduce using rule 3 (Type -> TypeLit .)
    COMMA           reduce using rule 3 (Type -> TypeLit .)
    STRING          reduce using rule 3 (Type -> TypeLit .)


state 57

    (2) Type -> TypeName .

    LPAREN          reduce using rule 2 (Type -> TypeName .)
    EQUAL           reduce using rule 2 (Type -> TypeName .)
    SEMICOL         reduce using rule 2 (Type -> TypeName .)
    RPAREN          reduce using rule 2 (Type -> TypeName .)
    LBRACE          reduce using rule 2 (Type -> TypeName .)
    COMMA           reduce using rule 2 (Type -> TypeName .)
    STRING          reduce using rule 2 (Type -> TypeName .)


state 58

    (5) TypeName -> TYPEX .

    LPAREN          reduce using rule 5 (TypeName -> TYPEX .)
    RPAREN          reduce using rule 5 (TypeName -> TYPEX .)
    COMMA           reduce using rule 5 (TypeName -> TYPEX .)
    SEMICOL         reduce using rule 5 (TypeName -> TYPEX .)
    STRING          reduce using rule 5 (TypeName -> TYPEX .)
    EQUAL           reduce using rule 5 (TypeName -> TYPEX .)
    LBRACE          reduce using rule 5 (TypeName -> TYPEX .)


state 59

    (25) Pointer -> POINTER .

    LPAREN          reduce using rule 25 (Pointer -> POINTER .)
    TYPEX           reduce using rule 25 (Pointer -> POINTER .)
    TTYPE           reduce using rule 25 (Pointer -> POINTER .)
    LBRACK          reduce using rule 25 (Pointer -> POINTER .)
    STRUCT          reduce using rule 25 (Pointer -> POINTER .)
    FUNC            reduce using rule 25 (Pointer -> POINTER .)
    POINTER         reduce using rule 25 (Pointer -> POINTER .)


state 60

    (8) TypeLit -> StructType .

    LPAREN          reduce using rule 8 (TypeLit -> StructType .)
    EQUAL           reduce using rule 8 (TypeLit -> StructType .)
    SEMICOL         reduce using rule 8 (TypeLit -> StructType .)
    RPAREN          reduce using rule 8 (TypeLit -> StructType .)
    LBRACE          reduce using rule 8 (TypeLit -> StructType .)
    COMMA           reduce using rule 8 (TypeLit -> StructType .)
    STRING          reduce using rule 8 (TypeLit -> StructType .)


state 61

    (59) TypeExprListOpt -> epsilon .
    (12) TypeOpt -> epsilon .

    SEMICOL         reduce using rule 59 (TypeExprListOpt -> epsilon .)
    EQUAL           reduce using rule 12 (TypeOpt -> epsilon .)


state 62

    (4) Type -> LPAREN . Type RPAREN
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . Pointer BaseType
    (27) FunctionType -> . FUNC Signature
    (25) Pointer -> . POINTER

    LPAREN          shift and go to state 62
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    LBRACK          shift and go to state 67
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53
    POINTER         shift and go to state 59

    StructType                     shift and go to state 60
    Type                           shift and go to state 90
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 57
    Pointer                        shift and go to state 66
    PointerType                    shift and go to state 69
    FunctionType                   shift and go to state 70
    TypeLit                        shift and go to state 56

state 63

    (6) TypeName -> TTYPE . IDENTIFIER

    IDENTIFIER      shift and go to state 91


state 64

    (58) TypeExprListOpt -> TypeOpt . EQUAL ExpressionList

    EQUAL           shift and go to state 92


state 65

    (17) StructType -> STRUCT . LBRACE FieldDeclRep RBRACE

    LBRACE          shift and go to state 93


state 66

    (24) PointerType -> Pointer . BaseType
    (26) BaseType -> . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . Pointer BaseType
    (27) FunctionType -> . FUNC Signature
    (25) Pointer -> . POINTER

    LPAREN          shift and go to state 62
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    LBRACK          shift and go to state 67
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53
    POINTER         shift and go to state 59

    StructType                     shift and go to state 60
    Pointer                        shift and go to state 66
    BaseType                       shift and go to state 95
    TypeLit                        shift and go to state 56
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 57
    PointerType                    shift and go to state 69
    FunctionType                   shift and go to state 70
    Type                           shift and go to state 94

state 67

    (13) ArrayType -> LBRACK . ArrayLength RBRACK ElementType
    (14) ArrayType -> LBRACK . RBRACK ElementType
    (15) ArrayLength -> . Expression
    (116) Expression -> . UnaryExpr
    (117) Expression -> . Expression OROR Expression
    (118) Expression -> . Expression AMPAMP Expression
    (119) Expression -> . Expression EQEQ Expression
    (120) Expression -> . Expression NOTEQ Expression
    (121) Expression -> . Expression LESS Expression
    (122) Expression -> . Expression GREAT Expression
    (123) Expression -> . Expression LEQ Expression
    (124) Expression -> . Expression GEQ Expression
    (125) Expression -> . Expression PLUS Expression
    (126) Expression -> . Expression MINUS Expression
    (127) Expression -> . Expression OR Expression
    (128) Expression -> . Expression CARET Expression
    (129) Expression -> . Expression TIMES Expression
    (130) Expression -> . Expression DIVIDE Expression
    (131) Expression -> . Expression MOD Expression
    (132) Expression -> . Expression AMPERS Expression
    (133) Expression -> . Expression LL Expression
    (134) Expression -> . Expression GG Expression
    (135) Expression -> . Expression AMPCAR Expression
    (138) UnaryExpr -> . PrimaryExpr
    (139) UnaryExpr -> . UnaryOp UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . Conversion
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . PrimaryExpr Index
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr Arguments
    (140) UnaryOp -> . PLUS
    (141) UnaryOp -> . MINUS
    (142) UnaryOp -> . TIMES
    (143) UnaryOp -> . AMPERS
    (144) UnaryOp -> . NOT
    (85) Operand -> . Literal
    (86) Operand -> . OperandName
    (87) Operand -> . LPAREN Expression RPAREN
    (100) Conversion -> . Type LPAREN Expression RPAREN
    (88) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (89) BasicLit -> . IntLiteral
    (90) BasicLit -> . FloatLiteral
    (91) BasicLit -> . ImgLiteral
    (92) BasicLit -> . RuneLiteral
    (93) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (94) IntLiteral -> . INTEGER
    (95) FloatLiteral -> . FLOAT
    (96) ImgLiteral -> . IMAGINARY
    (97) RuneLiteral -> . RUNE
    (98) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . Pointer BaseType
    (27) FunctionType -> . FUNC Signature
    (25) Pointer -> . POINTER

    RBRACK          shift and go to state 114
    PLUS            shift and go to state 108
    MINUS           shift and go to state 102
    TIMES           shift and go to state 117
    AMPERS          shift and go to state 123
    NOT             shift and go to state 107
    LPAREN          shift and go to state 120
    IDENTIFIER      shift and go to state 111
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 109
    FLOAT           shift and go to state 122
    IMAGINARY       shift and go to state 110
    RUNE            shift and go to state 96
    STRING          shift and go to state 103
    LBRACK          shift and go to state 67
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53
    POINTER         shift and go to state 59

    Conversion                     shift and go to state 97
    UnaryOp                        shift and go to state 106
    PrimaryExpr                    shift and go to state 124
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 99
    FloatLiteral                   shift and go to state 100
    Type                           shift and go to state 101
    OperandName                    shift and go to state 104
    TypeLit                        shift and go to state 56
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 60
    IntLiteral                     shift and go to state 112
    UnaryExpr                      shift and go to state 115
    RuneLiteral                    shift and go to state 116
    Operand                        shift and go to state 118
    ArrayLength                    shift and go to state 119
    Expression                     shift and go to state 121
    PointerType                    shift and go to state 69
    Pointer                        shift and go to state 66
    StringLiteral                  shift and go to state 98
    BasicLit                       shift and go to state 105
    ImgLiteral                     shift and go to state 113
    FunctionType                   shift and go to state 70

state 68

    (57) ConstSpec -> IdentifierList TypeExprListOpt .

    SEMICOL         reduce using rule 57 (ConstSpec -> IdentifierList TypeExprListOpt .)


state 69

    (9) TypeLit -> PointerType .

    LPAREN          reduce using rule 9 (TypeLit -> PointerType .)
    EQUAL           reduce using rule 9 (TypeLit -> PointerType .)
    SEMICOL         reduce using rule 9 (TypeLit -> PointerType .)
    RPAREN          reduce using rule 9 (TypeLit -> PointerType .)
    LBRACE          reduce using rule 9 (TypeLit -> PointerType .)
    COMMA           reduce using rule 9 (TypeLit -> PointerType .)
    STRING          reduce using rule 9 (TypeLit -> PointerType .)


state 70

    (10) TypeLit -> FunctionType .

    LPAREN          reduce using rule 10 (TypeLit -> FunctionType .)
    EQUAL           reduce using rule 10 (TypeLit -> FunctionType .)
    SEMICOL         reduce using rule 10 (TypeLit -> FunctionType .)
    RPAREN          reduce using rule 10 (TypeLit -> FunctionType .)
    LBRACE          reduce using rule 10 (TypeLit -> FunctionType .)
    COMMA           reduce using rule 10 (TypeLit -> FunctionType .)
    STRING          reduce using rule 10 (TypeLit -> FunctionType .)


state 71

    (62) IdentifierRep -> epsilon .

    COMMA           reduce using rule 62 (IdentifierRep -> epsilon .)
    LPAREN          reduce using rule 62 (IdentifierRep -> epsilon .)
    TYPEX           reduce using rule 62 (IdentifierRep -> epsilon .)
    TTYPE           reduce using rule 62 (IdentifierRep -> epsilon .)
    LBRACK          reduce using rule 62 (IdentifierRep -> epsilon .)
    STRUCT          reduce using rule 62 (IdentifierRep -> epsilon .)
    FUNC            reduce using rule 62 (IdentifierRep -> epsilon .)
    POINTER         reduce using rule 62 (IdentifierRep -> epsilon .)
    EQUAL           reduce using rule 62 (IdentifierRep -> epsilon .)
    SEMICOL         reduce using rule 62 (IdentifierRep -> epsilon .)


state 72

    (60) IdentifierList -> IDENTIFIER IdentifierRep .
    (61) IdentifierRep -> IdentifierRep . COMMA IDENTIFIER

    EQUAL           reduce using rule 60 (IdentifierList -> IDENTIFIER IdentifierRep .)
    LPAREN          reduce using rule 60 (IdentifierList -> IDENTIFIER IdentifierRep .)
    TYPEX           reduce using rule 60 (IdentifierList -> IDENTIFIER IdentifierRep .)
    TTYPE           reduce using rule 60 (IdentifierList -> IDENTIFIER IdentifierRep .)
    LBRACK          reduce using rule 60 (IdentifierList -> IDENTIFIER IdentifierRep .)
    STRUCT          reduce using rule 60 (IdentifierList -> IDENTIFIER IdentifierRep .)
    FUNC            reduce using rule 60 (IdentifierList -> IDENTIFIER IdentifierRep .)
    POINTER         reduce using rule 60 (IdentifierList -> IDENTIFIER IdentifierRep .)
    SEMICOL         reduce using rule 60 (IdentifierList -> IDENTIFIER IdentifierRep .)
    COMMA           shift and go to state 125


state 73

    (80) FunctionDecl -> FUNC FunctionName Function .

    SEMICOL         reduce using rule 80 (FunctionDecl -> FUNC FunctionName Function .)


state 74

    (28) Signature -> Parameters . ResultOpt
    (29) ResultOpt -> . Result
    (30) ResultOpt -> . epsilon
    (31) Result -> . Parameters
    (32) Result -> . Type
    (224) epsilon -> .
    (33) Parameters -> . LPAREN ParameterListOpt RPAREN
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . Pointer BaseType
    (27) FunctionType -> . FUNC Signature
    (25) Pointer -> . POINTER

  ! shift/reduce conflict for LPAREN resolved as shift
    EQUAL           reduce using rule 224 (epsilon -> .)
    SEMICOL         reduce using rule 224 (epsilon -> .)
    RPAREN          reduce using rule 224 (epsilon -> .)
    LBRACE          reduce using rule 224 (epsilon -> .)
    COMMA           reduce using rule 224 (epsilon -> .)
    STRING          reduce using rule 224 (epsilon -> .)
    LPAREN          shift and go to state 130
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    LBRACK          shift and go to state 67
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53
    POINTER         shift and go to state 59

  ! LPAREN          [ reduce using rule 224 (epsilon -> .) ]

    StructType                     shift and go to state 60
    Parameters                     shift and go to state 126
    epsilon                        shift and go to state 129
    ResultOpt                      shift and go to state 128
    ArrayType                      shift and go to state 54
    Pointer                        shift and go to state 66
    TypeName                       shift and go to state 57
    TypeLit                        shift and go to state 56
    Result                         shift and go to state 131
    PointerType                    shift and go to state 69
    FunctionType                   shift and go to state 70
    Type                           shift and go to state 127

state 75

    (81) FunctionDecl -> FUNC FunctionName Signature .
    (83) Function -> Signature . FunctionBody
    (84) FunctionBody -> . Block
    (43) Block -> . CreateScope LBRACE StatementList RBRACE
    (44) CreateScope -> . epsilon
    (224) epsilon -> .

    SEMICOL         reduce using rule 81 (FunctionDecl -> FUNC FunctionName Signature .)
    LBRACE          reduce using rule 224 (epsilon -> .)

    FunctionBody                   shift and go to state 132
    epsilon                        shift and go to state 133
    CreateScope                    shift and go to state 134
    Block                          shift and go to state 135

state 76

    (33) Parameters -> LPAREN . ParameterListOpt RPAREN
    (34) ParameterListOpt -> . ParametersList
    (35) ParameterListOpt -> . epsilon
    (36) ParametersList -> . Type
    (37) ParametersList -> . IdentifierList Type
    (38) ParametersList -> . ParameterDeclCommaRep
    (224) epsilon -> .
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (60) IdentifierList -> . IDENTIFIER IdentifierRep
    (39) ParameterDeclCommaRep -> . ParameterDeclCommaRep COMMA ParameterDecl
    (40) ParameterDeclCommaRep -> . ParameterDecl COMMA ParameterDecl
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (41) ParameterDecl -> . IdentifierList Type
    (42) ParameterDecl -> . Type
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . Pointer BaseType
    (27) FunctionType -> . FUNC Signature
    (25) Pointer -> . POINTER

    RPAREN          reduce using rule 224 (epsilon -> .)
    LPAREN          shift and go to state 62
    IDENTIFIER      shift and go to state 34
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    LBRACK          shift and go to state 67
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53
    POINTER         shift and go to state 59

    StructType                     shift and go to state 60
    epsilon                        shift and go to state 142
    ParameterListOpt               shift and go to state 136
    Pointer                        shift and go to state 66
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 57
    TypeLit                        shift and go to state 56
    IdentifierList                 shift and go to state 137
    PointerType                    shift and go to state 69
    FunctionType                   shift and go to state 70
    ParametersList                 shift and go to state 140
    Type                           shift and go to state 139
    ParameterDeclCommaRep          shift and go to state 138
    ParameterDecl                  shift and go to state 141

state 77

    (72) VarDecl -> VAR LPAREN VarSpecRep . RPAREN
    (73) VarSpecRep -> VarSpecRep . VarSpec SEMICOL
    (75) VarSpec -> . IdentifierList Type ExpressionListOpt
    (76) VarSpec -> . IdentifierList EQUAL ExpressionList
    (60) IdentifierList -> . IDENTIFIER IdentifierRep

    RPAREN          shift and go to state 143
    IDENTIFIER      shift and go to state 34

    VarSpec                        shift and go to state 144
    IdentifierList                 shift and go to state 40

state 78

    (74) VarSpecRep -> epsilon .

    RPAREN          reduce using rule 74 (VarSpecRep -> epsilon .)
    IDENTIFIER      reduce using rule 74 (VarSpecRep -> epsilon .)


state 79

    (76) VarSpec -> IdentifierList EQUAL . ExpressionList
    (113) ExpressionList -> . Expression ExpressionRep
    (116) Expression -> . UnaryExpr
    (117) Expression -> . Expression OROR Expression
    (118) Expression -> . Expression AMPAMP Expression
    (119) Expression -> . Expression EQEQ Expression
    (120) Expression -> . Expression NOTEQ Expression
    (121) Expression -> . Expression LESS Expression
    (122) Expression -> . Expression GREAT Expression
    (123) Expression -> . Expression LEQ Expression
    (124) Expression -> . Expression GEQ Expression
    (125) Expression -> . Expression PLUS Expression
    (126) Expression -> . Expression MINUS Expression
    (127) Expression -> . Expression OR Expression
    (128) Expression -> . Expression CARET Expression
    (129) Expression -> . Expression TIMES Expression
    (130) Expression -> . Expression DIVIDE Expression
    (131) Expression -> . Expression MOD Expression
    (132) Expression -> . Expression AMPERS Expression
    (133) Expression -> . Expression LL Expression
    (134) Expression -> . Expression GG Expression
    (135) Expression -> . Expression AMPCAR Expression
    (138) UnaryExpr -> . PrimaryExpr
    (139) UnaryExpr -> . UnaryOp UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . Conversion
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . PrimaryExpr Index
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr Arguments
    (140) UnaryOp -> . PLUS
    (141) UnaryOp -> . MINUS
    (142) UnaryOp -> . TIMES
    (143) UnaryOp -> . AMPERS
    (144) UnaryOp -> . NOT
    (85) Operand -> . Literal
    (86) Operand -> . OperandName
    (87) Operand -> . LPAREN Expression RPAREN
    (100) Conversion -> . Type LPAREN Expression RPAREN
    (88) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (89) BasicLit -> . IntLiteral
    (90) BasicLit -> . FloatLiteral
    (91) BasicLit -> . ImgLiteral
    (92) BasicLit -> . RuneLiteral
    (93) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (94) IntLiteral -> . INTEGER
    (95) FloatLiteral -> . FLOAT
    (96) ImgLiteral -> . IMAGINARY
    (97) RuneLiteral -> . RUNE
    (98) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . Pointer BaseType
    (27) FunctionType -> . FUNC Signature
    (25) Pointer -> . POINTER

    PLUS            shift and go to state 108
    MINUS           shift and go to state 102
    TIMES           shift and go to state 117
    AMPERS          shift and go to state 123
    NOT             shift and go to state 107
    LPAREN          shift and go to state 120
    IDENTIFIER      shift and go to state 111
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 109
    FLOAT           shift and go to state 122
    IMAGINARY       shift and go to state 110
    RUNE            shift and go to state 96
    STRING          shift and go to state 103
    LBRACK          shift and go to state 67
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53
    POINTER         shift and go to state 59

    UnaryOp                        shift and go to state 106
    PrimaryExpr                    shift and go to state 124
    Conversion                     shift and go to state 97
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 99
    FloatLiteral                   shift and go to state 100
    Type                           shift and go to state 101
    OperandName                    shift and go to state 104
    BasicLit                       shift and go to state 105
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 60
    IntLiteral                     shift and go to state 112
    UnaryExpr                      shift and go to state 115
    RuneLiteral                    shift and go to state 116
    Operand                        shift and go to state 118
    ExpressionList                 shift and go to state 145
    Expression                     shift and go to state 146
    PointerType                    shift and go to state 69
    Pointer                        shift and go to state 66
    StringLiteral                  shift and go to state 98
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 113
    FunctionType                   shift and go to state 70

state 80

    (75) VarSpec -> IdentifierList Type . ExpressionListOpt
    (77) ExpressionListOpt -> . EQUAL ExpressionList
    (78) ExpressionListOpt -> . epsilon
    (224) epsilon -> .

    EQUAL           shift and go to state 147
    SEMICOL         reduce using rule 224 (epsilon -> .)

    ExpressionListOpt              shift and go to state 149
    epsilon                        shift and go to state 148

state 81

    (70) TypeDef -> TTYPE IDENTIFIER . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . Pointer BaseType
    (27) FunctionType -> . FUNC Signature
    (25) Pointer -> . POINTER

    LPAREN          shift and go to state 62
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    LBRACK          shift and go to state 67
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53
    POINTER         shift and go to state 59

    StructType                     shift and go to state 60
    Type                           shift and go to state 150
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 57
    Pointer                        shift and go to state 66
    PointerType                    shift and go to state 69
    FunctionType                   shift and go to state 70
    TypeLit                        shift and go to state 56

state 82

    (64) TypeDecl -> TYPE LPAREN TypeSpecRep . RPAREN
    (65) TypeSpecRep -> TypeSpecRep . TypeSpec SEMICOL
    (67) TypeSpec -> . AliasDecl
    (68) TypeSpec -> . TypeDef
    (69) AliasDecl -> . IDENTIFIER EQUAL Type
    (70) TypeDef -> . TTYPE IDENTIFIER Type

    RPAREN          shift and go to state 151
    IDENTIFIER      shift and go to state 46
    TTYPE           shift and go to state 42

    TypeDef                        shift and go to state 41
    AliasDecl                      shift and go to state 43
    TypeSpec                       shift and go to state 152

state 83

    (66) TypeSpecRep -> epsilon .

    RPAREN          reduce using rule 66 (TypeSpecRep -> epsilon .)
    IDENTIFIER      reduce using rule 66 (TypeSpecRep -> epsilon .)
    TTYPE           reduce using rule 66 (TypeSpecRep -> epsilon .)


state 84

    (69) AliasDecl -> IDENTIFIER EQUAL . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . Pointer BaseType
    (27) FunctionType -> . FUNC Signature
    (25) Pointer -> . POINTER

    LPAREN          shift and go to state 62
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    LBRACK          shift and go to state 67
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53
    POINTER         shift and go to state 59

    StructType                     shift and go to state 60
    Type                           shift and go to state 153
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 57
    Pointer                        shift and go to state 66
    PointerType                    shift and go to state 69
    FunctionType                   shift and go to state 70
    TypeLit                        shift and go to state 56

state 85

    (216) ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN .

    SEMICOL         reduce using rule 216 (ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN .)


state 86

    (217) ImportSpecRep -> ImportSpecRep ImportSpec . SEMICOL

    SEMICOL         shift and go to state 154


state 87

    (55) ConstSpecRep -> ConstSpecRep ConstSpec . SEMICOL

    SEMICOL         shift and go to state 155


state 88

    (54) ConstDecl -> CONST LPAREN ConstSpecRep RPAREN .

    SEMICOL         reduce using rule 54 (ConstDecl -> CONST LPAREN ConstSpecRep RPAREN .)


state 89

    (27) FunctionType -> FUNC Signature .

    LPAREN          reduce using rule 27 (FunctionType -> FUNC Signature .)
    RPAREN          reduce using rule 27 (FunctionType -> FUNC Signature .)
    COMMA           reduce using rule 27 (FunctionType -> FUNC Signature .)
    EQUAL           reduce using rule 27 (FunctionType -> FUNC Signature .)
    SEMICOL         reduce using rule 27 (FunctionType -> FUNC Signature .)
    LBRACE          reduce using rule 27 (FunctionType -> FUNC Signature .)
    STRING          reduce using rule 27 (FunctionType -> FUNC Signature .)


state 90

    (4) Type -> LPAREN Type . RPAREN

    RPAREN          shift and go to state 156


state 91

    (6) TypeName -> TTYPE IDENTIFIER .

    LPAREN          reduce using rule 6 (TypeName -> TTYPE IDENTIFIER .)
    RPAREN          reduce using rule 6 (TypeName -> TTYPE IDENTIFIER .)
    COMMA           reduce using rule 6 (TypeName -> TTYPE IDENTIFIER .)
    SEMICOL         reduce using rule 6 (TypeName -> TTYPE IDENTIFIER .)
    STRING          reduce using rule 6 (TypeName -> TTYPE IDENTIFIER .)
    EQUAL           reduce using rule 6 (TypeName -> TTYPE IDENTIFIER .)
    LBRACE          reduce using rule 6 (TypeName -> TTYPE IDENTIFIER .)


state 92

    (58) TypeExprListOpt -> TypeOpt EQUAL . ExpressionList
    (113) ExpressionList -> . Expression ExpressionRep
    (116) Expression -> . UnaryExpr
    (117) Expression -> . Expression OROR Expression
    (118) Expression -> . Expression AMPAMP Expression
    (119) Expression -> . Expression EQEQ Expression
    (120) Expression -> . Expression NOTEQ Expression
    (121) Expression -> . Expression LESS Expression
    (122) Expression -> . Expression GREAT Expression
    (123) Expression -> . Expression LEQ Expression
    (124) Expression -> . Expression GEQ Expression
    (125) Expression -> . Expression PLUS Expression
    (126) Expression -> . Expression MINUS Expression
    (127) Expression -> . Expression OR Expression
    (128) Expression -> . Expression CARET Expression
    (129) Expression -> . Expression TIMES Expression
    (130) Expression -> . Expression DIVIDE Expression
    (131) Expression -> . Expression MOD Expression
    (132) Expression -> . Expression AMPERS Expression
    (133) Expression -> . Expression LL Expression
    (134) Expression -> . Expression GG Expression
    (135) Expression -> . Expression AMPCAR Expression
    (138) UnaryExpr -> . PrimaryExpr
    (139) UnaryExpr -> . UnaryOp UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . Conversion
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . PrimaryExpr Index
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr Arguments
    (140) UnaryOp -> . PLUS
    (141) UnaryOp -> . MINUS
    (142) UnaryOp -> . TIMES
    (143) UnaryOp -> . AMPERS
    (144) UnaryOp -> . NOT
    (85) Operand -> . Literal
    (86) Operand -> . OperandName
    (87) Operand -> . LPAREN Expression RPAREN
    (100) Conversion -> . Type LPAREN Expression RPAREN
    (88) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (89) BasicLit -> . IntLiteral
    (90) BasicLit -> . FloatLiteral
    (91) BasicLit -> . ImgLiteral
    (92) BasicLit -> . RuneLiteral
    (93) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (94) IntLiteral -> . INTEGER
    (95) FloatLiteral -> . FLOAT
    (96) ImgLiteral -> . IMAGINARY
    (97) RuneLiteral -> . RUNE
    (98) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . Pointer BaseType
    (27) FunctionType -> . FUNC Signature
    (25) Pointer -> . POINTER

    PLUS            shift and go to state 108
    MINUS           shift and go to state 102
    TIMES           shift and go to state 117
    AMPERS          shift and go to state 123
    NOT             shift and go to state 107
    LPAREN          shift and go to state 120
    IDENTIFIER      shift and go to state 111
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 109
    FLOAT           shift and go to state 122
    IMAGINARY       shift and go to state 110
    RUNE            shift and go to state 96
    STRING          shift and go to state 103
    LBRACK          shift and go to state 67
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53
    POINTER         shift and go to state 59

    UnaryOp                        shift and go to state 106
    PrimaryExpr                    shift and go to state 124
    Conversion                     shift and go to state 97
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 99
    Expression                     shift and go to state 146
    FloatLiteral                   shift and go to state 100
    Type                           shift and go to state 101
    OperandName                    shift and go to state 104
    BasicLit                       shift and go to state 105
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 60
    IntLiteral                     shift and go to state 112
    UnaryExpr                      shift and go to state 115
    RuneLiteral                    shift and go to state 116
    Operand                        shift and go to state 118
    ExpressionList                 shift and go to state 157
    PointerType                    shift and go to state 69
    Pointer                        shift and go to state 66
    StringLiteral                  shift and go to state 98
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 113
    FunctionType                   shift and go to state 70

state 93

    (17) StructType -> STRUCT LBRACE . FieldDeclRep RBRACE
    (18) FieldDeclRep -> . FieldDeclRep FieldDecl SEMICOL
    (19) FieldDeclRep -> . epsilon
    (224) epsilon -> .

    RBRACE          reduce using rule 224 (epsilon -> .)
    IDENTIFIER      reduce using rule 224 (epsilon -> .)

    FieldDeclRep                   shift and go to state 158
    epsilon                        shift and go to state 159

state 94

    (26) BaseType -> Type .

    EQUAL           reduce using rule 26 (BaseType -> Type .)
    SEMICOL         reduce using rule 26 (BaseType -> Type .)
    RPAREN          reduce using rule 26 (BaseType -> Type .)
    LPAREN          reduce using rule 26 (BaseType -> Type .)
    LBRACE          reduce using rule 26 (BaseType -> Type .)
    COMMA           reduce using rule 26 (BaseType -> Type .)
    STRING          reduce using rule 26 (BaseType -> Type .)


state 95

    (24) PointerType -> Pointer BaseType .

    LPAREN          reduce using rule 24 (PointerType -> Pointer BaseType .)
    COMMA           reduce using rule 24 (PointerType -> Pointer BaseType .)
    RPAREN          reduce using rule 24 (PointerType -> Pointer BaseType .)
    EQUAL           reduce using rule 24 (PointerType -> Pointer BaseType .)
    SEMICOL         reduce using rule 24 (PointerType -> Pointer BaseType .)
    LBRACE          reduce using rule 24 (PointerType -> Pointer BaseType .)
    STRING          reduce using rule 24 (PointerType -> Pointer BaseType .)


state 96

    (97) RuneLiteral -> RUNE .

    DOT             reduce using rule 97 (RuneLiteral -> RUNE .)
    LBRACK          reduce using rule 97 (RuneLiteral -> RUNE .)
    LPAREN          reduce using rule 97 (RuneLiteral -> RUNE .)
    OROR            reduce using rule 97 (RuneLiteral -> RUNE .)
    AMPAMP          reduce using rule 97 (RuneLiteral -> RUNE .)
    EQEQ            reduce using rule 97 (RuneLiteral -> RUNE .)
    NOTEQ           reduce using rule 97 (RuneLiteral -> RUNE .)
    LESS            reduce using rule 97 (RuneLiteral -> RUNE .)
    GREAT           reduce using rule 97 (RuneLiteral -> RUNE .)
    LEQ             reduce using rule 97 (RuneLiteral -> RUNE .)
    GEQ             reduce using rule 97 (RuneLiteral -> RUNE .)
    PLUS            reduce using rule 97 (RuneLiteral -> RUNE .)
    MINUS           reduce using rule 97 (RuneLiteral -> RUNE .)
    OR              reduce using rule 97 (RuneLiteral -> RUNE .)
    CARET           reduce using rule 97 (RuneLiteral -> RUNE .)
    TIMES           reduce using rule 97 (RuneLiteral -> RUNE .)
    DIVIDE          reduce using rule 97 (RuneLiteral -> RUNE .)
    MOD             reduce using rule 97 (RuneLiteral -> RUNE .)
    AMPERS          reduce using rule 97 (RuneLiteral -> RUNE .)
    LL              reduce using rule 97 (RuneLiteral -> RUNE .)
    GG              reduce using rule 97 (RuneLiteral -> RUNE .)
    AMPCAR          reduce using rule 97 (RuneLiteral -> RUNE .)
    RBRACK          reduce using rule 97 (RuneLiteral -> RUNE .)
    COMMA           reduce using rule 97 (RuneLiteral -> RUNE .)
    SEMICOL         reduce using rule 97 (RuneLiteral -> RUNE .)
    RPAREN          reduce using rule 97 (RuneLiteral -> RUNE .)
    COLON           reduce using rule 97 (RuneLiteral -> RUNE .)
    PLUSEQ          reduce using rule 97 (RuneLiteral -> RUNE .)
    MINUSEQ         reduce using rule 97 (RuneLiteral -> RUNE .)
    TIMESEQ         reduce using rule 97 (RuneLiteral -> RUNE .)
    DIVIDEEQ        reduce using rule 97 (RuneLiteral -> RUNE .)
    MODEQ           reduce using rule 97 (RuneLiteral -> RUNE .)
    AMPEQ           reduce using rule 97 (RuneLiteral -> RUNE .)
    OREQ            reduce using rule 97 (RuneLiteral -> RUNE .)
    CAREQ           reduce using rule 97 (RuneLiteral -> RUNE .)
    LLEQ            reduce using rule 97 (RuneLiteral -> RUNE .)
    GGEQ            reduce using rule 97 (RuneLiteral -> RUNE .)
    EQUAL           reduce using rule 97 (RuneLiteral -> RUNE .)
    LBRACE          reduce using rule 97 (RuneLiteral -> RUNE .)
    PLUSPLUS        reduce using rule 97 (RuneLiteral -> RUNE .)
    MINUSMIN        reduce using rule 97 (RuneLiteral -> RUNE .)


state 97

    (102) PrimaryExpr -> Conversion .

    DOT             reduce using rule 102 (PrimaryExpr -> Conversion .)
    LBRACK          reduce using rule 102 (PrimaryExpr -> Conversion .)
    LPAREN          reduce using rule 102 (PrimaryExpr -> Conversion .)
    OROR            reduce using rule 102 (PrimaryExpr -> Conversion .)
    AMPAMP          reduce using rule 102 (PrimaryExpr -> Conversion .)
    EQEQ            reduce using rule 102 (PrimaryExpr -> Conversion .)
    NOTEQ           reduce using rule 102 (PrimaryExpr -> Conversion .)
    LESS            reduce using rule 102 (PrimaryExpr -> Conversion .)
    GREAT           reduce using rule 102 (PrimaryExpr -> Conversion .)
    LEQ             reduce using rule 102 (PrimaryExpr -> Conversion .)
    GEQ             reduce using rule 102 (PrimaryExpr -> Conversion .)
    PLUS            reduce using rule 102 (PrimaryExpr -> Conversion .)
    MINUS           reduce using rule 102 (PrimaryExpr -> Conversion .)
    OR              reduce using rule 102 (PrimaryExpr -> Conversion .)
    CARET           reduce using rule 102 (PrimaryExpr -> Conversion .)
    TIMES           reduce using rule 102 (PrimaryExpr -> Conversion .)
    DIVIDE          reduce using rule 102 (PrimaryExpr -> Conversion .)
    MOD             reduce using rule 102 (PrimaryExpr -> Conversion .)
    AMPERS          reduce using rule 102 (PrimaryExpr -> Conversion .)
    LL              reduce using rule 102 (PrimaryExpr -> Conversion .)
    GG              reduce using rule 102 (PrimaryExpr -> Conversion .)
    AMPCAR          reduce using rule 102 (PrimaryExpr -> Conversion .)
    COMMA           reduce using rule 102 (PrimaryExpr -> Conversion .)
    SEMICOL         reduce using rule 102 (PrimaryExpr -> Conversion .)
    RBRACK          reduce using rule 102 (PrimaryExpr -> Conversion .)
    RPAREN          reduce using rule 102 (PrimaryExpr -> Conversion .)
    COLON           reduce using rule 102 (PrimaryExpr -> Conversion .)
    PLUSEQ          reduce using rule 102 (PrimaryExpr -> Conversion .)
    MINUSEQ         reduce using rule 102 (PrimaryExpr -> Conversion .)
    TIMESEQ         reduce using rule 102 (PrimaryExpr -> Conversion .)
    DIVIDEEQ        reduce using rule 102 (PrimaryExpr -> Conversion .)
    MODEQ           reduce using rule 102 (PrimaryExpr -> Conversion .)
    AMPEQ           reduce using rule 102 (PrimaryExpr -> Conversion .)
    OREQ            reduce using rule 102 (PrimaryExpr -> Conversion .)
    CAREQ           reduce using rule 102 (PrimaryExpr -> Conversion .)
    LLEQ            reduce using rule 102 (PrimaryExpr -> Conversion .)
    GGEQ            reduce using rule 102 (PrimaryExpr -> Conversion .)
    EQUAL           reduce using rule 102 (PrimaryExpr -> Conversion .)
    LBRACE          reduce using rule 102 (PrimaryExpr -> Conversion .)
    PLUSPLUS        reduce using rule 102 (PrimaryExpr -> Conversion .)
    MINUSMIN        reduce using rule 102 (PrimaryExpr -> Conversion .)


state 98

    (93) BasicLit -> StringLiteral .

    DOT             reduce using rule 93 (BasicLit -> StringLiteral .)
    LBRACK          reduce using rule 93 (BasicLit -> StringLiteral .)
    LPAREN          reduce using rule 93 (BasicLit -> StringLiteral .)
    OROR            reduce using rule 93 (BasicLit -> StringLiteral .)
    AMPAMP          reduce using rule 93 (BasicLit -> StringLiteral .)
    EQEQ            reduce using rule 93 (BasicLit -> StringLiteral .)
    NOTEQ           reduce using rule 93 (BasicLit -> StringLiteral .)
    LESS            reduce using rule 93 (BasicLit -> StringLiteral .)
    GREAT           reduce using rule 93 (BasicLit -> StringLiteral .)
    LEQ             reduce using rule 93 (BasicLit -> StringLiteral .)
    GEQ             reduce using rule 93 (BasicLit -> StringLiteral .)
    PLUS            reduce using rule 93 (BasicLit -> StringLiteral .)
    MINUS           reduce using rule 93 (BasicLit -> StringLiteral .)
    OR              reduce using rule 93 (BasicLit -> StringLiteral .)
    CARET           reduce using rule 93 (BasicLit -> StringLiteral .)
    TIMES           reduce using rule 93 (BasicLit -> StringLiteral .)
    DIVIDE          reduce using rule 93 (BasicLit -> StringLiteral .)
    MOD             reduce using rule 93 (BasicLit -> StringLiteral .)
    AMPERS          reduce using rule 93 (BasicLit -> StringLiteral .)
    LL              reduce using rule 93 (BasicLit -> StringLiteral .)
    GG              reduce using rule 93 (BasicLit -> StringLiteral .)
    AMPCAR          reduce using rule 93 (BasicLit -> StringLiteral .)
    SEMICOL         reduce using rule 93 (BasicLit -> StringLiteral .)
    LBRACE          reduce using rule 93 (BasicLit -> StringLiteral .)
    RBRACK          reduce using rule 93 (BasicLit -> StringLiteral .)
    COMMA           reduce using rule 93 (BasicLit -> StringLiteral .)
    RPAREN          reduce using rule 93 (BasicLit -> StringLiteral .)
    COLON           reduce using rule 93 (BasicLit -> StringLiteral .)
    PLUSEQ          reduce using rule 93 (BasicLit -> StringLiteral .)
    MINUSEQ         reduce using rule 93 (BasicLit -> StringLiteral .)
    TIMESEQ         reduce using rule 93 (BasicLit -> StringLiteral .)
    DIVIDEEQ        reduce using rule 93 (BasicLit -> StringLiteral .)
    MODEQ           reduce using rule 93 (BasicLit -> StringLiteral .)
    AMPEQ           reduce using rule 93 (BasicLit -> StringLiteral .)
    OREQ            reduce using rule 93 (BasicLit -> StringLiteral .)
    CAREQ           reduce using rule 93 (BasicLit -> StringLiteral .)
    LLEQ            reduce using rule 93 (BasicLit -> StringLiteral .)
    GGEQ            reduce using rule 93 (BasicLit -> StringLiteral .)
    EQUAL           reduce using rule 93 (BasicLit -> StringLiteral .)
    PLUSPLUS        reduce using rule 93 (BasicLit -> StringLiteral .)
    MINUSMIN        reduce using rule 93 (BasicLit -> StringLiteral .)


state 99

    (85) Operand -> Literal .

    DOT             reduce using rule 85 (Operand -> Literal .)
    LBRACK          reduce using rule 85 (Operand -> Literal .)
    LPAREN          reduce using rule 85 (Operand -> Literal .)
    OROR            reduce using rule 85 (Operand -> Literal .)
    AMPAMP          reduce using rule 85 (Operand -> Literal .)
    EQEQ            reduce using rule 85 (Operand -> Literal .)
    NOTEQ           reduce using rule 85 (Operand -> Literal .)
    LESS            reduce using rule 85 (Operand -> Literal .)
    GREAT           reduce using rule 85 (Operand -> Literal .)
    LEQ             reduce using rule 85 (Operand -> Literal .)
    GEQ             reduce using rule 85 (Operand -> Literal .)
    PLUS            reduce using rule 85 (Operand -> Literal .)
    MINUS           reduce using rule 85 (Operand -> Literal .)
    OR              reduce using rule 85 (Operand -> Literal .)
    CARET           reduce using rule 85 (Operand -> Literal .)
    TIMES           reduce using rule 85 (Operand -> Literal .)
    DIVIDE          reduce using rule 85 (Operand -> Literal .)
    MOD             reduce using rule 85 (Operand -> Literal .)
    AMPERS          reduce using rule 85 (Operand -> Literal .)
    LL              reduce using rule 85 (Operand -> Literal .)
    GG              reduce using rule 85 (Operand -> Literal .)
    AMPCAR          reduce using rule 85 (Operand -> Literal .)
    COMMA           reduce using rule 85 (Operand -> Literal .)
    RPAREN          reduce using rule 85 (Operand -> Literal .)
    RBRACK          reduce using rule 85 (Operand -> Literal .)
    SEMICOL         reduce using rule 85 (Operand -> Literal .)
    COLON           reduce using rule 85 (Operand -> Literal .)
    PLUSEQ          reduce using rule 85 (Operand -> Literal .)
    MINUSEQ         reduce using rule 85 (Operand -> Literal .)
    TIMESEQ         reduce using rule 85 (Operand -> Literal .)
    DIVIDEEQ        reduce using rule 85 (Operand -> Literal .)
    MODEQ           reduce using rule 85 (Operand -> Literal .)
    AMPEQ           reduce using rule 85 (Operand -> Literal .)
    OREQ            reduce using rule 85 (Operand -> Literal .)
    CAREQ           reduce using rule 85 (Operand -> Literal .)
    LLEQ            reduce using rule 85 (Operand -> Literal .)
    GGEQ            reduce using rule 85 (Operand -> Literal .)
    EQUAL           reduce using rule 85 (Operand -> Literal .)
    LBRACE          reduce using rule 85 (Operand -> Literal .)
    PLUSPLUS        reduce using rule 85 (Operand -> Literal .)
    MINUSMIN        reduce using rule 85 (Operand -> Literal .)


state 100

    (90) BasicLit -> FloatLiteral .

    DOT             reduce using rule 90 (BasicLit -> FloatLiteral .)
    LBRACK          reduce using rule 90 (BasicLit -> FloatLiteral .)
    LPAREN          reduce using rule 90 (BasicLit -> FloatLiteral .)
    OROR            reduce using rule 90 (BasicLit -> FloatLiteral .)
    AMPAMP          reduce using rule 90 (BasicLit -> FloatLiteral .)
    EQEQ            reduce using rule 90 (BasicLit -> FloatLiteral .)
    NOTEQ           reduce using rule 90 (BasicLit -> FloatLiteral .)
    LESS            reduce using rule 90 (BasicLit -> FloatLiteral .)
    GREAT           reduce using rule 90 (BasicLit -> FloatLiteral .)
    LEQ             reduce using rule 90 (BasicLit -> FloatLiteral .)
    GEQ             reduce using rule 90 (BasicLit -> FloatLiteral .)
    PLUS            reduce using rule 90 (BasicLit -> FloatLiteral .)
    MINUS           reduce using rule 90 (BasicLit -> FloatLiteral .)
    OR              reduce using rule 90 (BasicLit -> FloatLiteral .)
    CARET           reduce using rule 90 (BasicLit -> FloatLiteral .)
    TIMES           reduce using rule 90 (BasicLit -> FloatLiteral .)
    DIVIDE          reduce using rule 90 (BasicLit -> FloatLiteral .)
    MOD             reduce using rule 90 (BasicLit -> FloatLiteral .)
    AMPERS          reduce using rule 90 (BasicLit -> FloatLiteral .)
    LL              reduce using rule 90 (BasicLit -> FloatLiteral .)
    GG              reduce using rule 90 (BasicLit -> FloatLiteral .)
    AMPCAR          reduce using rule 90 (BasicLit -> FloatLiteral .)
    SEMICOL         reduce using rule 90 (BasicLit -> FloatLiteral .)
    LBRACE          reduce using rule 90 (BasicLit -> FloatLiteral .)
    RBRACK          reduce using rule 90 (BasicLit -> FloatLiteral .)
    COMMA           reduce using rule 90 (BasicLit -> FloatLiteral .)
    RPAREN          reduce using rule 90 (BasicLit -> FloatLiteral .)
    COLON           reduce using rule 90 (BasicLit -> FloatLiteral .)
    PLUSEQ          reduce using rule 90 (BasicLit -> FloatLiteral .)
    MINUSEQ         reduce using rule 90 (BasicLit -> FloatLiteral .)
    TIMESEQ         reduce using rule 90 (BasicLit -> FloatLiteral .)
    DIVIDEEQ        reduce using rule 90 (BasicLit -> FloatLiteral .)
    MODEQ           reduce using rule 90 (BasicLit -> FloatLiteral .)
    AMPEQ           reduce using rule 90 (BasicLit -> FloatLiteral .)
    OREQ            reduce using rule 90 (BasicLit -> FloatLiteral .)
    CAREQ           reduce using rule 90 (BasicLit -> FloatLiteral .)
    LLEQ            reduce using rule 90 (BasicLit -> FloatLiteral .)
    GGEQ            reduce using rule 90 (BasicLit -> FloatLiteral .)
    EQUAL           reduce using rule 90 (BasicLit -> FloatLiteral .)
    PLUSPLUS        reduce using rule 90 (BasicLit -> FloatLiteral .)
    MINUSMIN        reduce using rule 90 (BasicLit -> FloatLiteral .)


state 101

    (100) Conversion -> Type . LPAREN Expression RPAREN

    LPAREN          shift and go to state 160


state 102

    (141) UnaryOp -> MINUS .

    PLUS            reduce using rule 141 (UnaryOp -> MINUS .)
    MINUS           reduce using rule 141 (UnaryOp -> MINUS .)
    TIMES           reduce using rule 141 (UnaryOp -> MINUS .)
    AMPERS          reduce using rule 141 (UnaryOp -> MINUS .)
    NOT             reduce using rule 141 (UnaryOp -> MINUS .)
    LPAREN          reduce using rule 141 (UnaryOp -> MINUS .)
    IDENTIFIER      reduce using rule 141 (UnaryOp -> MINUS .)
    TYPEX           reduce using rule 141 (UnaryOp -> MINUS .)
    TTYPE           reduce using rule 141 (UnaryOp -> MINUS .)
    INTEGER         reduce using rule 141 (UnaryOp -> MINUS .)
    FLOAT           reduce using rule 141 (UnaryOp -> MINUS .)
    IMAGINARY       reduce using rule 141 (UnaryOp -> MINUS .)
    RUNE            reduce using rule 141 (UnaryOp -> MINUS .)
    STRING          reduce using rule 141 (UnaryOp -> MINUS .)
    LBRACK          reduce using rule 141 (UnaryOp -> MINUS .)
    STRUCT          reduce using rule 141 (UnaryOp -> MINUS .)
    FUNC            reduce using rule 141 (UnaryOp -> MINUS .)
    POINTER         reduce using rule 141 (UnaryOp -> MINUS .)


state 103

    (98) StringLiteral -> STRING .

    DOT             reduce using rule 98 (StringLiteral -> STRING .)
    LBRACK          reduce using rule 98 (StringLiteral -> STRING .)
    LPAREN          reduce using rule 98 (StringLiteral -> STRING .)
    OROR            reduce using rule 98 (StringLiteral -> STRING .)
    AMPAMP          reduce using rule 98 (StringLiteral -> STRING .)
    EQEQ            reduce using rule 98 (StringLiteral -> STRING .)
    NOTEQ           reduce using rule 98 (StringLiteral -> STRING .)
    LESS            reduce using rule 98 (StringLiteral -> STRING .)
    GREAT           reduce using rule 98 (StringLiteral -> STRING .)
    LEQ             reduce using rule 98 (StringLiteral -> STRING .)
    GEQ             reduce using rule 98 (StringLiteral -> STRING .)
    PLUS            reduce using rule 98 (StringLiteral -> STRING .)
    MINUS           reduce using rule 98 (StringLiteral -> STRING .)
    OR              reduce using rule 98 (StringLiteral -> STRING .)
    CARET           reduce using rule 98 (StringLiteral -> STRING .)
    TIMES           reduce using rule 98 (StringLiteral -> STRING .)
    DIVIDE          reduce using rule 98 (StringLiteral -> STRING .)
    MOD             reduce using rule 98 (StringLiteral -> STRING .)
    AMPERS          reduce using rule 98 (StringLiteral -> STRING .)
    LL              reduce using rule 98 (StringLiteral -> STRING .)
    GG              reduce using rule 98 (StringLiteral -> STRING .)
    AMPCAR          reduce using rule 98 (StringLiteral -> STRING .)
    RBRACK          reduce using rule 98 (StringLiteral -> STRING .)
    SEMICOL         reduce using rule 98 (StringLiteral -> STRING .)
    RPAREN          reduce using rule 98 (StringLiteral -> STRING .)
    COMMA           reduce using rule 98 (StringLiteral -> STRING .)
    COLON           reduce using rule 98 (StringLiteral -> STRING .)
    PLUSEQ          reduce using rule 98 (StringLiteral -> STRING .)
    MINUSEQ         reduce using rule 98 (StringLiteral -> STRING .)
    TIMESEQ         reduce using rule 98 (StringLiteral -> STRING .)
    DIVIDEEQ        reduce using rule 98 (StringLiteral -> STRING .)
    MODEQ           reduce using rule 98 (StringLiteral -> STRING .)
    AMPEQ           reduce using rule 98 (StringLiteral -> STRING .)
    OREQ            reduce using rule 98 (StringLiteral -> STRING .)
    CAREQ           reduce using rule 98 (StringLiteral -> STRING .)
    LLEQ            reduce using rule 98 (StringLiteral -> STRING .)
    GGEQ            reduce using rule 98 (StringLiteral -> STRING .)
    EQUAL           reduce using rule 98 (StringLiteral -> STRING .)
    LBRACE          reduce using rule 98 (StringLiteral -> STRING .)
    PLUSPLUS        reduce using rule 98 (StringLiteral -> STRING .)
    MINUSMIN        reduce using rule 98 (StringLiteral -> STRING .)


state 104

    (86) Operand -> OperandName .

    DOT             reduce using rule 86 (Operand -> OperandName .)
    LBRACK          reduce using rule 86 (Operand -> OperandName .)
    LPAREN          reduce using rule 86 (Operand -> OperandName .)
    OROR            reduce using rule 86 (Operand -> OperandName .)
    AMPAMP          reduce using rule 86 (Operand -> OperandName .)
    EQEQ            reduce using rule 86 (Operand -> OperandName .)
    NOTEQ           reduce using rule 86 (Operand -> OperandName .)
    LESS            reduce using rule 86 (Operand -> OperandName .)
    GREAT           reduce using rule 86 (Operand -> OperandName .)
    LEQ             reduce using rule 86 (Operand -> OperandName .)
    GEQ             reduce using rule 86 (Operand -> OperandName .)
    PLUS            reduce using rule 86 (Operand -> OperandName .)
    MINUS           reduce using rule 86 (Operand -> OperandName .)
    OR              reduce using rule 86 (Operand -> OperandName .)
    CARET           reduce using rule 86 (Operand -> OperandName .)
    TIMES           reduce using rule 86 (Operand -> OperandName .)
    DIVIDE          reduce using rule 86 (Operand -> OperandName .)
    MOD             reduce using rule 86 (Operand -> OperandName .)
    AMPERS          reduce using rule 86 (Operand -> OperandName .)
    LL              reduce using rule 86 (Operand -> OperandName .)
    GG              reduce using rule 86 (Operand -> OperandName .)
    AMPCAR          reduce using rule 86 (Operand -> OperandName .)
    COMMA           reduce using rule 86 (Operand -> OperandName .)
    RPAREN          reduce using rule 86 (Operand -> OperandName .)
    RBRACK          reduce using rule 86 (Operand -> OperandName .)
    SEMICOL         reduce using rule 86 (Operand -> OperandName .)
    COLON           reduce using rule 86 (Operand -> OperandName .)
    PLUSEQ          reduce using rule 86 (Operand -> OperandName .)
    MINUSEQ         reduce using rule 86 (Operand -> OperandName .)
    TIMESEQ         reduce using rule 86 (Operand -> OperandName .)
    DIVIDEEQ        reduce using rule 86 (Operand -> OperandName .)
    MODEQ           reduce using rule 86 (Operand -> OperandName .)
    AMPEQ           reduce using rule 86 (Operand -> OperandName .)
    OREQ            reduce using rule 86 (Operand -> OperandName .)
    CAREQ           reduce using rule 86 (Operand -> OperandName .)
    LLEQ            reduce using rule 86 (Operand -> OperandName .)
    GGEQ            reduce using rule 86 (Operand -> OperandName .)
    EQUAL           reduce using rule 86 (Operand -> OperandName .)
    LBRACE          reduce using rule 86 (Operand -> OperandName .)
    PLUSPLUS        reduce using rule 86 (Operand -> OperandName .)
    MINUSMIN        reduce using rule 86 (Operand -> OperandName .)


state 105

    (88) Literal -> BasicLit .

    DOT             reduce using rule 88 (Literal -> BasicLit .)
    LBRACK          reduce using rule 88 (Literal -> BasicLit .)
    LPAREN          reduce using rule 88 (Literal -> BasicLit .)
    OROR            reduce using rule 88 (Literal -> BasicLit .)
    AMPAMP          reduce using rule 88 (Literal -> BasicLit .)
    EQEQ            reduce using rule 88 (Literal -> BasicLit .)
    NOTEQ           reduce using rule 88 (Literal -> BasicLit .)
    LESS            reduce using rule 88 (Literal -> BasicLit .)
    GREAT           reduce using rule 88 (Literal -> BasicLit .)
    LEQ             reduce using rule 88 (Literal -> BasicLit .)
    GEQ             reduce using rule 88 (Literal -> BasicLit .)
    PLUS            reduce using rule 88 (Literal -> BasicLit .)
    MINUS           reduce using rule 88 (Literal -> BasicLit .)
    OR              reduce using rule 88 (Literal -> BasicLit .)
    CARET           reduce using rule 88 (Literal -> BasicLit .)
    TIMES           reduce using rule 88 (Literal -> BasicLit .)
    DIVIDE          reduce using rule 88 (Literal -> BasicLit .)
    MOD             reduce using rule 88 (Literal -> BasicLit .)
    AMPERS          reduce using rule 88 (Literal -> BasicLit .)
    LL              reduce using rule 88 (Literal -> BasicLit .)
    GG              reduce using rule 88 (Literal -> BasicLit .)
    AMPCAR          reduce using rule 88 (Literal -> BasicLit .)
    RBRACK          reduce using rule 88 (Literal -> BasicLit .)
    COMMA           reduce using rule 88 (Literal -> BasicLit .)
    SEMICOL         reduce using rule 88 (Literal -> BasicLit .)
    RPAREN          reduce using rule 88 (Literal -> BasicLit .)
    COLON           reduce using rule 88 (Literal -> BasicLit .)
    PLUSEQ          reduce using rule 88 (Literal -> BasicLit .)
    MINUSEQ         reduce using rule 88 (Literal -> BasicLit .)
    TIMESEQ         reduce using rule 88 (Literal -> BasicLit .)
    DIVIDEEQ        reduce using rule 88 (Literal -> BasicLit .)
    MODEQ           reduce using rule 88 (Literal -> BasicLit .)
    AMPEQ           reduce using rule 88 (Literal -> BasicLit .)
    OREQ            reduce using rule 88 (Literal -> BasicLit .)
    CAREQ           reduce using rule 88 (Literal -> BasicLit .)
    LLEQ            reduce using rule 88 (Literal -> BasicLit .)
    GGEQ            reduce using rule 88 (Literal -> BasicLit .)
    EQUAL           reduce using rule 88 (Literal -> BasicLit .)
    LBRACE          reduce using rule 88 (Literal -> BasicLit .)
    PLUSPLUS        reduce using rule 88 (Literal -> BasicLit .)
    MINUSMIN        reduce using rule 88 (Literal -> BasicLit .)


state 106

    (139) UnaryExpr -> UnaryOp . UnaryExpr
    (138) UnaryExpr -> . PrimaryExpr
    (139) UnaryExpr -> . UnaryOp UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . Conversion
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . PrimaryExpr Index
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr Arguments
    (140) UnaryOp -> . PLUS
    (141) UnaryOp -> . MINUS
    (142) UnaryOp -> . TIMES
    (143) UnaryOp -> . AMPERS
    (144) UnaryOp -> . NOT
    (85) Operand -> . Literal
    (86) Operand -> . OperandName
    (87) Operand -> . LPAREN Expression RPAREN
    (100) Conversion -> . Type LPAREN Expression RPAREN
    (88) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (89) BasicLit -> . IntLiteral
    (90) BasicLit -> . FloatLiteral
    (91) BasicLit -> . ImgLiteral
    (92) BasicLit -> . RuneLiteral
    (93) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (94) IntLiteral -> . INTEGER
    (95) FloatLiteral -> . FLOAT
    (96) ImgLiteral -> . IMAGINARY
    (97) RuneLiteral -> . RUNE
    (98) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . Pointer BaseType
    (27) FunctionType -> . FUNC Signature
    (25) Pointer -> . POINTER

    PLUS            shift and go to state 108
    MINUS           shift and go to state 102
    TIMES           shift and go to state 117
    AMPERS          shift and go to state 123
    NOT             shift and go to state 107
    LPAREN          shift and go to state 120
    IDENTIFIER      shift and go to state 111
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 109
    FLOAT           shift and go to state 122
    IMAGINARY       shift and go to state 110
    RUNE            shift and go to state 96
    STRING          shift and go to state 103
    LBRACK          shift and go to state 67
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53
    POINTER         shift and go to state 59

    Conversion                     shift and go to state 97
    UnaryOp                        shift and go to state 106
    PrimaryExpr                    shift and go to state 124
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 99
    FloatLiteral                   shift and go to state 100
    Type                           shift and go to state 101
    OperandName                    shift and go to state 104
    BasicLit                       shift and go to state 105
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 60
    IntLiteral                     shift and go to state 112
    UnaryExpr                      shift and go to state 161
    RuneLiteral                    shift and go to state 116
    Operand                        shift and go to state 118
    PointerType                    shift and go to state 69
    Pointer                        shift and go to state 66
    StringLiteral                  shift and go to state 98
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 113
    FunctionType                   shift and go to state 70

state 107

    (144) UnaryOp -> NOT .

    PLUS            reduce using rule 144 (UnaryOp -> NOT .)
    MINUS           reduce using rule 144 (UnaryOp -> NOT .)
    TIMES           reduce using rule 144 (UnaryOp -> NOT .)
    AMPERS          reduce using rule 144 (UnaryOp -> NOT .)
    NOT             reduce using rule 144 (UnaryOp -> NOT .)
    LPAREN          reduce using rule 144 (UnaryOp -> NOT .)
    IDENTIFIER      reduce using rule 144 (UnaryOp -> NOT .)
    TYPEX           reduce using rule 144 (UnaryOp -> NOT .)
    TTYPE           reduce using rule 144 (UnaryOp -> NOT .)
    INTEGER         reduce using rule 144 (UnaryOp -> NOT .)
    FLOAT           reduce using rule 144 (UnaryOp -> NOT .)
    IMAGINARY       reduce using rule 144 (UnaryOp -> NOT .)
    RUNE            reduce using rule 144 (UnaryOp -> NOT .)
    STRING          reduce using rule 144 (UnaryOp -> NOT .)
    LBRACK          reduce using rule 144 (UnaryOp -> NOT .)
    STRUCT          reduce using rule 144 (UnaryOp -> NOT .)
    FUNC            reduce using rule 144 (UnaryOp -> NOT .)
    POINTER         reduce using rule 144 (UnaryOp -> NOT .)


state 108

    (140) UnaryOp -> PLUS .

    PLUS            reduce using rule 140 (UnaryOp -> PLUS .)
    MINUS           reduce using rule 140 (UnaryOp -> PLUS .)
    TIMES           reduce using rule 140 (UnaryOp -> PLUS .)
    AMPERS          reduce using rule 140 (UnaryOp -> PLUS .)
    NOT             reduce using rule 140 (UnaryOp -> PLUS .)
    LPAREN          reduce using rule 140 (UnaryOp -> PLUS .)
    IDENTIFIER      reduce using rule 140 (UnaryOp -> PLUS .)
    TYPEX           reduce using rule 140 (UnaryOp -> PLUS .)
    TTYPE           reduce using rule 140 (UnaryOp -> PLUS .)
    INTEGER         reduce using rule 140 (UnaryOp -> PLUS .)
    FLOAT           reduce using rule 140 (UnaryOp -> PLUS .)
    IMAGINARY       reduce using rule 140 (UnaryOp -> PLUS .)
    RUNE            reduce using rule 140 (UnaryOp -> PLUS .)
    STRING          reduce using rule 140 (UnaryOp -> PLUS .)
    LBRACK          reduce using rule 140 (UnaryOp -> PLUS .)
    STRUCT          reduce using rule 140 (UnaryOp -> PLUS .)
    FUNC            reduce using rule 140 (UnaryOp -> PLUS .)
    POINTER         reduce using rule 140 (UnaryOp -> PLUS .)


state 109

    (94) IntLiteral -> INTEGER .

    PLUSPLUS        reduce using rule 94 (IntLiteral -> INTEGER .)
    MINUSMIN        reduce using rule 94 (IntLiteral -> INTEGER .)
    DOT             reduce using rule 94 (IntLiteral -> INTEGER .)
    LBRACK          reduce using rule 94 (IntLiteral -> INTEGER .)
    LPAREN          reduce using rule 94 (IntLiteral -> INTEGER .)
    OROR            reduce using rule 94 (IntLiteral -> INTEGER .)
    AMPAMP          reduce using rule 94 (IntLiteral -> INTEGER .)
    EQEQ            reduce using rule 94 (IntLiteral -> INTEGER .)
    NOTEQ           reduce using rule 94 (IntLiteral -> INTEGER .)
    LESS            reduce using rule 94 (IntLiteral -> INTEGER .)
    GREAT           reduce using rule 94 (IntLiteral -> INTEGER .)
    LEQ             reduce using rule 94 (IntLiteral -> INTEGER .)
    GEQ             reduce using rule 94 (IntLiteral -> INTEGER .)
    PLUS            reduce using rule 94 (IntLiteral -> INTEGER .)
    MINUS           reduce using rule 94 (IntLiteral -> INTEGER .)
    OR              reduce using rule 94 (IntLiteral -> INTEGER .)
    CARET           reduce using rule 94 (IntLiteral -> INTEGER .)
    TIMES           reduce using rule 94 (IntLiteral -> INTEGER .)
    DIVIDE          reduce using rule 94 (IntLiteral -> INTEGER .)
    MOD             reduce using rule 94 (IntLiteral -> INTEGER .)
    AMPERS          reduce using rule 94 (IntLiteral -> INTEGER .)
    LL              reduce using rule 94 (IntLiteral -> INTEGER .)
    GG              reduce using rule 94 (IntLiteral -> INTEGER .)
    AMPCAR          reduce using rule 94 (IntLiteral -> INTEGER .)
    COMMA           reduce using rule 94 (IntLiteral -> INTEGER .)
    SEMICOL         reduce using rule 94 (IntLiteral -> INTEGER .)
    PLUSEQ          reduce using rule 94 (IntLiteral -> INTEGER .)
    MINUSEQ         reduce using rule 94 (IntLiteral -> INTEGER .)
    TIMESEQ         reduce using rule 94 (IntLiteral -> INTEGER .)
    DIVIDEEQ        reduce using rule 94 (IntLiteral -> INTEGER .)
    MODEQ           reduce using rule 94 (IntLiteral -> INTEGER .)
    AMPEQ           reduce using rule 94 (IntLiteral -> INTEGER .)
    OREQ            reduce using rule 94 (IntLiteral -> INTEGER .)
    CAREQ           reduce using rule 94 (IntLiteral -> INTEGER .)
    LLEQ            reduce using rule 94 (IntLiteral -> INTEGER .)
    GGEQ            reduce using rule 94 (IntLiteral -> INTEGER .)
    EQUAL           reduce using rule 94 (IntLiteral -> INTEGER .)
    RBRACK          reduce using rule 94 (IntLiteral -> INTEGER .)
    RPAREN          reduce using rule 94 (IntLiteral -> INTEGER .)
    COLON           reduce using rule 94 (IntLiteral -> INTEGER .)
    LBRACE          reduce using rule 94 (IntLiteral -> INTEGER .)


state 110

    (96) ImgLiteral -> IMAGINARY .

    DOT             reduce using rule 96 (ImgLiteral -> IMAGINARY .)
    LBRACK          reduce using rule 96 (ImgLiteral -> IMAGINARY .)
    LPAREN          reduce using rule 96 (ImgLiteral -> IMAGINARY .)
    OROR            reduce using rule 96 (ImgLiteral -> IMAGINARY .)
    AMPAMP          reduce using rule 96 (ImgLiteral -> IMAGINARY .)
    EQEQ            reduce using rule 96 (ImgLiteral -> IMAGINARY .)
    NOTEQ           reduce using rule 96 (ImgLiteral -> IMAGINARY .)
    LESS            reduce using rule 96 (ImgLiteral -> IMAGINARY .)
    GREAT           reduce using rule 96 (ImgLiteral -> IMAGINARY .)
    LEQ             reduce using rule 96 (ImgLiteral -> IMAGINARY .)
    GEQ             reduce using rule 96 (ImgLiteral -> IMAGINARY .)
    PLUS            reduce using rule 96 (ImgLiteral -> IMAGINARY .)
    MINUS           reduce using rule 96 (ImgLiteral -> IMAGINARY .)
    OR              reduce using rule 96 (ImgLiteral -> IMAGINARY .)
    CARET           reduce using rule 96 (ImgLiteral -> IMAGINARY .)
    TIMES           reduce using rule 96 (ImgLiteral -> IMAGINARY .)
    DIVIDE          reduce using rule 96 (ImgLiteral -> IMAGINARY .)
    MOD             reduce using rule 96 (ImgLiteral -> IMAGINARY .)
    AMPERS          reduce using rule 96 (ImgLiteral -> IMAGINARY .)
    LL              reduce using rule 96 (ImgLiteral -> IMAGINARY .)
    GG              reduce using rule 96 (ImgLiteral -> IMAGINARY .)
    AMPCAR          reduce using rule 96 (ImgLiteral -> IMAGINARY .)
    RBRACK          reduce using rule 96 (ImgLiteral -> IMAGINARY .)
    COMMA           reduce using rule 96 (ImgLiteral -> IMAGINARY .)
    SEMICOL         reduce using rule 96 (ImgLiteral -> IMAGINARY .)
    RPAREN          reduce using rule 96 (ImgLiteral -> IMAGINARY .)
    COLON           reduce using rule 96 (ImgLiteral -> IMAGINARY .)
    PLUSEQ          reduce using rule 96 (ImgLiteral -> IMAGINARY .)
    MINUSEQ         reduce using rule 96 (ImgLiteral -> IMAGINARY .)
    TIMESEQ         reduce using rule 96 (ImgLiteral -> IMAGINARY .)
    DIVIDEEQ        reduce using rule 96 (ImgLiteral -> IMAGINARY .)
    MODEQ           reduce using rule 96 (ImgLiteral -> IMAGINARY .)
    AMPEQ           reduce using rule 96 (ImgLiteral -> IMAGINARY .)
    OREQ            reduce using rule 96 (ImgLiteral -> IMAGINARY .)
    CAREQ           reduce using rule 96 (ImgLiteral -> IMAGINARY .)
    LLEQ            reduce using rule 96 (ImgLiteral -> IMAGINARY .)
    GGEQ            reduce using rule 96 (ImgLiteral -> IMAGINARY .)
    EQUAL           reduce using rule 96 (ImgLiteral -> IMAGINARY .)
    LBRACE          reduce using rule 96 (ImgLiteral -> IMAGINARY .)
    PLUSPLUS        reduce using rule 96 (ImgLiteral -> IMAGINARY .)
    MINUSMIN        reduce using rule 96 (ImgLiteral -> IMAGINARY .)


state 111

    (99) OperandName -> IDENTIFIER .

    DOT             reduce using rule 99 (OperandName -> IDENTIFIER .)
    LBRACK          reduce using rule 99 (OperandName -> IDENTIFIER .)
    LPAREN          reduce using rule 99 (OperandName -> IDENTIFIER .)
    OROR            reduce using rule 99 (OperandName -> IDENTIFIER .)
    AMPAMP          reduce using rule 99 (OperandName -> IDENTIFIER .)
    EQEQ            reduce using rule 99 (OperandName -> IDENTIFIER .)
    NOTEQ           reduce using rule 99 (OperandName -> IDENTIFIER .)
    LESS            reduce using rule 99 (OperandName -> IDENTIFIER .)
    GREAT           reduce using rule 99 (OperandName -> IDENTIFIER .)
    LEQ             reduce using rule 99 (OperandName -> IDENTIFIER .)
    GEQ             reduce using rule 99 (OperandName -> IDENTIFIER .)
    PLUS            reduce using rule 99 (OperandName -> IDENTIFIER .)
    MINUS           reduce using rule 99 (OperandName -> IDENTIFIER .)
    OR              reduce using rule 99 (OperandName -> IDENTIFIER .)
    CARET           reduce using rule 99 (OperandName -> IDENTIFIER .)
    TIMES           reduce using rule 99 (OperandName -> IDENTIFIER .)
    DIVIDE          reduce using rule 99 (OperandName -> IDENTIFIER .)
    MOD             reduce using rule 99 (OperandName -> IDENTIFIER .)
    AMPERS          reduce using rule 99 (OperandName -> IDENTIFIER .)
    LL              reduce using rule 99 (OperandName -> IDENTIFIER .)
    GG              reduce using rule 99 (OperandName -> IDENTIFIER .)
    AMPCAR          reduce using rule 99 (OperandName -> IDENTIFIER .)
    SEMICOL         reduce using rule 99 (OperandName -> IDENTIFIER .)
    RBRACK          reduce using rule 99 (OperandName -> IDENTIFIER .)
    COMMA           reduce using rule 99 (OperandName -> IDENTIFIER .)
    RPAREN          reduce using rule 99 (OperandName -> IDENTIFIER .)
    COLON           reduce using rule 99 (OperandName -> IDENTIFIER .)
    PLUSEQ          reduce using rule 99 (OperandName -> IDENTIFIER .)
    MINUSEQ         reduce using rule 99 (OperandName -> IDENTIFIER .)
    TIMESEQ         reduce using rule 99 (OperandName -> IDENTIFIER .)
    DIVIDEEQ        reduce using rule 99 (OperandName -> IDENTIFIER .)
    MODEQ           reduce using rule 99 (OperandName -> IDENTIFIER .)
    AMPEQ           reduce using rule 99 (OperandName -> IDENTIFIER .)
    OREQ            reduce using rule 99 (OperandName -> IDENTIFIER .)
    CAREQ           reduce using rule 99 (OperandName -> IDENTIFIER .)
    LLEQ            reduce using rule 99 (OperandName -> IDENTIFIER .)
    GGEQ            reduce using rule 99 (OperandName -> IDENTIFIER .)
    EQUAL           reduce using rule 99 (OperandName -> IDENTIFIER .)
    LBRACE          reduce using rule 99 (OperandName -> IDENTIFIER .)


state 112

    (89) BasicLit -> IntLiteral .

    DOT             reduce using rule 89 (BasicLit -> IntLiteral .)
    LBRACK          reduce using rule 89 (BasicLit -> IntLiteral .)
    LPAREN          reduce using rule 89 (BasicLit -> IntLiteral .)
    OROR            reduce using rule 89 (BasicLit -> IntLiteral .)
    AMPAMP          reduce using rule 89 (BasicLit -> IntLiteral .)
    EQEQ            reduce using rule 89 (BasicLit -> IntLiteral .)
    NOTEQ           reduce using rule 89 (BasicLit -> IntLiteral .)
    LESS            reduce using rule 89 (BasicLit -> IntLiteral .)
    GREAT           reduce using rule 89 (BasicLit -> IntLiteral .)
    LEQ             reduce using rule 89 (BasicLit -> IntLiteral .)
    GEQ             reduce using rule 89 (BasicLit -> IntLiteral .)
    PLUS            reduce using rule 89 (BasicLit -> IntLiteral .)
    MINUS           reduce using rule 89 (BasicLit -> IntLiteral .)
    OR              reduce using rule 89 (BasicLit -> IntLiteral .)
    CARET           reduce using rule 89 (BasicLit -> IntLiteral .)
    TIMES           reduce using rule 89 (BasicLit -> IntLiteral .)
    DIVIDE          reduce using rule 89 (BasicLit -> IntLiteral .)
    MOD             reduce using rule 89 (BasicLit -> IntLiteral .)
    AMPERS          reduce using rule 89 (BasicLit -> IntLiteral .)
    LL              reduce using rule 89 (BasicLit -> IntLiteral .)
    GG              reduce using rule 89 (BasicLit -> IntLiteral .)
    AMPCAR          reduce using rule 89 (BasicLit -> IntLiteral .)
    SEMICOL         reduce using rule 89 (BasicLit -> IntLiteral .)
    LBRACE          reduce using rule 89 (BasicLit -> IntLiteral .)
    RBRACK          reduce using rule 89 (BasicLit -> IntLiteral .)
    COMMA           reduce using rule 89 (BasicLit -> IntLiteral .)
    RPAREN          reduce using rule 89 (BasicLit -> IntLiteral .)
    COLON           reduce using rule 89 (BasicLit -> IntLiteral .)
    PLUSEQ          reduce using rule 89 (BasicLit -> IntLiteral .)
    MINUSEQ         reduce using rule 89 (BasicLit -> IntLiteral .)
    TIMESEQ         reduce using rule 89 (BasicLit -> IntLiteral .)
    DIVIDEEQ        reduce using rule 89 (BasicLit -> IntLiteral .)
    MODEQ           reduce using rule 89 (BasicLit -> IntLiteral .)
    AMPEQ           reduce using rule 89 (BasicLit -> IntLiteral .)
    OREQ            reduce using rule 89 (BasicLit -> IntLiteral .)
    CAREQ           reduce using rule 89 (BasicLit -> IntLiteral .)
    LLEQ            reduce using rule 89 (BasicLit -> IntLiteral .)
    GGEQ            reduce using rule 89 (BasicLit -> IntLiteral .)
    EQUAL           reduce using rule 89 (BasicLit -> IntLiteral .)
    PLUSPLUS        reduce using rule 89 (BasicLit -> IntLiteral .)
    MINUSMIN        reduce using rule 89 (BasicLit -> IntLiteral .)


state 113

    (91) BasicLit -> ImgLiteral .

    DOT             reduce using rule 91 (BasicLit -> ImgLiteral .)
    LBRACK          reduce using rule 91 (BasicLit -> ImgLiteral .)
    LPAREN          reduce using rule 91 (BasicLit -> ImgLiteral .)
    OROR            reduce using rule 91 (BasicLit -> ImgLiteral .)
    AMPAMP          reduce using rule 91 (BasicLit -> ImgLiteral .)
    EQEQ            reduce using rule 91 (BasicLit -> ImgLiteral .)
    NOTEQ           reduce using rule 91 (BasicLit -> ImgLiteral .)
    LESS            reduce using rule 91 (BasicLit -> ImgLiteral .)
    GREAT           reduce using rule 91 (BasicLit -> ImgLiteral .)
    LEQ             reduce using rule 91 (BasicLit -> ImgLiteral .)
    GEQ             reduce using rule 91 (BasicLit -> ImgLiteral .)
    PLUS            reduce using rule 91 (BasicLit -> ImgLiteral .)
    MINUS           reduce using rule 91 (BasicLit -> ImgLiteral .)
    OR              reduce using rule 91 (BasicLit -> ImgLiteral .)
    CARET           reduce using rule 91 (BasicLit -> ImgLiteral .)
    TIMES           reduce using rule 91 (BasicLit -> ImgLiteral .)
    DIVIDE          reduce using rule 91 (BasicLit -> ImgLiteral .)
    MOD             reduce using rule 91 (BasicLit -> ImgLiteral .)
    AMPERS          reduce using rule 91 (BasicLit -> ImgLiteral .)
    LL              reduce using rule 91 (BasicLit -> ImgLiteral .)
    GG              reduce using rule 91 (BasicLit -> ImgLiteral .)
    AMPCAR          reduce using rule 91 (BasicLit -> ImgLiteral .)
    SEMICOL         reduce using rule 91 (BasicLit -> ImgLiteral .)
    LBRACE          reduce using rule 91 (BasicLit -> ImgLiteral .)
    RBRACK          reduce using rule 91 (BasicLit -> ImgLiteral .)
    COMMA           reduce using rule 91 (BasicLit -> ImgLiteral .)
    RPAREN          reduce using rule 91 (BasicLit -> ImgLiteral .)
    COLON           reduce using rule 91 (BasicLit -> ImgLiteral .)
    PLUSEQ          reduce using rule 91 (BasicLit -> ImgLiteral .)
    MINUSEQ         reduce using rule 91 (BasicLit -> ImgLiteral .)
    TIMESEQ         reduce using rule 91 (BasicLit -> ImgLiteral .)
    DIVIDEEQ        reduce using rule 91 (BasicLit -> ImgLiteral .)
    MODEQ           reduce using rule 91 (BasicLit -> ImgLiteral .)
    AMPEQ           reduce using rule 91 (BasicLit -> ImgLiteral .)
    OREQ            reduce using rule 91 (BasicLit -> ImgLiteral .)
    CAREQ           reduce using rule 91 (BasicLit -> ImgLiteral .)
    LLEQ            reduce using rule 91 (BasicLit -> ImgLiteral .)
    GGEQ            reduce using rule 91 (BasicLit -> ImgLiteral .)
    EQUAL           reduce using rule 91 (BasicLit -> ImgLiteral .)
    PLUSPLUS        reduce using rule 91 (BasicLit -> ImgLiteral .)
    MINUSMIN        reduce using rule 91 (BasicLit -> ImgLiteral .)


state 114

    (14) ArrayType -> LBRACK RBRACK . ElementType
    (16) ElementType -> . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . Pointer BaseType
    (27) FunctionType -> . FUNC Signature
    (25) Pointer -> . POINTER

    LPAREN          shift and go to state 62
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    LBRACK          shift and go to state 67
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53
    POINTER         shift and go to state 59

    StructType                     shift and go to state 60
    Type                           shift and go to state 162
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 57
    Pointer                        shift and go to state 66
    PointerType                    shift and go to state 69
    FunctionType                   shift and go to state 70
    ElementType                    shift and go to state 163
    TypeLit                        shift and go to state 56

state 115

    (116) Expression -> UnaryExpr .

    OROR            reduce using rule 116 (Expression -> UnaryExpr .)
    AMPAMP          reduce using rule 116 (Expression -> UnaryExpr .)
    EQEQ            reduce using rule 116 (Expression -> UnaryExpr .)
    NOTEQ           reduce using rule 116 (Expression -> UnaryExpr .)
    LESS            reduce using rule 116 (Expression -> UnaryExpr .)
    GREAT           reduce using rule 116 (Expression -> UnaryExpr .)
    LEQ             reduce using rule 116 (Expression -> UnaryExpr .)
    GEQ             reduce using rule 116 (Expression -> UnaryExpr .)
    PLUS            reduce using rule 116 (Expression -> UnaryExpr .)
    MINUS           reduce using rule 116 (Expression -> UnaryExpr .)
    OR              reduce using rule 116 (Expression -> UnaryExpr .)
    CARET           reduce using rule 116 (Expression -> UnaryExpr .)
    TIMES           reduce using rule 116 (Expression -> UnaryExpr .)
    DIVIDE          reduce using rule 116 (Expression -> UnaryExpr .)
    MOD             reduce using rule 116 (Expression -> UnaryExpr .)
    AMPERS          reduce using rule 116 (Expression -> UnaryExpr .)
    LL              reduce using rule 116 (Expression -> UnaryExpr .)
    GG              reduce using rule 116 (Expression -> UnaryExpr .)
    AMPCAR          reduce using rule 116 (Expression -> UnaryExpr .)
    RBRACK          reduce using rule 116 (Expression -> UnaryExpr .)
    COMMA           reduce using rule 116 (Expression -> UnaryExpr .)
    SEMICOL         reduce using rule 116 (Expression -> UnaryExpr .)
    RPAREN          reduce using rule 116 (Expression -> UnaryExpr .)
    COLON           reduce using rule 116 (Expression -> UnaryExpr .)
    PLUSEQ          reduce using rule 116 (Expression -> UnaryExpr .)
    MINUSEQ         reduce using rule 116 (Expression -> UnaryExpr .)
    TIMESEQ         reduce using rule 116 (Expression -> UnaryExpr .)
    DIVIDEEQ        reduce using rule 116 (Expression -> UnaryExpr .)
    MODEQ           reduce using rule 116 (Expression -> UnaryExpr .)
    AMPEQ           reduce using rule 116 (Expression -> UnaryExpr .)
    OREQ            reduce using rule 116 (Expression -> UnaryExpr .)
    CAREQ           reduce using rule 116 (Expression -> UnaryExpr .)
    LLEQ            reduce using rule 116 (Expression -> UnaryExpr .)
    GGEQ            reduce using rule 116 (Expression -> UnaryExpr .)
    EQUAL           reduce using rule 116 (Expression -> UnaryExpr .)
    LBRACE          reduce using rule 116 (Expression -> UnaryExpr .)


state 116

    (92) BasicLit -> RuneLiteral .

    DOT             reduce using rule 92 (BasicLit -> RuneLiteral .)
    LBRACK          reduce using rule 92 (BasicLit -> RuneLiteral .)
    LPAREN          reduce using rule 92 (BasicLit -> RuneLiteral .)
    OROR            reduce using rule 92 (BasicLit -> RuneLiteral .)
    AMPAMP          reduce using rule 92 (BasicLit -> RuneLiteral .)
    EQEQ            reduce using rule 92 (BasicLit -> RuneLiteral .)
    NOTEQ           reduce using rule 92 (BasicLit -> RuneLiteral .)
    LESS            reduce using rule 92 (BasicLit -> RuneLiteral .)
    GREAT           reduce using rule 92 (BasicLit -> RuneLiteral .)
    LEQ             reduce using rule 92 (BasicLit -> RuneLiteral .)
    GEQ             reduce using rule 92 (BasicLit -> RuneLiteral .)
    PLUS            reduce using rule 92 (BasicLit -> RuneLiteral .)
    MINUS           reduce using rule 92 (BasicLit -> RuneLiteral .)
    OR              reduce using rule 92 (BasicLit -> RuneLiteral .)
    CARET           reduce using rule 92 (BasicLit -> RuneLiteral .)
    TIMES           reduce using rule 92 (BasicLit -> RuneLiteral .)
    DIVIDE          reduce using rule 92 (BasicLit -> RuneLiteral .)
    MOD             reduce using rule 92 (BasicLit -> RuneLiteral .)
    AMPERS          reduce using rule 92 (BasicLit -> RuneLiteral .)
    LL              reduce using rule 92 (BasicLit -> RuneLiteral .)
    GG              reduce using rule 92 (BasicLit -> RuneLiteral .)
    AMPCAR          reduce using rule 92 (BasicLit -> RuneLiteral .)
    SEMICOL         reduce using rule 92 (BasicLit -> RuneLiteral .)
    LBRACE          reduce using rule 92 (BasicLit -> RuneLiteral .)
    RBRACK          reduce using rule 92 (BasicLit -> RuneLiteral .)
    COMMA           reduce using rule 92 (BasicLit -> RuneLiteral .)
    RPAREN          reduce using rule 92 (BasicLit -> RuneLiteral .)
    COLON           reduce using rule 92 (BasicLit -> RuneLiteral .)
    PLUSEQ          reduce using rule 92 (BasicLit -> RuneLiteral .)
    MINUSEQ         reduce using rule 92 (BasicLit -> RuneLiteral .)
    TIMESEQ         reduce using rule 92 (BasicLit -> RuneLiteral .)
    DIVIDEEQ        reduce using rule 92 (BasicLit -> RuneLiteral .)
    MODEQ           reduce using rule 92 (BasicLit -> RuneLiteral .)
    AMPEQ           reduce using rule 92 (BasicLit -> RuneLiteral .)
    OREQ            reduce using rule 92 (BasicLit -> RuneLiteral .)
    CAREQ           reduce using rule 92 (BasicLit -> RuneLiteral .)
    LLEQ            reduce using rule 92 (BasicLit -> RuneLiteral .)
    GGEQ            reduce using rule 92 (BasicLit -> RuneLiteral .)
    EQUAL           reduce using rule 92 (BasicLit -> RuneLiteral .)
    PLUSPLUS        reduce using rule 92 (BasicLit -> RuneLiteral .)
    MINUSMIN        reduce using rule 92 (BasicLit -> RuneLiteral .)


state 117

    (142) UnaryOp -> TIMES .

    PLUS            reduce using rule 142 (UnaryOp -> TIMES .)
    MINUS           reduce using rule 142 (UnaryOp -> TIMES .)
    TIMES           reduce using rule 142 (UnaryOp -> TIMES .)
    AMPERS          reduce using rule 142 (UnaryOp -> TIMES .)
    NOT             reduce using rule 142 (UnaryOp -> TIMES .)
    LPAREN          reduce using rule 142 (UnaryOp -> TIMES .)
    IDENTIFIER      reduce using rule 142 (UnaryOp -> TIMES .)
    TYPEX           reduce using rule 142 (UnaryOp -> TIMES .)
    TTYPE           reduce using rule 142 (UnaryOp -> TIMES .)
    INTEGER         reduce using rule 142 (UnaryOp -> TIMES .)
    FLOAT           reduce using rule 142 (UnaryOp -> TIMES .)
    IMAGINARY       reduce using rule 142 (UnaryOp -> TIMES .)
    RUNE            reduce using rule 142 (UnaryOp -> TIMES .)
    STRING          reduce using rule 142 (UnaryOp -> TIMES .)
    LBRACK          reduce using rule 142 (UnaryOp -> TIMES .)
    STRUCT          reduce using rule 142 (UnaryOp -> TIMES .)
    FUNC            reduce using rule 142 (UnaryOp -> TIMES .)
    POINTER         reduce using rule 142 (UnaryOp -> TIMES .)


state 118

    (101) PrimaryExpr -> Operand .

    DOT             reduce using rule 101 (PrimaryExpr -> Operand .)
    LBRACK          reduce using rule 101 (PrimaryExpr -> Operand .)
    LPAREN          reduce using rule 101 (PrimaryExpr -> Operand .)
    OROR            reduce using rule 101 (PrimaryExpr -> Operand .)
    AMPAMP          reduce using rule 101 (PrimaryExpr -> Operand .)
    EQEQ            reduce using rule 101 (PrimaryExpr -> Operand .)
    NOTEQ           reduce using rule 101 (PrimaryExpr -> Operand .)
    LESS            reduce using rule 101 (PrimaryExpr -> Operand .)
    GREAT           reduce using rule 101 (PrimaryExpr -> Operand .)
    LEQ             reduce using rule 101 (PrimaryExpr -> Operand .)
    GEQ             reduce using rule 101 (PrimaryExpr -> Operand .)
    PLUS            reduce using rule 101 (PrimaryExpr -> Operand .)
    MINUS           reduce using rule 101 (PrimaryExpr -> Operand .)
    OR              reduce using rule 101 (PrimaryExpr -> Operand .)
    CARET           reduce using rule 101 (PrimaryExpr -> Operand .)
    TIMES           reduce using rule 101 (PrimaryExpr -> Operand .)
    DIVIDE          reduce using rule 101 (PrimaryExpr -> Operand .)
    MOD             reduce using rule 101 (PrimaryExpr -> Operand .)
    AMPERS          reduce using rule 101 (PrimaryExpr -> Operand .)
    LL              reduce using rule 101 (PrimaryExpr -> Operand .)
    GG              reduce using rule 101 (PrimaryExpr -> Operand .)
    AMPCAR          reduce using rule 101 (PrimaryExpr -> Operand .)
    COMMA           reduce using rule 101 (PrimaryExpr -> Operand .)
    SEMICOL         reduce using rule 101 (PrimaryExpr -> Operand .)
    RBRACK          reduce using rule 101 (PrimaryExpr -> Operand .)
    RPAREN          reduce using rule 101 (PrimaryExpr -> Operand .)
    COLON           reduce using rule 101 (PrimaryExpr -> Operand .)
    PLUSEQ          reduce using rule 101 (PrimaryExpr -> Operand .)
    MINUSEQ         reduce using rule 101 (PrimaryExpr -> Operand .)
    TIMESEQ         reduce using rule 101 (PrimaryExpr -> Operand .)
    DIVIDEEQ        reduce using rule 101 (PrimaryExpr -> Operand .)
    MODEQ           reduce using rule 101 (PrimaryExpr -> Operand .)
    AMPEQ           reduce using rule 101 (PrimaryExpr -> Operand .)
    OREQ            reduce using rule 101 (PrimaryExpr -> Operand .)
    CAREQ           reduce using rule 101 (PrimaryExpr -> Operand .)
    LLEQ            reduce using rule 101 (PrimaryExpr -> Operand .)
    GGEQ            reduce using rule 101 (PrimaryExpr -> Operand .)
    EQUAL           reduce using rule 101 (PrimaryExpr -> Operand .)
    LBRACE          reduce using rule 101 (PrimaryExpr -> Operand .)
    PLUSPLUS        reduce using rule 101 (PrimaryExpr -> Operand .)
    MINUSMIN        reduce using rule 101 (PrimaryExpr -> Operand .)


state 119

    (13) ArrayType -> LBRACK ArrayLength . RBRACK ElementType

    RBRACK          shift and go to state 164


state 120

    (87) Operand -> LPAREN . Expression RPAREN
    (4) Type -> LPAREN . Type RPAREN
    (116) Expression -> . UnaryExpr
    (117) Expression -> . Expression OROR Expression
    (118) Expression -> . Expression AMPAMP Expression
    (119) Expression -> . Expression EQEQ Expression
    (120) Expression -> . Expression NOTEQ Expression
    (121) Expression -> . Expression LESS Expression
    (122) Expression -> . Expression GREAT Expression
    (123) Expression -> . Expression LEQ Expression
    (124) Expression -> . Expression GEQ Expression
    (125) Expression -> . Expression PLUS Expression
    (126) Expression -> . Expression MINUS Expression
    (127) Expression -> . Expression OR Expression
    (128) Expression -> . Expression CARET Expression
    (129) Expression -> . Expression TIMES Expression
    (130) Expression -> . Expression DIVIDE Expression
    (131) Expression -> . Expression MOD Expression
    (132) Expression -> . Expression AMPERS Expression
    (133) Expression -> . Expression LL Expression
    (134) Expression -> . Expression GG Expression
    (135) Expression -> . Expression AMPCAR Expression
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (138) UnaryExpr -> . PrimaryExpr
    (139) UnaryExpr -> . UnaryOp UnaryExpr
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . Conversion
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . PrimaryExpr Index
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr Arguments
    (140) UnaryOp -> . PLUS
    (141) UnaryOp -> . MINUS
    (142) UnaryOp -> . TIMES
    (143) UnaryOp -> . AMPERS
    (144) UnaryOp -> . NOT
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . Pointer BaseType
    (27) FunctionType -> . FUNC Signature
    (85) Operand -> . Literal
    (86) Operand -> . OperandName
    (87) Operand -> . LPAREN Expression RPAREN
    (100) Conversion -> . Type LPAREN Expression RPAREN
    (25) Pointer -> . POINTER
    (88) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (89) BasicLit -> . IntLiteral
    (90) BasicLit -> . FloatLiteral
    (91) BasicLit -> . ImgLiteral
    (92) BasicLit -> . RuneLiteral
    (93) BasicLit -> . StringLiteral
    (94) IntLiteral -> . INTEGER
    (95) FloatLiteral -> . FLOAT
    (96) ImgLiteral -> . IMAGINARY
    (97) RuneLiteral -> . RUNE
    (98) StringLiteral -> . STRING

    LPAREN          shift and go to state 166
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    PLUS            shift and go to state 108
    MINUS           shift and go to state 102
    TIMES           shift and go to state 117
    AMPERS          shift and go to state 123
    NOT             shift and go to state 107
    LBRACK          shift and go to state 67
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53
    POINTER         shift and go to state 59
    IDENTIFIER      shift and go to state 111
    INTEGER         shift and go to state 109
    FLOAT           shift and go to state 122
    IMAGINARY       shift and go to state 110
    RUNE            shift and go to state 96
    STRING          shift and go to state 103

    Conversion                     shift and go to state 97
    UnaryOp                        shift and go to state 106
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 99
    FloatLiteral                   shift and go to state 100
    TypeLit                        shift and go to state 56
    OperandName                    shift and go to state 104
    Type                           shift and go to state 165
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 60
    IntLiteral                     shift and go to state 112
    ImgLiteral                     shift and go to state 113
    UnaryExpr                      shift and go to state 115
    RuneLiteral                    shift and go to state 116
    PrimaryExpr                    shift and go to state 124
    Expression                     shift and go to state 167
    PointerType                    shift and go to state 69
    FunctionType                   shift and go to state 70
    StringLiteral                  shift and go to state 98
    BasicLit                       shift and go to state 105
    Operand                        shift and go to state 118
    Pointer                        shift and go to state 66

state 121

    (15) ArrayLength -> Expression .
    (117) Expression -> Expression . OROR Expression
    (118) Expression -> Expression . AMPAMP Expression
    (119) Expression -> Expression . EQEQ Expression
    (120) Expression -> Expression . NOTEQ Expression
    (121) Expression -> Expression . LESS Expression
    (122) Expression -> Expression . GREAT Expression
    (123) Expression -> Expression . LEQ Expression
    (124) Expression -> Expression . GEQ Expression
    (125) Expression -> Expression . PLUS Expression
    (126) Expression -> Expression . MINUS Expression
    (127) Expression -> Expression . OR Expression
    (128) Expression -> Expression . CARET Expression
    (129) Expression -> Expression . TIMES Expression
    (130) Expression -> Expression . DIVIDE Expression
    (131) Expression -> Expression . MOD Expression
    (132) Expression -> Expression . AMPERS Expression
    (133) Expression -> Expression . LL Expression
    (134) Expression -> Expression . GG Expression
    (135) Expression -> Expression . AMPCAR Expression

    RBRACK          reduce using rule 15 (ArrayLength -> Expression .)
    OROR            shift and go to state 168
    AMPAMP          shift and go to state 183
    EQEQ            shift and go to state 174
    NOTEQ           shift and go to state 180
    LESS            shift and go to state 173
    GREAT           shift and go to state 170
    LEQ             shift and go to state 186
    GEQ             shift and go to state 177
    PLUS            shift and go to state 181
    MINUS           shift and go to state 185
    OR              shift and go to state 178
    CARET           shift and go to state 169
    TIMES           shift and go to state 184
    DIVIDE          shift and go to state 171
    MOD             shift and go to state 182
    AMPERS          shift and go to state 176
    LL              shift and go to state 175
    GG              shift and go to state 179
    AMPCAR          shift and go to state 172


state 122

    (95) FloatLiteral -> FLOAT .

    DOT             reduce using rule 95 (FloatLiteral -> FLOAT .)
    LBRACK          reduce using rule 95 (FloatLiteral -> FLOAT .)
    LPAREN          reduce using rule 95 (FloatLiteral -> FLOAT .)
    OROR            reduce using rule 95 (FloatLiteral -> FLOAT .)
    AMPAMP          reduce using rule 95 (FloatLiteral -> FLOAT .)
    EQEQ            reduce using rule 95 (FloatLiteral -> FLOAT .)
    NOTEQ           reduce using rule 95 (FloatLiteral -> FLOAT .)
    LESS            reduce using rule 95 (FloatLiteral -> FLOAT .)
    GREAT           reduce using rule 95 (FloatLiteral -> FLOAT .)
    LEQ             reduce using rule 95 (FloatLiteral -> FLOAT .)
    GEQ             reduce using rule 95 (FloatLiteral -> FLOAT .)
    PLUS            reduce using rule 95 (FloatLiteral -> FLOAT .)
    MINUS           reduce using rule 95 (FloatLiteral -> FLOAT .)
    OR              reduce using rule 95 (FloatLiteral -> FLOAT .)
    CARET           reduce using rule 95 (FloatLiteral -> FLOAT .)
    TIMES           reduce using rule 95 (FloatLiteral -> FLOAT .)
    DIVIDE          reduce using rule 95 (FloatLiteral -> FLOAT .)
    MOD             reduce using rule 95 (FloatLiteral -> FLOAT .)
    AMPERS          reduce using rule 95 (FloatLiteral -> FLOAT .)
    LL              reduce using rule 95 (FloatLiteral -> FLOAT .)
    GG              reduce using rule 95 (FloatLiteral -> FLOAT .)
    AMPCAR          reduce using rule 95 (FloatLiteral -> FLOAT .)
    COMMA           reduce using rule 95 (FloatLiteral -> FLOAT .)
    SEMICOL         reduce using rule 95 (FloatLiteral -> FLOAT .)
    RPAREN          reduce using rule 95 (FloatLiteral -> FLOAT .)
    RBRACK          reduce using rule 95 (FloatLiteral -> FLOAT .)
    COLON           reduce using rule 95 (FloatLiteral -> FLOAT .)
    PLUSEQ          reduce using rule 95 (FloatLiteral -> FLOAT .)
    MINUSEQ         reduce using rule 95 (FloatLiteral -> FLOAT .)
    TIMESEQ         reduce using rule 95 (FloatLiteral -> FLOAT .)
    DIVIDEEQ        reduce using rule 95 (FloatLiteral -> FLOAT .)
    MODEQ           reduce using rule 95 (FloatLiteral -> FLOAT .)
    AMPEQ           reduce using rule 95 (FloatLiteral -> FLOAT .)
    OREQ            reduce using rule 95 (FloatLiteral -> FLOAT .)
    CAREQ           reduce using rule 95 (FloatLiteral -> FLOAT .)
    LLEQ            reduce using rule 95 (FloatLiteral -> FLOAT .)
    GGEQ            reduce using rule 95 (FloatLiteral -> FLOAT .)
    EQUAL           reduce using rule 95 (FloatLiteral -> FLOAT .)
    LBRACE          reduce using rule 95 (FloatLiteral -> FLOAT .)
    PLUSPLUS        reduce using rule 95 (FloatLiteral -> FLOAT .)
    MINUSMIN        reduce using rule 95 (FloatLiteral -> FLOAT .)


state 123

    (143) UnaryOp -> AMPERS .

    PLUS            reduce using rule 143 (UnaryOp -> AMPERS .)
    MINUS           reduce using rule 143 (UnaryOp -> AMPERS .)
    TIMES           reduce using rule 143 (UnaryOp -> AMPERS .)
    AMPERS          reduce using rule 143 (UnaryOp -> AMPERS .)
    NOT             reduce using rule 143 (UnaryOp -> AMPERS .)
    LPAREN          reduce using rule 143 (UnaryOp -> AMPERS .)
    IDENTIFIER      reduce using rule 143 (UnaryOp -> AMPERS .)
    TYPEX           reduce using rule 143 (UnaryOp -> AMPERS .)
    TTYPE           reduce using rule 143 (UnaryOp -> AMPERS .)
    INTEGER         reduce using rule 143 (UnaryOp -> AMPERS .)
    FLOAT           reduce using rule 143 (UnaryOp -> AMPERS .)
    IMAGINARY       reduce using rule 143 (UnaryOp -> AMPERS .)
    RUNE            reduce using rule 143 (UnaryOp -> AMPERS .)
    STRING          reduce using rule 143 (UnaryOp -> AMPERS .)
    LBRACK          reduce using rule 143 (UnaryOp -> AMPERS .)
    STRUCT          reduce using rule 143 (UnaryOp -> AMPERS .)
    FUNC            reduce using rule 143 (UnaryOp -> AMPERS .)
    POINTER         reduce using rule 143 (UnaryOp -> AMPERS .)


state 124

    (138) UnaryExpr -> PrimaryExpr .
    (103) PrimaryExpr -> PrimaryExpr . Selector
    (104) PrimaryExpr -> PrimaryExpr . Index
    (105) PrimaryExpr -> PrimaryExpr . Slice
    (106) PrimaryExpr -> PrimaryExpr . Arguments
    (107) Selector -> . DOT IDENTIFIER
    (108) Index -> . LBRACK Expression RBRACK
    (109) Slice -> . LBRACK ExpressionOpt COLON ExpressionOpt RBRACK
    (110) Arguments -> . LPAREN ExpressionListTypeOpt RPAREN

    OROR            reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    AMPAMP          reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    EQEQ            reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    NOTEQ           reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    LESS            reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    GREAT           reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    LEQ             reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    GEQ             reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    PLUS            reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    MINUS           reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    OR              reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    CARET           reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    TIMES           reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    DIVIDE          reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    MOD             reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    AMPERS          reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    LL              reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    GG              reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    AMPCAR          reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    RBRACK          reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    COMMA           reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    SEMICOL         reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    RPAREN          reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    COLON           reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    PLUSEQ          reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    MINUSEQ         reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    TIMESEQ         reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    DIVIDEEQ        reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    MODEQ           reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    AMPEQ           reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    OREQ            reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    CAREQ           reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    LLEQ            reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    GGEQ            reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    EQUAL           reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    LBRACE          reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    DOT             shift and go to state 193
    LBRACK          shift and go to state 189
    LPAREN          shift and go to state 192

    Index                          shift and go to state 187
    Slice                          shift and go to state 188
    Selector                       shift and go to state 190
    Arguments                      shift and go to state 191

state 125

    (61) IdentifierRep -> IdentifierRep COMMA . IDENTIFIER

    IDENTIFIER      shift and go to state 194


state 126

    (31) Result -> Parameters .

    EQUAL           reduce using rule 31 (Result -> Parameters .)
    SEMICOL         reduce using rule 31 (Result -> Parameters .)
    RPAREN          reduce using rule 31 (Result -> Parameters .)
    LPAREN          reduce using rule 31 (Result -> Parameters .)
    LBRACE          reduce using rule 31 (Result -> Parameters .)
    COMMA           reduce using rule 31 (Result -> Parameters .)
    STRING          reduce using rule 31 (Result -> Parameters .)


state 127

    (32) Result -> Type .

    EQUAL           reduce using rule 32 (Result -> Type .)
    SEMICOL         reduce using rule 32 (Result -> Type .)
    RPAREN          reduce using rule 32 (Result -> Type .)
    LPAREN          reduce using rule 32 (Result -> Type .)
    LBRACE          reduce using rule 32 (Result -> Type .)
    COMMA           reduce using rule 32 (Result -> Type .)
    STRING          reduce using rule 32 (Result -> Type .)


state 128

    (28) Signature -> Parameters ResultOpt .

    LBRACE          reduce using rule 28 (Signature -> Parameters ResultOpt .)
    SEMICOL         reduce using rule 28 (Signature -> Parameters ResultOpt .)
    EQUAL           reduce using rule 28 (Signature -> Parameters ResultOpt .)
    RPAREN          reduce using rule 28 (Signature -> Parameters ResultOpt .)
    LPAREN          reduce using rule 28 (Signature -> Parameters ResultOpt .)
    COMMA           reduce using rule 28 (Signature -> Parameters ResultOpt .)
    STRING          reduce using rule 28 (Signature -> Parameters ResultOpt .)


state 129

    (30) ResultOpt -> epsilon .

    EQUAL           reduce using rule 30 (ResultOpt -> epsilon .)
    SEMICOL         reduce using rule 30 (ResultOpt -> epsilon .)
    RPAREN          reduce using rule 30 (ResultOpt -> epsilon .)
    LPAREN          reduce using rule 30 (ResultOpt -> epsilon .)
    LBRACE          reduce using rule 30 (ResultOpt -> epsilon .)
    COMMA           reduce using rule 30 (ResultOpt -> epsilon .)
    STRING          reduce using rule 30 (ResultOpt -> epsilon .)


state 130

    (33) Parameters -> LPAREN . ParameterListOpt RPAREN
    (4) Type -> LPAREN . Type RPAREN
    (34) ParameterListOpt -> . ParametersList
    (35) ParameterListOpt -> . epsilon
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (36) ParametersList -> . Type
    (37) ParametersList -> . IdentifierList Type
    (38) ParametersList -> . ParameterDeclCommaRep
    (224) epsilon -> .
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (60) IdentifierList -> . IDENTIFIER IdentifierRep
    (39) ParameterDeclCommaRep -> . ParameterDeclCommaRep COMMA ParameterDecl
    (40) ParameterDeclCommaRep -> . ParameterDecl COMMA ParameterDecl
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . Pointer BaseType
    (27) FunctionType -> . FUNC Signature
    (41) ParameterDecl -> . IdentifierList Type
    (42) ParameterDecl -> . Type
    (25) Pointer -> . POINTER

    LPAREN          shift and go to state 62
    RPAREN          reduce using rule 224 (epsilon -> .)
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    IDENTIFIER      shift and go to state 34
    LBRACK          shift and go to state 67
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53
    POINTER         shift and go to state 59

    StructType                     shift and go to state 60
    TypeLit                        shift and go to state 56
    IdentifierList                 shift and go to state 137
    ParameterListOpt               shift and go to state 136
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 57
    Pointer                        shift and go to state 66
    epsilon                        shift and go to state 142
    PointerType                    shift and go to state 69
    FunctionType                   shift and go to state 70
    ParametersList                 shift and go to state 140
    Type                           shift and go to state 195
    ParameterDeclCommaRep          shift and go to state 138
    ParameterDecl                  shift and go to state 141

state 131

    (29) ResultOpt -> Result .

    EQUAL           reduce using rule 29 (ResultOpt -> Result .)
    SEMICOL         reduce using rule 29 (ResultOpt -> Result .)
    RPAREN          reduce using rule 29 (ResultOpt -> Result .)
    LPAREN          reduce using rule 29 (ResultOpt -> Result .)
    LBRACE          reduce using rule 29 (ResultOpt -> Result .)
    COMMA           reduce using rule 29 (ResultOpt -> Result .)
    STRING          reduce using rule 29 (ResultOpt -> Result .)


state 132

    (83) Function -> Signature FunctionBody .

    SEMICOL         reduce using rule 83 (Function -> Signature FunctionBody .)


state 133

    (44) CreateScope -> epsilon .

    LBRACE          reduce using rule 44 (CreateScope -> epsilon .)


state 134

    (43) Block -> CreateScope . LBRACE StatementList RBRACE

    LBRACE          shift and go to state 196


state 135

    (84) FunctionBody -> Block .

    SEMICOL         reduce using rule 84 (FunctionBody -> Block .)


state 136

    (33) Parameters -> LPAREN ParameterListOpt . RPAREN

    RPAREN          shift and go to state 197


state 137

    (37) ParametersList -> IdentifierList . Type
    (41) ParameterDecl -> IdentifierList . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . Pointer BaseType
    (27) FunctionType -> . FUNC Signature
    (25) Pointer -> . POINTER

    LPAREN          shift and go to state 62
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    LBRACK          shift and go to state 67
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53
    POINTER         shift and go to state 59

    StructType                     shift and go to state 60
    Type                           shift and go to state 198
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 57
    Pointer                        shift and go to state 66
    PointerType                    shift and go to state 69
    FunctionType                   shift and go to state 70
    TypeLit                        shift and go to state 56

state 138

    (38) ParametersList -> ParameterDeclCommaRep .
    (39) ParameterDeclCommaRep -> ParameterDeclCommaRep . COMMA ParameterDecl

    RPAREN          reduce using rule 38 (ParametersList -> ParameterDeclCommaRep .)
    COMMA           shift and go to state 199


state 139

    (36) ParametersList -> Type .
    (42) ParameterDecl -> Type .

    RPAREN          reduce using rule 36 (ParametersList -> Type .)
    COMMA           reduce using rule 42 (ParameterDecl -> Type .)


state 140

    (34) ParameterListOpt -> ParametersList .

    RPAREN          reduce using rule 34 (ParameterListOpt -> ParametersList .)


state 141

    (40) ParameterDeclCommaRep -> ParameterDecl . COMMA ParameterDecl

    COMMA           shift and go to state 200


state 142

    (35) ParameterListOpt -> epsilon .

    RPAREN          reduce using rule 35 (ParameterListOpt -> epsilon .)


state 143

    (72) VarDecl -> VAR LPAREN VarSpecRep RPAREN .

    SEMICOL         reduce using rule 72 (VarDecl -> VAR LPAREN VarSpecRep RPAREN .)


state 144

    (73) VarSpecRep -> VarSpecRep VarSpec . SEMICOL

    SEMICOL         shift and go to state 201


state 145

    (76) VarSpec -> IdentifierList EQUAL ExpressionList .

    SEMICOL         reduce using rule 76 (VarSpec -> IdentifierList EQUAL ExpressionList .)


state 146

    (113) ExpressionList -> Expression . ExpressionRep
    (117) Expression -> Expression . OROR Expression
    (118) Expression -> Expression . AMPAMP Expression
    (119) Expression -> Expression . EQEQ Expression
    (120) Expression -> Expression . NOTEQ Expression
    (121) Expression -> Expression . LESS Expression
    (122) Expression -> Expression . GREAT Expression
    (123) Expression -> Expression . LEQ Expression
    (124) Expression -> Expression . GEQ Expression
    (125) Expression -> Expression . PLUS Expression
    (126) Expression -> Expression . MINUS Expression
    (127) Expression -> Expression . OR Expression
    (128) Expression -> Expression . CARET Expression
    (129) Expression -> Expression . TIMES Expression
    (130) Expression -> Expression . DIVIDE Expression
    (131) Expression -> Expression . MOD Expression
    (132) Expression -> Expression . AMPERS Expression
    (133) Expression -> Expression . LL Expression
    (134) Expression -> Expression . GG Expression
    (135) Expression -> Expression . AMPCAR Expression
    (114) ExpressionRep -> . ExpressionRep COMMA Expression
    (115) ExpressionRep -> . epsilon
    (224) epsilon -> .

    OROR            shift and go to state 168
    AMPAMP          shift and go to state 183
    EQEQ            shift and go to state 174
    NOTEQ           shift and go to state 180
    LESS            shift and go to state 173
    GREAT           shift and go to state 170
    LEQ             shift and go to state 186
    GEQ             shift and go to state 177
    PLUS            shift and go to state 181
    MINUS           shift and go to state 185
    OR              shift and go to state 178
    CARET           shift and go to state 169
    TIMES           shift and go to state 184
    DIVIDE          shift and go to state 171
    MOD             shift and go to state 182
    AMPERS          shift and go to state 176
    LL              shift and go to state 175
    GG              shift and go to state 179
    AMPCAR          shift and go to state 172
    COMMA           reduce using rule 224 (epsilon -> .)
    SEMICOL         reduce using rule 224 (epsilon -> .)
    RPAREN          reduce using rule 224 (epsilon -> .)
    LBRACE          reduce using rule 224 (epsilon -> .)

    epsilon                        shift and go to state 203
    ExpressionRep                  shift and go to state 202

state 147

    (77) ExpressionListOpt -> EQUAL . ExpressionList
    (113) ExpressionList -> . Expression ExpressionRep
    (116) Expression -> . UnaryExpr
    (117) Expression -> . Expression OROR Expression
    (118) Expression -> . Expression AMPAMP Expression
    (119) Expression -> . Expression EQEQ Expression
    (120) Expression -> . Expression NOTEQ Expression
    (121) Expression -> . Expression LESS Expression
    (122) Expression -> . Expression GREAT Expression
    (123) Expression -> . Expression LEQ Expression
    (124) Expression -> . Expression GEQ Expression
    (125) Expression -> . Expression PLUS Expression
    (126) Expression -> . Expression MINUS Expression
    (127) Expression -> . Expression OR Expression
    (128) Expression -> . Expression CARET Expression
    (129) Expression -> . Expression TIMES Expression
    (130) Expression -> . Expression DIVIDE Expression
    (131) Expression -> . Expression MOD Expression
    (132) Expression -> . Expression AMPERS Expression
    (133) Expression -> . Expression LL Expression
    (134) Expression -> . Expression GG Expression
    (135) Expression -> . Expression AMPCAR Expression
    (138) UnaryExpr -> . PrimaryExpr
    (139) UnaryExpr -> . UnaryOp UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . Conversion
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . PrimaryExpr Index
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr Arguments
    (140) UnaryOp -> . PLUS
    (141) UnaryOp -> . MINUS
    (142) UnaryOp -> . TIMES
    (143) UnaryOp -> . AMPERS
    (144) UnaryOp -> . NOT
    (85) Operand -> . Literal
    (86) Operand -> . OperandName
    (87) Operand -> . LPAREN Expression RPAREN
    (100) Conversion -> . Type LPAREN Expression RPAREN
    (88) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (89) BasicLit -> . IntLiteral
    (90) BasicLit -> . FloatLiteral
    (91) BasicLit -> . ImgLiteral
    (92) BasicLit -> . RuneLiteral
    (93) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (94) IntLiteral -> . INTEGER
    (95) FloatLiteral -> . FLOAT
    (96) ImgLiteral -> . IMAGINARY
    (97) RuneLiteral -> . RUNE
    (98) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . Pointer BaseType
    (27) FunctionType -> . FUNC Signature
    (25) Pointer -> . POINTER

    PLUS            shift and go to state 108
    MINUS           shift and go to state 102
    TIMES           shift and go to state 117
    AMPERS          shift and go to state 123
    NOT             shift and go to state 107
    LPAREN          shift and go to state 120
    IDENTIFIER      shift and go to state 111
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 109
    FLOAT           shift and go to state 122
    IMAGINARY       shift and go to state 110
    RUNE            shift and go to state 96
    STRING          shift and go to state 103
    LBRACK          shift and go to state 67
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53
    POINTER         shift and go to state 59

    UnaryOp                        shift and go to state 106
    PrimaryExpr                    shift and go to state 124
    Conversion                     shift and go to state 97
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 99
    FloatLiteral                   shift and go to state 100
    Type                           shift and go to state 101
    OperandName                    shift and go to state 104
    BasicLit                       shift and go to state 105
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 60
    IntLiteral                     shift and go to state 112
    UnaryExpr                      shift and go to state 115
    RuneLiteral                    shift and go to state 116
    Operand                        shift and go to state 118
    ExpressionList                 shift and go to state 204
    Expression                     shift and go to state 146
    PointerType                    shift and go to state 69
    Pointer                        shift and go to state 66
    StringLiteral                  shift and go to state 98
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 113
    FunctionType                   shift and go to state 70

state 148

    (78) ExpressionListOpt -> epsilon .

    SEMICOL         reduce using rule 78 (ExpressionListOpt -> epsilon .)


state 149

    (75) VarSpec -> IdentifierList Type ExpressionListOpt .

    SEMICOL         reduce using rule 75 (VarSpec -> IdentifierList Type ExpressionListOpt .)


state 150

    (70) TypeDef -> TTYPE IDENTIFIER Type .

    SEMICOL         reduce using rule 70 (TypeDef -> TTYPE IDENTIFIER Type .)


state 151

    (64) TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN .

    SEMICOL         reduce using rule 64 (TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN .)


state 152

    (65) TypeSpecRep -> TypeSpecRep TypeSpec . SEMICOL

    SEMICOL         shift and go to state 205


state 153

    (69) AliasDecl -> IDENTIFIER EQUAL Type .

    SEMICOL         reduce using rule 69 (AliasDecl -> IDENTIFIER EQUAL Type .)


state 154

    (217) ImportSpecRep -> ImportSpecRep ImportSpec SEMICOL .

    RPAREN          reduce using rule 217 (ImportSpecRep -> ImportSpecRep ImportSpec SEMICOL .)
    DOT             reduce using rule 217 (ImportSpecRep -> ImportSpecRep ImportSpec SEMICOL .)
    IDENTIFIER      reduce using rule 217 (ImportSpecRep -> ImportSpecRep ImportSpec SEMICOL .)
    STRING          reduce using rule 217 (ImportSpecRep -> ImportSpecRep ImportSpec SEMICOL .)


state 155

    (55) ConstSpecRep -> ConstSpecRep ConstSpec SEMICOL .

    RPAREN          reduce using rule 55 (ConstSpecRep -> ConstSpecRep ConstSpec SEMICOL .)
    IDENTIFIER      reduce using rule 55 (ConstSpecRep -> ConstSpecRep ConstSpec SEMICOL .)


state 156

    (4) Type -> LPAREN Type RPAREN .

    LPAREN          reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    EQUAL           reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    SEMICOL         reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    RPAREN          reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    LBRACE          reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    COMMA           reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    STRING          reduce using rule 4 (Type -> LPAREN Type RPAREN .)


state 157

    (58) TypeExprListOpt -> TypeOpt EQUAL ExpressionList .

    SEMICOL         reduce using rule 58 (TypeExprListOpt -> TypeOpt EQUAL ExpressionList .)


state 158

    (17) StructType -> STRUCT LBRACE FieldDeclRep . RBRACE
    (18) FieldDeclRep -> FieldDeclRep . FieldDecl SEMICOL
    (20) FieldDecl -> . IdentifierList Type TagOpt
    (60) IdentifierList -> . IDENTIFIER IdentifierRep

    RBRACE          shift and go to state 208
    IDENTIFIER      shift and go to state 34

    FieldDecl                      shift and go to state 206
    IdentifierList                 shift and go to state 207

state 159

    (19) FieldDeclRep -> epsilon .

    RBRACE          reduce using rule 19 (FieldDeclRep -> epsilon .)
    IDENTIFIER      reduce using rule 19 (FieldDeclRep -> epsilon .)


state 160

    (100) Conversion -> Type LPAREN . Expression RPAREN
    (116) Expression -> . UnaryExpr
    (117) Expression -> . Expression OROR Expression
    (118) Expression -> . Expression AMPAMP Expression
    (119) Expression -> . Expression EQEQ Expression
    (120) Expression -> . Expression NOTEQ Expression
    (121) Expression -> . Expression LESS Expression
    (122) Expression -> . Expression GREAT Expression
    (123) Expression -> . Expression LEQ Expression
    (124) Expression -> . Expression GEQ Expression
    (125) Expression -> . Expression PLUS Expression
    (126) Expression -> . Expression MINUS Expression
    (127) Expression -> . Expression OR Expression
    (128) Expression -> . Expression CARET Expression
    (129) Expression -> . Expression TIMES Expression
    (130) Expression -> . Expression DIVIDE Expression
    (131) Expression -> . Expression MOD Expression
    (132) Expression -> . Expression AMPERS Expression
    (133) Expression -> . Expression LL Expression
    (134) Expression -> . Expression GG Expression
    (135) Expression -> . Expression AMPCAR Expression
    (138) UnaryExpr -> . PrimaryExpr
    (139) UnaryExpr -> . UnaryOp UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . Conversion
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . PrimaryExpr Index
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr Arguments
    (140) UnaryOp -> . PLUS
    (141) UnaryOp -> . MINUS
    (142) UnaryOp -> . TIMES
    (143) UnaryOp -> . AMPERS
    (144) UnaryOp -> . NOT
    (85) Operand -> . Literal
    (86) Operand -> . OperandName
    (87) Operand -> . LPAREN Expression RPAREN
    (100) Conversion -> . Type LPAREN Expression RPAREN
    (88) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (89) BasicLit -> . IntLiteral
    (90) BasicLit -> . FloatLiteral
    (91) BasicLit -> . ImgLiteral
    (92) BasicLit -> . RuneLiteral
    (93) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (94) IntLiteral -> . INTEGER
    (95) FloatLiteral -> . FLOAT
    (96) ImgLiteral -> . IMAGINARY
    (97) RuneLiteral -> . RUNE
    (98) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . Pointer BaseType
    (27) FunctionType -> . FUNC Signature
    (25) Pointer -> . POINTER

    PLUS            shift and go to state 108
    MINUS           shift and go to state 102
    TIMES           shift and go to state 117
    AMPERS          shift and go to state 123
    NOT             shift and go to state 107
    LPAREN          shift and go to state 120
    IDENTIFIER      shift and go to state 111
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 109
    FLOAT           shift and go to state 122
    IMAGINARY       shift and go to state 110
    RUNE            shift and go to state 96
    STRING          shift and go to state 103
    LBRACK          shift and go to state 67
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53
    POINTER         shift and go to state 59

    Conversion                     shift and go to state 97
    UnaryOp                        shift and go to state 106
    PrimaryExpr                    shift and go to state 124
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 99
    FloatLiteral                   shift and go to state 100
    Type                           shift and go to state 101
    OperandName                    shift and go to state 104
    BasicLit                       shift and go to state 105
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 60
    IntLiteral                     shift and go to state 112
    UnaryExpr                      shift and go to state 115
    RuneLiteral                    shift and go to state 116
    Operand                        shift and go to state 118
    Expression                     shift and go to state 209
    PointerType                    shift and go to state 69
    Pointer                        shift and go to state 66
    StringLiteral                  shift and go to state 98
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 113
    FunctionType                   shift and go to state 70

state 161

    (139) UnaryExpr -> UnaryOp UnaryExpr .

    OROR            reduce using rule 139 (UnaryExpr -> UnaryOp UnaryExpr .)
    AMPAMP          reduce using rule 139 (UnaryExpr -> UnaryOp UnaryExpr .)
    EQEQ            reduce using rule 139 (UnaryExpr -> UnaryOp UnaryExpr .)
    NOTEQ           reduce using rule 139 (UnaryExpr -> UnaryOp UnaryExpr .)
    LESS            reduce using rule 139 (UnaryExpr -> UnaryOp UnaryExpr .)
    GREAT           reduce using rule 139 (UnaryExpr -> UnaryOp UnaryExpr .)
    LEQ             reduce using rule 139 (UnaryExpr -> UnaryOp UnaryExpr .)
    GEQ             reduce using rule 139 (UnaryExpr -> UnaryOp UnaryExpr .)
    PLUS            reduce using rule 139 (UnaryExpr -> UnaryOp UnaryExpr .)
    MINUS           reduce using rule 139 (UnaryExpr -> UnaryOp UnaryExpr .)
    OR              reduce using rule 139 (UnaryExpr -> UnaryOp UnaryExpr .)
    CARET           reduce using rule 139 (UnaryExpr -> UnaryOp UnaryExpr .)
    TIMES           reduce using rule 139 (UnaryExpr -> UnaryOp UnaryExpr .)
    DIVIDE          reduce using rule 139 (UnaryExpr -> UnaryOp UnaryExpr .)
    MOD             reduce using rule 139 (UnaryExpr -> UnaryOp UnaryExpr .)
    AMPERS          reduce using rule 139 (UnaryExpr -> UnaryOp UnaryExpr .)
    LL              reduce using rule 139 (UnaryExpr -> UnaryOp UnaryExpr .)
    GG              reduce using rule 139 (UnaryExpr -> UnaryOp UnaryExpr .)
    AMPCAR          reduce using rule 139 (UnaryExpr -> UnaryOp UnaryExpr .)
    RBRACK          reduce using rule 139 (UnaryExpr -> UnaryOp UnaryExpr .)
    COMMA           reduce using rule 139 (UnaryExpr -> UnaryOp UnaryExpr .)
    SEMICOL         reduce using rule 139 (UnaryExpr -> UnaryOp UnaryExpr .)
    RPAREN          reduce using rule 139 (UnaryExpr -> UnaryOp UnaryExpr .)
    COLON           reduce using rule 139 (UnaryExpr -> UnaryOp UnaryExpr .)
    PLUSEQ          reduce using rule 139 (UnaryExpr -> UnaryOp UnaryExpr .)
    MINUSEQ         reduce using rule 139 (UnaryExpr -> UnaryOp UnaryExpr .)
    TIMESEQ         reduce using rule 139 (UnaryExpr -> UnaryOp UnaryExpr .)
    DIVIDEEQ        reduce using rule 139 (UnaryExpr -> UnaryOp UnaryExpr .)
    MODEQ           reduce using rule 139 (UnaryExpr -> UnaryOp UnaryExpr .)
    AMPEQ           reduce using rule 139 (UnaryExpr -> UnaryOp UnaryExpr .)
    OREQ            reduce using rule 139 (UnaryExpr -> UnaryOp UnaryExpr .)
    CAREQ           reduce using rule 139 (UnaryExpr -> UnaryOp UnaryExpr .)
    LLEQ            reduce using rule 139 (UnaryExpr -> UnaryOp UnaryExpr .)
    GGEQ            reduce using rule 139 (UnaryExpr -> UnaryOp UnaryExpr .)
    EQUAL           reduce using rule 139 (UnaryExpr -> UnaryOp UnaryExpr .)
    LBRACE          reduce using rule 139 (UnaryExpr -> UnaryOp UnaryExpr .)


state 162

    (16) ElementType -> Type .

    EQUAL           reduce using rule 16 (ElementType -> Type .)
    SEMICOL         reduce using rule 16 (ElementType -> Type .)
    RPAREN          reduce using rule 16 (ElementType -> Type .)
    LPAREN          reduce using rule 16 (ElementType -> Type .)
    LBRACE          reduce using rule 16 (ElementType -> Type .)
    COMMA           reduce using rule 16 (ElementType -> Type .)
    STRING          reduce using rule 16 (ElementType -> Type .)


state 163

    (14) ArrayType -> LBRACK RBRACK ElementType .

    LPAREN          reduce using rule 14 (ArrayType -> LBRACK RBRACK ElementType .)
    EQUAL           reduce using rule 14 (ArrayType -> LBRACK RBRACK ElementType .)
    SEMICOL         reduce using rule 14 (ArrayType -> LBRACK RBRACK ElementType .)
    RPAREN          reduce using rule 14 (ArrayType -> LBRACK RBRACK ElementType .)
    LBRACE          reduce using rule 14 (ArrayType -> LBRACK RBRACK ElementType .)
    COMMA           reduce using rule 14 (ArrayType -> LBRACK RBRACK ElementType .)
    STRING          reduce using rule 14 (ArrayType -> LBRACK RBRACK ElementType .)


state 164

    (13) ArrayType -> LBRACK ArrayLength RBRACK . ElementType
    (16) ElementType -> . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . Pointer BaseType
    (27) FunctionType -> . FUNC Signature
    (25) Pointer -> . POINTER

    LPAREN          shift and go to state 62
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    LBRACK          shift and go to state 67
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53
    POINTER         shift and go to state 59

    StructType                     shift and go to state 60
    TypeLit                        shift and go to state 56
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 57
    Pointer                        shift and go to state 66
    PointerType                    shift and go to state 69
    FunctionType                   shift and go to state 70
    ElementType                    shift and go to state 210
    Type                           shift and go to state 162

state 165

    (4) Type -> LPAREN Type . RPAREN
    (100) Conversion -> Type . LPAREN Expression RPAREN

    RPAREN          shift and go to state 156
    LPAREN          shift and go to state 160


state 166

    (4) Type -> LPAREN . Type RPAREN
    (87) Operand -> LPAREN . Expression RPAREN
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (116) Expression -> . UnaryExpr
    (117) Expression -> . Expression OROR Expression
    (118) Expression -> . Expression AMPAMP Expression
    (119) Expression -> . Expression EQEQ Expression
    (120) Expression -> . Expression NOTEQ Expression
    (121) Expression -> . Expression LESS Expression
    (122) Expression -> . Expression GREAT Expression
    (123) Expression -> . Expression LEQ Expression
    (124) Expression -> . Expression GEQ Expression
    (125) Expression -> . Expression PLUS Expression
    (126) Expression -> . Expression MINUS Expression
    (127) Expression -> . Expression OR Expression
    (128) Expression -> . Expression CARET Expression
    (129) Expression -> . Expression TIMES Expression
    (130) Expression -> . Expression DIVIDE Expression
    (131) Expression -> . Expression MOD Expression
    (132) Expression -> . Expression AMPERS Expression
    (133) Expression -> . Expression LL Expression
    (134) Expression -> . Expression GG Expression
    (135) Expression -> . Expression AMPCAR Expression
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (138) UnaryExpr -> . PrimaryExpr
    (139) UnaryExpr -> . UnaryOp UnaryExpr
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . Pointer BaseType
    (27) FunctionType -> . FUNC Signature
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . Conversion
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . PrimaryExpr Index
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr Arguments
    (140) UnaryOp -> . PLUS
    (141) UnaryOp -> . MINUS
    (142) UnaryOp -> . TIMES
    (143) UnaryOp -> . AMPERS
    (144) UnaryOp -> . NOT
    (25) Pointer -> . POINTER
    (85) Operand -> . Literal
    (86) Operand -> . OperandName
    (87) Operand -> . LPAREN Expression RPAREN
    (100) Conversion -> . Type LPAREN Expression RPAREN
    (88) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (89) BasicLit -> . IntLiteral
    (90) BasicLit -> . FloatLiteral
    (91) BasicLit -> . ImgLiteral
    (92) BasicLit -> . RuneLiteral
    (93) BasicLit -> . StringLiteral
    (94) IntLiteral -> . INTEGER
    (95) FloatLiteral -> . FLOAT
    (96) ImgLiteral -> . IMAGINARY
    (97) RuneLiteral -> . RUNE
    (98) StringLiteral -> . STRING

    LPAREN          shift and go to state 166
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    LBRACK          shift and go to state 67
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53
    PLUS            shift and go to state 108
    MINUS           shift and go to state 102
    TIMES           shift and go to state 117
    AMPERS          shift and go to state 123
    NOT             shift and go to state 107
    POINTER         shift and go to state 59
    IDENTIFIER      shift and go to state 111
    INTEGER         shift and go to state 109
    FLOAT           shift and go to state 122
    IMAGINARY       shift and go to state 110
    RUNE            shift and go to state 96
    STRING          shift and go to state 103

    Conversion                     shift and go to state 97
    UnaryOp                        shift and go to state 106
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 99
    FloatLiteral                   shift and go to state 100
    Type                           shift and go to state 165
    OperandName                    shift and go to state 104
    TypeLit                        shift and go to state 56
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 60
    IntLiteral                     shift and go to state 112
    ImgLiteral                     shift and go to state 113
    UnaryExpr                      shift and go to state 115
    RuneLiteral                    shift and go to state 116
    Operand                        shift and go to state 118
    Expression                     shift and go to state 167
    PointerType                    shift and go to state 69
    FunctionType                   shift and go to state 70
    StringLiteral                  shift and go to state 98
    BasicLit                       shift and go to state 105
    PrimaryExpr                    shift and go to state 124
    Pointer                        shift and go to state 66

state 167

    (87) Operand -> LPAREN Expression . RPAREN
    (117) Expression -> Expression . OROR Expression
    (118) Expression -> Expression . AMPAMP Expression
    (119) Expression -> Expression . EQEQ Expression
    (120) Expression -> Expression . NOTEQ Expression
    (121) Expression -> Expression . LESS Expression
    (122) Expression -> Expression . GREAT Expression
    (123) Expression -> Expression . LEQ Expression
    (124) Expression -> Expression . GEQ Expression
    (125) Expression -> Expression . PLUS Expression
    (126) Expression -> Expression . MINUS Expression
    (127) Expression -> Expression . OR Expression
    (128) Expression -> Expression . CARET Expression
    (129) Expression -> Expression . TIMES Expression
    (130) Expression -> Expression . DIVIDE Expression
    (131) Expression -> Expression . MOD Expression
    (132) Expression -> Expression . AMPERS Expression
    (133) Expression -> Expression . LL Expression
    (134) Expression -> Expression . GG Expression
    (135) Expression -> Expression . AMPCAR Expression

    RPAREN          shift and go to state 211
    OROR            shift and go to state 168
    AMPAMP          shift and go to state 183
    EQEQ            shift and go to state 174
    NOTEQ           shift and go to state 180
    LESS            shift and go to state 173
    GREAT           shift and go to state 170
    LEQ             shift and go to state 186
    GEQ             shift and go to state 177
    PLUS            shift and go to state 181
    MINUS           shift and go to state 185
    OR              shift and go to state 178
    CARET           shift and go to state 169
    TIMES           shift and go to state 184
    DIVIDE          shift and go to state 171
    MOD             shift and go to state 182
    AMPERS          shift and go to state 176
    LL              shift and go to state 175
    GG              shift and go to state 179
    AMPCAR          shift and go to state 172


state 168

    (117) Expression -> Expression OROR . Expression
    (116) Expression -> . UnaryExpr
    (117) Expression -> . Expression OROR Expression
    (118) Expression -> . Expression AMPAMP Expression
    (119) Expression -> . Expression EQEQ Expression
    (120) Expression -> . Expression NOTEQ Expression
    (121) Expression -> . Expression LESS Expression
    (122) Expression -> . Expression GREAT Expression
    (123) Expression -> . Expression LEQ Expression
    (124) Expression -> . Expression GEQ Expression
    (125) Expression -> . Expression PLUS Expression
    (126) Expression -> . Expression MINUS Expression
    (127) Expression -> . Expression OR Expression
    (128) Expression -> . Expression CARET Expression
    (129) Expression -> . Expression TIMES Expression
    (130) Expression -> . Expression DIVIDE Expression
    (131) Expression -> . Expression MOD Expression
    (132) Expression -> . Expression AMPERS Expression
    (133) Expression -> . Expression LL Expression
    (134) Expression -> . Expression GG Expression
    (135) Expression -> . Expression AMPCAR Expression
    (138) UnaryExpr -> . PrimaryExpr
    (139) UnaryExpr -> . UnaryOp UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . Conversion
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . PrimaryExpr Index
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr Arguments
    (140) UnaryOp -> . PLUS
    (141) UnaryOp -> . MINUS
    (142) UnaryOp -> . TIMES
    (143) UnaryOp -> . AMPERS
    (144) UnaryOp -> . NOT
    (85) Operand -> . Literal
    (86) Operand -> . OperandName
    (87) Operand -> . LPAREN Expression RPAREN
    (100) Conversion -> . Type LPAREN Expression RPAREN
    (88) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (89) BasicLit -> . IntLiteral
    (90) BasicLit -> . FloatLiteral
    (91) BasicLit -> . ImgLiteral
    (92) BasicLit -> . RuneLiteral
    (93) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (94) IntLiteral -> . INTEGER
    (95) FloatLiteral -> . FLOAT
    (96) ImgLiteral -> . IMAGINARY
    (97) RuneLiteral -> . RUNE
    (98) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . Pointer BaseType
    (27) FunctionType -> . FUNC Signature
    (25) Pointer -> . POINTER

    PLUS            shift and go to state 108
    MINUS           shift and go to state 102
    TIMES           shift and go to state 117
    AMPERS          shift and go to state 123
    NOT             shift and go to state 107
    LPAREN          shift and go to state 120
    IDENTIFIER      shift and go to state 111
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 109
    FLOAT           shift and go to state 122
    IMAGINARY       shift and go to state 110
    RUNE            shift and go to state 96
    STRING          shift and go to state 103
    LBRACK          shift and go to state 67
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53
    POINTER         shift and go to state 59

    Conversion                     shift and go to state 97
    UnaryOp                        shift and go to state 106
    PrimaryExpr                    shift and go to state 124
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 99
    FloatLiteral                   shift and go to state 100
    Type                           shift and go to state 101
    OperandName                    shift and go to state 104
    BasicLit                       shift and go to state 105
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 60
    IntLiteral                     shift and go to state 112
    UnaryExpr                      shift and go to state 115
    RuneLiteral                    shift and go to state 116
    Operand                        shift and go to state 118
    Expression                     shift and go to state 212
    PointerType                    shift and go to state 69
    Pointer                        shift and go to state 66
    StringLiteral                  shift and go to state 98
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 113
    FunctionType                   shift and go to state 70

state 169

    (128) Expression -> Expression CARET . Expression
    (116) Expression -> . UnaryExpr
    (117) Expression -> . Expression OROR Expression
    (118) Expression -> . Expression AMPAMP Expression
    (119) Expression -> . Expression EQEQ Expression
    (120) Expression -> . Expression NOTEQ Expression
    (121) Expression -> . Expression LESS Expression
    (122) Expression -> . Expression GREAT Expression
    (123) Expression -> . Expression LEQ Expression
    (124) Expression -> . Expression GEQ Expression
    (125) Expression -> . Expression PLUS Expression
    (126) Expression -> . Expression MINUS Expression
    (127) Expression -> . Expression OR Expression
    (128) Expression -> . Expression CARET Expression
    (129) Expression -> . Expression TIMES Expression
    (130) Expression -> . Expression DIVIDE Expression
    (131) Expression -> . Expression MOD Expression
    (132) Expression -> . Expression AMPERS Expression
    (133) Expression -> . Expression LL Expression
    (134) Expression -> . Expression GG Expression
    (135) Expression -> . Expression AMPCAR Expression
    (138) UnaryExpr -> . PrimaryExpr
    (139) UnaryExpr -> . UnaryOp UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . Conversion
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . PrimaryExpr Index
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr Arguments
    (140) UnaryOp -> . PLUS
    (141) UnaryOp -> . MINUS
    (142) UnaryOp -> . TIMES
    (143) UnaryOp -> . AMPERS
    (144) UnaryOp -> . NOT
    (85) Operand -> . Literal
    (86) Operand -> . OperandName
    (87) Operand -> . LPAREN Expression RPAREN
    (100) Conversion -> . Type LPAREN Expression RPAREN
    (88) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (89) BasicLit -> . IntLiteral
    (90) BasicLit -> . FloatLiteral
    (91) BasicLit -> . ImgLiteral
    (92) BasicLit -> . RuneLiteral
    (93) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (94) IntLiteral -> . INTEGER
    (95) FloatLiteral -> . FLOAT
    (96) ImgLiteral -> . IMAGINARY
    (97) RuneLiteral -> . RUNE
    (98) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . Pointer BaseType
    (27) FunctionType -> . FUNC Signature
    (25) Pointer -> . POINTER

    PLUS            shift and go to state 108
    MINUS           shift and go to state 102
    TIMES           shift and go to state 117
    AMPERS          shift and go to state 123
    NOT             shift and go to state 107
    LPAREN          shift and go to state 120
    IDENTIFIER      shift and go to state 111
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 109
    FLOAT           shift and go to state 122
    IMAGINARY       shift and go to state 110
    RUNE            shift and go to state 96
    STRING          shift and go to state 103
    LBRACK          shift and go to state 67
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53
    POINTER         shift and go to state 59

    Conversion                     shift and go to state 97
    UnaryOp                        shift and go to state 106
    PrimaryExpr                    shift and go to state 124
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 99
    FloatLiteral                   shift and go to state 100
    Type                           shift and go to state 101
    OperandName                    shift and go to state 104
    BasicLit                       shift and go to state 105
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 60
    IntLiteral                     shift and go to state 112
    UnaryExpr                      shift and go to state 115
    RuneLiteral                    shift and go to state 116
    Operand                        shift and go to state 118
    Expression                     shift and go to state 213
    PointerType                    shift and go to state 69
    Pointer                        shift and go to state 66
    StringLiteral                  shift and go to state 98
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 113
    FunctionType                   shift and go to state 70

state 170

    (122) Expression -> Expression GREAT . Expression
    (116) Expression -> . UnaryExpr
    (117) Expression -> . Expression OROR Expression
    (118) Expression -> . Expression AMPAMP Expression
    (119) Expression -> . Expression EQEQ Expression
    (120) Expression -> . Expression NOTEQ Expression
    (121) Expression -> . Expression LESS Expression
    (122) Expression -> . Expression GREAT Expression
    (123) Expression -> . Expression LEQ Expression
    (124) Expression -> . Expression GEQ Expression
    (125) Expression -> . Expression PLUS Expression
    (126) Expression -> . Expression MINUS Expression
    (127) Expression -> . Expression OR Expression
    (128) Expression -> . Expression CARET Expression
    (129) Expression -> . Expression TIMES Expression
    (130) Expression -> . Expression DIVIDE Expression
    (131) Expression -> . Expression MOD Expression
    (132) Expression -> . Expression AMPERS Expression
    (133) Expression -> . Expression LL Expression
    (134) Expression -> . Expression GG Expression
    (135) Expression -> . Expression AMPCAR Expression
    (138) UnaryExpr -> . PrimaryExpr
    (139) UnaryExpr -> . UnaryOp UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . Conversion
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . PrimaryExpr Index
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr Arguments
    (140) UnaryOp -> . PLUS
    (141) UnaryOp -> . MINUS
    (142) UnaryOp -> . TIMES
    (143) UnaryOp -> . AMPERS
    (144) UnaryOp -> . NOT
    (85) Operand -> . Literal
    (86) Operand -> . OperandName
    (87) Operand -> . LPAREN Expression RPAREN
    (100) Conversion -> . Type LPAREN Expression RPAREN
    (88) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (89) BasicLit -> . IntLiteral
    (90) BasicLit -> . FloatLiteral
    (91) BasicLit -> . ImgLiteral
    (92) BasicLit -> . RuneLiteral
    (93) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (94) IntLiteral -> . INTEGER
    (95) FloatLiteral -> . FLOAT
    (96) ImgLiteral -> . IMAGINARY
    (97) RuneLiteral -> . RUNE
    (98) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . Pointer BaseType
    (27) FunctionType -> . FUNC Signature
    (25) Pointer -> . POINTER

    PLUS            shift and go to state 108
    MINUS           shift and go to state 102
    TIMES           shift and go to state 117
    AMPERS          shift and go to state 123
    NOT             shift and go to state 107
    LPAREN          shift and go to state 120
    IDENTIFIER      shift and go to state 111
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 109
    FLOAT           shift and go to state 122
    IMAGINARY       shift and go to state 110
    RUNE            shift and go to state 96
    STRING          shift and go to state 103
    LBRACK          shift and go to state 67
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53
    POINTER         shift and go to state 59

    Conversion                     shift and go to state 97
    UnaryOp                        shift and go to state 106
    PrimaryExpr                    shift and go to state 124
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 99
    FloatLiteral                   shift and go to state 100
    Type                           shift and go to state 101
    OperandName                    shift and go to state 104
    BasicLit                       shift and go to state 105
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 60
    IntLiteral                     shift and go to state 112
    UnaryExpr                      shift and go to state 115
    RuneLiteral                    shift and go to state 116
    Operand                        shift and go to state 118
    Expression                     shift and go to state 214
    PointerType                    shift and go to state 69
    Pointer                        shift and go to state 66
    StringLiteral                  shift and go to state 98
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 113
    FunctionType                   shift and go to state 70

state 171

    (130) Expression -> Expression DIVIDE . Expression
    (116) Expression -> . UnaryExpr
    (117) Expression -> . Expression OROR Expression
    (118) Expression -> . Expression AMPAMP Expression
    (119) Expression -> . Expression EQEQ Expression
    (120) Expression -> . Expression NOTEQ Expression
    (121) Expression -> . Expression LESS Expression
    (122) Expression -> . Expression GREAT Expression
    (123) Expression -> . Expression LEQ Expression
    (124) Expression -> . Expression GEQ Expression
    (125) Expression -> . Expression PLUS Expression
    (126) Expression -> . Expression MINUS Expression
    (127) Expression -> . Expression OR Expression
    (128) Expression -> . Expression CARET Expression
    (129) Expression -> . Expression TIMES Expression
    (130) Expression -> . Expression DIVIDE Expression
    (131) Expression -> . Expression MOD Expression
    (132) Expression -> . Expression AMPERS Expression
    (133) Expression -> . Expression LL Expression
    (134) Expression -> . Expression GG Expression
    (135) Expression -> . Expression AMPCAR Expression
    (138) UnaryExpr -> . PrimaryExpr
    (139) UnaryExpr -> . UnaryOp UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . Conversion
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . PrimaryExpr Index
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr Arguments
    (140) UnaryOp -> . PLUS
    (141) UnaryOp -> . MINUS
    (142) UnaryOp -> . TIMES
    (143) UnaryOp -> . AMPERS
    (144) UnaryOp -> . NOT
    (85) Operand -> . Literal
    (86) Operand -> . OperandName
    (87) Operand -> . LPAREN Expression RPAREN
    (100) Conversion -> . Type LPAREN Expression RPAREN
    (88) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (89) BasicLit -> . IntLiteral
    (90) BasicLit -> . FloatLiteral
    (91) BasicLit -> . ImgLiteral
    (92) BasicLit -> . RuneLiteral
    (93) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (94) IntLiteral -> . INTEGER
    (95) FloatLiteral -> . FLOAT
    (96) ImgLiteral -> . IMAGINARY
    (97) RuneLiteral -> . RUNE
    (98) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . Pointer BaseType
    (27) FunctionType -> . FUNC Signature
    (25) Pointer -> . POINTER

    PLUS            shift and go to state 108
    MINUS           shift and go to state 102
    TIMES           shift and go to state 117
    AMPERS          shift and go to state 123
    NOT             shift and go to state 107
    LPAREN          shift and go to state 120
    IDENTIFIER      shift and go to state 111
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 109
    FLOAT           shift and go to state 122
    IMAGINARY       shift and go to state 110
    RUNE            shift and go to state 96
    STRING          shift and go to state 103
    LBRACK          shift and go to state 67
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53
    POINTER         shift and go to state 59

    Conversion                     shift and go to state 97
    UnaryOp                        shift and go to state 106
    PrimaryExpr                    shift and go to state 124
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 99
    FloatLiteral                   shift and go to state 100
    Type                           shift and go to state 101
    OperandName                    shift and go to state 104
    BasicLit                       shift and go to state 105
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 60
    IntLiteral                     shift and go to state 112
    UnaryExpr                      shift and go to state 115
    RuneLiteral                    shift and go to state 116
    Operand                        shift and go to state 118
    Expression                     shift and go to state 215
    PointerType                    shift and go to state 69
    Pointer                        shift and go to state 66
    StringLiteral                  shift and go to state 98
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 113
    FunctionType                   shift and go to state 70

state 172

    (135) Expression -> Expression AMPCAR . Expression
    (116) Expression -> . UnaryExpr
    (117) Expression -> . Expression OROR Expression
    (118) Expression -> . Expression AMPAMP Expression
    (119) Expression -> . Expression EQEQ Expression
    (120) Expression -> . Expression NOTEQ Expression
    (121) Expression -> . Expression LESS Expression
    (122) Expression -> . Expression GREAT Expression
    (123) Expression -> . Expression LEQ Expression
    (124) Expression -> . Expression GEQ Expression
    (125) Expression -> . Expression PLUS Expression
    (126) Expression -> . Expression MINUS Expression
    (127) Expression -> . Expression OR Expression
    (128) Expression -> . Expression CARET Expression
    (129) Expression -> . Expression TIMES Expression
    (130) Expression -> . Expression DIVIDE Expression
    (131) Expression -> . Expression MOD Expression
    (132) Expression -> . Expression AMPERS Expression
    (133) Expression -> . Expression LL Expression
    (134) Expression -> . Expression GG Expression
    (135) Expression -> . Expression AMPCAR Expression
    (138) UnaryExpr -> . PrimaryExpr
    (139) UnaryExpr -> . UnaryOp UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . Conversion
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . PrimaryExpr Index
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr Arguments
    (140) UnaryOp -> . PLUS
    (141) UnaryOp -> . MINUS
    (142) UnaryOp -> . TIMES
    (143) UnaryOp -> . AMPERS
    (144) UnaryOp -> . NOT
    (85) Operand -> . Literal
    (86) Operand -> . OperandName
    (87) Operand -> . LPAREN Expression RPAREN
    (100) Conversion -> . Type LPAREN Expression RPAREN
    (88) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (89) BasicLit -> . IntLiteral
    (90) BasicLit -> . FloatLiteral
    (91) BasicLit -> . ImgLiteral
    (92) BasicLit -> . RuneLiteral
    (93) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (94) IntLiteral -> . INTEGER
    (95) FloatLiteral -> . FLOAT
    (96) ImgLiteral -> . IMAGINARY
    (97) RuneLiteral -> . RUNE
    (98) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . Pointer BaseType
    (27) FunctionType -> . FUNC Signature
    (25) Pointer -> . POINTER

    PLUS            shift and go to state 108
    MINUS           shift and go to state 102
    TIMES           shift and go to state 117
    AMPERS          shift and go to state 123
    NOT             shift and go to state 107
    LPAREN          shift and go to state 120
    IDENTIFIER      shift and go to state 111
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 109
    FLOAT           shift and go to state 122
    IMAGINARY       shift and go to state 110
    RUNE            shift and go to state 96
    STRING          shift and go to state 103
    LBRACK          shift and go to state 67
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53
    POINTER         shift and go to state 59

    Conversion                     shift and go to state 97
    UnaryOp                        shift and go to state 106
    PrimaryExpr                    shift and go to state 124
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 99
    FloatLiteral                   shift and go to state 100
    Type                           shift and go to state 101
    OperandName                    shift and go to state 104
    BasicLit                       shift and go to state 105
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 60
    IntLiteral                     shift and go to state 112
    UnaryExpr                      shift and go to state 115
    RuneLiteral                    shift and go to state 116
    Operand                        shift and go to state 118
    Expression                     shift and go to state 216
    PointerType                    shift and go to state 69
    Pointer                        shift and go to state 66
    StringLiteral                  shift and go to state 98
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 113
    FunctionType                   shift and go to state 70

state 173

    (121) Expression -> Expression LESS . Expression
    (116) Expression -> . UnaryExpr
    (117) Expression -> . Expression OROR Expression
    (118) Expression -> . Expression AMPAMP Expression
    (119) Expression -> . Expression EQEQ Expression
    (120) Expression -> . Expression NOTEQ Expression
    (121) Expression -> . Expression LESS Expression
    (122) Expression -> . Expression GREAT Expression
    (123) Expression -> . Expression LEQ Expression
    (124) Expression -> . Expression GEQ Expression
    (125) Expression -> . Expression PLUS Expression
    (126) Expression -> . Expression MINUS Expression
    (127) Expression -> . Expression OR Expression
    (128) Expression -> . Expression CARET Expression
    (129) Expression -> . Expression TIMES Expression
    (130) Expression -> . Expression DIVIDE Expression
    (131) Expression -> . Expression MOD Expression
    (132) Expression -> . Expression AMPERS Expression
    (133) Expression -> . Expression LL Expression
    (134) Expression -> . Expression GG Expression
    (135) Expression -> . Expression AMPCAR Expression
    (138) UnaryExpr -> . PrimaryExpr
    (139) UnaryExpr -> . UnaryOp UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . Conversion
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . PrimaryExpr Index
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr Arguments
    (140) UnaryOp -> . PLUS
    (141) UnaryOp -> . MINUS
    (142) UnaryOp -> . TIMES
    (143) UnaryOp -> . AMPERS
    (144) UnaryOp -> . NOT
    (85) Operand -> . Literal
    (86) Operand -> . OperandName
    (87) Operand -> . LPAREN Expression RPAREN
    (100) Conversion -> . Type LPAREN Expression RPAREN
    (88) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (89) BasicLit -> . IntLiteral
    (90) BasicLit -> . FloatLiteral
    (91) BasicLit -> . ImgLiteral
    (92) BasicLit -> . RuneLiteral
    (93) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (94) IntLiteral -> . INTEGER
    (95) FloatLiteral -> . FLOAT
    (96) ImgLiteral -> . IMAGINARY
    (97) RuneLiteral -> . RUNE
    (98) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . Pointer BaseType
    (27) FunctionType -> . FUNC Signature
    (25) Pointer -> . POINTER

    PLUS            shift and go to state 108
    MINUS           shift and go to state 102
    TIMES           shift and go to state 117
    AMPERS          shift and go to state 123
    NOT             shift and go to state 107
    LPAREN          shift and go to state 120
    IDENTIFIER      shift and go to state 111
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 109
    FLOAT           shift and go to state 122
    IMAGINARY       shift and go to state 110
    RUNE            shift and go to state 96
    STRING          shift and go to state 103
    LBRACK          shift and go to state 67
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53
    POINTER         shift and go to state 59

    Conversion                     shift and go to state 97
    UnaryOp                        shift and go to state 106
    PrimaryExpr                    shift and go to state 124
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 99
    FloatLiteral                   shift and go to state 100
    Type                           shift and go to state 101
    OperandName                    shift and go to state 104
    BasicLit                       shift and go to state 105
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 60
    IntLiteral                     shift and go to state 112
    UnaryExpr                      shift and go to state 115
    RuneLiteral                    shift and go to state 116
    Operand                        shift and go to state 118
    Expression                     shift and go to state 217
    PointerType                    shift and go to state 69
    Pointer                        shift and go to state 66
    StringLiteral                  shift and go to state 98
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 113
    FunctionType                   shift and go to state 70

state 174

    (119) Expression -> Expression EQEQ . Expression
    (116) Expression -> . UnaryExpr
    (117) Expression -> . Expression OROR Expression
    (118) Expression -> . Expression AMPAMP Expression
    (119) Expression -> . Expression EQEQ Expression
    (120) Expression -> . Expression NOTEQ Expression
    (121) Expression -> . Expression LESS Expression
    (122) Expression -> . Expression GREAT Expression
    (123) Expression -> . Expression LEQ Expression
    (124) Expression -> . Expression GEQ Expression
    (125) Expression -> . Expression PLUS Expression
    (126) Expression -> . Expression MINUS Expression
    (127) Expression -> . Expression OR Expression
    (128) Expression -> . Expression CARET Expression
    (129) Expression -> . Expression TIMES Expression
    (130) Expression -> . Expression DIVIDE Expression
    (131) Expression -> . Expression MOD Expression
    (132) Expression -> . Expression AMPERS Expression
    (133) Expression -> . Expression LL Expression
    (134) Expression -> . Expression GG Expression
    (135) Expression -> . Expression AMPCAR Expression
    (138) UnaryExpr -> . PrimaryExpr
    (139) UnaryExpr -> . UnaryOp UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . Conversion
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . PrimaryExpr Index
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr Arguments
    (140) UnaryOp -> . PLUS
    (141) UnaryOp -> . MINUS
    (142) UnaryOp -> . TIMES
    (143) UnaryOp -> . AMPERS
    (144) UnaryOp -> . NOT
    (85) Operand -> . Literal
    (86) Operand -> . OperandName
    (87) Operand -> . LPAREN Expression RPAREN
    (100) Conversion -> . Type LPAREN Expression RPAREN
    (88) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (89) BasicLit -> . IntLiteral
    (90) BasicLit -> . FloatLiteral
    (91) BasicLit -> . ImgLiteral
    (92) BasicLit -> . RuneLiteral
    (93) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (94) IntLiteral -> . INTEGER
    (95) FloatLiteral -> . FLOAT
    (96) ImgLiteral -> . IMAGINARY
    (97) RuneLiteral -> . RUNE
    (98) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . Pointer BaseType
    (27) FunctionType -> . FUNC Signature
    (25) Pointer -> . POINTER

    PLUS            shift and go to state 108
    MINUS           shift and go to state 102
    TIMES           shift and go to state 117
    AMPERS          shift and go to state 123
    NOT             shift and go to state 107
    LPAREN          shift and go to state 120
    IDENTIFIER      shift and go to state 111
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 109
    FLOAT           shift and go to state 122
    IMAGINARY       shift and go to state 110
    RUNE            shift and go to state 96
    STRING          shift and go to state 103
    LBRACK          shift and go to state 67
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53
    POINTER         shift and go to state 59

    Conversion                     shift and go to state 97
    UnaryOp                        shift and go to state 106
    PrimaryExpr                    shift and go to state 124
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 99
    FloatLiteral                   shift and go to state 100
    Type                           shift and go to state 101
    OperandName                    shift and go to state 104
    BasicLit                       shift and go to state 105
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 60
    IntLiteral                     shift and go to state 112
    UnaryExpr                      shift and go to state 115
    RuneLiteral                    shift and go to state 116
    Operand                        shift and go to state 118
    Expression                     shift and go to state 218
    PointerType                    shift and go to state 69
    Pointer                        shift and go to state 66
    StringLiteral                  shift and go to state 98
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 113
    FunctionType                   shift and go to state 70

state 175

    (133) Expression -> Expression LL . Expression
    (116) Expression -> . UnaryExpr
    (117) Expression -> . Expression OROR Expression
    (118) Expression -> . Expression AMPAMP Expression
    (119) Expression -> . Expression EQEQ Expression
    (120) Expression -> . Expression NOTEQ Expression
    (121) Expression -> . Expression LESS Expression
    (122) Expression -> . Expression GREAT Expression
    (123) Expression -> . Expression LEQ Expression
    (124) Expression -> . Expression GEQ Expression
    (125) Expression -> . Expression PLUS Expression
    (126) Expression -> . Expression MINUS Expression
    (127) Expression -> . Expression OR Expression
    (128) Expression -> . Expression CARET Expression
    (129) Expression -> . Expression TIMES Expression
    (130) Expression -> . Expression DIVIDE Expression
    (131) Expression -> . Expression MOD Expression
    (132) Expression -> . Expression AMPERS Expression
    (133) Expression -> . Expression LL Expression
    (134) Expression -> . Expression GG Expression
    (135) Expression -> . Expression AMPCAR Expression
    (138) UnaryExpr -> . PrimaryExpr
    (139) UnaryExpr -> . UnaryOp UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . Conversion
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . PrimaryExpr Index
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr Arguments
    (140) UnaryOp -> . PLUS
    (141) UnaryOp -> . MINUS
    (142) UnaryOp -> . TIMES
    (143) UnaryOp -> . AMPERS
    (144) UnaryOp -> . NOT
    (85) Operand -> . Literal
    (86) Operand -> . OperandName
    (87) Operand -> . LPAREN Expression RPAREN
    (100) Conversion -> . Type LPAREN Expression RPAREN
    (88) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (89) BasicLit -> . IntLiteral
    (90) BasicLit -> . FloatLiteral
    (91) BasicLit -> . ImgLiteral
    (92) BasicLit -> . RuneLiteral
    (93) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (94) IntLiteral -> . INTEGER
    (95) FloatLiteral -> . FLOAT
    (96) ImgLiteral -> . IMAGINARY
    (97) RuneLiteral -> . RUNE
    (98) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . Pointer BaseType
    (27) FunctionType -> . FUNC Signature
    (25) Pointer -> . POINTER

    PLUS            shift and go to state 108
    MINUS           shift and go to state 102
    TIMES           shift and go to state 117
    AMPERS          shift and go to state 123
    NOT             shift and go to state 107
    LPAREN          shift and go to state 120
    IDENTIFIER      shift and go to state 111
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 109
    FLOAT           shift and go to state 122
    IMAGINARY       shift and go to state 110
    RUNE            shift and go to state 96
    STRING          shift and go to state 103
    LBRACK          shift and go to state 67
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53
    POINTER         shift and go to state 59

    Conversion                     shift and go to state 97
    UnaryOp                        shift and go to state 106
    PrimaryExpr                    shift and go to state 124
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 99
    FloatLiteral                   shift and go to state 100
    Type                           shift and go to state 101
    OperandName                    shift and go to state 104
    BasicLit                       shift and go to state 105
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 60
    IntLiteral                     shift and go to state 112
    UnaryExpr                      shift and go to state 115
    RuneLiteral                    shift and go to state 116
    Operand                        shift and go to state 118
    Expression                     shift and go to state 219
    PointerType                    shift and go to state 69
    Pointer                        shift and go to state 66
    StringLiteral                  shift and go to state 98
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 113
    FunctionType                   shift and go to state 70

state 176

    (132) Expression -> Expression AMPERS . Expression
    (116) Expression -> . UnaryExpr
    (117) Expression -> . Expression OROR Expression
    (118) Expression -> . Expression AMPAMP Expression
    (119) Expression -> . Expression EQEQ Expression
    (120) Expression -> . Expression NOTEQ Expression
    (121) Expression -> . Expression LESS Expression
    (122) Expression -> . Expression GREAT Expression
    (123) Expression -> . Expression LEQ Expression
    (124) Expression -> . Expression GEQ Expression
    (125) Expression -> . Expression PLUS Expression
    (126) Expression -> . Expression MINUS Expression
    (127) Expression -> . Expression OR Expression
    (128) Expression -> . Expression CARET Expression
    (129) Expression -> . Expression TIMES Expression
    (130) Expression -> . Expression DIVIDE Expression
    (131) Expression -> . Expression MOD Expression
    (132) Expression -> . Expression AMPERS Expression
    (133) Expression -> . Expression LL Expression
    (134) Expression -> . Expression GG Expression
    (135) Expression -> . Expression AMPCAR Expression
    (138) UnaryExpr -> . PrimaryExpr
    (139) UnaryExpr -> . UnaryOp UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . Conversion
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . PrimaryExpr Index
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr Arguments
    (140) UnaryOp -> . PLUS
    (141) UnaryOp -> . MINUS
    (142) UnaryOp -> . TIMES
    (143) UnaryOp -> . AMPERS
    (144) UnaryOp -> . NOT
    (85) Operand -> . Literal
    (86) Operand -> . OperandName
    (87) Operand -> . LPAREN Expression RPAREN
    (100) Conversion -> . Type LPAREN Expression RPAREN
    (88) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (89) BasicLit -> . IntLiteral
    (90) BasicLit -> . FloatLiteral
    (91) BasicLit -> . ImgLiteral
    (92) BasicLit -> . RuneLiteral
    (93) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (94) IntLiteral -> . INTEGER
    (95) FloatLiteral -> . FLOAT
    (96) ImgLiteral -> . IMAGINARY
    (97) RuneLiteral -> . RUNE
    (98) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . Pointer BaseType
    (27) FunctionType -> . FUNC Signature
    (25) Pointer -> . POINTER

    PLUS            shift and go to state 108
    MINUS           shift and go to state 102
    TIMES           shift and go to state 117
    AMPERS          shift and go to state 123
    NOT             shift and go to state 107
    LPAREN          shift and go to state 120
    IDENTIFIER      shift and go to state 111
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 109
    FLOAT           shift and go to state 122
    IMAGINARY       shift and go to state 110
    RUNE            shift and go to state 96
    STRING          shift and go to state 103
    LBRACK          shift and go to state 67
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53
    POINTER         shift and go to state 59

    Conversion                     shift and go to state 97
    UnaryOp                        shift and go to state 106
    PrimaryExpr                    shift and go to state 124
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 99
    FloatLiteral                   shift and go to state 100
    Type                           shift and go to state 101
    OperandName                    shift and go to state 104
    BasicLit                       shift and go to state 105
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 60
    IntLiteral                     shift and go to state 112
    UnaryExpr                      shift and go to state 115
    RuneLiteral                    shift and go to state 116
    Operand                        shift and go to state 118
    Expression                     shift and go to state 220
    PointerType                    shift and go to state 69
    Pointer                        shift and go to state 66
    StringLiteral                  shift and go to state 98
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 113
    FunctionType                   shift and go to state 70

state 177

    (124) Expression -> Expression GEQ . Expression
    (116) Expression -> . UnaryExpr
    (117) Expression -> . Expression OROR Expression
    (118) Expression -> . Expression AMPAMP Expression
    (119) Expression -> . Expression EQEQ Expression
    (120) Expression -> . Expression NOTEQ Expression
    (121) Expression -> . Expression LESS Expression
    (122) Expression -> . Expression GREAT Expression
    (123) Expression -> . Expression LEQ Expression
    (124) Expression -> . Expression GEQ Expression
    (125) Expression -> . Expression PLUS Expression
    (126) Expression -> . Expression MINUS Expression
    (127) Expression -> . Expression OR Expression
    (128) Expression -> . Expression CARET Expression
    (129) Expression -> . Expression TIMES Expression
    (130) Expression -> . Expression DIVIDE Expression
    (131) Expression -> . Expression MOD Expression
    (132) Expression -> . Expression AMPERS Expression
    (133) Expression -> . Expression LL Expression
    (134) Expression -> . Expression GG Expression
    (135) Expression -> . Expression AMPCAR Expression
    (138) UnaryExpr -> . PrimaryExpr
    (139) UnaryExpr -> . UnaryOp UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . Conversion
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . PrimaryExpr Index
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr Arguments
    (140) UnaryOp -> . PLUS
    (141) UnaryOp -> . MINUS
    (142) UnaryOp -> . TIMES
    (143) UnaryOp -> . AMPERS
    (144) UnaryOp -> . NOT
    (85) Operand -> . Literal
    (86) Operand -> . OperandName
    (87) Operand -> . LPAREN Expression RPAREN
    (100) Conversion -> . Type LPAREN Expression RPAREN
    (88) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (89) BasicLit -> . IntLiteral
    (90) BasicLit -> . FloatLiteral
    (91) BasicLit -> . ImgLiteral
    (92) BasicLit -> . RuneLiteral
    (93) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (94) IntLiteral -> . INTEGER
    (95) FloatLiteral -> . FLOAT
    (96) ImgLiteral -> . IMAGINARY
    (97) RuneLiteral -> . RUNE
    (98) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . Pointer BaseType
    (27) FunctionType -> . FUNC Signature
    (25) Pointer -> . POINTER

    PLUS            shift and go to state 108
    MINUS           shift and go to state 102
    TIMES           shift and go to state 117
    AMPERS          shift and go to state 123
    NOT             shift and go to state 107
    LPAREN          shift and go to state 120
    IDENTIFIER      shift and go to state 111
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 109
    FLOAT           shift and go to state 122
    IMAGINARY       shift and go to state 110
    RUNE            shift and go to state 96
    STRING          shift and go to state 103
    LBRACK          shift and go to state 67
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53
    POINTER         shift and go to state 59

    Conversion                     shift and go to state 97
    UnaryOp                        shift and go to state 106
    PrimaryExpr                    shift and go to state 124
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 99
    FloatLiteral                   shift and go to state 100
    Type                           shift and go to state 101
    OperandName                    shift and go to state 104
    BasicLit                       shift and go to state 105
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 60
    IntLiteral                     shift and go to state 112
    UnaryExpr                      shift and go to state 115
    RuneLiteral                    shift and go to state 116
    Operand                        shift and go to state 118
    Expression                     shift and go to state 221
    PointerType                    shift and go to state 69
    Pointer                        shift and go to state 66
    StringLiteral                  shift and go to state 98
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 113
    FunctionType                   shift and go to state 70

state 178

    (127) Expression -> Expression OR . Expression
    (116) Expression -> . UnaryExpr
    (117) Expression -> . Expression OROR Expression
    (118) Expression -> . Expression AMPAMP Expression
    (119) Expression -> . Expression EQEQ Expression
    (120) Expression -> . Expression NOTEQ Expression
    (121) Expression -> . Expression LESS Expression
    (122) Expression -> . Expression GREAT Expression
    (123) Expression -> . Expression LEQ Expression
    (124) Expression -> . Expression GEQ Expression
    (125) Expression -> . Expression PLUS Expression
    (126) Expression -> . Expression MINUS Expression
    (127) Expression -> . Expression OR Expression
    (128) Expression -> . Expression CARET Expression
    (129) Expression -> . Expression TIMES Expression
    (130) Expression -> . Expression DIVIDE Expression
    (131) Expression -> . Expression MOD Expression
    (132) Expression -> . Expression AMPERS Expression
    (133) Expression -> . Expression LL Expression
    (134) Expression -> . Expression GG Expression
    (135) Expression -> . Expression AMPCAR Expression
    (138) UnaryExpr -> . PrimaryExpr
    (139) UnaryExpr -> . UnaryOp UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . Conversion
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . PrimaryExpr Index
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr Arguments
    (140) UnaryOp -> . PLUS
    (141) UnaryOp -> . MINUS
    (142) UnaryOp -> . TIMES
    (143) UnaryOp -> . AMPERS
    (144) UnaryOp -> . NOT
    (85) Operand -> . Literal
    (86) Operand -> . OperandName
    (87) Operand -> . LPAREN Expression RPAREN
    (100) Conversion -> . Type LPAREN Expression RPAREN
    (88) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (89) BasicLit -> . IntLiteral
    (90) BasicLit -> . FloatLiteral
    (91) BasicLit -> . ImgLiteral
    (92) BasicLit -> . RuneLiteral
    (93) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (94) IntLiteral -> . INTEGER
    (95) FloatLiteral -> . FLOAT
    (96) ImgLiteral -> . IMAGINARY
    (97) RuneLiteral -> . RUNE
    (98) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . Pointer BaseType
    (27) FunctionType -> . FUNC Signature
    (25) Pointer -> . POINTER

    PLUS            shift and go to state 108
    MINUS           shift and go to state 102
    TIMES           shift and go to state 117
    AMPERS          shift and go to state 123
    NOT             shift and go to state 107
    LPAREN          shift and go to state 120
    IDENTIFIER      shift and go to state 111
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 109
    FLOAT           shift and go to state 122
    IMAGINARY       shift and go to state 110
    RUNE            shift and go to state 96
    STRING          shift and go to state 103
    LBRACK          shift and go to state 67
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53
    POINTER         shift and go to state 59

    Conversion                     shift and go to state 97
    UnaryOp                        shift and go to state 106
    PrimaryExpr                    shift and go to state 124
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 99
    FloatLiteral                   shift and go to state 100
    Type                           shift and go to state 101
    OperandName                    shift and go to state 104
    BasicLit                       shift and go to state 105
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 60
    IntLiteral                     shift and go to state 112
    UnaryExpr                      shift and go to state 115
    RuneLiteral                    shift and go to state 116
    Operand                        shift and go to state 118
    Expression                     shift and go to state 222
    PointerType                    shift and go to state 69
    Pointer                        shift and go to state 66
    StringLiteral                  shift and go to state 98
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 113
    FunctionType                   shift and go to state 70

state 179

    (134) Expression -> Expression GG . Expression
    (116) Expression -> . UnaryExpr
    (117) Expression -> . Expression OROR Expression
    (118) Expression -> . Expression AMPAMP Expression
    (119) Expression -> . Expression EQEQ Expression
    (120) Expression -> . Expression NOTEQ Expression
    (121) Expression -> . Expression LESS Expression
    (122) Expression -> . Expression GREAT Expression
    (123) Expression -> . Expression LEQ Expression
    (124) Expression -> . Expression GEQ Expression
    (125) Expression -> . Expression PLUS Expression
    (126) Expression -> . Expression MINUS Expression
    (127) Expression -> . Expression OR Expression
    (128) Expression -> . Expression CARET Expression
    (129) Expression -> . Expression TIMES Expression
    (130) Expression -> . Expression DIVIDE Expression
    (131) Expression -> . Expression MOD Expression
    (132) Expression -> . Expression AMPERS Expression
    (133) Expression -> . Expression LL Expression
    (134) Expression -> . Expression GG Expression
    (135) Expression -> . Expression AMPCAR Expression
    (138) UnaryExpr -> . PrimaryExpr
    (139) UnaryExpr -> . UnaryOp UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . Conversion
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . PrimaryExpr Index
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr Arguments
    (140) UnaryOp -> . PLUS
    (141) UnaryOp -> . MINUS
    (142) UnaryOp -> . TIMES
    (143) UnaryOp -> . AMPERS
    (144) UnaryOp -> . NOT
    (85) Operand -> . Literal
    (86) Operand -> . OperandName
    (87) Operand -> . LPAREN Expression RPAREN
    (100) Conversion -> . Type LPAREN Expression RPAREN
    (88) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (89) BasicLit -> . IntLiteral
    (90) BasicLit -> . FloatLiteral
    (91) BasicLit -> . ImgLiteral
    (92) BasicLit -> . RuneLiteral
    (93) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (94) IntLiteral -> . INTEGER
    (95) FloatLiteral -> . FLOAT
    (96) ImgLiteral -> . IMAGINARY
    (97) RuneLiteral -> . RUNE
    (98) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . Pointer BaseType
    (27) FunctionType -> . FUNC Signature
    (25) Pointer -> . POINTER

    PLUS            shift and go to state 108
    MINUS           shift and go to state 102
    TIMES           shift and go to state 117
    AMPERS          shift and go to state 123
    NOT             shift and go to state 107
    LPAREN          shift and go to state 120
    IDENTIFIER      shift and go to state 111
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 109
    FLOAT           shift and go to state 122
    IMAGINARY       shift and go to state 110
    RUNE            shift and go to state 96
    STRING          shift and go to state 103
    LBRACK          shift and go to state 67
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53
    POINTER         shift and go to state 59

    Conversion                     shift and go to state 97
    UnaryOp                        shift and go to state 106
    PrimaryExpr                    shift and go to state 124
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 99
    FloatLiteral                   shift and go to state 100
    Type                           shift and go to state 101
    OperandName                    shift and go to state 104
    BasicLit                       shift and go to state 105
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 60
    IntLiteral                     shift and go to state 112
    UnaryExpr                      shift and go to state 115
    RuneLiteral                    shift and go to state 116
    Operand                        shift and go to state 118
    Expression                     shift and go to state 223
    PointerType                    shift and go to state 69
    Pointer                        shift and go to state 66
    StringLiteral                  shift and go to state 98
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 113
    FunctionType                   shift and go to state 70

state 180

    (120) Expression -> Expression NOTEQ . Expression
    (116) Expression -> . UnaryExpr
    (117) Expression -> . Expression OROR Expression
    (118) Expression -> . Expression AMPAMP Expression
    (119) Expression -> . Expression EQEQ Expression
    (120) Expression -> . Expression NOTEQ Expression
    (121) Expression -> . Expression LESS Expression
    (122) Expression -> . Expression GREAT Expression
    (123) Expression -> . Expression LEQ Expression
    (124) Expression -> . Expression GEQ Expression
    (125) Expression -> . Expression PLUS Expression
    (126) Expression -> . Expression MINUS Expression
    (127) Expression -> . Expression OR Expression
    (128) Expression -> . Expression CARET Expression
    (129) Expression -> . Expression TIMES Expression
    (130) Expression -> . Expression DIVIDE Expression
    (131) Expression -> . Expression MOD Expression
    (132) Expression -> . Expression AMPERS Expression
    (133) Expression -> . Expression LL Expression
    (134) Expression -> . Expression GG Expression
    (135) Expression -> . Expression AMPCAR Expression
    (138) UnaryExpr -> . PrimaryExpr
    (139) UnaryExpr -> . UnaryOp UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . Conversion
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . PrimaryExpr Index
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr Arguments
    (140) UnaryOp -> . PLUS
    (141) UnaryOp -> . MINUS
    (142) UnaryOp -> . TIMES
    (143) UnaryOp -> . AMPERS
    (144) UnaryOp -> . NOT
    (85) Operand -> . Literal
    (86) Operand -> . OperandName
    (87) Operand -> . LPAREN Expression RPAREN
    (100) Conversion -> . Type LPAREN Expression RPAREN
    (88) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (89) BasicLit -> . IntLiteral
    (90) BasicLit -> . FloatLiteral
    (91) BasicLit -> . ImgLiteral
    (92) BasicLit -> . RuneLiteral
    (93) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (94) IntLiteral -> . INTEGER
    (95) FloatLiteral -> . FLOAT
    (96) ImgLiteral -> . IMAGINARY
    (97) RuneLiteral -> . RUNE
    (98) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . Pointer BaseType
    (27) FunctionType -> . FUNC Signature
    (25) Pointer -> . POINTER

    PLUS            shift and go to state 108
    MINUS           shift and go to state 102
    TIMES           shift and go to state 117
    AMPERS          shift and go to state 123
    NOT             shift and go to state 107
    LPAREN          shift and go to state 120
    IDENTIFIER      shift and go to state 111
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 109
    FLOAT           shift and go to state 122
    IMAGINARY       shift and go to state 110
    RUNE            shift and go to state 96
    STRING          shift and go to state 103
    LBRACK          shift and go to state 67
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53
    POINTER         shift and go to state 59

    Conversion                     shift and go to state 97
    UnaryOp                        shift and go to state 106
    PrimaryExpr                    shift and go to state 124
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 99
    FloatLiteral                   shift and go to state 100
    Type                           shift and go to state 101
    OperandName                    shift and go to state 104
    BasicLit                       shift and go to state 105
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 60
    IntLiteral                     shift and go to state 112
    UnaryExpr                      shift and go to state 115
    RuneLiteral                    shift and go to state 116
    Operand                        shift and go to state 118
    Expression                     shift and go to state 224
    PointerType                    shift and go to state 69
    Pointer                        shift and go to state 66
    StringLiteral                  shift and go to state 98
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 113
    FunctionType                   shift and go to state 70

state 181

    (125) Expression -> Expression PLUS . Expression
    (116) Expression -> . UnaryExpr
    (117) Expression -> . Expression OROR Expression
    (118) Expression -> . Expression AMPAMP Expression
    (119) Expression -> . Expression EQEQ Expression
    (120) Expression -> . Expression NOTEQ Expression
    (121) Expression -> . Expression LESS Expression
    (122) Expression -> . Expression GREAT Expression
    (123) Expression -> . Expression LEQ Expression
    (124) Expression -> . Expression GEQ Expression
    (125) Expression -> . Expression PLUS Expression
    (126) Expression -> . Expression MINUS Expression
    (127) Expression -> . Expression OR Expression
    (128) Expression -> . Expression CARET Expression
    (129) Expression -> . Expression TIMES Expression
    (130) Expression -> . Expression DIVIDE Expression
    (131) Expression -> . Expression MOD Expression
    (132) Expression -> . Expression AMPERS Expression
    (133) Expression -> . Expression LL Expression
    (134) Expression -> . Expression GG Expression
    (135) Expression -> . Expression AMPCAR Expression
    (138) UnaryExpr -> . PrimaryExpr
    (139) UnaryExpr -> . UnaryOp UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . Conversion
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . PrimaryExpr Index
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr Arguments
    (140) UnaryOp -> . PLUS
    (141) UnaryOp -> . MINUS
    (142) UnaryOp -> . TIMES
    (143) UnaryOp -> . AMPERS
    (144) UnaryOp -> . NOT
    (85) Operand -> . Literal
    (86) Operand -> . OperandName
    (87) Operand -> . LPAREN Expression RPAREN
    (100) Conversion -> . Type LPAREN Expression RPAREN
    (88) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (89) BasicLit -> . IntLiteral
    (90) BasicLit -> . FloatLiteral
    (91) BasicLit -> . ImgLiteral
    (92) BasicLit -> . RuneLiteral
    (93) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (94) IntLiteral -> . INTEGER
    (95) FloatLiteral -> . FLOAT
    (96) ImgLiteral -> . IMAGINARY
    (97) RuneLiteral -> . RUNE
    (98) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . Pointer BaseType
    (27) FunctionType -> . FUNC Signature
    (25) Pointer -> . POINTER

    PLUS            shift and go to state 108
    MINUS           shift and go to state 102
    TIMES           shift and go to state 117
    AMPERS          shift and go to state 123
    NOT             shift and go to state 107
    LPAREN          shift and go to state 120
    IDENTIFIER      shift and go to state 111
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 109
    FLOAT           shift and go to state 122
    IMAGINARY       shift and go to state 110
    RUNE            shift and go to state 96
    STRING          shift and go to state 103
    LBRACK          shift and go to state 67
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53
    POINTER         shift and go to state 59

    Conversion                     shift and go to state 97
    UnaryOp                        shift and go to state 106
    PrimaryExpr                    shift and go to state 124
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 99
    FloatLiteral                   shift and go to state 100
    Type                           shift and go to state 101
    OperandName                    shift and go to state 104
    BasicLit                       shift and go to state 105
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 60
    IntLiteral                     shift and go to state 112
    UnaryExpr                      shift and go to state 115
    RuneLiteral                    shift and go to state 116
    Operand                        shift and go to state 118
    Expression                     shift and go to state 225
    PointerType                    shift and go to state 69
    Pointer                        shift and go to state 66
    StringLiteral                  shift and go to state 98
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 113
    FunctionType                   shift and go to state 70

state 182

    (131) Expression -> Expression MOD . Expression
    (116) Expression -> . UnaryExpr
    (117) Expression -> . Expression OROR Expression
    (118) Expression -> . Expression AMPAMP Expression
    (119) Expression -> . Expression EQEQ Expression
    (120) Expression -> . Expression NOTEQ Expression
    (121) Expression -> . Expression LESS Expression
    (122) Expression -> . Expression GREAT Expression
    (123) Expression -> . Expression LEQ Expression
    (124) Expression -> . Expression GEQ Expression
    (125) Expression -> . Expression PLUS Expression
    (126) Expression -> . Expression MINUS Expression
    (127) Expression -> . Expression OR Expression
    (128) Expression -> . Expression CARET Expression
    (129) Expression -> . Expression TIMES Expression
    (130) Expression -> . Expression DIVIDE Expression
    (131) Expression -> . Expression MOD Expression
    (132) Expression -> . Expression AMPERS Expression
    (133) Expression -> . Expression LL Expression
    (134) Expression -> . Expression GG Expression
    (135) Expression -> . Expression AMPCAR Expression
    (138) UnaryExpr -> . PrimaryExpr
    (139) UnaryExpr -> . UnaryOp UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . Conversion
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . PrimaryExpr Index
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr Arguments
    (140) UnaryOp -> . PLUS
    (141) UnaryOp -> . MINUS
    (142) UnaryOp -> . TIMES
    (143) UnaryOp -> . AMPERS
    (144) UnaryOp -> . NOT
    (85) Operand -> . Literal
    (86) Operand -> . OperandName
    (87) Operand -> . LPAREN Expression RPAREN
    (100) Conversion -> . Type LPAREN Expression RPAREN
    (88) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (89) BasicLit -> . IntLiteral
    (90) BasicLit -> . FloatLiteral
    (91) BasicLit -> . ImgLiteral
    (92) BasicLit -> . RuneLiteral
    (93) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (94) IntLiteral -> . INTEGER
    (95) FloatLiteral -> . FLOAT
    (96) ImgLiteral -> . IMAGINARY
    (97) RuneLiteral -> . RUNE
    (98) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . Pointer BaseType
    (27) FunctionType -> . FUNC Signature
    (25) Pointer -> . POINTER

    PLUS            shift and go to state 108
    MINUS           shift and go to state 102
    TIMES           shift and go to state 117
    AMPERS          shift and go to state 123
    NOT             shift and go to state 107
    LPAREN          shift and go to state 120
    IDENTIFIER      shift and go to state 111
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 109
    FLOAT           shift and go to state 122
    IMAGINARY       shift and go to state 110
    RUNE            shift and go to state 96
    STRING          shift and go to state 103
    LBRACK          shift and go to state 67
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53
    POINTER         shift and go to state 59

    Conversion                     shift and go to state 97
    UnaryOp                        shift and go to state 106
    PrimaryExpr                    shift and go to state 124
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 99
    FloatLiteral                   shift and go to state 100
    Type                           shift and go to state 101
    OperandName                    shift and go to state 104
    BasicLit                       shift and go to state 105
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 60
    IntLiteral                     shift and go to state 112
    UnaryExpr                      shift and go to state 115
    RuneLiteral                    shift and go to state 116
    Operand                        shift and go to state 118
    Expression                     shift and go to state 226
    PointerType                    shift and go to state 69
    Pointer                        shift and go to state 66
    StringLiteral                  shift and go to state 98
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 113
    FunctionType                   shift and go to state 70

state 183

    (118) Expression -> Expression AMPAMP . Expression
    (116) Expression -> . UnaryExpr
    (117) Expression -> . Expression OROR Expression
    (118) Expression -> . Expression AMPAMP Expression
    (119) Expression -> . Expression EQEQ Expression
    (120) Expression -> . Expression NOTEQ Expression
    (121) Expression -> . Expression LESS Expression
    (122) Expression -> . Expression GREAT Expression
    (123) Expression -> . Expression LEQ Expression
    (124) Expression -> . Expression GEQ Expression
    (125) Expression -> . Expression PLUS Expression
    (126) Expression -> . Expression MINUS Expression
    (127) Expression -> . Expression OR Expression
    (128) Expression -> . Expression CARET Expression
    (129) Expression -> . Expression TIMES Expression
    (130) Expression -> . Expression DIVIDE Expression
    (131) Expression -> . Expression MOD Expression
    (132) Expression -> . Expression AMPERS Expression
    (133) Expression -> . Expression LL Expression
    (134) Expression -> . Expression GG Expression
    (135) Expression -> . Expression AMPCAR Expression
    (138) UnaryExpr -> . PrimaryExpr
    (139) UnaryExpr -> . UnaryOp UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . Conversion
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . PrimaryExpr Index
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr Arguments
    (140) UnaryOp -> . PLUS
    (141) UnaryOp -> . MINUS
    (142) UnaryOp -> . TIMES
    (143) UnaryOp -> . AMPERS
    (144) UnaryOp -> . NOT
    (85) Operand -> . Literal
    (86) Operand -> . OperandName
    (87) Operand -> . LPAREN Expression RPAREN
    (100) Conversion -> . Type LPAREN Expression RPAREN
    (88) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (89) BasicLit -> . IntLiteral
    (90) BasicLit -> . FloatLiteral
    (91) BasicLit -> . ImgLiteral
    (92) BasicLit -> . RuneLiteral
    (93) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (94) IntLiteral -> . INTEGER
    (95) FloatLiteral -> . FLOAT
    (96) ImgLiteral -> . IMAGINARY
    (97) RuneLiteral -> . RUNE
    (98) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . Pointer BaseType
    (27) FunctionType -> . FUNC Signature
    (25) Pointer -> . POINTER

    PLUS            shift and go to state 108
    MINUS           shift and go to state 102
    TIMES           shift and go to state 117
    AMPERS          shift and go to state 123
    NOT             shift and go to state 107
    LPAREN          shift and go to state 120
    IDENTIFIER      shift and go to state 111
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 109
    FLOAT           shift and go to state 122
    IMAGINARY       shift and go to state 110
    RUNE            shift and go to state 96
    STRING          shift and go to state 103
    LBRACK          shift and go to state 67
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53
    POINTER         shift and go to state 59

    Conversion                     shift and go to state 97
    UnaryOp                        shift and go to state 106
    PrimaryExpr                    shift and go to state 124
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 99
    FloatLiteral                   shift and go to state 100
    Type                           shift and go to state 101
    OperandName                    shift and go to state 104
    BasicLit                       shift and go to state 105
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 60
    IntLiteral                     shift and go to state 112
    UnaryExpr                      shift and go to state 115
    RuneLiteral                    shift and go to state 116
    Operand                        shift and go to state 118
    Expression                     shift and go to state 227
    PointerType                    shift and go to state 69
    Pointer                        shift and go to state 66
    StringLiteral                  shift and go to state 98
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 113
    FunctionType                   shift and go to state 70

state 184

    (129) Expression -> Expression TIMES . Expression
    (116) Expression -> . UnaryExpr
    (117) Expression -> . Expression OROR Expression
    (118) Expression -> . Expression AMPAMP Expression
    (119) Expression -> . Expression EQEQ Expression
    (120) Expression -> . Expression NOTEQ Expression
    (121) Expression -> . Expression LESS Expression
    (122) Expression -> . Expression GREAT Expression
    (123) Expression -> . Expression LEQ Expression
    (124) Expression -> . Expression GEQ Expression
    (125) Expression -> . Expression PLUS Expression
    (126) Expression -> . Expression MINUS Expression
    (127) Expression -> . Expression OR Expression
    (128) Expression -> . Expression CARET Expression
    (129) Expression -> . Expression TIMES Expression
    (130) Expression -> . Expression DIVIDE Expression
    (131) Expression -> . Expression MOD Expression
    (132) Expression -> . Expression AMPERS Expression
    (133) Expression -> . Expression LL Expression
    (134) Expression -> . Expression GG Expression
    (135) Expression -> . Expression AMPCAR Expression
    (138) UnaryExpr -> . PrimaryExpr
    (139) UnaryExpr -> . UnaryOp UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . Conversion
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . PrimaryExpr Index
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr Arguments
    (140) UnaryOp -> . PLUS
    (141) UnaryOp -> . MINUS
    (142) UnaryOp -> . TIMES
    (143) UnaryOp -> . AMPERS
    (144) UnaryOp -> . NOT
    (85) Operand -> . Literal
    (86) Operand -> . OperandName
    (87) Operand -> . LPAREN Expression RPAREN
    (100) Conversion -> . Type LPAREN Expression RPAREN
    (88) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (89) BasicLit -> . IntLiteral
    (90) BasicLit -> . FloatLiteral
    (91) BasicLit -> . ImgLiteral
    (92) BasicLit -> . RuneLiteral
    (93) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (94) IntLiteral -> . INTEGER
    (95) FloatLiteral -> . FLOAT
    (96) ImgLiteral -> . IMAGINARY
    (97) RuneLiteral -> . RUNE
    (98) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . Pointer BaseType
    (27) FunctionType -> . FUNC Signature
    (25) Pointer -> . POINTER

    PLUS            shift and go to state 108
    MINUS           shift and go to state 102
    TIMES           shift and go to state 117
    AMPERS          shift and go to state 123
    NOT             shift and go to state 107
    LPAREN          shift and go to state 120
    IDENTIFIER      shift and go to state 111
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 109
    FLOAT           shift and go to state 122
    IMAGINARY       shift and go to state 110
    RUNE            shift and go to state 96
    STRING          shift and go to state 103
    LBRACK          shift and go to state 67
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53
    POINTER         shift and go to state 59

    Conversion                     shift and go to state 97
    UnaryOp                        shift and go to state 106
    PrimaryExpr                    shift and go to state 124
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 99
    FloatLiteral                   shift and go to state 100
    Type                           shift and go to state 101
    OperandName                    shift and go to state 104
    BasicLit                       shift and go to state 105
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 60
    IntLiteral                     shift and go to state 112
    UnaryExpr                      shift and go to state 115
    RuneLiteral                    shift and go to state 116
    Operand                        shift and go to state 118
    Expression                     shift and go to state 228
    PointerType                    shift and go to state 69
    Pointer                        shift and go to state 66
    StringLiteral                  shift and go to state 98
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 113
    FunctionType                   shift and go to state 70

state 185

    (126) Expression -> Expression MINUS . Expression
    (116) Expression -> . UnaryExpr
    (117) Expression -> . Expression OROR Expression
    (118) Expression -> . Expression AMPAMP Expression
    (119) Expression -> . Expression EQEQ Expression
    (120) Expression -> . Expression NOTEQ Expression
    (121) Expression -> . Expression LESS Expression
    (122) Expression -> . Expression GREAT Expression
    (123) Expression -> . Expression LEQ Expression
    (124) Expression -> . Expression GEQ Expression
    (125) Expression -> . Expression PLUS Expression
    (126) Expression -> . Expression MINUS Expression
    (127) Expression -> . Expression OR Expression
    (128) Expression -> . Expression CARET Expression
    (129) Expression -> . Expression TIMES Expression
    (130) Expression -> . Expression DIVIDE Expression
    (131) Expression -> . Expression MOD Expression
    (132) Expression -> . Expression AMPERS Expression
    (133) Expression -> . Expression LL Expression
    (134) Expression -> . Expression GG Expression
    (135) Expression -> . Expression AMPCAR Expression
    (138) UnaryExpr -> . PrimaryExpr
    (139) UnaryExpr -> . UnaryOp UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . Conversion
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . PrimaryExpr Index
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr Arguments
    (140) UnaryOp -> . PLUS
    (141) UnaryOp -> . MINUS
    (142) UnaryOp -> . TIMES
    (143) UnaryOp -> . AMPERS
    (144) UnaryOp -> . NOT
    (85) Operand -> . Literal
    (86) Operand -> . OperandName
    (87) Operand -> . LPAREN Expression RPAREN
    (100) Conversion -> . Type LPAREN Expression RPAREN
    (88) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (89) BasicLit -> . IntLiteral
    (90) BasicLit -> . FloatLiteral
    (91) BasicLit -> . ImgLiteral
    (92) BasicLit -> . RuneLiteral
    (93) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (94) IntLiteral -> . INTEGER
    (95) FloatLiteral -> . FLOAT
    (96) ImgLiteral -> . IMAGINARY
    (97) RuneLiteral -> . RUNE
    (98) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . Pointer BaseType
    (27) FunctionType -> . FUNC Signature
    (25) Pointer -> . POINTER

    PLUS            shift and go to state 108
    MINUS           shift and go to state 102
    TIMES           shift and go to state 117
    AMPERS          shift and go to state 123
    NOT             shift and go to state 107
    LPAREN          shift and go to state 120
    IDENTIFIER      shift and go to state 111
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 109
    FLOAT           shift and go to state 122
    IMAGINARY       shift and go to state 110
    RUNE            shift and go to state 96
    STRING          shift and go to state 103
    LBRACK          shift and go to state 67
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53
    POINTER         shift and go to state 59

    Conversion                     shift and go to state 97
    UnaryOp                        shift and go to state 106
    PrimaryExpr                    shift and go to state 124
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 99
    FloatLiteral                   shift and go to state 100
    Type                           shift and go to state 101
    OperandName                    shift and go to state 104
    BasicLit                       shift and go to state 105
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 60
    IntLiteral                     shift and go to state 112
    UnaryExpr                      shift and go to state 115
    RuneLiteral                    shift and go to state 116
    Operand                        shift and go to state 118
    Expression                     shift and go to state 229
    PointerType                    shift and go to state 69
    Pointer                        shift and go to state 66
    StringLiteral                  shift and go to state 98
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 113
    FunctionType                   shift and go to state 70

state 186

    (123) Expression -> Expression LEQ . Expression
    (116) Expression -> . UnaryExpr
    (117) Expression -> . Expression OROR Expression
    (118) Expression -> . Expression AMPAMP Expression
    (119) Expression -> . Expression EQEQ Expression
    (120) Expression -> . Expression NOTEQ Expression
    (121) Expression -> . Expression LESS Expression
    (122) Expression -> . Expression GREAT Expression
    (123) Expression -> . Expression LEQ Expression
    (124) Expression -> . Expression GEQ Expression
    (125) Expression -> . Expression PLUS Expression
    (126) Expression -> . Expression MINUS Expression
    (127) Expression -> . Expression OR Expression
    (128) Expression -> . Expression CARET Expression
    (129) Expression -> . Expression TIMES Expression
    (130) Expression -> . Expression DIVIDE Expression
    (131) Expression -> . Expression MOD Expression
    (132) Expression -> . Expression AMPERS Expression
    (133) Expression -> . Expression LL Expression
    (134) Expression -> . Expression GG Expression
    (135) Expression -> . Expression AMPCAR Expression
    (138) UnaryExpr -> . PrimaryExpr
    (139) UnaryExpr -> . UnaryOp UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . Conversion
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . PrimaryExpr Index
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr Arguments
    (140) UnaryOp -> . PLUS
    (141) UnaryOp -> . MINUS
    (142) UnaryOp -> . TIMES
    (143) UnaryOp -> . AMPERS
    (144) UnaryOp -> . NOT
    (85) Operand -> . Literal
    (86) Operand -> . OperandName
    (87) Operand -> . LPAREN Expression RPAREN
    (100) Conversion -> . Type LPAREN Expression RPAREN
    (88) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (89) BasicLit -> . IntLiteral
    (90) BasicLit -> . FloatLiteral
    (91) BasicLit -> . ImgLiteral
    (92) BasicLit -> . RuneLiteral
    (93) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (94) IntLiteral -> . INTEGER
    (95) FloatLiteral -> . FLOAT
    (96) ImgLiteral -> . IMAGINARY
    (97) RuneLiteral -> . RUNE
    (98) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . Pointer BaseType
    (27) FunctionType -> . FUNC Signature
    (25) Pointer -> . POINTER

    PLUS            shift and go to state 108
    MINUS           shift and go to state 102
    TIMES           shift and go to state 117
    AMPERS          shift and go to state 123
    NOT             shift and go to state 107
    LPAREN          shift and go to state 120
    IDENTIFIER      shift and go to state 111
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 109
    FLOAT           shift and go to state 122
    IMAGINARY       shift and go to state 110
    RUNE            shift and go to state 96
    STRING          shift and go to state 103
    LBRACK          shift and go to state 67
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53
    POINTER         shift and go to state 59

    Conversion                     shift and go to state 97
    UnaryOp                        shift and go to state 106
    PrimaryExpr                    shift and go to state 124
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 99
    FloatLiteral                   shift and go to state 100
    Type                           shift and go to state 101
    OperandName                    shift and go to state 104
    BasicLit                       shift and go to state 105
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 60
    IntLiteral                     shift and go to state 112
    UnaryExpr                      shift and go to state 115
    RuneLiteral                    shift and go to state 116
    Operand                        shift and go to state 118
    Expression                     shift and go to state 230
    PointerType                    shift and go to state 69
    Pointer                        shift and go to state 66
    StringLiteral                  shift and go to state 98
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 113
    FunctionType                   shift and go to state 70

state 187

    (104) PrimaryExpr -> PrimaryExpr Index .

    DOT             reduce using rule 104 (PrimaryExpr -> PrimaryExpr Index .)
    LBRACK          reduce using rule 104 (PrimaryExpr -> PrimaryExpr Index .)
    LPAREN          reduce using rule 104 (PrimaryExpr -> PrimaryExpr Index .)
    OROR            reduce using rule 104 (PrimaryExpr -> PrimaryExpr Index .)
    AMPAMP          reduce using rule 104 (PrimaryExpr -> PrimaryExpr Index .)
    EQEQ            reduce using rule 104 (PrimaryExpr -> PrimaryExpr Index .)
    NOTEQ           reduce using rule 104 (PrimaryExpr -> PrimaryExpr Index .)
    LESS            reduce using rule 104 (PrimaryExpr -> PrimaryExpr Index .)
    GREAT           reduce using rule 104 (PrimaryExpr -> PrimaryExpr Index .)
    LEQ             reduce using rule 104 (PrimaryExpr -> PrimaryExpr Index .)
    GEQ             reduce using rule 104 (PrimaryExpr -> PrimaryExpr Index .)
    PLUS            reduce using rule 104 (PrimaryExpr -> PrimaryExpr Index .)
    MINUS           reduce using rule 104 (PrimaryExpr -> PrimaryExpr Index .)
    OR              reduce using rule 104 (PrimaryExpr -> PrimaryExpr Index .)
    CARET           reduce using rule 104 (PrimaryExpr -> PrimaryExpr Index .)
    TIMES           reduce using rule 104 (PrimaryExpr -> PrimaryExpr Index .)
    DIVIDE          reduce using rule 104 (PrimaryExpr -> PrimaryExpr Index .)
    MOD             reduce using rule 104 (PrimaryExpr -> PrimaryExpr Index .)
    AMPERS          reduce using rule 104 (PrimaryExpr -> PrimaryExpr Index .)
    LL              reduce using rule 104 (PrimaryExpr -> PrimaryExpr Index .)
    GG              reduce using rule 104 (PrimaryExpr -> PrimaryExpr Index .)
    AMPCAR          reduce using rule 104 (PrimaryExpr -> PrimaryExpr Index .)
    COMMA           reduce using rule 104 (PrimaryExpr -> PrimaryExpr Index .)
    SEMICOL         reduce using rule 104 (PrimaryExpr -> PrimaryExpr Index .)
    RBRACK          reduce using rule 104 (PrimaryExpr -> PrimaryExpr Index .)
    RPAREN          reduce using rule 104 (PrimaryExpr -> PrimaryExpr Index .)
    COLON           reduce using rule 104 (PrimaryExpr -> PrimaryExpr Index .)
    PLUSEQ          reduce using rule 104 (PrimaryExpr -> PrimaryExpr Index .)
    MINUSEQ         reduce using rule 104 (PrimaryExpr -> PrimaryExpr Index .)
    TIMESEQ         reduce using rule 104 (PrimaryExpr -> PrimaryExpr Index .)
    DIVIDEEQ        reduce using rule 104 (PrimaryExpr -> PrimaryExpr Index .)
    MODEQ           reduce using rule 104 (PrimaryExpr -> PrimaryExpr Index .)
    AMPEQ           reduce using rule 104 (PrimaryExpr -> PrimaryExpr Index .)
    OREQ            reduce using rule 104 (PrimaryExpr -> PrimaryExpr Index .)
    CAREQ           reduce using rule 104 (PrimaryExpr -> PrimaryExpr Index .)
    LLEQ            reduce using rule 104 (PrimaryExpr -> PrimaryExpr Index .)
    GGEQ            reduce using rule 104 (PrimaryExpr -> PrimaryExpr Index .)
    EQUAL           reduce using rule 104 (PrimaryExpr -> PrimaryExpr Index .)
    LBRACE          reduce using rule 104 (PrimaryExpr -> PrimaryExpr Index .)
    PLUSPLUS        reduce using rule 104 (PrimaryExpr -> PrimaryExpr Index .)
    MINUSMIN        reduce using rule 104 (PrimaryExpr -> PrimaryExpr Index .)


state 188

    (105) PrimaryExpr -> PrimaryExpr Slice .

    DOT             reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    LBRACK          reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    LPAREN          reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    OROR            reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    AMPAMP          reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    EQEQ            reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    NOTEQ           reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    LESS            reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    GREAT           reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    LEQ             reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    GEQ             reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    PLUS            reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    MINUS           reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    OR              reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    CARET           reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    TIMES           reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    DIVIDE          reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    MOD             reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    AMPERS          reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    LL              reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    GG              reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    AMPCAR          reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    COMMA           reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    SEMICOL         reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    RBRACK          reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    RPAREN          reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    COLON           reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    PLUSEQ          reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    MINUSEQ         reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    TIMESEQ         reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    DIVIDEEQ        reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    MODEQ           reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    AMPEQ           reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    OREQ            reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    CAREQ           reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    LLEQ            reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    GGEQ            reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    EQUAL           reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    LBRACE          reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    PLUSPLUS        reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    MINUSMIN        reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)


state 189

    (108) Index -> LBRACK . Expression RBRACK
    (109) Slice -> LBRACK . ExpressionOpt COLON ExpressionOpt RBRACK
    (116) Expression -> . UnaryExpr
    (117) Expression -> . Expression OROR Expression
    (118) Expression -> . Expression AMPAMP Expression
    (119) Expression -> . Expression EQEQ Expression
    (120) Expression -> . Expression NOTEQ Expression
    (121) Expression -> . Expression LESS Expression
    (122) Expression -> . Expression GREAT Expression
    (123) Expression -> . Expression LEQ Expression
    (124) Expression -> . Expression GEQ Expression
    (125) Expression -> . Expression PLUS Expression
    (126) Expression -> . Expression MINUS Expression
    (127) Expression -> . Expression OR Expression
    (128) Expression -> . Expression CARET Expression
    (129) Expression -> . Expression TIMES Expression
    (130) Expression -> . Expression DIVIDE Expression
    (131) Expression -> . Expression MOD Expression
    (132) Expression -> . Expression AMPERS Expression
    (133) Expression -> . Expression LL Expression
    (134) Expression -> . Expression GG Expression
    (135) Expression -> . Expression AMPCAR Expression
    (136) ExpressionOpt -> . Expression
    (137) ExpressionOpt -> . epsilon
    (138) UnaryExpr -> . PrimaryExpr
    (139) UnaryExpr -> . UnaryOp UnaryExpr
    (224) epsilon -> .
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . Conversion
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . PrimaryExpr Index
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr Arguments
    (140) UnaryOp -> . PLUS
    (141) UnaryOp -> . MINUS
    (142) UnaryOp -> . TIMES
    (143) UnaryOp -> . AMPERS
    (144) UnaryOp -> . NOT
    (85) Operand -> . Literal
    (86) Operand -> . OperandName
    (87) Operand -> . LPAREN Expression RPAREN
    (100) Conversion -> . Type LPAREN Expression RPAREN
    (88) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (89) BasicLit -> . IntLiteral
    (90) BasicLit -> . FloatLiteral
    (91) BasicLit -> . ImgLiteral
    (92) BasicLit -> . RuneLiteral
    (93) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (94) IntLiteral -> . INTEGER
    (95) FloatLiteral -> . FLOAT
    (96) ImgLiteral -> . IMAGINARY
    (97) RuneLiteral -> . RUNE
    (98) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . Pointer BaseType
    (27) FunctionType -> . FUNC Signature
    (25) Pointer -> . POINTER

    COLON           reduce using rule 224 (epsilon -> .)
    PLUS            shift and go to state 108
    MINUS           shift and go to state 102
    TIMES           shift and go to state 117
    AMPERS          shift and go to state 123
    NOT             shift and go to state 107
    LPAREN          shift and go to state 120
    IDENTIFIER      shift and go to state 111
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 109
    FLOAT           shift and go to state 122
    IMAGINARY       shift and go to state 110
    RUNE            shift and go to state 96
    STRING          shift and go to state 103
    LBRACK          shift and go to state 67
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53
    POINTER         shift and go to state 59

    Conversion                     shift and go to state 97
    UnaryOp                        shift and go to state 106
    PrimaryExpr                    shift and go to state 124
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 99
    FloatLiteral                   shift and go to state 100
    Type                           shift and go to state 101
    OperandName                    shift and go to state 104
    BasicLit                       shift and go to state 105
    TypeName                       shift and go to state 57
    ExpressionOpt                  shift and go to state 231
    StructType                     shift and go to state 60
    IntLiteral                     shift and go to state 112
    epsilon                        shift and go to state 232
    UnaryExpr                      shift and go to state 115
    RuneLiteral                    shift and go to state 116
    Operand                        shift and go to state 118
    Expression                     shift and go to state 233
    PointerType                    shift and go to state 69
    Pointer                        shift and go to state 66
    StringLiteral                  shift and go to state 98
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 113
    FunctionType                   shift and go to state 70

state 190

    (103) PrimaryExpr -> PrimaryExpr Selector .

    DOT             reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    LBRACK          reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    LPAREN          reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    OROR            reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    AMPAMP          reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    EQEQ            reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    NOTEQ           reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    LESS            reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    GREAT           reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    LEQ             reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    GEQ             reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    PLUS            reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    MINUS           reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    OR              reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    CARET           reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    TIMES           reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    DIVIDE          reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    MOD             reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    AMPERS          reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    LL              reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    GG              reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    AMPCAR          reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    COMMA           reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    SEMICOL         reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    RBRACK          reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    RPAREN          reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    COLON           reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    PLUSEQ          reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    MINUSEQ         reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    TIMESEQ         reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    DIVIDEEQ        reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    MODEQ           reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    AMPEQ           reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    OREQ            reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    CAREQ           reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    LLEQ            reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    GGEQ            reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    EQUAL           reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    LBRACE          reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    PLUSPLUS        reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    MINUSMIN        reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)


state 191

    (106) PrimaryExpr -> PrimaryExpr Arguments .

    DOT             reduce using rule 106 (PrimaryExpr -> PrimaryExpr Arguments .)
    LBRACK          reduce using rule 106 (PrimaryExpr -> PrimaryExpr Arguments .)
    LPAREN          reduce using rule 106 (PrimaryExpr -> PrimaryExpr Arguments .)
    OROR            reduce using rule 106 (PrimaryExpr -> PrimaryExpr Arguments .)
    AMPAMP          reduce using rule 106 (PrimaryExpr -> PrimaryExpr Arguments .)
    EQEQ            reduce using rule 106 (PrimaryExpr -> PrimaryExpr Arguments .)
    NOTEQ           reduce using rule 106 (PrimaryExpr -> PrimaryExpr Arguments .)
    LESS            reduce using rule 106 (PrimaryExpr -> PrimaryExpr Arguments .)
    GREAT           reduce using rule 106 (PrimaryExpr -> PrimaryExpr Arguments .)
    LEQ             reduce using rule 106 (PrimaryExpr -> PrimaryExpr Arguments .)
    GEQ             reduce using rule 106 (PrimaryExpr -> PrimaryExpr Arguments .)
    PLUS            reduce using rule 106 (PrimaryExpr -> PrimaryExpr Arguments .)
    MINUS           reduce using rule 106 (PrimaryExpr -> PrimaryExpr Arguments .)
    OR              reduce using rule 106 (PrimaryExpr -> PrimaryExpr Arguments .)
    CARET           reduce using rule 106 (PrimaryExpr -> PrimaryExpr Arguments .)
    TIMES           reduce using rule 106 (PrimaryExpr -> PrimaryExpr Arguments .)
    DIVIDE          reduce using rule 106 (PrimaryExpr -> PrimaryExpr Arguments .)
    MOD             reduce using rule 106 (PrimaryExpr -> PrimaryExpr Arguments .)
    AMPERS          reduce using rule 106 (PrimaryExpr -> PrimaryExpr Arguments .)
    LL              reduce using rule 106 (PrimaryExpr -> PrimaryExpr Arguments .)
    GG              reduce using rule 106 (PrimaryExpr -> PrimaryExpr Arguments .)
    AMPCAR          reduce using rule 106 (PrimaryExpr -> PrimaryExpr Arguments .)
    COMMA           reduce using rule 106 (PrimaryExpr -> PrimaryExpr Arguments .)
    SEMICOL         reduce using rule 106 (PrimaryExpr -> PrimaryExpr Arguments .)
    RBRACK          reduce using rule 106 (PrimaryExpr -> PrimaryExpr Arguments .)
    RPAREN          reduce using rule 106 (PrimaryExpr -> PrimaryExpr Arguments .)
    COLON           reduce using rule 106 (PrimaryExpr -> PrimaryExpr Arguments .)
    PLUSEQ          reduce using rule 106 (PrimaryExpr -> PrimaryExpr Arguments .)
    MINUSEQ         reduce using rule 106 (PrimaryExpr -> PrimaryExpr Arguments .)
    TIMESEQ         reduce using rule 106 (PrimaryExpr -> PrimaryExpr Arguments .)
    DIVIDEEQ        reduce using rule 106 (PrimaryExpr -> PrimaryExpr Arguments .)
    MODEQ           reduce using rule 106 (PrimaryExpr -> PrimaryExpr Arguments .)
    AMPEQ           reduce using rule 106 (PrimaryExpr -> PrimaryExpr Arguments .)
    OREQ            reduce using rule 106 (PrimaryExpr -> PrimaryExpr Arguments .)
    CAREQ           reduce using rule 106 (PrimaryExpr -> PrimaryExpr Arguments .)
    LLEQ            reduce using rule 106 (PrimaryExpr -> PrimaryExpr Arguments .)
    GGEQ            reduce using rule 106 (PrimaryExpr -> PrimaryExpr Arguments .)
    EQUAL           reduce using rule 106 (PrimaryExpr -> PrimaryExpr Arguments .)
    LBRACE          reduce using rule 106 (PrimaryExpr -> PrimaryExpr Arguments .)
    PLUSPLUS        reduce using rule 106 (PrimaryExpr -> PrimaryExpr Arguments .)
    MINUSMIN        reduce using rule 106 (PrimaryExpr -> PrimaryExpr Arguments .)


state 192

    (110) Arguments -> LPAREN . ExpressionListTypeOpt RPAREN
    (111) ExpressionListTypeOpt -> . ExpressionList
    (112) ExpressionListTypeOpt -> . epsilon
    (113) ExpressionList -> . Expression ExpressionRep
    (224) epsilon -> .
    (116) Expression -> . UnaryExpr
    (117) Expression -> . Expression OROR Expression
    (118) Expression -> . Expression AMPAMP Expression
    (119) Expression -> . Expression EQEQ Expression
    (120) Expression -> . Expression NOTEQ Expression
    (121) Expression -> . Expression LESS Expression
    (122) Expression -> . Expression GREAT Expression
    (123) Expression -> . Expression LEQ Expression
    (124) Expression -> . Expression GEQ Expression
    (125) Expression -> . Expression PLUS Expression
    (126) Expression -> . Expression MINUS Expression
    (127) Expression -> . Expression OR Expression
    (128) Expression -> . Expression CARET Expression
    (129) Expression -> . Expression TIMES Expression
    (130) Expression -> . Expression DIVIDE Expression
    (131) Expression -> . Expression MOD Expression
    (132) Expression -> . Expression AMPERS Expression
    (133) Expression -> . Expression LL Expression
    (134) Expression -> . Expression GG Expression
    (135) Expression -> . Expression AMPCAR Expression
    (138) UnaryExpr -> . PrimaryExpr
    (139) UnaryExpr -> . UnaryOp UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . Conversion
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . PrimaryExpr Index
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr Arguments
    (140) UnaryOp -> . PLUS
    (141) UnaryOp -> . MINUS
    (142) UnaryOp -> . TIMES
    (143) UnaryOp -> . AMPERS
    (144) UnaryOp -> . NOT
    (85) Operand -> . Literal
    (86) Operand -> . OperandName
    (87) Operand -> . LPAREN Expression RPAREN
    (100) Conversion -> . Type LPAREN Expression RPAREN
    (88) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (89) BasicLit -> . IntLiteral
    (90) BasicLit -> . FloatLiteral
    (91) BasicLit -> . ImgLiteral
    (92) BasicLit -> . RuneLiteral
    (93) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (94) IntLiteral -> . INTEGER
    (95) FloatLiteral -> . FLOAT
    (96) ImgLiteral -> . IMAGINARY
    (97) RuneLiteral -> . RUNE
    (98) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . Pointer BaseType
    (27) FunctionType -> . FUNC Signature
    (25) Pointer -> . POINTER

    RPAREN          reduce using rule 224 (epsilon -> .)
    PLUS            shift and go to state 108
    MINUS           shift and go to state 102
    TIMES           shift and go to state 117
    AMPERS          shift and go to state 123
    NOT             shift and go to state 107
    LPAREN          shift and go to state 120
    IDENTIFIER      shift and go to state 111
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 109
    FLOAT           shift and go to state 122
    IMAGINARY       shift and go to state 110
    RUNE            shift and go to state 96
    STRING          shift and go to state 103
    LBRACK          shift and go to state 67
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53
    POINTER         shift and go to state 59

    UnaryOp                        shift and go to state 106
    Conversion                     shift and go to state 97
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 99
    Operand                        shift and go to state 118
    FloatLiteral                   shift and go to state 100
    Type                           shift and go to state 101
    OperandName                    shift and go to state 104
    BasicLit                       shift and go to state 105
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 60
    IntLiteral                     shift and go to state 112
    ImgLiteral                     shift and go to state 113
    epsilon                        shift and go to state 234
    UnaryExpr                      shift and go to state 115
    RuneLiteral                    shift and go to state 116
    ExpressionListTypeOpt          shift and go to state 236
    ExpressionList                 shift and go to state 235
    Expression                     shift and go to state 146
    PointerType                    shift and go to state 69
    Pointer                        shift and go to state 66
    StringLiteral                  shift and go to state 98
    TypeLit                        shift and go to state 56
    PrimaryExpr                    shift and go to state 124
    FunctionType                   shift and go to state 70

state 193

    (107) Selector -> DOT . IDENTIFIER

    IDENTIFIER      shift and go to state 237


state 194

    (61) IdentifierRep -> IdentifierRep COMMA IDENTIFIER .

    COMMA           reduce using rule 61 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    LPAREN          reduce using rule 61 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    TYPEX           reduce using rule 61 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    TTYPE           reduce using rule 61 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    LBRACK          reduce using rule 61 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    STRUCT          reduce using rule 61 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    FUNC            reduce using rule 61 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    POINTER         reduce using rule 61 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    EQUAL           reduce using rule 61 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    SEMICOL         reduce using rule 61 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)


state 195

    (4) Type -> LPAREN Type . RPAREN
    (36) ParametersList -> Type .
    (42) ParameterDecl -> Type .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 156
    COMMA           reduce using rule 42 (ParameterDecl -> Type .)

  ! RPAREN          [ reduce using rule 36 (ParametersList -> Type .) ]


state 196

    (43) Block -> CreateScope LBRACE . StatementList RBRACE
    (45) StatementList -> . StatementRep
    (46) StatementRep -> . StatementRep Statement SEMICOL
    (47) StatementRep -> . epsilon
    (224) epsilon -> .

    RETURN          reduce using rule 224 (epsilon -> .)
    BREAK           reduce using rule 224 (epsilon -> .)
    CONTINUE        reduce using rule 224 (epsilon -> .)
    GOTO            reduce using rule 224 (epsilon -> .)
    IF              reduce using rule 224 (epsilon -> .)
    PRINT           reduce using rule 224 (epsilon -> .)
    MALLOC          reduce using rule 224 (epsilon -> .)
    CONST           reduce using rule 224 (epsilon -> .)
    TYPE            reduce using rule 224 (epsilon -> .)
    VAR             reduce using rule 224 (epsilon -> .)
    IDENTIFIER      reduce using rule 224 (epsilon -> .)
    LPAREN          reduce using rule 224 (epsilon -> .)
    PLUS            reduce using rule 224 (epsilon -> .)
    MINUS           reduce using rule 224 (epsilon -> .)
    TIMES           reduce using rule 224 (epsilon -> .)
    AMPERS          reduce using rule 224 (epsilon -> .)
    NOT             reduce using rule 224 (epsilon -> .)
    TYPEX           reduce using rule 224 (epsilon -> .)
    TTYPE           reduce using rule 224 (epsilon -> .)
    INTEGER         reduce using rule 224 (epsilon -> .)
    FLOAT           reduce using rule 224 (epsilon -> .)
    IMAGINARY       reduce using rule 224 (epsilon -> .)
    RUNE            reduce using rule 224 (epsilon -> .)
    STRING          reduce using rule 224 (epsilon -> .)
    LBRACK          reduce using rule 224 (epsilon -> .)
    STRUCT          reduce using rule 224 (epsilon -> .)
    FUNC            reduce using rule 224 (epsilon -> .)
    POINTER         reduce using rule 224 (epsilon -> .)
    SEMICOL         reduce using rule 224 (epsilon -> .)
    LBRACE          reduce using rule 224 (epsilon -> .)
    FOR             reduce using rule 224 (epsilon -> .)
    RBRACE          reduce using rule 224 (epsilon -> .)

    epsilon                        shift and go to state 239
    StatementRep                   shift and go to state 238
    StatementList                  shift and go to state 240

state 197

    (33) Parameters -> LPAREN ParameterListOpt RPAREN .

    LPAREN          reduce using rule 33 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    TYPEX           reduce using rule 33 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    TTYPE           reduce using rule 33 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    LBRACK          reduce using rule 33 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    STRUCT          reduce using rule 33 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    FUNC            reduce using rule 33 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    POINTER         reduce using rule 33 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    EQUAL           reduce using rule 33 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    SEMICOL         reduce using rule 33 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    RPAREN          reduce using rule 33 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    LBRACE          reduce using rule 33 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    COMMA           reduce using rule 33 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    STRING          reduce using rule 33 (Parameters -> LPAREN ParameterListOpt RPAREN .)


state 198

    (37) ParametersList -> IdentifierList Type .
    (41) ParameterDecl -> IdentifierList Type .

    RPAREN          reduce using rule 37 (ParametersList -> IdentifierList Type .)
    COMMA           reduce using rule 41 (ParameterDecl -> IdentifierList Type .)


state 199

    (39) ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA . ParameterDecl
    (41) ParameterDecl -> . IdentifierList Type
    (42) ParameterDecl -> . Type
    (60) IdentifierList -> . IDENTIFIER IdentifierRep
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . Pointer BaseType
    (27) FunctionType -> . FUNC Signature
    (25) Pointer -> . POINTER

    IDENTIFIER      shift and go to state 34
    LPAREN          shift and go to state 62
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    LBRACK          shift and go to state 67
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53
    POINTER         shift and go to state 59

    StructType                     shift and go to state 60
    ParameterDecl                  shift and go to state 243
    Pointer                        shift and go to state 66
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 57
    TypeLit                        shift and go to state 56
    IdentifierList                 shift and go to state 241
    PointerType                    shift and go to state 69
    FunctionType                   shift and go to state 70
    Type                           shift and go to state 242

state 200

    (40) ParameterDeclCommaRep -> ParameterDecl COMMA . ParameterDecl
    (41) ParameterDecl -> . IdentifierList Type
    (42) ParameterDecl -> . Type
    (60) IdentifierList -> . IDENTIFIER IdentifierRep
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . Pointer BaseType
    (27) FunctionType -> . FUNC Signature
    (25) Pointer -> . POINTER

    IDENTIFIER      shift and go to state 34
    LPAREN          shift and go to state 62
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    LBRACK          shift and go to state 67
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53
    POINTER         shift and go to state 59

    StructType                     shift and go to state 60
    TypeLit                        shift and go to state 56
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 57
    Pointer                        shift and go to state 66
    IdentifierList                 shift and go to state 241
    PointerType                    shift and go to state 69
    FunctionType                   shift and go to state 70
    Type                           shift and go to state 242
    ParameterDecl                  shift and go to state 244

state 201

    (73) VarSpecRep -> VarSpecRep VarSpec SEMICOL .

    RPAREN          reduce using rule 73 (VarSpecRep -> VarSpecRep VarSpec SEMICOL .)
    IDENTIFIER      reduce using rule 73 (VarSpecRep -> VarSpecRep VarSpec SEMICOL .)


state 202

    (113) ExpressionList -> Expression ExpressionRep .
    (114) ExpressionRep -> ExpressionRep . COMMA Expression

    SEMICOL         reduce using rule 113 (ExpressionList -> Expression ExpressionRep .)
    PLUSEQ          reduce using rule 113 (ExpressionList -> Expression ExpressionRep .)
    MINUSEQ         reduce using rule 113 (ExpressionList -> Expression ExpressionRep .)
    TIMESEQ         reduce using rule 113 (ExpressionList -> Expression ExpressionRep .)
    DIVIDEEQ        reduce using rule 113 (ExpressionList -> Expression ExpressionRep .)
    MODEQ           reduce using rule 113 (ExpressionList -> Expression ExpressionRep .)
    AMPEQ           reduce using rule 113 (ExpressionList -> Expression ExpressionRep .)
    OREQ            reduce using rule 113 (ExpressionList -> Expression ExpressionRep .)
    CAREQ           reduce using rule 113 (ExpressionList -> Expression ExpressionRep .)
    LLEQ            reduce using rule 113 (ExpressionList -> Expression ExpressionRep .)
    GGEQ            reduce using rule 113 (ExpressionList -> Expression ExpressionRep .)
    EQUAL           reduce using rule 113 (ExpressionList -> Expression ExpressionRep .)
    LBRACE          reduce using rule 113 (ExpressionList -> Expression ExpressionRep .)
    RPAREN          reduce using rule 113 (ExpressionList -> Expression ExpressionRep .)
    COMMA           shift and go to state 245


state 203

    (115) ExpressionRep -> epsilon .

    COMMA           reduce using rule 115 (ExpressionRep -> epsilon .)
    PLUSEQ          reduce using rule 115 (ExpressionRep -> epsilon .)
    MINUSEQ         reduce using rule 115 (ExpressionRep -> epsilon .)
    TIMESEQ         reduce using rule 115 (ExpressionRep -> epsilon .)
    DIVIDEEQ        reduce using rule 115 (ExpressionRep -> epsilon .)
    MODEQ           reduce using rule 115 (ExpressionRep -> epsilon .)
    AMPEQ           reduce using rule 115 (ExpressionRep -> epsilon .)
    OREQ            reduce using rule 115 (ExpressionRep -> epsilon .)
    CAREQ           reduce using rule 115 (ExpressionRep -> epsilon .)
    LLEQ            reduce using rule 115 (ExpressionRep -> epsilon .)
    GGEQ            reduce using rule 115 (ExpressionRep -> epsilon .)
    EQUAL           reduce using rule 115 (ExpressionRep -> epsilon .)
    SEMICOL         reduce using rule 115 (ExpressionRep -> epsilon .)
    RPAREN          reduce using rule 115 (ExpressionRep -> epsilon .)
    LBRACE          reduce using rule 115 (ExpressionRep -> epsilon .)


state 204

    (77) ExpressionListOpt -> EQUAL ExpressionList .

    SEMICOL         reduce using rule 77 (ExpressionListOpt -> EQUAL ExpressionList .)


state 205

    (65) TypeSpecRep -> TypeSpecRep TypeSpec SEMICOL .

    RPAREN          reduce using rule 65 (TypeSpecRep -> TypeSpecRep TypeSpec SEMICOL .)
    IDENTIFIER      reduce using rule 65 (TypeSpecRep -> TypeSpecRep TypeSpec SEMICOL .)
    TTYPE           reduce using rule 65 (TypeSpecRep -> TypeSpecRep TypeSpec SEMICOL .)


state 206

    (18) FieldDeclRep -> FieldDeclRep FieldDecl . SEMICOL

    SEMICOL         shift and go to state 246


state 207

    (20) FieldDecl -> IdentifierList . Type TagOpt
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . Pointer BaseType
    (27) FunctionType -> . FUNC Signature
    (25) Pointer -> . POINTER

    LPAREN          shift and go to state 62
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    LBRACK          shift and go to state 67
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53
    POINTER         shift and go to state 59

    StructType                     shift and go to state 60
    Type                           shift and go to state 247
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 57
    Pointer                        shift and go to state 66
    PointerType                    shift and go to state 69
    FunctionType                   shift and go to state 70
    TypeLit                        shift and go to state 56

state 208

    (17) StructType -> STRUCT LBRACE FieldDeclRep RBRACE .

    LPAREN          reduce using rule 17 (StructType -> STRUCT LBRACE FieldDeclRep RBRACE .)
    EQUAL           reduce using rule 17 (StructType -> STRUCT LBRACE FieldDeclRep RBRACE .)
    SEMICOL         reduce using rule 17 (StructType -> STRUCT LBRACE FieldDeclRep RBRACE .)
    RPAREN          reduce using rule 17 (StructType -> STRUCT LBRACE FieldDeclRep RBRACE .)
    LBRACE          reduce using rule 17 (StructType -> STRUCT LBRACE FieldDeclRep RBRACE .)
    COMMA           reduce using rule 17 (StructType -> STRUCT LBRACE FieldDeclRep RBRACE .)
    STRING          reduce using rule 17 (StructType -> STRUCT LBRACE FieldDeclRep RBRACE .)


state 209

    (100) Conversion -> Type LPAREN Expression . RPAREN
    (117) Expression -> Expression . OROR Expression
    (118) Expression -> Expression . AMPAMP Expression
    (119) Expression -> Expression . EQEQ Expression
    (120) Expression -> Expression . NOTEQ Expression
    (121) Expression -> Expression . LESS Expression
    (122) Expression -> Expression . GREAT Expression
    (123) Expression -> Expression . LEQ Expression
    (124) Expression -> Expression . GEQ Expression
    (125) Expression -> Expression . PLUS Expression
    (126) Expression -> Expression . MINUS Expression
    (127) Expression -> Expression . OR Expression
    (128) Expression -> Expression . CARET Expression
    (129) Expression -> Expression . TIMES Expression
    (130) Expression -> Expression . DIVIDE Expression
    (131) Expression -> Expression . MOD Expression
    (132) Expression -> Expression . AMPERS Expression
    (133) Expression -> Expression . LL Expression
    (134) Expression -> Expression . GG Expression
    (135) Expression -> Expression . AMPCAR Expression

    RPAREN          shift and go to state 248
    OROR            shift and go to state 168
    AMPAMP          shift and go to state 183
    EQEQ            shift and go to state 174
    NOTEQ           shift and go to state 180
    LESS            shift and go to state 173
    GREAT           shift and go to state 170
    LEQ             shift and go to state 186
    GEQ             shift and go to state 177
    PLUS            shift and go to state 181
    MINUS           shift and go to state 185
    OR              shift and go to state 178
    CARET           shift and go to state 169
    TIMES           shift and go to state 184
    DIVIDE          shift and go to state 171
    MOD             shift and go to state 182
    AMPERS          shift and go to state 176
    LL              shift and go to state 175
    GG              shift and go to state 179
    AMPCAR          shift and go to state 172


state 210

    (13) ArrayType -> LBRACK ArrayLength RBRACK ElementType .

    LPAREN          reduce using rule 13 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    EQUAL           reduce using rule 13 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    SEMICOL         reduce using rule 13 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    RPAREN          reduce using rule 13 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    LBRACE          reduce using rule 13 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    COMMA           reduce using rule 13 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    STRING          reduce using rule 13 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)


state 211

    (87) Operand -> LPAREN Expression RPAREN .

    DOT             reduce using rule 87 (Operand -> LPAREN Expression RPAREN .)
    LBRACK          reduce using rule 87 (Operand -> LPAREN Expression RPAREN .)
    LPAREN          reduce using rule 87 (Operand -> LPAREN Expression RPAREN .)
    OROR            reduce using rule 87 (Operand -> LPAREN Expression RPAREN .)
    AMPAMP          reduce using rule 87 (Operand -> LPAREN Expression RPAREN .)
    EQEQ            reduce using rule 87 (Operand -> LPAREN Expression RPAREN .)
    NOTEQ           reduce using rule 87 (Operand -> LPAREN Expression RPAREN .)
    LESS            reduce using rule 87 (Operand -> LPAREN Expression RPAREN .)
    GREAT           reduce using rule 87 (Operand -> LPAREN Expression RPAREN .)
    LEQ             reduce using rule 87 (Operand -> LPAREN Expression RPAREN .)
    GEQ             reduce using rule 87 (Operand -> LPAREN Expression RPAREN .)
    PLUS            reduce using rule 87 (Operand -> LPAREN Expression RPAREN .)
    MINUS           reduce using rule 87 (Operand -> LPAREN Expression RPAREN .)
    OR              reduce using rule 87 (Operand -> LPAREN Expression RPAREN .)
    CARET           reduce using rule 87 (Operand -> LPAREN Expression RPAREN .)
    TIMES           reduce using rule 87 (Operand -> LPAREN Expression RPAREN .)
    DIVIDE          reduce using rule 87 (Operand -> LPAREN Expression RPAREN .)
    MOD             reduce using rule 87 (Operand -> LPAREN Expression RPAREN .)
    AMPERS          reduce using rule 87 (Operand -> LPAREN Expression RPAREN .)
    LL              reduce using rule 87 (Operand -> LPAREN Expression RPAREN .)
    GG              reduce using rule 87 (Operand -> LPAREN Expression RPAREN .)
    AMPCAR          reduce using rule 87 (Operand -> LPAREN Expression RPAREN .)
    COMMA           reduce using rule 87 (Operand -> LPAREN Expression RPAREN .)
    RPAREN          reduce using rule 87 (Operand -> LPAREN Expression RPAREN .)
    RBRACK          reduce using rule 87 (Operand -> LPAREN Expression RPAREN .)
    SEMICOL         reduce using rule 87 (Operand -> LPAREN Expression RPAREN .)
    COLON           reduce using rule 87 (Operand -> LPAREN Expression RPAREN .)
    PLUSEQ          reduce using rule 87 (Operand -> LPAREN Expression RPAREN .)
    MINUSEQ         reduce using rule 87 (Operand -> LPAREN Expression RPAREN .)
    TIMESEQ         reduce using rule 87 (Operand -> LPAREN Expression RPAREN .)
    DIVIDEEQ        reduce using rule 87 (Operand -> LPAREN Expression RPAREN .)
    MODEQ           reduce using rule 87 (Operand -> LPAREN Expression RPAREN .)
    AMPEQ           reduce using rule 87 (Operand -> LPAREN Expression RPAREN .)
    OREQ            reduce using rule 87 (Operand -> LPAREN Expression RPAREN .)
    CAREQ           reduce using rule 87 (Operand -> LPAREN Expression RPAREN .)
    LLEQ            reduce using rule 87 (Operand -> LPAREN Expression RPAREN .)
    GGEQ            reduce using rule 87 (Operand -> LPAREN Expression RPAREN .)
    EQUAL           reduce using rule 87 (Operand -> LPAREN Expression RPAREN .)
    LBRACE          reduce using rule 87 (Operand -> LPAREN Expression RPAREN .)
    PLUSPLUS        reduce using rule 87 (Operand -> LPAREN Expression RPAREN .)
    MINUSMIN        reduce using rule 87 (Operand -> LPAREN Expression RPAREN .)


state 212

    (117) Expression -> Expression OROR Expression .
    (117) Expression -> Expression . OROR Expression
    (118) Expression -> Expression . AMPAMP Expression
    (119) Expression -> Expression . EQEQ Expression
    (120) Expression -> Expression . NOTEQ Expression
    (121) Expression -> Expression . LESS Expression
    (122) Expression -> Expression . GREAT Expression
    (123) Expression -> Expression . LEQ Expression
    (124) Expression -> Expression . GEQ Expression
    (125) Expression -> Expression . PLUS Expression
    (126) Expression -> Expression . MINUS Expression
    (127) Expression -> Expression . OR Expression
    (128) Expression -> Expression . CARET Expression
    (129) Expression -> Expression . TIMES Expression
    (130) Expression -> Expression . DIVIDE Expression
    (131) Expression -> Expression . MOD Expression
    (132) Expression -> Expression . AMPERS Expression
    (133) Expression -> Expression . LL Expression
    (134) Expression -> Expression . GG Expression
    (135) Expression -> Expression . AMPCAR Expression

    OROR            reduce using rule 117 (Expression -> Expression OROR Expression .)
    RBRACK          reduce using rule 117 (Expression -> Expression OROR Expression .)
    COMMA           reduce using rule 117 (Expression -> Expression OROR Expression .)
    SEMICOL         reduce using rule 117 (Expression -> Expression OROR Expression .)
    RPAREN          reduce using rule 117 (Expression -> Expression OROR Expression .)
    COLON           reduce using rule 117 (Expression -> Expression OROR Expression .)
    PLUSEQ          reduce using rule 117 (Expression -> Expression OROR Expression .)
    MINUSEQ         reduce using rule 117 (Expression -> Expression OROR Expression .)
    TIMESEQ         reduce using rule 117 (Expression -> Expression OROR Expression .)
    DIVIDEEQ        reduce using rule 117 (Expression -> Expression OROR Expression .)
    MODEQ           reduce using rule 117 (Expression -> Expression OROR Expression .)
    AMPEQ           reduce using rule 117 (Expression -> Expression OROR Expression .)
    OREQ            reduce using rule 117 (Expression -> Expression OROR Expression .)
    CAREQ           reduce using rule 117 (Expression -> Expression OROR Expression .)
    LLEQ            reduce using rule 117 (Expression -> Expression OROR Expression .)
    GGEQ            reduce using rule 117 (Expression -> Expression OROR Expression .)
    EQUAL           reduce using rule 117 (Expression -> Expression OROR Expression .)
    LBRACE          reduce using rule 117 (Expression -> Expression OROR Expression .)
    AMPAMP          shift and go to state 183
    EQEQ            shift and go to state 174
    NOTEQ           shift and go to state 180
    LESS            shift and go to state 173
    GREAT           shift and go to state 170
    LEQ             shift and go to state 186
    GEQ             shift and go to state 177
    PLUS            shift and go to state 181
    MINUS           shift and go to state 185
    OR              shift and go to state 178
    CARET           shift and go to state 169
    TIMES           shift and go to state 184
    DIVIDE          shift and go to state 171
    MOD             shift and go to state 182
    AMPERS          shift and go to state 176
    LL              shift and go to state 175
    GG              shift and go to state 179
    AMPCAR          shift and go to state 172

  ! AMPAMP          [ reduce using rule 117 (Expression -> Expression OROR Expression .) ]
  ! EQEQ            [ reduce using rule 117 (Expression -> Expression OROR Expression .) ]
  ! NOTEQ           [ reduce using rule 117 (Expression -> Expression OROR Expression .) ]
  ! LESS            [ reduce using rule 117 (Expression -> Expression OROR Expression .) ]
  ! GREAT           [ reduce using rule 117 (Expression -> Expression OROR Expression .) ]
  ! LEQ             [ reduce using rule 117 (Expression -> Expression OROR Expression .) ]
  ! GEQ             [ reduce using rule 117 (Expression -> Expression OROR Expression .) ]
  ! PLUS            [ reduce using rule 117 (Expression -> Expression OROR Expression .) ]
  ! MINUS           [ reduce using rule 117 (Expression -> Expression OROR Expression .) ]
  ! OR              [ reduce using rule 117 (Expression -> Expression OROR Expression .) ]
  ! CARET           [ reduce using rule 117 (Expression -> Expression OROR Expression .) ]
  ! TIMES           [ reduce using rule 117 (Expression -> Expression OROR Expression .) ]
  ! DIVIDE          [ reduce using rule 117 (Expression -> Expression OROR Expression .) ]
  ! MOD             [ reduce using rule 117 (Expression -> Expression OROR Expression .) ]
  ! AMPERS          [ reduce using rule 117 (Expression -> Expression OROR Expression .) ]
  ! LL              [ reduce using rule 117 (Expression -> Expression OROR Expression .) ]
  ! GG              [ reduce using rule 117 (Expression -> Expression OROR Expression .) ]
  ! AMPCAR          [ reduce using rule 117 (Expression -> Expression OROR Expression .) ]
  ! OROR            [ shift and go to state 168 ]


state 213

    (128) Expression -> Expression CARET Expression .
    (117) Expression -> Expression . OROR Expression
    (118) Expression -> Expression . AMPAMP Expression
    (119) Expression -> Expression . EQEQ Expression
    (120) Expression -> Expression . NOTEQ Expression
    (121) Expression -> Expression . LESS Expression
    (122) Expression -> Expression . GREAT Expression
    (123) Expression -> Expression . LEQ Expression
    (124) Expression -> Expression . GEQ Expression
    (125) Expression -> Expression . PLUS Expression
    (126) Expression -> Expression . MINUS Expression
    (127) Expression -> Expression . OR Expression
    (128) Expression -> Expression . CARET Expression
    (129) Expression -> Expression . TIMES Expression
    (130) Expression -> Expression . DIVIDE Expression
    (131) Expression -> Expression . MOD Expression
    (132) Expression -> Expression . AMPERS Expression
    (133) Expression -> Expression . LL Expression
    (134) Expression -> Expression . GG Expression
    (135) Expression -> Expression . AMPCAR Expression

    OROR            reduce using rule 128 (Expression -> Expression CARET Expression .)
    AMPAMP          reduce using rule 128 (Expression -> Expression CARET Expression .)
    EQEQ            reduce using rule 128 (Expression -> Expression CARET Expression .)
    NOTEQ           reduce using rule 128 (Expression -> Expression CARET Expression .)
    LESS            reduce using rule 128 (Expression -> Expression CARET Expression .)
    GREAT           reduce using rule 128 (Expression -> Expression CARET Expression .)
    LEQ             reduce using rule 128 (Expression -> Expression CARET Expression .)
    GEQ             reduce using rule 128 (Expression -> Expression CARET Expression .)
    PLUS            reduce using rule 128 (Expression -> Expression CARET Expression .)
    MINUS           reduce using rule 128 (Expression -> Expression CARET Expression .)
    OR              reduce using rule 128 (Expression -> Expression CARET Expression .)
    CARET           reduce using rule 128 (Expression -> Expression CARET Expression .)
    RBRACK          reduce using rule 128 (Expression -> Expression CARET Expression .)
    COMMA           reduce using rule 128 (Expression -> Expression CARET Expression .)
    SEMICOL         reduce using rule 128 (Expression -> Expression CARET Expression .)
    RPAREN          reduce using rule 128 (Expression -> Expression CARET Expression .)
    COLON           reduce using rule 128 (Expression -> Expression CARET Expression .)
    PLUSEQ          reduce using rule 128 (Expression -> Expression CARET Expression .)
    MINUSEQ         reduce using rule 128 (Expression -> Expression CARET Expression .)
    TIMESEQ         reduce using rule 128 (Expression -> Expression CARET Expression .)
    DIVIDEEQ        reduce using rule 128 (Expression -> Expression CARET Expression .)
    MODEQ           reduce using rule 128 (Expression -> Expression CARET Expression .)
    AMPEQ           reduce using rule 128 (Expression -> Expression CARET Expression .)
    OREQ            reduce using rule 128 (Expression -> Expression CARET Expression .)
    CAREQ           reduce using rule 128 (Expression -> Expression CARET Expression .)
    LLEQ            reduce using rule 128 (Expression -> Expression CARET Expression .)
    GGEQ            reduce using rule 128 (Expression -> Expression CARET Expression .)
    EQUAL           reduce using rule 128 (Expression -> Expression CARET Expression .)
    LBRACE          reduce using rule 128 (Expression -> Expression CARET Expression .)
    TIMES           shift and go to state 184
    DIVIDE          shift and go to state 171
    MOD             shift and go to state 182
    AMPERS          shift and go to state 176
    LL              shift and go to state 175
    GG              shift and go to state 179
    AMPCAR          shift and go to state 172

  ! TIMES           [ reduce using rule 128 (Expression -> Expression CARET Expression .) ]
  ! DIVIDE          [ reduce using rule 128 (Expression -> Expression CARET Expression .) ]
  ! MOD             [ reduce using rule 128 (Expression -> Expression CARET Expression .) ]
  ! AMPERS          [ reduce using rule 128 (Expression -> Expression CARET Expression .) ]
  ! LL              [ reduce using rule 128 (Expression -> Expression CARET Expression .) ]
  ! GG              [ reduce using rule 128 (Expression -> Expression CARET Expression .) ]
  ! AMPCAR          [ reduce using rule 128 (Expression -> Expression CARET Expression .) ]
  ! OROR            [ shift and go to state 168 ]
  ! AMPAMP          [ shift and go to state 183 ]
  ! EQEQ            [ shift and go to state 174 ]
  ! NOTEQ           [ shift and go to state 180 ]
  ! LESS            [ shift and go to state 173 ]
  ! GREAT           [ shift and go to state 170 ]
  ! LEQ             [ shift and go to state 186 ]
  ! GEQ             [ shift and go to state 177 ]
  ! PLUS            [ shift and go to state 181 ]
  ! MINUS           [ shift and go to state 185 ]
  ! OR              [ shift and go to state 178 ]
  ! CARET           [ shift and go to state 169 ]


state 214

    (122) Expression -> Expression GREAT Expression .
    (117) Expression -> Expression . OROR Expression
    (118) Expression -> Expression . AMPAMP Expression
    (119) Expression -> Expression . EQEQ Expression
    (120) Expression -> Expression . NOTEQ Expression
    (121) Expression -> Expression . LESS Expression
    (122) Expression -> Expression . GREAT Expression
    (123) Expression -> Expression . LEQ Expression
    (124) Expression -> Expression . GEQ Expression
    (125) Expression -> Expression . PLUS Expression
    (126) Expression -> Expression . MINUS Expression
    (127) Expression -> Expression . OR Expression
    (128) Expression -> Expression . CARET Expression
    (129) Expression -> Expression . TIMES Expression
    (130) Expression -> Expression . DIVIDE Expression
    (131) Expression -> Expression . MOD Expression
    (132) Expression -> Expression . AMPERS Expression
    (133) Expression -> Expression . LL Expression
    (134) Expression -> Expression . GG Expression
    (135) Expression -> Expression . AMPCAR Expression

    OROR            reduce using rule 122 (Expression -> Expression GREAT Expression .)
    AMPAMP          reduce using rule 122 (Expression -> Expression GREAT Expression .)
    EQEQ            reduce using rule 122 (Expression -> Expression GREAT Expression .)
    NOTEQ           reduce using rule 122 (Expression -> Expression GREAT Expression .)
    LESS            reduce using rule 122 (Expression -> Expression GREAT Expression .)
    GREAT           reduce using rule 122 (Expression -> Expression GREAT Expression .)
    LEQ             reduce using rule 122 (Expression -> Expression GREAT Expression .)
    GEQ             reduce using rule 122 (Expression -> Expression GREAT Expression .)
    RBRACK          reduce using rule 122 (Expression -> Expression GREAT Expression .)
    COMMA           reduce using rule 122 (Expression -> Expression GREAT Expression .)
    SEMICOL         reduce using rule 122 (Expression -> Expression GREAT Expression .)
    RPAREN          reduce using rule 122 (Expression -> Expression GREAT Expression .)
    COLON           reduce using rule 122 (Expression -> Expression GREAT Expression .)
    PLUSEQ          reduce using rule 122 (Expression -> Expression GREAT Expression .)
    MINUSEQ         reduce using rule 122 (Expression -> Expression GREAT Expression .)
    TIMESEQ         reduce using rule 122 (Expression -> Expression GREAT Expression .)
    DIVIDEEQ        reduce using rule 122 (Expression -> Expression GREAT Expression .)
    MODEQ           reduce using rule 122 (Expression -> Expression GREAT Expression .)
    AMPEQ           reduce using rule 122 (Expression -> Expression GREAT Expression .)
    OREQ            reduce using rule 122 (Expression -> Expression GREAT Expression .)
    CAREQ           reduce using rule 122 (Expression -> Expression GREAT Expression .)
    LLEQ            reduce using rule 122 (Expression -> Expression GREAT Expression .)
    GGEQ            reduce using rule 122 (Expression -> Expression GREAT Expression .)
    EQUAL           reduce using rule 122 (Expression -> Expression GREAT Expression .)
    LBRACE          reduce using rule 122 (Expression -> Expression GREAT Expression .)
    PLUS            shift and go to state 181
    MINUS           shift and go to state 185
    OR              shift and go to state 178
    CARET           shift and go to state 169
    TIMES           shift and go to state 184
    DIVIDE          shift and go to state 171
    MOD             shift and go to state 182
    AMPERS          shift and go to state 176
    LL              shift and go to state 175
    GG              shift and go to state 179
    AMPCAR          shift and go to state 172

  ! PLUS            [ reduce using rule 122 (Expression -> Expression GREAT Expression .) ]
  ! MINUS           [ reduce using rule 122 (Expression -> Expression GREAT Expression .) ]
  ! OR              [ reduce using rule 122 (Expression -> Expression GREAT Expression .) ]
  ! CARET           [ reduce using rule 122 (Expression -> Expression GREAT Expression .) ]
  ! TIMES           [ reduce using rule 122 (Expression -> Expression GREAT Expression .) ]
  ! DIVIDE          [ reduce using rule 122 (Expression -> Expression GREAT Expression .) ]
  ! MOD             [ reduce using rule 122 (Expression -> Expression GREAT Expression .) ]
  ! AMPERS          [ reduce using rule 122 (Expression -> Expression GREAT Expression .) ]
  ! LL              [ reduce using rule 122 (Expression -> Expression GREAT Expression .) ]
  ! GG              [ reduce using rule 122 (Expression -> Expression GREAT Expression .) ]
  ! AMPCAR          [ reduce using rule 122 (Expression -> Expression GREAT Expression .) ]
  ! OROR            [ shift and go to state 168 ]
  ! AMPAMP          [ shift and go to state 183 ]
  ! EQEQ            [ shift and go to state 174 ]
  ! NOTEQ           [ shift and go to state 180 ]
  ! LESS            [ shift and go to state 173 ]
  ! GREAT           [ shift and go to state 170 ]
  ! LEQ             [ shift and go to state 186 ]
  ! GEQ             [ shift and go to state 177 ]


state 215

    (130) Expression -> Expression DIVIDE Expression .
    (117) Expression -> Expression . OROR Expression
    (118) Expression -> Expression . AMPAMP Expression
    (119) Expression -> Expression . EQEQ Expression
    (120) Expression -> Expression . NOTEQ Expression
    (121) Expression -> Expression . LESS Expression
    (122) Expression -> Expression . GREAT Expression
    (123) Expression -> Expression . LEQ Expression
    (124) Expression -> Expression . GEQ Expression
    (125) Expression -> Expression . PLUS Expression
    (126) Expression -> Expression . MINUS Expression
    (127) Expression -> Expression . OR Expression
    (128) Expression -> Expression . CARET Expression
    (129) Expression -> Expression . TIMES Expression
    (130) Expression -> Expression . DIVIDE Expression
    (131) Expression -> Expression . MOD Expression
    (132) Expression -> Expression . AMPERS Expression
    (133) Expression -> Expression . LL Expression
    (134) Expression -> Expression . GG Expression
    (135) Expression -> Expression . AMPCAR Expression

    OROR            reduce using rule 130 (Expression -> Expression DIVIDE Expression .)
    AMPAMP          reduce using rule 130 (Expression -> Expression DIVIDE Expression .)
    EQEQ            reduce using rule 130 (Expression -> Expression DIVIDE Expression .)
    NOTEQ           reduce using rule 130 (Expression -> Expression DIVIDE Expression .)
    LESS            reduce using rule 130 (Expression -> Expression DIVIDE Expression .)
    GREAT           reduce using rule 130 (Expression -> Expression DIVIDE Expression .)
    LEQ             reduce using rule 130 (Expression -> Expression DIVIDE Expression .)
    GEQ             reduce using rule 130 (Expression -> Expression DIVIDE Expression .)
    PLUS            reduce using rule 130 (Expression -> Expression DIVIDE Expression .)
    MINUS           reduce using rule 130 (Expression -> Expression DIVIDE Expression .)
    OR              reduce using rule 130 (Expression -> Expression DIVIDE Expression .)
    CARET           reduce using rule 130 (Expression -> Expression DIVIDE Expression .)
    TIMES           reduce using rule 130 (Expression -> Expression DIVIDE Expression .)
    DIVIDE          reduce using rule 130 (Expression -> Expression DIVIDE Expression .)
    MOD             reduce using rule 130 (Expression -> Expression DIVIDE Expression .)
    AMPERS          reduce using rule 130 (Expression -> Expression DIVIDE Expression .)
    LL              reduce using rule 130 (Expression -> Expression DIVIDE Expression .)
    GG              reduce using rule 130 (Expression -> Expression DIVIDE Expression .)
    AMPCAR          reduce using rule 130 (Expression -> Expression DIVIDE Expression .)
    RBRACK          reduce using rule 130 (Expression -> Expression DIVIDE Expression .)
    COMMA           reduce using rule 130 (Expression -> Expression DIVIDE Expression .)
    SEMICOL         reduce using rule 130 (Expression -> Expression DIVIDE Expression .)
    RPAREN          reduce using rule 130 (Expression -> Expression DIVIDE Expression .)
    COLON           reduce using rule 130 (Expression -> Expression DIVIDE Expression .)
    PLUSEQ          reduce using rule 130 (Expression -> Expression DIVIDE Expression .)
    MINUSEQ         reduce using rule 130 (Expression -> Expression DIVIDE Expression .)
    TIMESEQ         reduce using rule 130 (Expression -> Expression DIVIDE Expression .)
    DIVIDEEQ        reduce using rule 130 (Expression -> Expression DIVIDE Expression .)
    MODEQ           reduce using rule 130 (Expression -> Expression DIVIDE Expression .)
    AMPEQ           reduce using rule 130 (Expression -> Expression DIVIDE Expression .)
    OREQ            reduce using rule 130 (Expression -> Expression DIVIDE Expression .)
    CAREQ           reduce using rule 130 (Expression -> Expression DIVIDE Expression .)
    LLEQ            reduce using rule 130 (Expression -> Expression DIVIDE Expression .)
    GGEQ            reduce using rule 130 (Expression -> Expression DIVIDE Expression .)
    EQUAL           reduce using rule 130 (Expression -> Expression DIVIDE Expression .)
    LBRACE          reduce using rule 130 (Expression -> Expression DIVIDE Expression .)

  ! OROR            [ shift and go to state 168 ]
  ! AMPAMP          [ shift and go to state 183 ]
  ! EQEQ            [ shift and go to state 174 ]
  ! NOTEQ           [ shift and go to state 180 ]
  ! LESS            [ shift and go to state 173 ]
  ! GREAT           [ shift and go to state 170 ]
  ! LEQ             [ shift and go to state 186 ]
  ! GEQ             [ shift and go to state 177 ]
  ! PLUS            [ shift and go to state 181 ]
  ! MINUS           [ shift and go to state 185 ]
  ! OR              [ shift and go to state 178 ]
  ! CARET           [ shift and go to state 169 ]
  ! TIMES           [ shift and go to state 184 ]
  ! DIVIDE          [ shift and go to state 171 ]
  ! MOD             [ shift and go to state 182 ]
  ! AMPERS          [ shift and go to state 176 ]
  ! LL              [ shift and go to state 175 ]
  ! GG              [ shift and go to state 179 ]
  ! AMPCAR          [ shift and go to state 172 ]


state 216

    (135) Expression -> Expression AMPCAR Expression .
    (117) Expression -> Expression . OROR Expression
    (118) Expression -> Expression . AMPAMP Expression
    (119) Expression -> Expression . EQEQ Expression
    (120) Expression -> Expression . NOTEQ Expression
    (121) Expression -> Expression . LESS Expression
    (122) Expression -> Expression . GREAT Expression
    (123) Expression -> Expression . LEQ Expression
    (124) Expression -> Expression . GEQ Expression
    (125) Expression -> Expression . PLUS Expression
    (126) Expression -> Expression . MINUS Expression
    (127) Expression -> Expression . OR Expression
    (128) Expression -> Expression . CARET Expression
    (129) Expression -> Expression . TIMES Expression
    (130) Expression -> Expression . DIVIDE Expression
    (131) Expression -> Expression . MOD Expression
    (132) Expression -> Expression . AMPERS Expression
    (133) Expression -> Expression . LL Expression
    (134) Expression -> Expression . GG Expression
    (135) Expression -> Expression . AMPCAR Expression

    OROR            reduce using rule 135 (Expression -> Expression AMPCAR Expression .)
    AMPAMP          reduce using rule 135 (Expression -> Expression AMPCAR Expression .)
    EQEQ            reduce using rule 135 (Expression -> Expression AMPCAR Expression .)
    NOTEQ           reduce using rule 135 (Expression -> Expression AMPCAR Expression .)
    LESS            reduce using rule 135 (Expression -> Expression AMPCAR Expression .)
    GREAT           reduce using rule 135 (Expression -> Expression AMPCAR Expression .)
    LEQ             reduce using rule 135 (Expression -> Expression AMPCAR Expression .)
    GEQ             reduce using rule 135 (Expression -> Expression AMPCAR Expression .)
    PLUS            reduce using rule 135 (Expression -> Expression AMPCAR Expression .)
    MINUS           reduce using rule 135 (Expression -> Expression AMPCAR Expression .)
    OR              reduce using rule 135 (Expression -> Expression AMPCAR Expression .)
    CARET           reduce using rule 135 (Expression -> Expression AMPCAR Expression .)
    TIMES           reduce using rule 135 (Expression -> Expression AMPCAR Expression .)
    DIVIDE          reduce using rule 135 (Expression -> Expression AMPCAR Expression .)
    MOD             reduce using rule 135 (Expression -> Expression AMPCAR Expression .)
    AMPERS          reduce using rule 135 (Expression -> Expression AMPCAR Expression .)
    LL              reduce using rule 135 (Expression -> Expression AMPCAR Expression .)
    GG              reduce using rule 135 (Expression -> Expression AMPCAR Expression .)
    AMPCAR          reduce using rule 135 (Expression -> Expression AMPCAR Expression .)
    RBRACK          reduce using rule 135 (Expression -> Expression AMPCAR Expression .)
    COMMA           reduce using rule 135 (Expression -> Expression AMPCAR Expression .)
    SEMICOL         reduce using rule 135 (Expression -> Expression AMPCAR Expression .)
    RPAREN          reduce using rule 135 (Expression -> Expression AMPCAR Expression .)
    COLON           reduce using rule 135 (Expression -> Expression AMPCAR Expression .)
    PLUSEQ          reduce using rule 135 (Expression -> Expression AMPCAR Expression .)
    MINUSEQ         reduce using rule 135 (Expression -> Expression AMPCAR Expression .)
    TIMESEQ         reduce using rule 135 (Expression -> Expression AMPCAR Expression .)
    DIVIDEEQ        reduce using rule 135 (Expression -> Expression AMPCAR Expression .)
    MODEQ           reduce using rule 135 (Expression -> Expression AMPCAR Expression .)
    AMPEQ           reduce using rule 135 (Expression -> Expression AMPCAR Expression .)
    OREQ            reduce using rule 135 (Expression -> Expression AMPCAR Expression .)
    CAREQ           reduce using rule 135 (Expression -> Expression AMPCAR Expression .)
    LLEQ            reduce using rule 135 (Expression -> Expression AMPCAR Expression .)
    GGEQ            reduce using rule 135 (Expression -> Expression AMPCAR Expression .)
    EQUAL           reduce using rule 135 (Expression -> Expression AMPCAR Expression .)
    LBRACE          reduce using rule 135 (Expression -> Expression AMPCAR Expression .)

  ! OROR            [ shift and go to state 168 ]
  ! AMPAMP          [ shift and go to state 183 ]
  ! EQEQ            [ shift and go to state 174 ]
  ! NOTEQ           [ shift and go to state 180 ]
  ! LESS            [ shift and go to state 173 ]
  ! GREAT           [ shift and go to state 170 ]
  ! LEQ             [ shift and go to state 186 ]
  ! GEQ             [ shift and go to state 177 ]
  ! PLUS            [ shift and go to state 181 ]
  ! MINUS           [ shift and go to state 185 ]
  ! OR              [ shift and go to state 178 ]
  ! CARET           [ shift and go to state 169 ]
  ! TIMES           [ shift and go to state 184 ]
  ! DIVIDE          [ shift and go to state 171 ]
  ! MOD             [ shift and go to state 182 ]
  ! AMPERS          [ shift and go to state 176 ]
  ! LL              [ shift and go to state 175 ]
  ! GG              [ shift and go to state 179 ]
  ! AMPCAR          [ shift and go to state 172 ]


state 217

    (121) Expression -> Expression LESS Expression .
    (117) Expression -> Expression . OROR Expression
    (118) Expression -> Expression . AMPAMP Expression
    (119) Expression -> Expression . EQEQ Expression
    (120) Expression -> Expression . NOTEQ Expression
    (121) Expression -> Expression . LESS Expression
    (122) Expression -> Expression . GREAT Expression
    (123) Expression -> Expression . LEQ Expression
    (124) Expression -> Expression . GEQ Expression
    (125) Expression -> Expression . PLUS Expression
    (126) Expression -> Expression . MINUS Expression
    (127) Expression -> Expression . OR Expression
    (128) Expression -> Expression . CARET Expression
    (129) Expression -> Expression . TIMES Expression
    (130) Expression -> Expression . DIVIDE Expression
    (131) Expression -> Expression . MOD Expression
    (132) Expression -> Expression . AMPERS Expression
    (133) Expression -> Expression . LL Expression
    (134) Expression -> Expression . GG Expression
    (135) Expression -> Expression . AMPCAR Expression

    OROR            reduce using rule 121 (Expression -> Expression LESS Expression .)
    AMPAMP          reduce using rule 121 (Expression -> Expression LESS Expression .)
    EQEQ            reduce using rule 121 (Expression -> Expression LESS Expression .)
    NOTEQ           reduce using rule 121 (Expression -> Expression LESS Expression .)
    LESS            reduce using rule 121 (Expression -> Expression LESS Expression .)
    GREAT           reduce using rule 121 (Expression -> Expression LESS Expression .)
    LEQ             reduce using rule 121 (Expression -> Expression LESS Expression .)
    GEQ             reduce using rule 121 (Expression -> Expression LESS Expression .)
    RBRACK          reduce using rule 121 (Expression -> Expression LESS Expression .)
    COMMA           reduce using rule 121 (Expression -> Expression LESS Expression .)
    SEMICOL         reduce using rule 121 (Expression -> Expression LESS Expression .)
    RPAREN          reduce using rule 121 (Expression -> Expression LESS Expression .)
    COLON           reduce using rule 121 (Expression -> Expression LESS Expression .)
    PLUSEQ          reduce using rule 121 (Expression -> Expression LESS Expression .)
    MINUSEQ         reduce using rule 121 (Expression -> Expression LESS Expression .)
    TIMESEQ         reduce using rule 121 (Expression -> Expression LESS Expression .)
    DIVIDEEQ        reduce using rule 121 (Expression -> Expression LESS Expression .)
    MODEQ           reduce using rule 121 (Expression -> Expression LESS Expression .)
    AMPEQ           reduce using rule 121 (Expression -> Expression LESS Expression .)
    OREQ            reduce using rule 121 (Expression -> Expression LESS Expression .)
    CAREQ           reduce using rule 121 (Expression -> Expression LESS Expression .)
    LLEQ            reduce using rule 121 (Expression -> Expression LESS Expression .)
    GGEQ            reduce using rule 121 (Expression -> Expression LESS Expression .)
    EQUAL           reduce using rule 121 (Expression -> Expression LESS Expression .)
    LBRACE          reduce using rule 121 (Expression -> Expression LESS Expression .)
    PLUS            shift and go to state 181
    MINUS           shift and go to state 185
    OR              shift and go to state 178
    CARET           shift and go to state 169
    TIMES           shift and go to state 184
    DIVIDE          shift and go to state 171
    MOD             shift and go to state 182
    AMPERS          shift and go to state 176
    LL              shift and go to state 175
    GG              shift and go to state 179
    AMPCAR          shift and go to state 172

  ! PLUS            [ reduce using rule 121 (Expression -> Expression LESS Expression .) ]
  ! MINUS           [ reduce using rule 121 (Expression -> Expression LESS Expression .) ]
  ! OR              [ reduce using rule 121 (Expression -> Expression LESS Expression .) ]
  ! CARET           [ reduce using rule 121 (Expression -> Expression LESS Expression .) ]
  ! TIMES           [ reduce using rule 121 (Expression -> Expression LESS Expression .) ]
  ! DIVIDE          [ reduce using rule 121 (Expression -> Expression LESS Expression .) ]
  ! MOD             [ reduce using rule 121 (Expression -> Expression LESS Expression .) ]
  ! AMPERS          [ reduce using rule 121 (Expression -> Expression LESS Expression .) ]
  ! LL              [ reduce using rule 121 (Expression -> Expression LESS Expression .) ]
  ! GG              [ reduce using rule 121 (Expression -> Expression LESS Expression .) ]
  ! AMPCAR          [ reduce using rule 121 (Expression -> Expression LESS Expression .) ]
  ! OROR            [ shift and go to state 168 ]
  ! AMPAMP          [ shift and go to state 183 ]
  ! EQEQ            [ shift and go to state 174 ]
  ! NOTEQ           [ shift and go to state 180 ]
  ! LESS            [ shift and go to state 173 ]
  ! GREAT           [ shift and go to state 170 ]
  ! LEQ             [ shift and go to state 186 ]
  ! GEQ             [ shift and go to state 177 ]


state 218

    (119) Expression -> Expression EQEQ Expression .
    (117) Expression -> Expression . OROR Expression
    (118) Expression -> Expression . AMPAMP Expression
    (119) Expression -> Expression . EQEQ Expression
    (120) Expression -> Expression . NOTEQ Expression
    (121) Expression -> Expression . LESS Expression
    (122) Expression -> Expression . GREAT Expression
    (123) Expression -> Expression . LEQ Expression
    (124) Expression -> Expression . GEQ Expression
    (125) Expression -> Expression . PLUS Expression
    (126) Expression -> Expression . MINUS Expression
    (127) Expression -> Expression . OR Expression
    (128) Expression -> Expression . CARET Expression
    (129) Expression -> Expression . TIMES Expression
    (130) Expression -> Expression . DIVIDE Expression
    (131) Expression -> Expression . MOD Expression
    (132) Expression -> Expression . AMPERS Expression
    (133) Expression -> Expression . LL Expression
    (134) Expression -> Expression . GG Expression
    (135) Expression -> Expression . AMPCAR Expression

    OROR            reduce using rule 119 (Expression -> Expression EQEQ Expression .)
    AMPAMP          reduce using rule 119 (Expression -> Expression EQEQ Expression .)
    EQEQ            reduce using rule 119 (Expression -> Expression EQEQ Expression .)
    NOTEQ           reduce using rule 119 (Expression -> Expression EQEQ Expression .)
    LESS            reduce using rule 119 (Expression -> Expression EQEQ Expression .)
    GREAT           reduce using rule 119 (Expression -> Expression EQEQ Expression .)
    LEQ             reduce using rule 119 (Expression -> Expression EQEQ Expression .)
    GEQ             reduce using rule 119 (Expression -> Expression EQEQ Expression .)
    RBRACK          reduce using rule 119 (Expression -> Expression EQEQ Expression .)
    COMMA           reduce using rule 119 (Expression -> Expression EQEQ Expression .)
    SEMICOL         reduce using rule 119 (Expression -> Expression EQEQ Expression .)
    RPAREN          reduce using rule 119 (Expression -> Expression EQEQ Expression .)
    COLON           reduce using rule 119 (Expression -> Expression EQEQ Expression .)
    PLUSEQ          reduce using rule 119 (Expression -> Expression EQEQ Expression .)
    MINUSEQ         reduce using rule 119 (Expression -> Expression EQEQ Expression .)
    TIMESEQ         reduce using rule 119 (Expression -> Expression EQEQ Expression .)
    DIVIDEEQ        reduce using rule 119 (Expression -> Expression EQEQ Expression .)
    MODEQ           reduce using rule 119 (Expression -> Expression EQEQ Expression .)
    AMPEQ           reduce using rule 119 (Expression -> Expression EQEQ Expression .)
    OREQ            reduce using rule 119 (Expression -> Expression EQEQ Expression .)
    CAREQ           reduce using rule 119 (Expression -> Expression EQEQ Expression .)
    LLEQ            reduce using rule 119 (Expression -> Expression EQEQ Expression .)
    GGEQ            reduce using rule 119 (Expression -> Expression EQEQ Expression .)
    EQUAL           reduce using rule 119 (Expression -> Expression EQEQ Expression .)
    LBRACE          reduce using rule 119 (Expression -> Expression EQEQ Expression .)
    PLUS            shift and go to state 181
    MINUS           shift and go to state 185
    OR              shift and go to state 178
    CARET           shift and go to state 169
    TIMES           shift and go to state 184
    DIVIDE          shift and go to state 171
    MOD             shift and go to state 182
    AMPERS          shift and go to state 176
    LL              shift and go to state 175
    GG              shift and go to state 179
    AMPCAR          shift and go to state 172

  ! PLUS            [ reduce using rule 119 (Expression -> Expression EQEQ Expression .) ]
  ! MINUS           [ reduce using rule 119 (Expression -> Expression EQEQ Expression .) ]
  ! OR              [ reduce using rule 119 (Expression -> Expression EQEQ Expression .) ]
  ! CARET           [ reduce using rule 119 (Expression -> Expression EQEQ Expression .) ]
  ! TIMES           [ reduce using rule 119 (Expression -> Expression EQEQ Expression .) ]
  ! DIVIDE          [ reduce using rule 119 (Expression -> Expression EQEQ Expression .) ]
  ! MOD             [ reduce using rule 119 (Expression -> Expression EQEQ Expression .) ]
  ! AMPERS          [ reduce using rule 119 (Expression -> Expression EQEQ Expression .) ]
  ! LL              [ reduce using rule 119 (Expression -> Expression EQEQ Expression .) ]
  ! GG              [ reduce using rule 119 (Expression -> Expression EQEQ Expression .) ]
  ! AMPCAR          [ reduce using rule 119 (Expression -> Expression EQEQ Expression .) ]
  ! OROR            [ shift and go to state 168 ]
  ! AMPAMP          [ shift and go to state 183 ]
  ! EQEQ            [ shift and go to state 174 ]
  ! NOTEQ           [ shift and go to state 180 ]
  ! LESS            [ shift and go to state 173 ]
  ! GREAT           [ shift and go to state 170 ]
  ! LEQ             [ shift and go to state 186 ]
  ! GEQ             [ shift and go to state 177 ]


state 219

    (133) Expression -> Expression LL Expression .
    (117) Expression -> Expression . OROR Expression
    (118) Expression -> Expression . AMPAMP Expression
    (119) Expression -> Expression . EQEQ Expression
    (120) Expression -> Expression . NOTEQ Expression
    (121) Expression -> Expression . LESS Expression
    (122) Expression -> Expression . GREAT Expression
    (123) Expression -> Expression . LEQ Expression
    (124) Expression -> Expression . GEQ Expression
    (125) Expression -> Expression . PLUS Expression
    (126) Expression -> Expression . MINUS Expression
    (127) Expression -> Expression . OR Expression
    (128) Expression -> Expression . CARET Expression
    (129) Expression -> Expression . TIMES Expression
    (130) Expression -> Expression . DIVIDE Expression
    (131) Expression -> Expression . MOD Expression
    (132) Expression -> Expression . AMPERS Expression
    (133) Expression -> Expression . LL Expression
    (134) Expression -> Expression . GG Expression
    (135) Expression -> Expression . AMPCAR Expression

    OROR            reduce using rule 133 (Expression -> Expression LL Expression .)
    AMPAMP          reduce using rule 133 (Expression -> Expression LL Expression .)
    EQEQ            reduce using rule 133 (Expression -> Expression LL Expression .)
    NOTEQ           reduce using rule 133 (Expression -> Expression LL Expression .)
    LESS            reduce using rule 133 (Expression -> Expression LL Expression .)
    GREAT           reduce using rule 133 (Expression -> Expression LL Expression .)
    LEQ             reduce using rule 133 (Expression -> Expression LL Expression .)
    GEQ             reduce using rule 133 (Expression -> Expression LL Expression .)
    PLUS            reduce using rule 133 (Expression -> Expression LL Expression .)
    MINUS           reduce using rule 133 (Expression -> Expression LL Expression .)
    OR              reduce using rule 133 (Expression -> Expression LL Expression .)
    CARET           reduce using rule 133 (Expression -> Expression LL Expression .)
    TIMES           reduce using rule 133 (Expression -> Expression LL Expression .)
    DIVIDE          reduce using rule 133 (Expression -> Expression LL Expression .)
    MOD             reduce using rule 133 (Expression -> Expression LL Expression .)
    AMPERS          reduce using rule 133 (Expression -> Expression LL Expression .)
    LL              reduce using rule 133 (Expression -> Expression LL Expression .)
    GG              reduce using rule 133 (Expression -> Expression LL Expression .)
    AMPCAR          reduce using rule 133 (Expression -> Expression LL Expression .)
    RBRACK          reduce using rule 133 (Expression -> Expression LL Expression .)
    COMMA           reduce using rule 133 (Expression -> Expression LL Expression .)
    SEMICOL         reduce using rule 133 (Expression -> Expression LL Expression .)
    RPAREN          reduce using rule 133 (Expression -> Expression LL Expression .)
    COLON           reduce using rule 133 (Expression -> Expression LL Expression .)
    PLUSEQ          reduce using rule 133 (Expression -> Expression LL Expression .)
    MINUSEQ         reduce using rule 133 (Expression -> Expression LL Expression .)
    TIMESEQ         reduce using rule 133 (Expression -> Expression LL Expression .)
    DIVIDEEQ        reduce using rule 133 (Expression -> Expression LL Expression .)
    MODEQ           reduce using rule 133 (Expression -> Expression LL Expression .)
    AMPEQ           reduce using rule 133 (Expression -> Expression LL Expression .)
    OREQ            reduce using rule 133 (Expression -> Expression LL Expression .)
    CAREQ           reduce using rule 133 (Expression -> Expression LL Expression .)
    LLEQ            reduce using rule 133 (Expression -> Expression LL Expression .)
    GGEQ            reduce using rule 133 (Expression -> Expression LL Expression .)
    EQUAL           reduce using rule 133 (Expression -> Expression LL Expression .)
    LBRACE          reduce using rule 133 (Expression -> Expression LL Expression .)

  ! OROR            [ shift and go to state 168 ]
  ! AMPAMP          [ shift and go to state 183 ]
  ! EQEQ            [ shift and go to state 174 ]
  ! NOTEQ           [ shift and go to state 180 ]
  ! LESS            [ shift and go to state 173 ]
  ! GREAT           [ shift and go to state 170 ]
  ! LEQ             [ shift and go to state 186 ]
  ! GEQ             [ shift and go to state 177 ]
  ! PLUS            [ shift and go to state 181 ]
  ! MINUS           [ shift and go to state 185 ]
  ! OR              [ shift and go to state 178 ]
  ! CARET           [ shift and go to state 169 ]
  ! TIMES           [ shift and go to state 184 ]
  ! DIVIDE          [ shift and go to state 171 ]
  ! MOD             [ shift and go to state 182 ]
  ! AMPERS          [ shift and go to state 176 ]
  ! LL              [ shift and go to state 175 ]
  ! GG              [ shift and go to state 179 ]
  ! AMPCAR          [ shift and go to state 172 ]


state 220

    (132) Expression -> Expression AMPERS Expression .
    (117) Expression -> Expression . OROR Expression
    (118) Expression -> Expression . AMPAMP Expression
    (119) Expression -> Expression . EQEQ Expression
    (120) Expression -> Expression . NOTEQ Expression
    (121) Expression -> Expression . LESS Expression
    (122) Expression -> Expression . GREAT Expression
    (123) Expression -> Expression . LEQ Expression
    (124) Expression -> Expression . GEQ Expression
    (125) Expression -> Expression . PLUS Expression
    (126) Expression -> Expression . MINUS Expression
    (127) Expression -> Expression . OR Expression
    (128) Expression -> Expression . CARET Expression
    (129) Expression -> Expression . TIMES Expression
    (130) Expression -> Expression . DIVIDE Expression
    (131) Expression -> Expression . MOD Expression
    (132) Expression -> Expression . AMPERS Expression
    (133) Expression -> Expression . LL Expression
    (134) Expression -> Expression . GG Expression
    (135) Expression -> Expression . AMPCAR Expression

    OROR            reduce using rule 132 (Expression -> Expression AMPERS Expression .)
    AMPAMP          reduce using rule 132 (Expression -> Expression AMPERS Expression .)
    EQEQ            reduce using rule 132 (Expression -> Expression AMPERS Expression .)
    NOTEQ           reduce using rule 132 (Expression -> Expression AMPERS Expression .)
    LESS            reduce using rule 132 (Expression -> Expression AMPERS Expression .)
    GREAT           reduce using rule 132 (Expression -> Expression AMPERS Expression .)
    LEQ             reduce using rule 132 (Expression -> Expression AMPERS Expression .)
    GEQ             reduce using rule 132 (Expression -> Expression AMPERS Expression .)
    PLUS            reduce using rule 132 (Expression -> Expression AMPERS Expression .)
    MINUS           reduce using rule 132 (Expression -> Expression AMPERS Expression .)
    OR              reduce using rule 132 (Expression -> Expression AMPERS Expression .)
    CARET           reduce using rule 132 (Expression -> Expression AMPERS Expression .)
    TIMES           reduce using rule 132 (Expression -> Expression AMPERS Expression .)
    DIVIDE          reduce using rule 132 (Expression -> Expression AMPERS Expression .)
    MOD             reduce using rule 132 (Expression -> Expression AMPERS Expression .)
    AMPERS          reduce using rule 132 (Expression -> Expression AMPERS Expression .)
    LL              reduce using rule 132 (Expression -> Expression AMPERS Expression .)
    GG              reduce using rule 132 (Expression -> Expression AMPERS Expression .)
    AMPCAR          reduce using rule 132 (Expression -> Expression AMPERS Expression .)
    RBRACK          reduce using rule 132 (Expression -> Expression AMPERS Expression .)
    COMMA           reduce using rule 132 (Expression -> Expression AMPERS Expression .)
    SEMICOL         reduce using rule 132 (Expression -> Expression AMPERS Expression .)
    RPAREN          reduce using rule 132 (Expression -> Expression AMPERS Expression .)
    COLON           reduce using rule 132 (Expression -> Expression AMPERS Expression .)
    PLUSEQ          reduce using rule 132 (Expression -> Expression AMPERS Expression .)
    MINUSEQ         reduce using rule 132 (Expression -> Expression AMPERS Expression .)
    TIMESEQ         reduce using rule 132 (Expression -> Expression AMPERS Expression .)
    DIVIDEEQ        reduce using rule 132 (Expression -> Expression AMPERS Expression .)
    MODEQ           reduce using rule 132 (Expression -> Expression AMPERS Expression .)
    AMPEQ           reduce using rule 132 (Expression -> Expression AMPERS Expression .)
    OREQ            reduce using rule 132 (Expression -> Expression AMPERS Expression .)
    CAREQ           reduce using rule 132 (Expression -> Expression AMPERS Expression .)
    LLEQ            reduce using rule 132 (Expression -> Expression AMPERS Expression .)
    GGEQ            reduce using rule 132 (Expression -> Expression AMPERS Expression .)
    EQUAL           reduce using rule 132 (Expression -> Expression AMPERS Expression .)
    LBRACE          reduce using rule 132 (Expression -> Expression AMPERS Expression .)

  ! OROR            [ shift and go to state 168 ]
  ! AMPAMP          [ shift and go to state 183 ]
  ! EQEQ            [ shift and go to state 174 ]
  ! NOTEQ           [ shift and go to state 180 ]
  ! LESS            [ shift and go to state 173 ]
  ! GREAT           [ shift and go to state 170 ]
  ! LEQ             [ shift and go to state 186 ]
  ! GEQ             [ shift and go to state 177 ]
  ! PLUS            [ shift and go to state 181 ]
  ! MINUS           [ shift and go to state 185 ]
  ! OR              [ shift and go to state 178 ]
  ! CARET           [ shift and go to state 169 ]
  ! TIMES           [ shift and go to state 184 ]
  ! DIVIDE          [ shift and go to state 171 ]
  ! MOD             [ shift and go to state 182 ]
  ! AMPERS          [ shift and go to state 176 ]
  ! LL              [ shift and go to state 175 ]
  ! GG              [ shift and go to state 179 ]
  ! AMPCAR          [ shift and go to state 172 ]


state 221

    (124) Expression -> Expression GEQ Expression .
    (117) Expression -> Expression . OROR Expression
    (118) Expression -> Expression . AMPAMP Expression
    (119) Expression -> Expression . EQEQ Expression
    (120) Expression -> Expression . NOTEQ Expression
    (121) Expression -> Expression . LESS Expression
    (122) Expression -> Expression . GREAT Expression
    (123) Expression -> Expression . LEQ Expression
    (124) Expression -> Expression . GEQ Expression
    (125) Expression -> Expression . PLUS Expression
    (126) Expression -> Expression . MINUS Expression
    (127) Expression -> Expression . OR Expression
    (128) Expression -> Expression . CARET Expression
    (129) Expression -> Expression . TIMES Expression
    (130) Expression -> Expression . DIVIDE Expression
    (131) Expression -> Expression . MOD Expression
    (132) Expression -> Expression . AMPERS Expression
    (133) Expression -> Expression . LL Expression
    (134) Expression -> Expression . GG Expression
    (135) Expression -> Expression . AMPCAR Expression

    OROR            reduce using rule 124 (Expression -> Expression GEQ Expression .)
    AMPAMP          reduce using rule 124 (Expression -> Expression GEQ Expression .)
    EQEQ            reduce using rule 124 (Expression -> Expression GEQ Expression .)
    NOTEQ           reduce using rule 124 (Expression -> Expression GEQ Expression .)
    LESS            reduce using rule 124 (Expression -> Expression GEQ Expression .)
    GREAT           reduce using rule 124 (Expression -> Expression GEQ Expression .)
    LEQ             reduce using rule 124 (Expression -> Expression GEQ Expression .)
    GEQ             reduce using rule 124 (Expression -> Expression GEQ Expression .)
    RBRACK          reduce using rule 124 (Expression -> Expression GEQ Expression .)
    COMMA           reduce using rule 124 (Expression -> Expression GEQ Expression .)
    SEMICOL         reduce using rule 124 (Expression -> Expression GEQ Expression .)
    RPAREN          reduce using rule 124 (Expression -> Expression GEQ Expression .)
    COLON           reduce using rule 124 (Expression -> Expression GEQ Expression .)
    PLUSEQ          reduce using rule 124 (Expression -> Expression GEQ Expression .)
    MINUSEQ         reduce using rule 124 (Expression -> Expression GEQ Expression .)
    TIMESEQ         reduce using rule 124 (Expression -> Expression GEQ Expression .)
    DIVIDEEQ        reduce using rule 124 (Expression -> Expression GEQ Expression .)
    MODEQ           reduce using rule 124 (Expression -> Expression GEQ Expression .)
    AMPEQ           reduce using rule 124 (Expression -> Expression GEQ Expression .)
    OREQ            reduce using rule 124 (Expression -> Expression GEQ Expression .)
    CAREQ           reduce using rule 124 (Expression -> Expression GEQ Expression .)
    LLEQ            reduce using rule 124 (Expression -> Expression GEQ Expression .)
    GGEQ            reduce using rule 124 (Expression -> Expression GEQ Expression .)
    EQUAL           reduce using rule 124 (Expression -> Expression GEQ Expression .)
    LBRACE          reduce using rule 124 (Expression -> Expression GEQ Expression .)
    PLUS            shift and go to state 181
    MINUS           shift and go to state 185
    OR              shift and go to state 178
    CARET           shift and go to state 169
    TIMES           shift and go to state 184
    DIVIDE          shift and go to state 171
    MOD             shift and go to state 182
    AMPERS          shift and go to state 176
    LL              shift and go to state 175
    GG              shift and go to state 179
    AMPCAR          shift and go to state 172

  ! PLUS            [ reduce using rule 124 (Expression -> Expression GEQ Expression .) ]
  ! MINUS           [ reduce using rule 124 (Expression -> Expression GEQ Expression .) ]
  ! OR              [ reduce using rule 124 (Expression -> Expression GEQ Expression .) ]
  ! CARET           [ reduce using rule 124 (Expression -> Expression GEQ Expression .) ]
  ! TIMES           [ reduce using rule 124 (Expression -> Expression GEQ Expression .) ]
  ! DIVIDE          [ reduce using rule 124 (Expression -> Expression GEQ Expression .) ]
  ! MOD             [ reduce using rule 124 (Expression -> Expression GEQ Expression .) ]
  ! AMPERS          [ reduce using rule 124 (Expression -> Expression GEQ Expression .) ]
  ! LL              [ reduce using rule 124 (Expression -> Expression GEQ Expression .) ]
  ! GG              [ reduce using rule 124 (Expression -> Expression GEQ Expression .) ]
  ! AMPCAR          [ reduce using rule 124 (Expression -> Expression GEQ Expression .) ]
  ! OROR            [ shift and go to state 168 ]
  ! AMPAMP          [ shift and go to state 183 ]
  ! EQEQ            [ shift and go to state 174 ]
  ! NOTEQ           [ shift and go to state 180 ]
  ! LESS            [ shift and go to state 173 ]
  ! GREAT           [ shift and go to state 170 ]
  ! LEQ             [ shift and go to state 186 ]
  ! GEQ             [ shift and go to state 177 ]


state 222

    (127) Expression -> Expression OR Expression .
    (117) Expression -> Expression . OROR Expression
    (118) Expression -> Expression . AMPAMP Expression
    (119) Expression -> Expression . EQEQ Expression
    (120) Expression -> Expression . NOTEQ Expression
    (121) Expression -> Expression . LESS Expression
    (122) Expression -> Expression . GREAT Expression
    (123) Expression -> Expression . LEQ Expression
    (124) Expression -> Expression . GEQ Expression
    (125) Expression -> Expression . PLUS Expression
    (126) Expression -> Expression . MINUS Expression
    (127) Expression -> Expression . OR Expression
    (128) Expression -> Expression . CARET Expression
    (129) Expression -> Expression . TIMES Expression
    (130) Expression -> Expression . DIVIDE Expression
    (131) Expression -> Expression . MOD Expression
    (132) Expression -> Expression . AMPERS Expression
    (133) Expression -> Expression . LL Expression
    (134) Expression -> Expression . GG Expression
    (135) Expression -> Expression . AMPCAR Expression

    OROR            reduce using rule 127 (Expression -> Expression OR Expression .)
    AMPAMP          reduce using rule 127 (Expression -> Expression OR Expression .)
    EQEQ            reduce using rule 127 (Expression -> Expression OR Expression .)
    NOTEQ           reduce using rule 127 (Expression -> Expression OR Expression .)
    LESS            reduce using rule 127 (Expression -> Expression OR Expression .)
    GREAT           reduce using rule 127 (Expression -> Expression OR Expression .)
    LEQ             reduce using rule 127 (Expression -> Expression OR Expression .)
    GEQ             reduce using rule 127 (Expression -> Expression OR Expression .)
    PLUS            reduce using rule 127 (Expression -> Expression OR Expression .)
    MINUS           reduce using rule 127 (Expression -> Expression OR Expression .)
    OR              reduce using rule 127 (Expression -> Expression OR Expression .)
    CARET           reduce using rule 127 (Expression -> Expression OR Expression .)
    RBRACK          reduce using rule 127 (Expression -> Expression OR Expression .)
    COMMA           reduce using rule 127 (Expression -> Expression OR Expression .)
    SEMICOL         reduce using rule 127 (Expression -> Expression OR Expression .)
    RPAREN          reduce using rule 127 (Expression -> Expression OR Expression .)
    COLON           reduce using rule 127 (Expression -> Expression OR Expression .)
    PLUSEQ          reduce using rule 127 (Expression -> Expression OR Expression .)
    MINUSEQ         reduce using rule 127 (Expression -> Expression OR Expression .)
    TIMESEQ         reduce using rule 127 (Expression -> Expression OR Expression .)
    DIVIDEEQ        reduce using rule 127 (Expression -> Expression OR Expression .)
    MODEQ           reduce using rule 127 (Expression -> Expression OR Expression .)
    AMPEQ           reduce using rule 127 (Expression -> Expression OR Expression .)
    OREQ            reduce using rule 127 (Expression -> Expression OR Expression .)
    CAREQ           reduce using rule 127 (Expression -> Expression OR Expression .)
    LLEQ            reduce using rule 127 (Expression -> Expression OR Expression .)
    GGEQ            reduce using rule 127 (Expression -> Expression OR Expression .)
    EQUAL           reduce using rule 127 (Expression -> Expression OR Expression .)
    LBRACE          reduce using rule 127 (Expression -> Expression OR Expression .)
    TIMES           shift and go to state 184
    DIVIDE          shift and go to state 171
    MOD             shift and go to state 182
    AMPERS          shift and go to state 176
    LL              shift and go to state 175
    GG              shift and go to state 179
    AMPCAR          shift and go to state 172

  ! TIMES           [ reduce using rule 127 (Expression -> Expression OR Expression .) ]
  ! DIVIDE          [ reduce using rule 127 (Expression -> Expression OR Expression .) ]
  ! MOD             [ reduce using rule 127 (Expression -> Expression OR Expression .) ]
  ! AMPERS          [ reduce using rule 127 (Expression -> Expression OR Expression .) ]
  ! LL              [ reduce using rule 127 (Expression -> Expression OR Expression .) ]
  ! GG              [ reduce using rule 127 (Expression -> Expression OR Expression .) ]
  ! AMPCAR          [ reduce using rule 127 (Expression -> Expression OR Expression .) ]
  ! OROR            [ shift and go to state 168 ]
  ! AMPAMP          [ shift and go to state 183 ]
  ! EQEQ            [ shift and go to state 174 ]
  ! NOTEQ           [ shift and go to state 180 ]
  ! LESS            [ shift and go to state 173 ]
  ! GREAT           [ shift and go to state 170 ]
  ! LEQ             [ shift and go to state 186 ]
  ! GEQ             [ shift and go to state 177 ]
  ! PLUS            [ shift and go to state 181 ]
  ! MINUS           [ shift and go to state 185 ]
  ! OR              [ shift and go to state 178 ]
  ! CARET           [ shift and go to state 169 ]


state 223

    (134) Expression -> Expression GG Expression .
    (117) Expression -> Expression . OROR Expression
    (118) Expression -> Expression . AMPAMP Expression
    (119) Expression -> Expression . EQEQ Expression
    (120) Expression -> Expression . NOTEQ Expression
    (121) Expression -> Expression . LESS Expression
    (122) Expression -> Expression . GREAT Expression
    (123) Expression -> Expression . LEQ Expression
    (124) Expression -> Expression . GEQ Expression
    (125) Expression -> Expression . PLUS Expression
    (126) Expression -> Expression . MINUS Expression
    (127) Expression -> Expression . OR Expression
    (128) Expression -> Expression . CARET Expression
    (129) Expression -> Expression . TIMES Expression
    (130) Expression -> Expression . DIVIDE Expression
    (131) Expression -> Expression . MOD Expression
    (132) Expression -> Expression . AMPERS Expression
    (133) Expression -> Expression . LL Expression
    (134) Expression -> Expression . GG Expression
    (135) Expression -> Expression . AMPCAR Expression

    OROR            reduce using rule 134 (Expression -> Expression GG Expression .)
    AMPAMP          reduce using rule 134 (Expression -> Expression GG Expression .)
    EQEQ            reduce using rule 134 (Expression -> Expression GG Expression .)
    NOTEQ           reduce using rule 134 (Expression -> Expression GG Expression .)
    LESS            reduce using rule 134 (Expression -> Expression GG Expression .)
    GREAT           reduce using rule 134 (Expression -> Expression GG Expression .)
    LEQ             reduce using rule 134 (Expression -> Expression GG Expression .)
    GEQ             reduce using rule 134 (Expression -> Expression GG Expression .)
    PLUS            reduce using rule 134 (Expression -> Expression GG Expression .)
    MINUS           reduce using rule 134 (Expression -> Expression GG Expression .)
    OR              reduce using rule 134 (Expression -> Expression GG Expression .)
    CARET           reduce using rule 134 (Expression -> Expression GG Expression .)
    TIMES           reduce using rule 134 (Expression -> Expression GG Expression .)
    DIVIDE          reduce using rule 134 (Expression -> Expression GG Expression .)
    MOD             reduce using rule 134 (Expression -> Expression GG Expression .)
    AMPERS          reduce using rule 134 (Expression -> Expression GG Expression .)
    LL              reduce using rule 134 (Expression -> Expression GG Expression .)
    GG              reduce using rule 134 (Expression -> Expression GG Expression .)
    AMPCAR          reduce using rule 134 (Expression -> Expression GG Expression .)
    RBRACK          reduce using rule 134 (Expression -> Expression GG Expression .)
    COMMA           reduce using rule 134 (Expression -> Expression GG Expression .)
    SEMICOL         reduce using rule 134 (Expression -> Expression GG Expression .)
    RPAREN          reduce using rule 134 (Expression -> Expression GG Expression .)
    COLON           reduce using rule 134 (Expression -> Expression GG Expression .)
    PLUSEQ          reduce using rule 134 (Expression -> Expression GG Expression .)
    MINUSEQ         reduce using rule 134 (Expression -> Expression GG Expression .)
    TIMESEQ         reduce using rule 134 (Expression -> Expression GG Expression .)
    DIVIDEEQ        reduce using rule 134 (Expression -> Expression GG Expression .)
    MODEQ           reduce using rule 134 (Expression -> Expression GG Expression .)
    AMPEQ           reduce using rule 134 (Expression -> Expression GG Expression .)
    OREQ            reduce using rule 134 (Expression -> Expression GG Expression .)
    CAREQ           reduce using rule 134 (Expression -> Expression GG Expression .)
    LLEQ            reduce using rule 134 (Expression -> Expression GG Expression .)
    GGEQ            reduce using rule 134 (Expression -> Expression GG Expression .)
    EQUAL           reduce using rule 134 (Expression -> Expression GG Expression .)
    LBRACE          reduce using rule 134 (Expression -> Expression GG Expression .)

  ! OROR            [ shift and go to state 168 ]
  ! AMPAMP          [ shift and go to state 183 ]
  ! EQEQ            [ shift and go to state 174 ]
  ! NOTEQ           [ shift and go to state 180 ]
  ! LESS            [ shift and go to state 173 ]
  ! GREAT           [ shift and go to state 170 ]
  ! LEQ             [ shift and go to state 186 ]
  ! GEQ             [ shift and go to state 177 ]
  ! PLUS            [ shift and go to state 181 ]
  ! MINUS           [ shift and go to state 185 ]
  ! OR              [ shift and go to state 178 ]
  ! CARET           [ shift and go to state 169 ]
  ! TIMES           [ shift and go to state 184 ]
  ! DIVIDE          [ shift and go to state 171 ]
  ! MOD             [ shift and go to state 182 ]
  ! AMPERS          [ shift and go to state 176 ]
  ! LL              [ shift and go to state 175 ]
  ! GG              [ shift and go to state 179 ]
  ! AMPCAR          [ shift and go to state 172 ]


state 224

    (120) Expression -> Expression NOTEQ Expression .
    (117) Expression -> Expression . OROR Expression
    (118) Expression -> Expression . AMPAMP Expression
    (119) Expression -> Expression . EQEQ Expression
    (120) Expression -> Expression . NOTEQ Expression
    (121) Expression -> Expression . LESS Expression
    (122) Expression -> Expression . GREAT Expression
    (123) Expression -> Expression . LEQ Expression
    (124) Expression -> Expression . GEQ Expression
    (125) Expression -> Expression . PLUS Expression
    (126) Expression -> Expression . MINUS Expression
    (127) Expression -> Expression . OR Expression
    (128) Expression -> Expression . CARET Expression
    (129) Expression -> Expression . TIMES Expression
    (130) Expression -> Expression . DIVIDE Expression
    (131) Expression -> Expression . MOD Expression
    (132) Expression -> Expression . AMPERS Expression
    (133) Expression -> Expression . LL Expression
    (134) Expression -> Expression . GG Expression
    (135) Expression -> Expression . AMPCAR Expression

    OROR            reduce using rule 120 (Expression -> Expression NOTEQ Expression .)
    AMPAMP          reduce using rule 120 (Expression -> Expression NOTEQ Expression .)
    EQEQ            reduce using rule 120 (Expression -> Expression NOTEQ Expression .)
    NOTEQ           reduce using rule 120 (Expression -> Expression NOTEQ Expression .)
    LESS            reduce using rule 120 (Expression -> Expression NOTEQ Expression .)
    GREAT           reduce using rule 120 (Expression -> Expression NOTEQ Expression .)
    LEQ             reduce using rule 120 (Expression -> Expression NOTEQ Expression .)
    GEQ             reduce using rule 120 (Expression -> Expression NOTEQ Expression .)
    RBRACK          reduce using rule 120 (Expression -> Expression NOTEQ Expression .)
    COMMA           reduce using rule 120 (Expression -> Expression NOTEQ Expression .)
    SEMICOL         reduce using rule 120 (Expression -> Expression NOTEQ Expression .)
    RPAREN          reduce using rule 120 (Expression -> Expression NOTEQ Expression .)
    COLON           reduce using rule 120 (Expression -> Expression NOTEQ Expression .)
    PLUSEQ          reduce using rule 120 (Expression -> Expression NOTEQ Expression .)
    MINUSEQ         reduce using rule 120 (Expression -> Expression NOTEQ Expression .)
    TIMESEQ         reduce using rule 120 (Expression -> Expression NOTEQ Expression .)
    DIVIDEEQ        reduce using rule 120 (Expression -> Expression NOTEQ Expression .)
    MODEQ           reduce using rule 120 (Expression -> Expression NOTEQ Expression .)
    AMPEQ           reduce using rule 120 (Expression -> Expression NOTEQ Expression .)
    OREQ            reduce using rule 120 (Expression -> Expression NOTEQ Expression .)
    CAREQ           reduce using rule 120 (Expression -> Expression NOTEQ Expression .)
    LLEQ            reduce using rule 120 (Expression -> Expression NOTEQ Expression .)
    GGEQ            reduce using rule 120 (Expression -> Expression NOTEQ Expression .)
    EQUAL           reduce using rule 120 (Expression -> Expression NOTEQ Expression .)
    LBRACE          reduce using rule 120 (Expression -> Expression NOTEQ Expression .)
    PLUS            shift and go to state 181
    MINUS           shift and go to state 185
    OR              shift and go to state 178
    CARET           shift and go to state 169
    TIMES           shift and go to state 184
    DIVIDE          shift and go to state 171
    MOD             shift and go to state 182
    AMPERS          shift and go to state 176
    LL              shift and go to state 175
    GG              shift and go to state 179
    AMPCAR          shift and go to state 172

  ! PLUS            [ reduce using rule 120 (Expression -> Expression NOTEQ Expression .) ]
  ! MINUS           [ reduce using rule 120 (Expression -> Expression NOTEQ Expression .) ]
  ! OR              [ reduce using rule 120 (Expression -> Expression NOTEQ Expression .) ]
  ! CARET           [ reduce using rule 120 (Expression -> Expression NOTEQ Expression .) ]
  ! TIMES           [ reduce using rule 120 (Expression -> Expression NOTEQ Expression .) ]
  ! DIVIDE          [ reduce using rule 120 (Expression -> Expression NOTEQ Expression .) ]
  ! MOD             [ reduce using rule 120 (Expression -> Expression NOTEQ Expression .) ]
  ! AMPERS          [ reduce using rule 120 (Expression -> Expression NOTEQ Expression .) ]
  ! LL              [ reduce using rule 120 (Expression -> Expression NOTEQ Expression .) ]
  ! GG              [ reduce using rule 120 (Expression -> Expression NOTEQ Expression .) ]
  ! AMPCAR          [ reduce using rule 120 (Expression -> Expression NOTEQ Expression .) ]
  ! OROR            [ shift and go to state 168 ]
  ! AMPAMP          [ shift and go to state 183 ]
  ! EQEQ            [ shift and go to state 174 ]
  ! NOTEQ           [ shift and go to state 180 ]
  ! LESS            [ shift and go to state 173 ]
  ! GREAT           [ shift and go to state 170 ]
  ! LEQ             [ shift and go to state 186 ]
  ! GEQ             [ shift and go to state 177 ]


state 225

    (125) Expression -> Expression PLUS Expression .
    (117) Expression -> Expression . OROR Expression
    (118) Expression -> Expression . AMPAMP Expression
    (119) Expression -> Expression . EQEQ Expression
    (120) Expression -> Expression . NOTEQ Expression
    (121) Expression -> Expression . LESS Expression
    (122) Expression -> Expression . GREAT Expression
    (123) Expression -> Expression . LEQ Expression
    (124) Expression -> Expression . GEQ Expression
    (125) Expression -> Expression . PLUS Expression
    (126) Expression -> Expression . MINUS Expression
    (127) Expression -> Expression . OR Expression
    (128) Expression -> Expression . CARET Expression
    (129) Expression -> Expression . TIMES Expression
    (130) Expression -> Expression . DIVIDE Expression
    (131) Expression -> Expression . MOD Expression
    (132) Expression -> Expression . AMPERS Expression
    (133) Expression -> Expression . LL Expression
    (134) Expression -> Expression . GG Expression
    (135) Expression -> Expression . AMPCAR Expression

    OROR            reduce using rule 125 (Expression -> Expression PLUS Expression .)
    AMPAMP          reduce using rule 125 (Expression -> Expression PLUS Expression .)
    EQEQ            reduce using rule 125 (Expression -> Expression PLUS Expression .)
    NOTEQ           reduce using rule 125 (Expression -> Expression PLUS Expression .)
    LESS            reduce using rule 125 (Expression -> Expression PLUS Expression .)
    GREAT           reduce using rule 125 (Expression -> Expression PLUS Expression .)
    LEQ             reduce using rule 125 (Expression -> Expression PLUS Expression .)
    GEQ             reduce using rule 125 (Expression -> Expression PLUS Expression .)
    PLUS            reduce using rule 125 (Expression -> Expression PLUS Expression .)
    MINUS           reduce using rule 125 (Expression -> Expression PLUS Expression .)
    OR              reduce using rule 125 (Expression -> Expression PLUS Expression .)
    CARET           reduce using rule 125 (Expression -> Expression PLUS Expression .)
    RBRACK          reduce using rule 125 (Expression -> Expression PLUS Expression .)
    COMMA           reduce using rule 125 (Expression -> Expression PLUS Expression .)
    SEMICOL         reduce using rule 125 (Expression -> Expression PLUS Expression .)
    RPAREN          reduce using rule 125 (Expression -> Expression PLUS Expression .)
    COLON           reduce using rule 125 (Expression -> Expression PLUS Expression .)
    PLUSEQ          reduce using rule 125 (Expression -> Expression PLUS Expression .)
    MINUSEQ         reduce using rule 125 (Expression -> Expression PLUS Expression .)
    TIMESEQ         reduce using rule 125 (Expression -> Expression PLUS Expression .)
    DIVIDEEQ        reduce using rule 125 (Expression -> Expression PLUS Expression .)
    MODEQ           reduce using rule 125 (Expression -> Expression PLUS Expression .)
    AMPEQ           reduce using rule 125 (Expression -> Expression PLUS Expression .)
    OREQ            reduce using rule 125 (Expression -> Expression PLUS Expression .)
    CAREQ           reduce using rule 125 (Expression -> Expression PLUS Expression .)
    LLEQ            reduce using rule 125 (Expression -> Expression PLUS Expression .)
    GGEQ            reduce using rule 125 (Expression -> Expression PLUS Expression .)
    EQUAL           reduce using rule 125 (Expression -> Expression PLUS Expression .)
    LBRACE          reduce using rule 125 (Expression -> Expression PLUS Expression .)
    TIMES           shift and go to state 184
    DIVIDE          shift and go to state 171
    MOD             shift and go to state 182
    AMPERS          shift and go to state 176
    LL              shift and go to state 175
    GG              shift and go to state 179
    AMPCAR          shift and go to state 172

  ! TIMES           [ reduce using rule 125 (Expression -> Expression PLUS Expression .) ]
  ! DIVIDE          [ reduce using rule 125 (Expression -> Expression PLUS Expression .) ]
  ! MOD             [ reduce using rule 125 (Expression -> Expression PLUS Expression .) ]
  ! AMPERS          [ reduce using rule 125 (Expression -> Expression PLUS Expression .) ]
  ! LL              [ reduce using rule 125 (Expression -> Expression PLUS Expression .) ]
  ! GG              [ reduce using rule 125 (Expression -> Expression PLUS Expression .) ]
  ! AMPCAR          [ reduce using rule 125 (Expression -> Expression PLUS Expression .) ]
  ! OROR            [ shift and go to state 168 ]
  ! AMPAMP          [ shift and go to state 183 ]
  ! EQEQ            [ shift and go to state 174 ]
  ! NOTEQ           [ shift and go to state 180 ]
  ! LESS            [ shift and go to state 173 ]
  ! GREAT           [ shift and go to state 170 ]
  ! LEQ             [ shift and go to state 186 ]
  ! GEQ             [ shift and go to state 177 ]
  ! PLUS            [ shift and go to state 181 ]
  ! MINUS           [ shift and go to state 185 ]
  ! OR              [ shift and go to state 178 ]
  ! CARET           [ shift and go to state 169 ]


state 226

    (131) Expression -> Expression MOD Expression .
    (117) Expression -> Expression . OROR Expression
    (118) Expression -> Expression . AMPAMP Expression
    (119) Expression -> Expression . EQEQ Expression
    (120) Expression -> Expression . NOTEQ Expression
    (121) Expression -> Expression . LESS Expression
    (122) Expression -> Expression . GREAT Expression
    (123) Expression -> Expression . LEQ Expression
    (124) Expression -> Expression . GEQ Expression
    (125) Expression -> Expression . PLUS Expression
    (126) Expression -> Expression . MINUS Expression
    (127) Expression -> Expression . OR Expression
    (128) Expression -> Expression . CARET Expression
    (129) Expression -> Expression . TIMES Expression
    (130) Expression -> Expression . DIVIDE Expression
    (131) Expression -> Expression . MOD Expression
    (132) Expression -> Expression . AMPERS Expression
    (133) Expression -> Expression . LL Expression
    (134) Expression -> Expression . GG Expression
    (135) Expression -> Expression . AMPCAR Expression

    OROR            reduce using rule 131 (Expression -> Expression MOD Expression .)
    AMPAMP          reduce using rule 131 (Expression -> Expression MOD Expression .)
    EQEQ            reduce using rule 131 (Expression -> Expression MOD Expression .)
    NOTEQ           reduce using rule 131 (Expression -> Expression MOD Expression .)
    LESS            reduce using rule 131 (Expression -> Expression MOD Expression .)
    GREAT           reduce using rule 131 (Expression -> Expression MOD Expression .)
    LEQ             reduce using rule 131 (Expression -> Expression MOD Expression .)
    GEQ             reduce using rule 131 (Expression -> Expression MOD Expression .)
    PLUS            reduce using rule 131 (Expression -> Expression MOD Expression .)
    MINUS           reduce using rule 131 (Expression -> Expression MOD Expression .)
    OR              reduce using rule 131 (Expression -> Expression MOD Expression .)
    CARET           reduce using rule 131 (Expression -> Expression MOD Expression .)
    TIMES           reduce using rule 131 (Expression -> Expression MOD Expression .)
    DIVIDE          reduce using rule 131 (Expression -> Expression MOD Expression .)
    MOD             reduce using rule 131 (Expression -> Expression MOD Expression .)
    AMPERS          reduce using rule 131 (Expression -> Expression MOD Expression .)
    LL              reduce using rule 131 (Expression -> Expression MOD Expression .)
    GG              reduce using rule 131 (Expression -> Expression MOD Expression .)
    AMPCAR          reduce using rule 131 (Expression -> Expression MOD Expression .)
    RBRACK          reduce using rule 131 (Expression -> Expression MOD Expression .)
    COMMA           reduce using rule 131 (Expression -> Expression MOD Expression .)
    SEMICOL         reduce using rule 131 (Expression -> Expression MOD Expression .)
    RPAREN          reduce using rule 131 (Expression -> Expression MOD Expression .)
    COLON           reduce using rule 131 (Expression -> Expression MOD Expression .)
    PLUSEQ          reduce using rule 131 (Expression -> Expression MOD Expression .)
    MINUSEQ         reduce using rule 131 (Expression -> Expression MOD Expression .)
    TIMESEQ         reduce using rule 131 (Expression -> Expression MOD Expression .)
    DIVIDEEQ        reduce using rule 131 (Expression -> Expression MOD Expression .)
    MODEQ           reduce using rule 131 (Expression -> Expression MOD Expression .)
    AMPEQ           reduce using rule 131 (Expression -> Expression MOD Expression .)
    OREQ            reduce using rule 131 (Expression -> Expression MOD Expression .)
    CAREQ           reduce using rule 131 (Expression -> Expression MOD Expression .)
    LLEQ            reduce using rule 131 (Expression -> Expression MOD Expression .)
    GGEQ            reduce using rule 131 (Expression -> Expression MOD Expression .)
    EQUAL           reduce using rule 131 (Expression -> Expression MOD Expression .)
    LBRACE          reduce using rule 131 (Expression -> Expression MOD Expression .)

  ! OROR            [ shift and go to state 168 ]
  ! AMPAMP          [ shift and go to state 183 ]
  ! EQEQ            [ shift and go to state 174 ]
  ! NOTEQ           [ shift and go to state 180 ]
  ! LESS            [ shift and go to state 173 ]
  ! GREAT           [ shift and go to state 170 ]
  ! LEQ             [ shift and go to state 186 ]
  ! GEQ             [ shift and go to state 177 ]
  ! PLUS            [ shift and go to state 181 ]
  ! MINUS           [ shift and go to state 185 ]
  ! OR              [ shift and go to state 178 ]
  ! CARET           [ shift and go to state 169 ]
  ! TIMES           [ shift and go to state 184 ]
  ! DIVIDE          [ shift and go to state 171 ]
  ! MOD             [ shift and go to state 182 ]
  ! AMPERS          [ shift and go to state 176 ]
  ! LL              [ shift and go to state 175 ]
  ! GG              [ shift and go to state 179 ]
  ! AMPCAR          [ shift and go to state 172 ]


state 227

    (118) Expression -> Expression AMPAMP Expression .
    (117) Expression -> Expression . OROR Expression
    (118) Expression -> Expression . AMPAMP Expression
    (119) Expression -> Expression . EQEQ Expression
    (120) Expression -> Expression . NOTEQ Expression
    (121) Expression -> Expression . LESS Expression
    (122) Expression -> Expression . GREAT Expression
    (123) Expression -> Expression . LEQ Expression
    (124) Expression -> Expression . GEQ Expression
    (125) Expression -> Expression . PLUS Expression
    (126) Expression -> Expression . MINUS Expression
    (127) Expression -> Expression . OR Expression
    (128) Expression -> Expression . CARET Expression
    (129) Expression -> Expression . TIMES Expression
    (130) Expression -> Expression . DIVIDE Expression
    (131) Expression -> Expression . MOD Expression
    (132) Expression -> Expression . AMPERS Expression
    (133) Expression -> Expression . LL Expression
    (134) Expression -> Expression . GG Expression
    (135) Expression -> Expression . AMPCAR Expression

    OROR            reduce using rule 118 (Expression -> Expression AMPAMP Expression .)
    AMPAMP          reduce using rule 118 (Expression -> Expression AMPAMP Expression .)
    RBRACK          reduce using rule 118 (Expression -> Expression AMPAMP Expression .)
    COMMA           reduce using rule 118 (Expression -> Expression AMPAMP Expression .)
    SEMICOL         reduce using rule 118 (Expression -> Expression AMPAMP Expression .)
    RPAREN          reduce using rule 118 (Expression -> Expression AMPAMP Expression .)
    COLON           reduce using rule 118 (Expression -> Expression AMPAMP Expression .)
    PLUSEQ          reduce using rule 118 (Expression -> Expression AMPAMP Expression .)
    MINUSEQ         reduce using rule 118 (Expression -> Expression AMPAMP Expression .)
    TIMESEQ         reduce using rule 118 (Expression -> Expression AMPAMP Expression .)
    DIVIDEEQ        reduce using rule 118 (Expression -> Expression AMPAMP Expression .)
    MODEQ           reduce using rule 118 (Expression -> Expression AMPAMP Expression .)
    AMPEQ           reduce using rule 118 (Expression -> Expression AMPAMP Expression .)
    OREQ            reduce using rule 118 (Expression -> Expression AMPAMP Expression .)
    CAREQ           reduce using rule 118 (Expression -> Expression AMPAMP Expression .)
    LLEQ            reduce using rule 118 (Expression -> Expression AMPAMP Expression .)
    GGEQ            reduce using rule 118 (Expression -> Expression AMPAMP Expression .)
    EQUAL           reduce using rule 118 (Expression -> Expression AMPAMP Expression .)
    LBRACE          reduce using rule 118 (Expression -> Expression AMPAMP Expression .)
    EQEQ            shift and go to state 174
    NOTEQ           shift and go to state 180
    LESS            shift and go to state 173
    GREAT           shift and go to state 170
    LEQ             shift and go to state 186
    GEQ             shift and go to state 177
    PLUS            shift and go to state 181
    MINUS           shift and go to state 185
    OR              shift and go to state 178
    CARET           shift and go to state 169
    TIMES           shift and go to state 184
    DIVIDE          shift and go to state 171
    MOD             shift and go to state 182
    AMPERS          shift and go to state 176
    LL              shift and go to state 175
    GG              shift and go to state 179
    AMPCAR          shift and go to state 172

  ! EQEQ            [ reduce using rule 118 (Expression -> Expression AMPAMP Expression .) ]
  ! NOTEQ           [ reduce using rule 118 (Expression -> Expression AMPAMP Expression .) ]
  ! LESS            [ reduce using rule 118 (Expression -> Expression AMPAMP Expression .) ]
  ! GREAT           [ reduce using rule 118 (Expression -> Expression AMPAMP Expression .) ]
  ! LEQ             [ reduce using rule 118 (Expression -> Expression AMPAMP Expression .) ]
  ! GEQ             [ reduce using rule 118 (Expression -> Expression AMPAMP Expression .) ]
  ! PLUS            [ reduce using rule 118 (Expression -> Expression AMPAMP Expression .) ]
  ! MINUS           [ reduce using rule 118 (Expression -> Expression AMPAMP Expression .) ]
  ! OR              [ reduce using rule 118 (Expression -> Expression AMPAMP Expression .) ]
  ! CARET           [ reduce using rule 118 (Expression -> Expression AMPAMP Expression .) ]
  ! TIMES           [ reduce using rule 118 (Expression -> Expression AMPAMP Expression .) ]
  ! DIVIDE          [ reduce using rule 118 (Expression -> Expression AMPAMP Expression .) ]
  ! MOD             [ reduce using rule 118 (Expression -> Expression AMPAMP Expression .) ]
  ! AMPERS          [ reduce using rule 118 (Expression -> Expression AMPAMP Expression .) ]
  ! LL              [ reduce using rule 118 (Expression -> Expression AMPAMP Expression .) ]
  ! GG              [ reduce using rule 118 (Expression -> Expression AMPAMP Expression .) ]
  ! AMPCAR          [ reduce using rule 118 (Expression -> Expression AMPAMP Expression .) ]
  ! OROR            [ shift and go to state 168 ]
  ! AMPAMP          [ shift and go to state 183 ]


state 228

    (129) Expression -> Expression TIMES Expression .
    (117) Expression -> Expression . OROR Expression
    (118) Expression -> Expression . AMPAMP Expression
    (119) Expression -> Expression . EQEQ Expression
    (120) Expression -> Expression . NOTEQ Expression
    (121) Expression -> Expression . LESS Expression
    (122) Expression -> Expression . GREAT Expression
    (123) Expression -> Expression . LEQ Expression
    (124) Expression -> Expression . GEQ Expression
    (125) Expression -> Expression . PLUS Expression
    (126) Expression -> Expression . MINUS Expression
    (127) Expression -> Expression . OR Expression
    (128) Expression -> Expression . CARET Expression
    (129) Expression -> Expression . TIMES Expression
    (130) Expression -> Expression . DIVIDE Expression
    (131) Expression -> Expression . MOD Expression
    (132) Expression -> Expression . AMPERS Expression
    (133) Expression -> Expression . LL Expression
    (134) Expression -> Expression . GG Expression
    (135) Expression -> Expression . AMPCAR Expression

    OROR            reduce using rule 129 (Expression -> Expression TIMES Expression .)
    AMPAMP          reduce using rule 129 (Expression -> Expression TIMES Expression .)
    EQEQ            reduce using rule 129 (Expression -> Expression TIMES Expression .)
    NOTEQ           reduce using rule 129 (Expression -> Expression TIMES Expression .)
    LESS            reduce using rule 129 (Expression -> Expression TIMES Expression .)
    GREAT           reduce using rule 129 (Expression -> Expression TIMES Expression .)
    LEQ             reduce using rule 129 (Expression -> Expression TIMES Expression .)
    GEQ             reduce using rule 129 (Expression -> Expression TIMES Expression .)
    PLUS            reduce using rule 129 (Expression -> Expression TIMES Expression .)
    MINUS           reduce using rule 129 (Expression -> Expression TIMES Expression .)
    OR              reduce using rule 129 (Expression -> Expression TIMES Expression .)
    CARET           reduce using rule 129 (Expression -> Expression TIMES Expression .)
    TIMES           reduce using rule 129 (Expression -> Expression TIMES Expression .)
    DIVIDE          reduce using rule 129 (Expression -> Expression TIMES Expression .)
    MOD             reduce using rule 129 (Expression -> Expression TIMES Expression .)
    AMPERS          reduce using rule 129 (Expression -> Expression TIMES Expression .)
    LL              reduce using rule 129 (Expression -> Expression TIMES Expression .)
    GG              reduce using rule 129 (Expression -> Expression TIMES Expression .)
    AMPCAR          reduce using rule 129 (Expression -> Expression TIMES Expression .)
    RBRACK          reduce using rule 129 (Expression -> Expression TIMES Expression .)
    COMMA           reduce using rule 129 (Expression -> Expression TIMES Expression .)
    SEMICOL         reduce using rule 129 (Expression -> Expression TIMES Expression .)
    RPAREN          reduce using rule 129 (Expression -> Expression TIMES Expression .)
    COLON           reduce using rule 129 (Expression -> Expression TIMES Expression .)
    PLUSEQ          reduce using rule 129 (Expression -> Expression TIMES Expression .)
    MINUSEQ         reduce using rule 129 (Expression -> Expression TIMES Expression .)
    TIMESEQ         reduce using rule 129 (Expression -> Expression TIMES Expression .)
    DIVIDEEQ        reduce using rule 129 (Expression -> Expression TIMES Expression .)
    MODEQ           reduce using rule 129 (Expression -> Expression TIMES Expression .)
    AMPEQ           reduce using rule 129 (Expression -> Expression TIMES Expression .)
    OREQ            reduce using rule 129 (Expression -> Expression TIMES Expression .)
    CAREQ           reduce using rule 129 (Expression -> Expression TIMES Expression .)
    LLEQ            reduce using rule 129 (Expression -> Expression TIMES Expression .)
    GGEQ            reduce using rule 129 (Expression -> Expression TIMES Expression .)
    EQUAL           reduce using rule 129 (Expression -> Expression TIMES Expression .)
    LBRACE          reduce using rule 129 (Expression -> Expression TIMES Expression .)

  ! OROR            [ shift and go to state 168 ]
  ! AMPAMP          [ shift and go to state 183 ]
  ! EQEQ            [ shift and go to state 174 ]
  ! NOTEQ           [ shift and go to state 180 ]
  ! LESS            [ shift and go to state 173 ]
  ! GREAT           [ shift and go to state 170 ]
  ! LEQ             [ shift and go to state 186 ]
  ! GEQ             [ shift and go to state 177 ]
  ! PLUS            [ shift and go to state 181 ]
  ! MINUS           [ shift and go to state 185 ]
  ! OR              [ shift and go to state 178 ]
  ! CARET           [ shift and go to state 169 ]
  ! TIMES           [ shift and go to state 184 ]
  ! DIVIDE          [ shift and go to state 171 ]
  ! MOD             [ shift and go to state 182 ]
  ! AMPERS          [ shift and go to state 176 ]
  ! LL              [ shift and go to state 175 ]
  ! GG              [ shift and go to state 179 ]
  ! AMPCAR          [ shift and go to state 172 ]


state 229

    (126) Expression -> Expression MINUS Expression .
    (117) Expression -> Expression . OROR Expression
    (118) Expression -> Expression . AMPAMP Expression
    (119) Expression -> Expression . EQEQ Expression
    (120) Expression -> Expression . NOTEQ Expression
    (121) Expression -> Expression . LESS Expression
    (122) Expression -> Expression . GREAT Expression
    (123) Expression -> Expression . LEQ Expression
    (124) Expression -> Expression . GEQ Expression
    (125) Expression -> Expression . PLUS Expression
    (126) Expression -> Expression . MINUS Expression
    (127) Expression -> Expression . OR Expression
    (128) Expression -> Expression . CARET Expression
    (129) Expression -> Expression . TIMES Expression
    (130) Expression -> Expression . DIVIDE Expression
    (131) Expression -> Expression . MOD Expression
    (132) Expression -> Expression . AMPERS Expression
    (133) Expression -> Expression . LL Expression
    (134) Expression -> Expression . GG Expression
    (135) Expression -> Expression . AMPCAR Expression

    OROR            reduce using rule 126 (Expression -> Expression MINUS Expression .)
    AMPAMP          reduce using rule 126 (Expression -> Expression MINUS Expression .)
    EQEQ            reduce using rule 126 (Expression -> Expression MINUS Expression .)
    NOTEQ           reduce using rule 126 (Expression -> Expression MINUS Expression .)
    LESS            reduce using rule 126 (Expression -> Expression MINUS Expression .)
    GREAT           reduce using rule 126 (Expression -> Expression MINUS Expression .)
    LEQ             reduce using rule 126 (Expression -> Expression MINUS Expression .)
    GEQ             reduce using rule 126 (Expression -> Expression MINUS Expression .)
    PLUS            reduce using rule 126 (Expression -> Expression MINUS Expression .)
    MINUS           reduce using rule 126 (Expression -> Expression MINUS Expression .)
    OR              reduce using rule 126 (Expression -> Expression MINUS Expression .)
    CARET           reduce using rule 126 (Expression -> Expression MINUS Expression .)
    RBRACK          reduce using rule 126 (Expression -> Expression MINUS Expression .)
    COMMA           reduce using rule 126 (Expression -> Expression MINUS Expression .)
    SEMICOL         reduce using rule 126 (Expression -> Expression MINUS Expression .)
    RPAREN          reduce using rule 126 (Expression -> Expression MINUS Expression .)
    COLON           reduce using rule 126 (Expression -> Expression MINUS Expression .)
    PLUSEQ          reduce using rule 126 (Expression -> Expression MINUS Expression .)
    MINUSEQ         reduce using rule 126 (Expression -> Expression MINUS Expression .)
    TIMESEQ         reduce using rule 126 (Expression -> Expression MINUS Expression .)
    DIVIDEEQ        reduce using rule 126 (Expression -> Expression MINUS Expression .)
    MODEQ           reduce using rule 126 (Expression -> Expression MINUS Expression .)
    AMPEQ           reduce using rule 126 (Expression -> Expression MINUS Expression .)
    OREQ            reduce using rule 126 (Expression -> Expression MINUS Expression .)
    CAREQ           reduce using rule 126 (Expression -> Expression MINUS Expression .)
    LLEQ            reduce using rule 126 (Expression -> Expression MINUS Expression .)
    GGEQ            reduce using rule 126 (Expression -> Expression MINUS Expression .)
    EQUAL           reduce using rule 126 (Expression -> Expression MINUS Expression .)
    LBRACE          reduce using rule 126 (Expression -> Expression MINUS Expression .)
    TIMES           shift and go to state 184
    DIVIDE          shift and go to state 171
    MOD             shift and go to state 182
    AMPERS          shift and go to state 176
    LL              shift and go to state 175
    GG              shift and go to state 179
    AMPCAR          shift and go to state 172

  ! TIMES           [ reduce using rule 126 (Expression -> Expression MINUS Expression .) ]
  ! DIVIDE          [ reduce using rule 126 (Expression -> Expression MINUS Expression .) ]
  ! MOD             [ reduce using rule 126 (Expression -> Expression MINUS Expression .) ]
  ! AMPERS          [ reduce using rule 126 (Expression -> Expression MINUS Expression .) ]
  ! LL              [ reduce using rule 126 (Expression -> Expression MINUS Expression .) ]
  ! GG              [ reduce using rule 126 (Expression -> Expression MINUS Expression .) ]
  ! AMPCAR          [ reduce using rule 126 (Expression -> Expression MINUS Expression .) ]
  ! OROR            [ shift and go to state 168 ]
  ! AMPAMP          [ shift and go to state 183 ]
  ! EQEQ            [ shift and go to state 174 ]
  ! NOTEQ           [ shift and go to state 180 ]
  ! LESS            [ shift and go to state 173 ]
  ! GREAT           [ shift and go to state 170 ]
  ! LEQ             [ shift and go to state 186 ]
  ! GEQ             [ shift and go to state 177 ]
  ! PLUS            [ shift and go to state 181 ]
  ! MINUS           [ shift and go to state 185 ]
  ! OR              [ shift and go to state 178 ]
  ! CARET           [ shift and go to state 169 ]


state 230

    (123) Expression -> Expression LEQ Expression .
    (117) Expression -> Expression . OROR Expression
    (118) Expression -> Expression . AMPAMP Expression
    (119) Expression -> Expression . EQEQ Expression
    (120) Expression -> Expression . NOTEQ Expression
    (121) Expression -> Expression . LESS Expression
    (122) Expression -> Expression . GREAT Expression
    (123) Expression -> Expression . LEQ Expression
    (124) Expression -> Expression . GEQ Expression
    (125) Expression -> Expression . PLUS Expression
    (126) Expression -> Expression . MINUS Expression
    (127) Expression -> Expression . OR Expression
    (128) Expression -> Expression . CARET Expression
    (129) Expression -> Expression . TIMES Expression
    (130) Expression -> Expression . DIVIDE Expression
    (131) Expression -> Expression . MOD Expression
    (132) Expression -> Expression . AMPERS Expression
    (133) Expression -> Expression . LL Expression
    (134) Expression -> Expression . GG Expression
    (135) Expression -> Expression . AMPCAR Expression

    OROR            reduce using rule 123 (Expression -> Expression LEQ Expression .)
    AMPAMP          reduce using rule 123 (Expression -> Expression LEQ Expression .)
    EQEQ            reduce using rule 123 (Expression -> Expression LEQ Expression .)
    NOTEQ           reduce using rule 123 (Expression -> Expression LEQ Expression .)
    LESS            reduce using rule 123 (Expression -> Expression LEQ Expression .)
    GREAT           reduce using rule 123 (Expression -> Expression LEQ Expression .)
    LEQ             reduce using rule 123 (Expression -> Expression LEQ Expression .)
    GEQ             reduce using rule 123 (Expression -> Expression LEQ Expression .)
    RBRACK          reduce using rule 123 (Expression -> Expression LEQ Expression .)
    COMMA           reduce using rule 123 (Expression -> Expression LEQ Expression .)
    SEMICOL         reduce using rule 123 (Expression -> Expression LEQ Expression .)
    RPAREN          reduce using rule 123 (Expression -> Expression LEQ Expression .)
    COLON           reduce using rule 123 (Expression -> Expression LEQ Expression .)
    PLUSEQ          reduce using rule 123 (Expression -> Expression LEQ Expression .)
    MINUSEQ         reduce using rule 123 (Expression -> Expression LEQ Expression .)
    TIMESEQ         reduce using rule 123 (Expression -> Expression LEQ Expression .)
    DIVIDEEQ        reduce using rule 123 (Expression -> Expression LEQ Expression .)
    MODEQ           reduce using rule 123 (Expression -> Expression LEQ Expression .)
    AMPEQ           reduce using rule 123 (Expression -> Expression LEQ Expression .)
    OREQ            reduce using rule 123 (Expression -> Expression LEQ Expression .)
    CAREQ           reduce using rule 123 (Expression -> Expression LEQ Expression .)
    LLEQ            reduce using rule 123 (Expression -> Expression LEQ Expression .)
    GGEQ            reduce using rule 123 (Expression -> Expression LEQ Expression .)
    EQUAL           reduce using rule 123 (Expression -> Expression LEQ Expression .)
    LBRACE          reduce using rule 123 (Expression -> Expression LEQ Expression .)
    PLUS            shift and go to state 181
    MINUS           shift and go to state 185
    OR              shift and go to state 178
    CARET           shift and go to state 169
    TIMES           shift and go to state 184
    DIVIDE          shift and go to state 171
    MOD             shift and go to state 182
    AMPERS          shift and go to state 176
    LL              shift and go to state 175
    GG              shift and go to state 179
    AMPCAR          shift and go to state 172

  ! PLUS            [ reduce using rule 123 (Expression -> Expression LEQ Expression .) ]
  ! MINUS           [ reduce using rule 123 (Expression -> Expression LEQ Expression .) ]
  ! OR              [ reduce using rule 123 (Expression -> Expression LEQ Expression .) ]
  ! CARET           [ reduce using rule 123 (Expression -> Expression LEQ Expression .) ]
  ! TIMES           [ reduce using rule 123 (Expression -> Expression LEQ Expression .) ]
  ! DIVIDE          [ reduce using rule 123 (Expression -> Expression LEQ Expression .) ]
  ! MOD             [ reduce using rule 123 (Expression -> Expression LEQ Expression .) ]
  ! AMPERS          [ reduce using rule 123 (Expression -> Expression LEQ Expression .) ]
  ! LL              [ reduce using rule 123 (Expression -> Expression LEQ Expression .) ]
  ! GG              [ reduce using rule 123 (Expression -> Expression LEQ Expression .) ]
  ! AMPCAR          [ reduce using rule 123 (Expression -> Expression LEQ Expression .) ]
  ! OROR            [ shift and go to state 168 ]
  ! AMPAMP          [ shift and go to state 183 ]
  ! EQEQ            [ shift and go to state 174 ]
  ! NOTEQ           [ shift and go to state 180 ]
  ! LESS            [ shift and go to state 173 ]
  ! GREAT           [ shift and go to state 170 ]
  ! LEQ             [ shift and go to state 186 ]
  ! GEQ             [ shift and go to state 177 ]


state 231

    (109) Slice -> LBRACK ExpressionOpt . COLON ExpressionOpt RBRACK

    COLON           shift and go to state 249


state 232

    (137) ExpressionOpt -> epsilon .

    COLON           reduce using rule 137 (ExpressionOpt -> epsilon .)
    RBRACK          reduce using rule 137 (ExpressionOpt -> epsilon .)


state 233

    (108) Index -> LBRACK Expression . RBRACK
    (117) Expression -> Expression . OROR Expression
    (118) Expression -> Expression . AMPAMP Expression
    (119) Expression -> Expression . EQEQ Expression
    (120) Expression -> Expression . NOTEQ Expression
    (121) Expression -> Expression . LESS Expression
    (122) Expression -> Expression . GREAT Expression
    (123) Expression -> Expression . LEQ Expression
    (124) Expression -> Expression . GEQ Expression
    (125) Expression -> Expression . PLUS Expression
    (126) Expression -> Expression . MINUS Expression
    (127) Expression -> Expression . OR Expression
    (128) Expression -> Expression . CARET Expression
    (129) Expression -> Expression . TIMES Expression
    (130) Expression -> Expression . DIVIDE Expression
    (131) Expression -> Expression . MOD Expression
    (132) Expression -> Expression . AMPERS Expression
    (133) Expression -> Expression . LL Expression
    (134) Expression -> Expression . GG Expression
    (135) Expression -> Expression . AMPCAR Expression
    (136) ExpressionOpt -> Expression .

    RBRACK          shift and go to state 250
    OROR            shift and go to state 168
    AMPAMP          shift and go to state 183
    EQEQ            shift and go to state 174
    NOTEQ           shift and go to state 180
    LESS            shift and go to state 173
    GREAT           shift and go to state 170
    LEQ             shift and go to state 186
    GEQ             shift and go to state 177
    PLUS            shift and go to state 181
    MINUS           shift and go to state 185
    OR              shift and go to state 178
    CARET           shift and go to state 169
    TIMES           shift and go to state 184
    DIVIDE          shift and go to state 171
    MOD             shift and go to state 182
    AMPERS          shift and go to state 176
    LL              shift and go to state 175
    GG              shift and go to state 179
    AMPCAR          shift and go to state 172
    COLON           reduce using rule 136 (ExpressionOpt -> Expression .)


state 234

    (112) ExpressionListTypeOpt -> epsilon .

    RPAREN          reduce using rule 112 (ExpressionListTypeOpt -> epsilon .)


state 235

    (111) ExpressionListTypeOpt -> ExpressionList .

    RPAREN          reduce using rule 111 (ExpressionListTypeOpt -> ExpressionList .)


state 236

    (110) Arguments -> LPAREN ExpressionListTypeOpt . RPAREN

    RPAREN          shift and go to state 251


state 237

    (107) Selector -> DOT IDENTIFIER .

    PLUSPLUS        reduce using rule 107 (Selector -> DOT IDENTIFIER .)
    MINUSMIN        reduce using rule 107 (Selector -> DOT IDENTIFIER .)
    DOT             reduce using rule 107 (Selector -> DOT IDENTIFIER .)
    LBRACK          reduce using rule 107 (Selector -> DOT IDENTIFIER .)
    LPAREN          reduce using rule 107 (Selector -> DOT IDENTIFIER .)
    OROR            reduce using rule 107 (Selector -> DOT IDENTIFIER .)
    AMPAMP          reduce using rule 107 (Selector -> DOT IDENTIFIER .)
    EQEQ            reduce using rule 107 (Selector -> DOT IDENTIFIER .)
    NOTEQ           reduce using rule 107 (Selector -> DOT IDENTIFIER .)
    LESS            reduce using rule 107 (Selector -> DOT IDENTIFIER .)
    GREAT           reduce using rule 107 (Selector -> DOT IDENTIFIER .)
    LEQ             reduce using rule 107 (Selector -> DOT IDENTIFIER .)
    GEQ             reduce using rule 107 (Selector -> DOT IDENTIFIER .)
    PLUS            reduce using rule 107 (Selector -> DOT IDENTIFIER .)
    MINUS           reduce using rule 107 (Selector -> DOT IDENTIFIER .)
    OR              reduce using rule 107 (Selector -> DOT IDENTIFIER .)
    CARET           reduce using rule 107 (Selector -> DOT IDENTIFIER .)
    TIMES           reduce using rule 107 (Selector -> DOT IDENTIFIER .)
    DIVIDE          reduce using rule 107 (Selector -> DOT IDENTIFIER .)
    MOD             reduce using rule 107 (Selector -> DOT IDENTIFIER .)
    AMPERS          reduce using rule 107 (Selector -> DOT IDENTIFIER .)
    LL              reduce using rule 107 (Selector -> DOT IDENTIFIER .)
    GG              reduce using rule 107 (Selector -> DOT IDENTIFIER .)
    AMPCAR          reduce using rule 107 (Selector -> DOT IDENTIFIER .)
    COMMA           reduce using rule 107 (Selector -> DOT IDENTIFIER .)
    SEMICOL         reduce using rule 107 (Selector -> DOT IDENTIFIER .)
    PLUSEQ          reduce using rule 107 (Selector -> DOT IDENTIFIER .)
    MINUSEQ         reduce using rule 107 (Selector -> DOT IDENTIFIER .)
    TIMESEQ         reduce using rule 107 (Selector -> DOT IDENTIFIER .)
    DIVIDEEQ        reduce using rule 107 (Selector -> DOT IDENTIFIER .)
    MODEQ           reduce using rule 107 (Selector -> DOT IDENTIFIER .)
    AMPEQ           reduce using rule 107 (Selector -> DOT IDENTIFIER .)
    OREQ            reduce using rule 107 (Selector -> DOT IDENTIFIER .)
    CAREQ           reduce using rule 107 (Selector -> DOT IDENTIFIER .)
    LLEQ            reduce using rule 107 (Selector -> DOT IDENTIFIER .)
    GGEQ            reduce using rule 107 (Selector -> DOT IDENTIFIER .)
    EQUAL           reduce using rule 107 (Selector -> DOT IDENTIFIER .)
    LBRACE          reduce using rule 107 (Selector -> DOT IDENTIFIER .)
    RBRACK          reduce using rule 107 (Selector -> DOT IDENTIFIER .)
    RPAREN          reduce using rule 107 (Selector -> DOT IDENTIFIER .)
    COLON           reduce using rule 107 (Selector -> DOT IDENTIFIER .)


state 238

    (45) StatementList -> StatementRep .
    (46) StatementRep -> StatementRep . Statement SEMICOL
    (145) Statement -> . Declaration
    (146) Statement -> . LabeledStmt
    (147) Statement -> . SimpleStmt
    (148) Statement -> . ReturnStmt
    (149) Statement -> . BreakStmt
    (150) Statement -> . ContinueStmt
    (151) Statement -> . GotoStmt
    (152) Statement -> . Block
    (153) Statement -> . IfStmt
    (154) Statement -> . PrintStmt
    (155) Statement -> . MallocStmt
    (156) Statement -> . ForStmt
    (48) Declaration -> . ConstDecl
    (49) Declaration -> . TypeDecl
    (50) Declaration -> . VarDecl
    (165) LabeledStmt -> . Label COLON Statement
    (160) SimpleStmt -> . epsilon
    (161) SimpleStmt -> . ExpressionStmt
    (162) SimpleStmt -> . IncDecStmt
    (163) SimpleStmt -> . Assignment
    (164) SimpleStmt -> . ShortVarDecl
    (200) ReturnStmt -> . RETURN ExpressionListPureOpt
    (203) BreakStmt -> . BREAK LabelOpt
    (204) ContinueStmt -> . CONTINUE LabelOpt
    (207) GotoStmt -> . GOTO Label
    (43) Block -> . CreateScope LBRACE StatementList RBRACE
    (183) IfStmt -> . IF Expression Block ElseOpt
    (158) PrintStmt -> . PRINT PD Expression
    (159) PrintStmt -> . PRINT PS Expression
    (157) MallocStmt -> . MALLOC IDENTIFIER
    (187) ForStmt -> . CreateForScope FOR ConditionBlockOpt Block
    (53) ConstDecl -> . CONST ConstSpec
    (54) ConstDecl -> . CONST LPAREN ConstSpecRep RPAREN
    (63) TypeDecl -> . TYPE TypeSpec
    (64) TypeDecl -> . TYPE LPAREN TypeSpecRep RPAREN
    (71) VarDecl -> . VAR VarSpec
    (72) VarDecl -> . VAR LPAREN VarSpecRep RPAREN
    (166) Label -> . IDENTIFIER
    (224) epsilon -> .
    (167) ExpressionStmt -> . Expression
    (168) IncDecStmt -> . PrimaryExpr PLUSPLUS
    (169) IncDecStmt -> . PrimaryExpr MINUSMIN
    (170) Assignment -> . ExpressionList assign_op ExpressionList
    (79) ShortVarDecl -> . IDENTIFIER COLONEQ Expression
    (44) CreateScope -> . epsilon
    (188) CreateForScope -> . epsilon
    (116) Expression -> . UnaryExpr
    (117) Expression -> . Expression OROR Expression
    (118) Expression -> . Expression AMPAMP Expression
    (119) Expression -> . Expression EQEQ Expression
    (120) Expression -> . Expression NOTEQ Expression
    (121) Expression -> . Expression LESS Expression
    (122) Expression -> . Expression GREAT Expression
    (123) Expression -> . Expression LEQ Expression
    (124) Expression -> . Expression GEQ Expression
    (125) Expression -> . Expression PLUS Expression
    (126) Expression -> . Expression MINUS Expression
    (127) Expression -> . Expression OR Expression
    (128) Expression -> . Expression CARET Expression
    (129) Expression -> . Expression TIMES Expression
    (130) Expression -> . Expression DIVIDE Expression
    (131) Expression -> . Expression MOD Expression
    (132) Expression -> . Expression AMPERS Expression
    (133) Expression -> . Expression LL Expression
    (134) Expression -> . Expression GG Expression
    (135) Expression -> . Expression AMPCAR Expression
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . Conversion
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . PrimaryExpr Index
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr Arguments
    (113) ExpressionList -> . Expression ExpressionRep
    (138) UnaryExpr -> . PrimaryExpr
    (139) UnaryExpr -> . UnaryOp UnaryExpr
    (85) Operand -> . Literal
    (86) Operand -> . OperandName
    (87) Operand -> . LPAREN Expression RPAREN
    (100) Conversion -> . Type LPAREN Expression RPAREN
    (140) UnaryOp -> . PLUS
    (141) UnaryOp -> . MINUS
    (142) UnaryOp -> . TIMES
    (143) UnaryOp -> . AMPERS
    (144) UnaryOp -> . NOT
    (88) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (89) BasicLit -> . IntLiteral
    (90) BasicLit -> . FloatLiteral
    (91) BasicLit -> . ImgLiteral
    (92) BasicLit -> . RuneLiteral
    (93) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (94) IntLiteral -> . INTEGER
    (95) FloatLiteral -> . FLOAT
    (96) ImgLiteral -> . IMAGINARY
    (97) RuneLiteral -> . RUNE
    (98) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . Pointer BaseType
    (27) FunctionType -> . FUNC Signature
    (25) Pointer -> . POINTER

    RBRACE          reduce using rule 45 (StatementList -> StatementRep .)
    RETURN          shift and go to state 261
    BREAK           shift and go to state 275
    CONTINUE        shift and go to state 267
    GOTO            shift and go to state 279
    IF              shift and go to state 281
    PRINT           shift and go to state 263
    MALLOC          shift and go to state 271
    CONST           shift and go to state 14
    TYPE            shift and go to state 23
    VAR             shift and go to state 21
    IDENTIFIER      shift and go to state 270
    SEMICOL         reduce using rule 224 (epsilon -> .)
    LBRACE          reduce using rule 224 (epsilon -> .)
    FOR             reduce using rule 224 (epsilon -> .)
    LPAREN          shift and go to state 120
    PLUS            shift and go to state 108
    MINUS           shift and go to state 102
    TIMES           shift and go to state 117
    AMPERS          shift and go to state 123
    NOT             shift and go to state 107
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 109
    FLOAT           shift and go to state 122
    IMAGINARY       shift and go to state 110
    RUNE            shift and go to state 96
    STRING          shift and go to state 103
    LBRACK          shift and go to state 67
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53
    POINTER         shift and go to state 59

    CreateForScope                 shift and go to state 260
    Pointer                        shift and go to state 66
    UnaryOp                        shift and go to state 106
    ContinueStmt                   shift and go to state 252
    Conversion                     shift and go to state 97
    SimpleStmt                     shift and go to state 277
    Label                          shift and go to state 262
    ExpressionStmt                 shift and go to state 253
    PointerType                    shift and go to state 69
    ForStmt                        shift and go to state 278
    Statement                      shift and go to state 254
    RuneLiteral                    shift and go to state 116
    ImgLiteral                     shift and go to state 113
    FloatLiteral                   shift and go to state 100
    MallocStmt                     shift and go to state 268
    IfStmt                         shift and go to state 255
    OperandName                    shift and go to state 104
    ArrayType                      shift and go to state 54
    Assignment                     shift and go to state 256
    TypeName                       shift and go to state 57
    IncDecStmt                     shift and go to state 257
    Declaration                    shift and go to state 269
    FunctionType                   shift and go to state 70
    CreateScope                    shift and go to state 134
    StringLiteral                  shift and go to state 98
    GotoStmt                       shift and go to state 264
    StructType                     shift and go to state 60
    IntLiteral                     shift and go to state 112
    TypeDecl                       shift and go to state 19
    LabeledStmt                    shift and go to state 258
    epsilon                        shift and go to state 272
    UnaryExpr                      shift and go to state 115
    Operand                        shift and go to state 118
    ExpressionList                 shift and go to state 273
    Expression                     shift and go to state 274
    ShortVarDecl                   shift and go to state 280
    Block                          shift and go to state 266
    Type                           shift and go to state 101
    BreakStmt                      shift and go to state 282
    VarDecl                        shift and go to state 22
    Literal                        shift and go to state 99
    PrintStmt                      shift and go to state 259
    TypeLit                        shift and go to state 56
    BasicLit                       shift and go to state 105
    PrimaryExpr                    shift and go to state 265
    ReturnStmt                     shift and go to state 276
    ConstDecl                      shift and go to state 18

state 239

    (47) StatementRep -> epsilon .

    RETURN          reduce using rule 47 (StatementRep -> epsilon .)
    BREAK           reduce using rule 47 (StatementRep -> epsilon .)
    CONTINUE        reduce using rule 47 (StatementRep -> epsilon .)
    GOTO            reduce using rule 47 (StatementRep -> epsilon .)
    IF              reduce using rule 47 (StatementRep -> epsilon .)
    PRINT           reduce using rule 47 (StatementRep -> epsilon .)
    MALLOC          reduce using rule 47 (StatementRep -> epsilon .)
    CONST           reduce using rule 47 (StatementRep -> epsilon .)
    TYPE            reduce using rule 47 (StatementRep -> epsilon .)
    VAR             reduce using rule 47 (StatementRep -> epsilon .)
    IDENTIFIER      reduce using rule 47 (StatementRep -> epsilon .)
    LPAREN          reduce using rule 47 (StatementRep -> epsilon .)
    PLUS            reduce using rule 47 (StatementRep -> epsilon .)
    MINUS           reduce using rule 47 (StatementRep -> epsilon .)
    TIMES           reduce using rule 47 (StatementRep -> epsilon .)
    AMPERS          reduce using rule 47 (StatementRep -> epsilon .)
    NOT             reduce using rule 47 (StatementRep -> epsilon .)
    TYPEX           reduce using rule 47 (StatementRep -> epsilon .)
    TTYPE           reduce using rule 47 (StatementRep -> epsilon .)
    INTEGER         reduce using rule 47 (StatementRep -> epsilon .)
    FLOAT           reduce using rule 47 (StatementRep -> epsilon .)
    IMAGINARY       reduce using rule 47 (StatementRep -> epsilon .)
    RUNE            reduce using rule 47 (StatementRep -> epsilon .)
    STRING          reduce using rule 47 (StatementRep -> epsilon .)
    LBRACK          reduce using rule 47 (StatementRep -> epsilon .)
    STRUCT          reduce using rule 47 (StatementRep -> epsilon .)
    FUNC            reduce using rule 47 (StatementRep -> epsilon .)
    POINTER         reduce using rule 47 (StatementRep -> epsilon .)
    SEMICOL         reduce using rule 47 (StatementRep -> epsilon .)
    LBRACE          reduce using rule 47 (StatementRep -> epsilon .)
    FOR             reduce using rule 47 (StatementRep -> epsilon .)
    RBRACE          reduce using rule 47 (StatementRep -> epsilon .)


state 240

    (43) Block -> CreateScope LBRACE StatementList . RBRACE

    RBRACE          shift and go to state 283


state 241

    (41) ParameterDecl -> IdentifierList . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . Pointer BaseType
    (27) FunctionType -> . FUNC Signature
    (25) Pointer -> . POINTER

    LPAREN          shift and go to state 62
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    LBRACK          shift and go to state 67
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53
    POINTER         shift and go to state 59

    StructType                     shift and go to state 60
    Type                           shift and go to state 284
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 57
    Pointer                        shift and go to state 66
    PointerType                    shift and go to state 69
    FunctionType                   shift and go to state 70
    TypeLit                        shift and go to state 56

state 242

    (42) ParameterDecl -> Type .

    COMMA           reduce using rule 42 (ParameterDecl -> Type .)
    RPAREN          reduce using rule 42 (ParameterDecl -> Type .)


state 243

    (39) ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA ParameterDecl .

    COMMA           reduce using rule 39 (ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA ParameterDecl .)
    RPAREN          reduce using rule 39 (ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA ParameterDecl .)


state 244

    (40) ParameterDeclCommaRep -> ParameterDecl COMMA ParameterDecl .

    COMMA           reduce using rule 40 (ParameterDeclCommaRep -> ParameterDecl COMMA ParameterDecl .)
    RPAREN          reduce using rule 40 (ParameterDeclCommaRep -> ParameterDecl COMMA ParameterDecl .)


state 245

    (114) ExpressionRep -> ExpressionRep COMMA . Expression
    (116) Expression -> . UnaryExpr
    (117) Expression -> . Expression OROR Expression
    (118) Expression -> . Expression AMPAMP Expression
    (119) Expression -> . Expression EQEQ Expression
    (120) Expression -> . Expression NOTEQ Expression
    (121) Expression -> . Expression LESS Expression
    (122) Expression -> . Expression GREAT Expression
    (123) Expression -> . Expression LEQ Expression
    (124) Expression -> . Expression GEQ Expression
    (125) Expression -> . Expression PLUS Expression
    (126) Expression -> . Expression MINUS Expression
    (127) Expression -> . Expression OR Expression
    (128) Expression -> . Expression CARET Expression
    (129) Expression -> . Expression TIMES Expression
    (130) Expression -> . Expression DIVIDE Expression
    (131) Expression -> . Expression MOD Expression
    (132) Expression -> . Expression AMPERS Expression
    (133) Expression -> . Expression LL Expression
    (134) Expression -> . Expression GG Expression
    (135) Expression -> . Expression AMPCAR Expression
    (138) UnaryExpr -> . PrimaryExpr
    (139) UnaryExpr -> . UnaryOp UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . Conversion
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . PrimaryExpr Index
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr Arguments
    (140) UnaryOp -> . PLUS
    (141) UnaryOp -> . MINUS
    (142) UnaryOp -> . TIMES
    (143) UnaryOp -> . AMPERS
    (144) UnaryOp -> . NOT
    (85) Operand -> . Literal
    (86) Operand -> . OperandName
    (87) Operand -> . LPAREN Expression RPAREN
    (100) Conversion -> . Type LPAREN Expression RPAREN
    (88) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (89) BasicLit -> . IntLiteral
    (90) BasicLit -> . FloatLiteral
    (91) BasicLit -> . ImgLiteral
    (92) BasicLit -> . RuneLiteral
    (93) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (94) IntLiteral -> . INTEGER
    (95) FloatLiteral -> . FLOAT
    (96) ImgLiteral -> . IMAGINARY
    (97) RuneLiteral -> . RUNE
    (98) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . Pointer BaseType
    (27) FunctionType -> . FUNC Signature
    (25) Pointer -> . POINTER

    PLUS            shift and go to state 108
    MINUS           shift and go to state 102
    TIMES           shift and go to state 117
    AMPERS          shift and go to state 123
    NOT             shift and go to state 107
    LPAREN          shift and go to state 120
    IDENTIFIER      shift and go to state 111
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 109
    FLOAT           shift and go to state 122
    IMAGINARY       shift and go to state 110
    RUNE            shift and go to state 96
    STRING          shift and go to state 103
    LBRACK          shift and go to state 67
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53
    POINTER         shift and go to state 59

    UnaryOp                        shift and go to state 106
    PrimaryExpr                    shift and go to state 124
    Conversion                     shift and go to state 97
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 99
    FloatLiteral                   shift and go to state 100
    Type                           shift and go to state 101
    OperandName                    shift and go to state 104
    BasicLit                       shift and go to state 105
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 60
    IntLiteral                     shift and go to state 112
    UnaryExpr                      shift and go to state 115
    RuneLiteral                    shift and go to state 116
    Operand                        shift and go to state 118
    Expression                     shift and go to state 285
    PointerType                    shift and go to state 69
    Pointer                        shift and go to state 66
    StringLiteral                  shift and go to state 98
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 113
    FunctionType                   shift and go to state 70

state 246

    (18) FieldDeclRep -> FieldDeclRep FieldDecl SEMICOL .

    RBRACE          reduce using rule 18 (FieldDeclRep -> FieldDeclRep FieldDecl SEMICOL .)
    IDENTIFIER      reduce using rule 18 (FieldDeclRep -> FieldDeclRep FieldDecl SEMICOL .)


state 247

    (20) FieldDecl -> IdentifierList Type . TagOpt
    (21) TagOpt -> . Tag
    (22) TagOpt -> . epsilon
    (23) Tag -> . STRING
    (224) epsilon -> .

    STRING          shift and go to state 286
    SEMICOL         reduce using rule 224 (epsilon -> .)

    epsilon                        shift and go to state 287
    Tag                            shift and go to state 288
    TagOpt                         shift and go to state 289

state 248

    (100) Conversion -> Type LPAREN Expression RPAREN .

    DOT             reduce using rule 100 (Conversion -> Type LPAREN Expression RPAREN .)
    LBRACK          reduce using rule 100 (Conversion -> Type LPAREN Expression RPAREN .)
    LPAREN          reduce using rule 100 (Conversion -> Type LPAREN Expression RPAREN .)
    OROR            reduce using rule 100 (Conversion -> Type LPAREN Expression RPAREN .)
    AMPAMP          reduce using rule 100 (Conversion -> Type LPAREN Expression RPAREN .)
    EQEQ            reduce using rule 100 (Conversion -> Type LPAREN Expression RPAREN .)
    NOTEQ           reduce using rule 100 (Conversion -> Type LPAREN Expression RPAREN .)
    LESS            reduce using rule 100 (Conversion -> Type LPAREN Expression RPAREN .)
    GREAT           reduce using rule 100 (Conversion -> Type LPAREN Expression RPAREN .)
    LEQ             reduce using rule 100 (Conversion -> Type LPAREN Expression RPAREN .)
    GEQ             reduce using rule 100 (Conversion -> Type LPAREN Expression RPAREN .)
    PLUS            reduce using rule 100 (Conversion -> Type LPAREN Expression RPAREN .)
    MINUS           reduce using rule 100 (Conversion -> Type LPAREN Expression RPAREN .)
    OR              reduce using rule 100 (Conversion -> Type LPAREN Expression RPAREN .)
    CARET           reduce using rule 100 (Conversion -> Type LPAREN Expression RPAREN .)
    TIMES           reduce using rule 100 (Conversion -> Type LPAREN Expression RPAREN .)
    DIVIDE          reduce using rule 100 (Conversion -> Type LPAREN Expression RPAREN .)
    MOD             reduce using rule 100 (Conversion -> Type LPAREN Expression RPAREN .)
    AMPERS          reduce using rule 100 (Conversion -> Type LPAREN Expression RPAREN .)
    LL              reduce using rule 100 (Conversion -> Type LPAREN Expression RPAREN .)
    GG              reduce using rule 100 (Conversion -> Type LPAREN Expression RPAREN .)
    AMPCAR          reduce using rule 100 (Conversion -> Type LPAREN Expression RPAREN .)
    RBRACK          reduce using rule 100 (Conversion -> Type LPAREN Expression RPAREN .)
    COMMA           reduce using rule 100 (Conversion -> Type LPAREN Expression RPAREN .)
    SEMICOL         reduce using rule 100 (Conversion -> Type LPAREN Expression RPAREN .)
    RPAREN          reduce using rule 100 (Conversion -> Type LPAREN Expression RPAREN .)
    COLON           reduce using rule 100 (Conversion -> Type LPAREN Expression RPAREN .)
    PLUSEQ          reduce using rule 100 (Conversion -> Type LPAREN Expression RPAREN .)
    MINUSEQ         reduce using rule 100 (Conversion -> Type LPAREN Expression RPAREN .)
    TIMESEQ         reduce using rule 100 (Conversion -> Type LPAREN Expression RPAREN .)
    DIVIDEEQ        reduce using rule 100 (Conversion -> Type LPAREN Expression RPAREN .)
    MODEQ           reduce using rule 100 (Conversion -> Type LPAREN Expression RPAREN .)
    AMPEQ           reduce using rule 100 (Conversion -> Type LPAREN Expression RPAREN .)
    OREQ            reduce using rule 100 (Conversion -> Type LPAREN Expression RPAREN .)
    CAREQ           reduce using rule 100 (Conversion -> Type LPAREN Expression RPAREN .)
    LLEQ            reduce using rule 100 (Conversion -> Type LPAREN Expression RPAREN .)
    GGEQ            reduce using rule 100 (Conversion -> Type LPAREN Expression RPAREN .)
    EQUAL           reduce using rule 100 (Conversion -> Type LPAREN Expression RPAREN .)
    LBRACE          reduce using rule 100 (Conversion -> Type LPAREN Expression RPAREN .)
    PLUSPLUS        reduce using rule 100 (Conversion -> Type LPAREN Expression RPAREN .)
    MINUSMIN        reduce using rule 100 (Conversion -> Type LPAREN Expression RPAREN .)


state 249

    (109) Slice -> LBRACK ExpressionOpt COLON . ExpressionOpt RBRACK
    (136) ExpressionOpt -> . Expression
    (137) ExpressionOpt -> . epsilon
    (116) Expression -> . UnaryExpr
    (117) Expression -> . Expression OROR Expression
    (118) Expression -> . Expression AMPAMP Expression
    (119) Expression -> . Expression EQEQ Expression
    (120) Expression -> . Expression NOTEQ Expression
    (121) Expression -> . Expression LESS Expression
    (122) Expression -> . Expression GREAT Expression
    (123) Expression -> . Expression LEQ Expression
    (124) Expression -> . Expression GEQ Expression
    (125) Expression -> . Expression PLUS Expression
    (126) Expression -> . Expression MINUS Expression
    (127) Expression -> . Expression OR Expression
    (128) Expression -> . Expression CARET Expression
    (129) Expression -> . Expression TIMES Expression
    (130) Expression -> . Expression DIVIDE Expression
    (131) Expression -> . Expression MOD Expression
    (132) Expression -> . Expression AMPERS Expression
    (133) Expression -> . Expression LL Expression
    (134) Expression -> . Expression GG Expression
    (135) Expression -> . Expression AMPCAR Expression
    (224) epsilon -> .
    (138) UnaryExpr -> . PrimaryExpr
    (139) UnaryExpr -> . UnaryOp UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . Conversion
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . PrimaryExpr Index
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr Arguments
    (140) UnaryOp -> . PLUS
    (141) UnaryOp -> . MINUS
    (142) UnaryOp -> . TIMES
    (143) UnaryOp -> . AMPERS
    (144) UnaryOp -> . NOT
    (85) Operand -> . Literal
    (86) Operand -> . OperandName
    (87) Operand -> . LPAREN Expression RPAREN
    (100) Conversion -> . Type LPAREN Expression RPAREN
    (88) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (89) BasicLit -> . IntLiteral
    (90) BasicLit -> . FloatLiteral
    (91) BasicLit -> . ImgLiteral
    (92) BasicLit -> . RuneLiteral
    (93) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (94) IntLiteral -> . INTEGER
    (95) FloatLiteral -> . FLOAT
    (96) ImgLiteral -> . IMAGINARY
    (97) RuneLiteral -> . RUNE
    (98) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . Pointer BaseType
    (27) FunctionType -> . FUNC Signature
    (25) Pointer -> . POINTER

    RBRACK          reduce using rule 224 (epsilon -> .)
    PLUS            shift and go to state 108
    MINUS           shift and go to state 102
    TIMES           shift and go to state 117
    AMPERS          shift and go to state 123
    NOT             shift and go to state 107
    LPAREN          shift and go to state 120
    IDENTIFIER      shift and go to state 111
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 109
    FLOAT           shift and go to state 122
    IMAGINARY       shift and go to state 110
    RUNE            shift and go to state 96
    STRING          shift and go to state 103
    LBRACK          shift and go to state 67
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53
    POINTER         shift and go to state 59

    Conversion                     shift and go to state 97
    UnaryOp                        shift and go to state 106
    PrimaryExpr                    shift and go to state 124
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 99
    FloatLiteral                   shift and go to state 100
    Type                           shift and go to state 101
    OperandName                    shift and go to state 104
    BasicLit                       shift and go to state 105
    TypeName                       shift and go to state 57
    ExpressionOpt                  shift and go to state 290
    StructType                     shift and go to state 60
    IntLiteral                     shift and go to state 112
    epsilon                        shift and go to state 232
    UnaryExpr                      shift and go to state 115
    RuneLiteral                    shift and go to state 116
    Operand                        shift and go to state 118
    Expression                     shift and go to state 291
    PointerType                    shift and go to state 69
    Pointer                        shift and go to state 66
    StringLiteral                  shift and go to state 98
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 113
    FunctionType                   shift and go to state 70

state 250

    (108) Index -> LBRACK Expression RBRACK .

    PLUSPLUS        reduce using rule 108 (Index -> LBRACK Expression RBRACK .)
    MINUSMIN        reduce using rule 108 (Index -> LBRACK Expression RBRACK .)
    DOT             reduce using rule 108 (Index -> LBRACK Expression RBRACK .)
    LBRACK          reduce using rule 108 (Index -> LBRACK Expression RBRACK .)
    LPAREN          reduce using rule 108 (Index -> LBRACK Expression RBRACK .)
    OROR            reduce using rule 108 (Index -> LBRACK Expression RBRACK .)
    AMPAMP          reduce using rule 108 (Index -> LBRACK Expression RBRACK .)
    EQEQ            reduce using rule 108 (Index -> LBRACK Expression RBRACK .)
    NOTEQ           reduce using rule 108 (Index -> LBRACK Expression RBRACK .)
    LESS            reduce using rule 108 (Index -> LBRACK Expression RBRACK .)
    GREAT           reduce using rule 108 (Index -> LBRACK Expression RBRACK .)
    LEQ             reduce using rule 108 (Index -> LBRACK Expression RBRACK .)
    GEQ             reduce using rule 108 (Index -> LBRACK Expression RBRACK .)
    PLUS            reduce using rule 108 (Index -> LBRACK Expression RBRACK .)
    MINUS           reduce using rule 108 (Index -> LBRACK Expression RBRACK .)
    OR              reduce using rule 108 (Index -> LBRACK Expression RBRACK .)
    CARET           reduce using rule 108 (Index -> LBRACK Expression RBRACK .)
    TIMES           reduce using rule 108 (Index -> LBRACK Expression RBRACK .)
    DIVIDE          reduce using rule 108 (Index -> LBRACK Expression RBRACK .)
    MOD             reduce using rule 108 (Index -> LBRACK Expression RBRACK .)
    AMPERS          reduce using rule 108 (Index -> LBRACK Expression RBRACK .)
    LL              reduce using rule 108 (Index -> LBRACK Expression RBRACK .)
    GG              reduce using rule 108 (Index -> LBRACK Expression RBRACK .)
    AMPCAR          reduce using rule 108 (Index -> LBRACK Expression RBRACK .)
    COMMA           reduce using rule 108 (Index -> LBRACK Expression RBRACK .)
    SEMICOL         reduce using rule 108 (Index -> LBRACK Expression RBRACK .)
    PLUSEQ          reduce using rule 108 (Index -> LBRACK Expression RBRACK .)
    MINUSEQ         reduce using rule 108 (Index -> LBRACK Expression RBRACK .)
    TIMESEQ         reduce using rule 108 (Index -> LBRACK Expression RBRACK .)
    DIVIDEEQ        reduce using rule 108 (Index -> LBRACK Expression RBRACK .)
    MODEQ           reduce using rule 108 (Index -> LBRACK Expression RBRACK .)
    AMPEQ           reduce using rule 108 (Index -> LBRACK Expression RBRACK .)
    OREQ            reduce using rule 108 (Index -> LBRACK Expression RBRACK .)
    CAREQ           reduce using rule 108 (Index -> LBRACK Expression RBRACK .)
    LLEQ            reduce using rule 108 (Index -> LBRACK Expression RBRACK .)
    GGEQ            reduce using rule 108 (Index -> LBRACK Expression RBRACK .)
    EQUAL           reduce using rule 108 (Index -> LBRACK Expression RBRACK .)
    LBRACE          reduce using rule 108 (Index -> LBRACK Expression RBRACK .)
    RBRACK          reduce using rule 108 (Index -> LBRACK Expression RBRACK .)
    RPAREN          reduce using rule 108 (Index -> LBRACK Expression RBRACK .)
    COLON           reduce using rule 108 (Index -> LBRACK Expression RBRACK .)


state 251

    (110) Arguments -> LPAREN ExpressionListTypeOpt RPAREN .

    DOT             reduce using rule 110 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LBRACK          reduce using rule 110 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LPAREN          reduce using rule 110 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    OROR            reduce using rule 110 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    AMPAMP          reduce using rule 110 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    EQEQ            reduce using rule 110 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    NOTEQ           reduce using rule 110 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LESS            reduce using rule 110 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    GREAT           reduce using rule 110 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LEQ             reduce using rule 110 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    GEQ             reduce using rule 110 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    PLUS            reduce using rule 110 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    MINUS           reduce using rule 110 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    OR              reduce using rule 110 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    CARET           reduce using rule 110 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    TIMES           reduce using rule 110 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    DIVIDE          reduce using rule 110 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    MOD             reduce using rule 110 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    AMPERS          reduce using rule 110 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LL              reduce using rule 110 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    GG              reduce using rule 110 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    AMPCAR          reduce using rule 110 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    RBRACK          reduce using rule 110 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    COMMA           reduce using rule 110 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    SEMICOL         reduce using rule 110 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    RPAREN          reduce using rule 110 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    COLON           reduce using rule 110 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    PLUSEQ          reduce using rule 110 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    MINUSEQ         reduce using rule 110 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    TIMESEQ         reduce using rule 110 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    DIVIDEEQ        reduce using rule 110 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    MODEQ           reduce using rule 110 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    AMPEQ           reduce using rule 110 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    OREQ            reduce using rule 110 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    CAREQ           reduce using rule 110 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LLEQ            reduce using rule 110 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    GGEQ            reduce using rule 110 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    EQUAL           reduce using rule 110 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LBRACE          reduce using rule 110 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    PLUSPLUS        reduce using rule 110 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    MINUSMIN        reduce using rule 110 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)


state 252

    (150) Statement -> ContinueStmt .

    SEMICOL         reduce using rule 150 (Statement -> ContinueStmt .)


state 253

    (161) SimpleStmt -> ExpressionStmt .

    SEMICOL         reduce using rule 161 (SimpleStmt -> ExpressionStmt .)
    LBRACE          reduce using rule 161 (SimpleStmt -> ExpressionStmt .)


state 254

    (46) StatementRep -> StatementRep Statement . SEMICOL

    SEMICOL         shift and go to state 292


state 255

    (153) Statement -> IfStmt .

    SEMICOL         reduce using rule 153 (Statement -> IfStmt .)


state 256

    (163) SimpleStmt -> Assignment .

    SEMICOL         reduce using rule 163 (SimpleStmt -> Assignment .)
    LBRACE          reduce using rule 163 (SimpleStmt -> Assignment .)


state 257

    (162) SimpleStmt -> IncDecStmt .

    SEMICOL         reduce using rule 162 (SimpleStmt -> IncDecStmt .)
    LBRACE          reduce using rule 162 (SimpleStmt -> IncDecStmt .)


state 258

    (146) Statement -> LabeledStmt .

    SEMICOL         reduce using rule 146 (Statement -> LabeledStmt .)


state 259

    (154) Statement -> PrintStmt .

    SEMICOL         reduce using rule 154 (Statement -> PrintStmt .)


state 260

    (187) ForStmt -> CreateForScope . FOR ConditionBlockOpt Block

    FOR             shift and go to state 293


state 261

    (200) ReturnStmt -> RETURN . ExpressionListPureOpt
    (201) ExpressionListPureOpt -> . ExpressionList
    (202) ExpressionListPureOpt -> . epsilon
    (113) ExpressionList -> . Expression ExpressionRep
    (224) epsilon -> .
    (116) Expression -> . UnaryExpr
    (117) Expression -> . Expression OROR Expression
    (118) Expression -> . Expression AMPAMP Expression
    (119) Expression -> . Expression EQEQ Expression
    (120) Expression -> . Expression NOTEQ Expression
    (121) Expression -> . Expression LESS Expression
    (122) Expression -> . Expression GREAT Expression
    (123) Expression -> . Expression LEQ Expression
    (124) Expression -> . Expression GEQ Expression
    (125) Expression -> . Expression PLUS Expression
    (126) Expression -> . Expression MINUS Expression
    (127) Expression -> . Expression OR Expression
    (128) Expression -> . Expression CARET Expression
    (129) Expression -> . Expression TIMES Expression
    (130) Expression -> . Expression DIVIDE Expression
    (131) Expression -> . Expression MOD Expression
    (132) Expression -> . Expression AMPERS Expression
    (133) Expression -> . Expression LL Expression
    (134) Expression -> . Expression GG Expression
    (135) Expression -> . Expression AMPCAR Expression
    (138) UnaryExpr -> . PrimaryExpr
    (139) UnaryExpr -> . UnaryOp UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . Conversion
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . PrimaryExpr Index
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr Arguments
    (140) UnaryOp -> . PLUS
    (141) UnaryOp -> . MINUS
    (142) UnaryOp -> . TIMES
    (143) UnaryOp -> . AMPERS
    (144) UnaryOp -> . NOT
    (85) Operand -> . Literal
    (86) Operand -> . OperandName
    (87) Operand -> . LPAREN Expression RPAREN
    (100) Conversion -> . Type LPAREN Expression RPAREN
    (88) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (89) BasicLit -> . IntLiteral
    (90) BasicLit -> . FloatLiteral
    (91) BasicLit -> . ImgLiteral
    (92) BasicLit -> . RuneLiteral
    (93) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (94) IntLiteral -> . INTEGER
    (95) FloatLiteral -> . FLOAT
    (96) ImgLiteral -> . IMAGINARY
    (97) RuneLiteral -> . RUNE
    (98) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . Pointer BaseType
    (27) FunctionType -> . FUNC Signature
    (25) Pointer -> . POINTER

    SEMICOL         reduce using rule 224 (epsilon -> .)
    PLUS            shift and go to state 108
    MINUS           shift and go to state 102
    TIMES           shift and go to state 117
    AMPERS          shift and go to state 123
    NOT             shift and go to state 107
    LPAREN          shift and go to state 120
    IDENTIFIER      shift and go to state 111
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 109
    FLOAT           shift and go to state 122
    IMAGINARY       shift and go to state 110
    RUNE            shift and go to state 96
    STRING          shift and go to state 103
    LBRACK          shift and go to state 67
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53
    POINTER         shift and go to state 59

    UnaryOp                        shift and go to state 106
    Conversion                     shift and go to state 97
    ExpressionListPureOpt          shift and go to state 294
    Literal                        shift and go to state 99
    FloatLiteral                   shift and go to state 100
    Type                           shift and go to state 101
    OperandName                    shift and go to state 104
    BasicLit                       shift and go to state 105
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 60
    IntLiteral                     shift and go to state 112
    ImgLiteral                     shift and go to state 113
    epsilon                        shift and go to state 295
    UnaryExpr                      shift and go to state 115
    RuneLiteral                    shift and go to state 116
    PrimaryExpr                    shift and go to state 124
    ExpressionList                 shift and go to state 296
    ArrayType                      shift and go to state 54
    Expression                     shift and go to state 146
    PointerType                    shift and go to state 69
    Pointer                        shift and go to state 66
    StringLiteral                  shift and go to state 98
    TypeLit                        shift and go to state 56
    Operand                        shift and go to state 118
    FunctionType                   shift and go to state 70

state 262

    (165) LabeledStmt -> Label . COLON Statement

    COLON           shift and go to state 297


state 263

    (158) PrintStmt -> PRINT . PD Expression
    (159) PrintStmt -> PRINT . PS Expression

    PD              shift and go to state 299
    PS              shift and go to state 298


state 264

    (151) Statement -> GotoStmt .

    SEMICOL         reduce using rule 151 (Statement -> GotoStmt .)


state 265

    (168) IncDecStmt -> PrimaryExpr . PLUSPLUS
    (169) IncDecStmt -> PrimaryExpr . MINUSMIN
    (103) PrimaryExpr -> PrimaryExpr . Selector
    (104) PrimaryExpr -> PrimaryExpr . Index
    (105) PrimaryExpr -> PrimaryExpr . Slice
    (106) PrimaryExpr -> PrimaryExpr . Arguments
    (138) UnaryExpr -> PrimaryExpr .
    (107) Selector -> . DOT IDENTIFIER
    (108) Index -> . LBRACK Expression RBRACK
    (109) Slice -> . LBRACK ExpressionOpt COLON ExpressionOpt RBRACK
    (110) Arguments -> . LPAREN ExpressionListTypeOpt RPAREN

    PLUSPLUS        shift and go to state 300
    MINUSMIN        shift and go to state 301
    OROR            reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    AMPAMP          reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    EQEQ            reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    NOTEQ           reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    LESS            reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    GREAT           reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    LEQ             reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    GEQ             reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    PLUS            reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    MINUS           reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    OR              reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    CARET           reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    TIMES           reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    DIVIDE          reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    MOD             reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    AMPERS          reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    LL              reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    GG              reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    AMPCAR          reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    COMMA           reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    LBRACE          reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    PLUSEQ          reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    MINUSEQ         reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    TIMESEQ         reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    DIVIDEEQ        reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    MODEQ           reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    AMPEQ           reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    OREQ            reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    CAREQ           reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    LLEQ            reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    GGEQ            reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    EQUAL           reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    SEMICOL         reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    DOT             shift and go to state 193
    LBRACK          shift and go to state 189
    LPAREN          shift and go to state 192

    Index                          shift and go to state 187
    Slice                          shift and go to state 188
    Selector                       shift and go to state 190
    Arguments                      shift and go to state 191

state 266

    (152) Statement -> Block .

    SEMICOL         reduce using rule 152 (Statement -> Block .)


state 267

    (204) ContinueStmt -> CONTINUE . LabelOpt
    (205) LabelOpt -> . Label
    (206) LabelOpt -> . epsilon
    (166) Label -> . IDENTIFIER
    (224) epsilon -> .

    IDENTIFIER      shift and go to state 303
    SEMICOL         reduce using rule 224 (epsilon -> .)

    epsilon                        shift and go to state 302
    LabelOpt                       shift and go to state 304
    Label                          shift and go to state 305

state 268

    (155) Statement -> MallocStmt .

    SEMICOL         reduce using rule 155 (Statement -> MallocStmt .)


state 269

    (145) Statement -> Declaration .

    SEMICOL         reduce using rule 145 (Statement -> Declaration .)


state 270

    (166) Label -> IDENTIFIER .
    (79) ShortVarDecl -> IDENTIFIER . COLONEQ Expression
    (99) OperandName -> IDENTIFIER .

    COLON           reduce using rule 166 (Label -> IDENTIFIER .)
    COLONEQ         shift and go to state 306
    PLUSPLUS        reduce using rule 99 (OperandName -> IDENTIFIER .)
    MINUSMIN        reduce using rule 99 (OperandName -> IDENTIFIER .)
    DOT             reduce using rule 99 (OperandName -> IDENTIFIER .)
    LBRACK          reduce using rule 99 (OperandName -> IDENTIFIER .)
    LPAREN          reduce using rule 99 (OperandName -> IDENTIFIER .)
    OROR            reduce using rule 99 (OperandName -> IDENTIFIER .)
    AMPAMP          reduce using rule 99 (OperandName -> IDENTIFIER .)
    EQEQ            reduce using rule 99 (OperandName -> IDENTIFIER .)
    NOTEQ           reduce using rule 99 (OperandName -> IDENTIFIER .)
    LESS            reduce using rule 99 (OperandName -> IDENTIFIER .)
    GREAT           reduce using rule 99 (OperandName -> IDENTIFIER .)
    LEQ             reduce using rule 99 (OperandName -> IDENTIFIER .)
    GEQ             reduce using rule 99 (OperandName -> IDENTIFIER .)
    PLUS            reduce using rule 99 (OperandName -> IDENTIFIER .)
    MINUS           reduce using rule 99 (OperandName -> IDENTIFIER .)
    OR              reduce using rule 99 (OperandName -> IDENTIFIER .)
    CARET           reduce using rule 99 (OperandName -> IDENTIFIER .)
    TIMES           reduce using rule 99 (OperandName -> IDENTIFIER .)
    DIVIDE          reduce using rule 99 (OperandName -> IDENTIFIER .)
    MOD             reduce using rule 99 (OperandName -> IDENTIFIER .)
    AMPERS          reduce using rule 99 (OperandName -> IDENTIFIER .)
    LL              reduce using rule 99 (OperandName -> IDENTIFIER .)
    GG              reduce using rule 99 (OperandName -> IDENTIFIER .)
    AMPCAR          reduce using rule 99 (OperandName -> IDENTIFIER .)
    COMMA           reduce using rule 99 (OperandName -> IDENTIFIER .)
    SEMICOL         reduce using rule 99 (OperandName -> IDENTIFIER .)
    PLUSEQ          reduce using rule 99 (OperandName -> IDENTIFIER .)
    MINUSEQ         reduce using rule 99 (OperandName -> IDENTIFIER .)
    TIMESEQ         reduce using rule 99 (OperandName -> IDENTIFIER .)
    DIVIDEEQ        reduce using rule 99 (OperandName -> IDENTIFIER .)
    MODEQ           reduce using rule 99 (OperandName -> IDENTIFIER .)
    AMPEQ           reduce using rule 99 (OperandName -> IDENTIFIER .)
    OREQ            reduce using rule 99 (OperandName -> IDENTIFIER .)
    CAREQ           reduce using rule 99 (OperandName -> IDENTIFIER .)
    LLEQ            reduce using rule 99 (OperandName -> IDENTIFIER .)
    GGEQ            reduce using rule 99 (OperandName -> IDENTIFIER .)
    EQUAL           reduce using rule 99 (OperandName -> IDENTIFIER .)


state 271

    (157) MallocStmt -> MALLOC . IDENTIFIER

    IDENTIFIER      shift and go to state 307


state 272

    (160) SimpleStmt -> epsilon .
    (44) CreateScope -> epsilon .
    (188) CreateForScope -> epsilon .

    SEMICOL         reduce using rule 160 (SimpleStmt -> epsilon .)
    LBRACE          reduce using rule 44 (CreateScope -> epsilon .)
    FOR             reduce using rule 188 (CreateForScope -> epsilon .)


state 273

    (170) Assignment -> ExpressionList . assign_op ExpressionList
    (171) assign_op -> . AssignOp
    (172) AssignOp -> . PLUSEQ
    (173) AssignOp -> . MINUSEQ
    (174) AssignOp -> . TIMESEQ
    (175) AssignOp -> . DIVIDEEQ
    (176) AssignOp -> . MODEQ
    (177) AssignOp -> . AMPEQ
    (178) AssignOp -> . OREQ
    (179) AssignOp -> . CAREQ
    (180) AssignOp -> . LLEQ
    (181) AssignOp -> . GGEQ
    (182) AssignOp -> . EQUAL

    PLUSEQ          shift and go to state 312
    MINUSEQ         shift and go to state 317
    TIMESEQ         shift and go to state 311
    DIVIDEEQ        shift and go to state 320
    MODEQ           shift and go to state 313
    AMPEQ           shift and go to state 318
    OREQ            shift and go to state 316
    CAREQ           shift and go to state 310
    LLEQ            shift and go to state 315
    GGEQ            shift and go to state 314
    EQUAL           shift and go to state 309

    AssignOp                       shift and go to state 308
    assign_op                      shift and go to state 319

state 274

    (167) ExpressionStmt -> Expression .
    (117) Expression -> Expression . OROR Expression
    (118) Expression -> Expression . AMPAMP Expression
    (119) Expression -> Expression . EQEQ Expression
    (120) Expression -> Expression . NOTEQ Expression
    (121) Expression -> Expression . LESS Expression
    (122) Expression -> Expression . GREAT Expression
    (123) Expression -> Expression . LEQ Expression
    (124) Expression -> Expression . GEQ Expression
    (125) Expression -> Expression . PLUS Expression
    (126) Expression -> Expression . MINUS Expression
    (127) Expression -> Expression . OR Expression
    (128) Expression -> Expression . CARET Expression
    (129) Expression -> Expression . TIMES Expression
    (130) Expression -> Expression . DIVIDE Expression
    (131) Expression -> Expression . MOD Expression
    (132) Expression -> Expression . AMPERS Expression
    (133) Expression -> Expression . LL Expression
    (134) Expression -> Expression . GG Expression
    (135) Expression -> Expression . AMPCAR Expression
    (113) ExpressionList -> Expression . ExpressionRep
    (114) ExpressionRep -> . ExpressionRep COMMA Expression
    (115) ExpressionRep -> . epsilon
    (224) epsilon -> .

    SEMICOL         reduce using rule 167 (ExpressionStmt -> Expression .)
    LBRACE          reduce using rule 167 (ExpressionStmt -> Expression .)
    OROR            shift and go to state 168
    AMPAMP          shift and go to state 183
    EQEQ            shift and go to state 174
    NOTEQ           shift and go to state 180
    LESS            shift and go to state 173
    GREAT           shift and go to state 170
    LEQ             shift and go to state 186
    GEQ             shift and go to state 177
    PLUS            shift and go to state 181
    MINUS           shift and go to state 185
    OR              shift and go to state 178
    CARET           shift and go to state 169
    TIMES           shift and go to state 184
    DIVIDE          shift and go to state 171
    MOD             shift and go to state 182
    AMPERS          shift and go to state 176
    LL              shift and go to state 175
    GG              shift and go to state 179
    AMPCAR          shift and go to state 172
    COMMA           reduce using rule 224 (epsilon -> .)
    PLUSEQ          reduce using rule 224 (epsilon -> .)
    MINUSEQ         reduce using rule 224 (epsilon -> .)
    TIMESEQ         reduce using rule 224 (epsilon -> .)
    DIVIDEEQ        reduce using rule 224 (epsilon -> .)
    MODEQ           reduce using rule 224 (epsilon -> .)
    AMPEQ           reduce using rule 224 (epsilon -> .)
    OREQ            reduce using rule 224 (epsilon -> .)
    CAREQ           reduce using rule 224 (epsilon -> .)
    LLEQ            reduce using rule 224 (epsilon -> .)
    GGEQ            reduce using rule 224 (epsilon -> .)
    EQUAL           reduce using rule 224 (epsilon -> .)

    epsilon                        shift and go to state 203
    ExpressionRep                  shift and go to state 202

state 275

    (203) BreakStmt -> BREAK . LabelOpt
    (205) LabelOpt -> . Label
    (206) LabelOpt -> . epsilon
    (166) Label -> . IDENTIFIER
    (224) epsilon -> .

    IDENTIFIER      shift and go to state 303
    SEMICOL         reduce using rule 224 (epsilon -> .)

    epsilon                        shift and go to state 302
    LabelOpt                       shift and go to state 321
    Label                          shift and go to state 305

state 276

    (148) Statement -> ReturnStmt .

    SEMICOL         reduce using rule 148 (Statement -> ReturnStmt .)


state 277

    (147) Statement -> SimpleStmt .

    SEMICOL         reduce using rule 147 (Statement -> SimpleStmt .)


state 278

    (156) Statement -> ForStmt .

    SEMICOL         reduce using rule 156 (Statement -> ForStmt .)


state 279

    (207) GotoStmt -> GOTO . Label
    (166) Label -> . IDENTIFIER

    IDENTIFIER      shift and go to state 303

    Label                          shift and go to state 322

state 280

    (164) SimpleStmt -> ShortVarDecl .

    SEMICOL         reduce using rule 164 (SimpleStmt -> ShortVarDecl .)
    LBRACE          reduce using rule 164 (SimpleStmt -> ShortVarDecl .)


state 281

    (183) IfStmt -> IF . Expression Block ElseOpt
    (116) Expression -> . UnaryExpr
    (117) Expression -> . Expression OROR Expression
    (118) Expression -> . Expression AMPAMP Expression
    (119) Expression -> . Expression EQEQ Expression
    (120) Expression -> . Expression NOTEQ Expression
    (121) Expression -> . Expression LESS Expression
    (122) Expression -> . Expression GREAT Expression
    (123) Expression -> . Expression LEQ Expression
    (124) Expression -> . Expression GEQ Expression
    (125) Expression -> . Expression PLUS Expression
    (126) Expression -> . Expression MINUS Expression
    (127) Expression -> . Expression OR Expression
    (128) Expression -> . Expression CARET Expression
    (129) Expression -> . Expression TIMES Expression
    (130) Expression -> . Expression DIVIDE Expression
    (131) Expression -> . Expression MOD Expression
    (132) Expression -> . Expression AMPERS Expression
    (133) Expression -> . Expression LL Expression
    (134) Expression -> . Expression GG Expression
    (135) Expression -> . Expression AMPCAR Expression
    (138) UnaryExpr -> . PrimaryExpr
    (139) UnaryExpr -> . UnaryOp UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . Conversion
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . PrimaryExpr Index
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr Arguments
    (140) UnaryOp -> . PLUS
    (141) UnaryOp -> . MINUS
    (142) UnaryOp -> . TIMES
    (143) UnaryOp -> . AMPERS
    (144) UnaryOp -> . NOT
    (85) Operand -> . Literal
    (86) Operand -> . OperandName
    (87) Operand -> . LPAREN Expression RPAREN
    (100) Conversion -> . Type LPAREN Expression RPAREN
    (88) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (89) BasicLit -> . IntLiteral
    (90) BasicLit -> . FloatLiteral
    (91) BasicLit -> . ImgLiteral
    (92) BasicLit -> . RuneLiteral
    (93) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (94) IntLiteral -> . INTEGER
    (95) FloatLiteral -> . FLOAT
    (96) ImgLiteral -> . IMAGINARY
    (97) RuneLiteral -> . RUNE
    (98) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . Pointer BaseType
    (27) FunctionType -> . FUNC Signature
    (25) Pointer -> . POINTER

    PLUS            shift and go to state 108
    MINUS           shift and go to state 102
    TIMES           shift and go to state 117
    AMPERS          shift and go to state 123
    NOT             shift and go to state 107
    LPAREN          shift and go to state 120
    IDENTIFIER      shift and go to state 111
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 109
    FLOAT           shift and go to state 122
    IMAGINARY       shift and go to state 110
    RUNE            shift and go to state 96
    STRING          shift and go to state 103
    LBRACK          shift and go to state 67
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53
    POINTER         shift and go to state 59

    Conversion                     shift and go to state 97
    UnaryOp                        shift and go to state 106
    PrimaryExpr                    shift and go to state 124
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 99
    PointerType                    shift and go to state 69
    FloatLiteral                   shift and go to state 100
    Type                           shift and go to state 101
    OperandName                    shift and go to state 104
    BasicLit                       shift and go to state 105
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 60
    IntLiteral                     shift and go to state 112
    UnaryExpr                      shift and go to state 115
    RuneLiteral                    shift and go to state 116
    Operand                        shift and go to state 118
    Expression                     shift and go to state 323
    Pointer                        shift and go to state 66
    StringLiteral                  shift and go to state 98
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 113
    FunctionType                   shift and go to state 70

state 282

    (149) Statement -> BreakStmt .

    SEMICOL         reduce using rule 149 (Statement -> BreakStmt .)


state 283

    (43) Block -> CreateScope LBRACE StatementList RBRACE .

    SEMICOL         reduce using rule 43 (Block -> CreateScope LBRACE StatementList RBRACE .)
    ELSE            reduce using rule 43 (Block -> CreateScope LBRACE StatementList RBRACE .)


state 284

    (41) ParameterDecl -> IdentifierList Type .

    COMMA           reduce using rule 41 (ParameterDecl -> IdentifierList Type .)
    RPAREN          reduce using rule 41 (ParameterDecl -> IdentifierList Type .)


state 285

    (114) ExpressionRep -> ExpressionRep COMMA Expression .
    (117) Expression -> Expression . OROR Expression
    (118) Expression -> Expression . AMPAMP Expression
    (119) Expression -> Expression . EQEQ Expression
    (120) Expression -> Expression . NOTEQ Expression
    (121) Expression -> Expression . LESS Expression
    (122) Expression -> Expression . GREAT Expression
    (123) Expression -> Expression . LEQ Expression
    (124) Expression -> Expression . GEQ Expression
    (125) Expression -> Expression . PLUS Expression
    (126) Expression -> Expression . MINUS Expression
    (127) Expression -> Expression . OR Expression
    (128) Expression -> Expression . CARET Expression
    (129) Expression -> Expression . TIMES Expression
    (130) Expression -> Expression . DIVIDE Expression
    (131) Expression -> Expression . MOD Expression
    (132) Expression -> Expression . AMPERS Expression
    (133) Expression -> Expression . LL Expression
    (134) Expression -> Expression . GG Expression
    (135) Expression -> Expression . AMPCAR Expression

    COMMA           reduce using rule 114 (ExpressionRep -> ExpressionRep COMMA Expression .)
    PLUSEQ          reduce using rule 114 (ExpressionRep -> ExpressionRep COMMA Expression .)
    MINUSEQ         reduce using rule 114 (ExpressionRep -> ExpressionRep COMMA Expression .)
    TIMESEQ         reduce using rule 114 (ExpressionRep -> ExpressionRep COMMA Expression .)
    DIVIDEEQ        reduce using rule 114 (ExpressionRep -> ExpressionRep COMMA Expression .)
    MODEQ           reduce using rule 114 (ExpressionRep -> ExpressionRep COMMA Expression .)
    AMPEQ           reduce using rule 114 (ExpressionRep -> ExpressionRep COMMA Expression .)
    OREQ            reduce using rule 114 (ExpressionRep -> ExpressionRep COMMA Expression .)
    CAREQ           reduce using rule 114 (ExpressionRep -> ExpressionRep COMMA Expression .)
    LLEQ            reduce using rule 114 (ExpressionRep -> ExpressionRep COMMA Expression .)
    GGEQ            reduce using rule 114 (ExpressionRep -> ExpressionRep COMMA Expression .)
    EQUAL           reduce using rule 114 (ExpressionRep -> ExpressionRep COMMA Expression .)
    SEMICOL         reduce using rule 114 (ExpressionRep -> ExpressionRep COMMA Expression .)
    RPAREN          reduce using rule 114 (ExpressionRep -> ExpressionRep COMMA Expression .)
    LBRACE          reduce using rule 114 (ExpressionRep -> ExpressionRep COMMA Expression .)
    OROR            shift and go to state 168
    AMPAMP          shift and go to state 183
    EQEQ            shift and go to state 174
    NOTEQ           shift and go to state 180
    LESS            shift and go to state 173
    GREAT           shift and go to state 170
    LEQ             shift and go to state 186
    GEQ             shift and go to state 177
    PLUS            shift and go to state 181
    MINUS           shift and go to state 185
    OR              shift and go to state 178
    CARET           shift and go to state 169
    TIMES           shift and go to state 184
    DIVIDE          shift and go to state 171
    MOD             shift and go to state 182
    AMPERS          shift and go to state 176
    LL              shift and go to state 175
    GG              shift and go to state 179
    AMPCAR          shift and go to state 172


state 286

    (23) Tag -> STRING .

    SEMICOL         reduce using rule 23 (Tag -> STRING .)


state 287

    (22) TagOpt -> epsilon .

    SEMICOL         reduce using rule 22 (TagOpt -> epsilon .)


state 288

    (21) TagOpt -> Tag .

    SEMICOL         reduce using rule 21 (TagOpt -> Tag .)


state 289

    (20) FieldDecl -> IdentifierList Type TagOpt .

    SEMICOL         reduce using rule 20 (FieldDecl -> IdentifierList Type TagOpt .)


state 290

    (109) Slice -> LBRACK ExpressionOpt COLON ExpressionOpt . RBRACK

    RBRACK          shift and go to state 324


state 291

    (136) ExpressionOpt -> Expression .
    (117) Expression -> Expression . OROR Expression
    (118) Expression -> Expression . AMPAMP Expression
    (119) Expression -> Expression . EQEQ Expression
    (120) Expression -> Expression . NOTEQ Expression
    (121) Expression -> Expression . LESS Expression
    (122) Expression -> Expression . GREAT Expression
    (123) Expression -> Expression . LEQ Expression
    (124) Expression -> Expression . GEQ Expression
    (125) Expression -> Expression . PLUS Expression
    (126) Expression -> Expression . MINUS Expression
    (127) Expression -> Expression . OR Expression
    (128) Expression -> Expression . CARET Expression
    (129) Expression -> Expression . TIMES Expression
    (130) Expression -> Expression . DIVIDE Expression
    (131) Expression -> Expression . MOD Expression
    (132) Expression -> Expression . AMPERS Expression
    (133) Expression -> Expression . LL Expression
    (134) Expression -> Expression . GG Expression
    (135) Expression -> Expression . AMPCAR Expression

    RBRACK          reduce using rule 136 (ExpressionOpt -> Expression .)
    OROR            shift and go to state 168
    AMPAMP          shift and go to state 183
    EQEQ            shift and go to state 174
    NOTEQ           shift and go to state 180
    LESS            shift and go to state 173
    GREAT           shift and go to state 170
    LEQ             shift and go to state 186
    GEQ             shift and go to state 177
    PLUS            shift and go to state 181
    MINUS           shift and go to state 185
    OR              shift and go to state 178
    CARET           shift and go to state 169
    TIMES           shift and go to state 184
    DIVIDE          shift and go to state 171
    MOD             shift and go to state 182
    AMPERS          shift and go to state 176
    LL              shift and go to state 175
    GG              shift and go to state 179
    AMPCAR          shift and go to state 172


state 292

    (46) StatementRep -> StatementRep Statement SEMICOL .

    RETURN          reduce using rule 46 (StatementRep -> StatementRep Statement SEMICOL .)
    BREAK           reduce using rule 46 (StatementRep -> StatementRep Statement SEMICOL .)
    CONTINUE        reduce using rule 46 (StatementRep -> StatementRep Statement SEMICOL .)
    GOTO            reduce using rule 46 (StatementRep -> StatementRep Statement SEMICOL .)
    IF              reduce using rule 46 (StatementRep -> StatementRep Statement SEMICOL .)
    PRINT           reduce using rule 46 (StatementRep -> StatementRep Statement SEMICOL .)
    MALLOC          reduce using rule 46 (StatementRep -> StatementRep Statement SEMICOL .)
    CONST           reduce using rule 46 (StatementRep -> StatementRep Statement SEMICOL .)
    TYPE            reduce using rule 46 (StatementRep -> StatementRep Statement SEMICOL .)
    VAR             reduce using rule 46 (StatementRep -> StatementRep Statement SEMICOL .)
    IDENTIFIER      reduce using rule 46 (StatementRep -> StatementRep Statement SEMICOL .)
    LPAREN          reduce using rule 46 (StatementRep -> StatementRep Statement SEMICOL .)
    PLUS            reduce using rule 46 (StatementRep -> StatementRep Statement SEMICOL .)
    MINUS           reduce using rule 46 (StatementRep -> StatementRep Statement SEMICOL .)
    TIMES           reduce using rule 46 (StatementRep -> StatementRep Statement SEMICOL .)
    AMPERS          reduce using rule 46 (StatementRep -> StatementRep Statement SEMICOL .)
    NOT             reduce using rule 46 (StatementRep -> StatementRep Statement SEMICOL .)
    TYPEX           reduce using rule 46 (StatementRep -> StatementRep Statement SEMICOL .)
    TTYPE           reduce using rule 46 (StatementRep -> StatementRep Statement SEMICOL .)
    INTEGER         reduce using rule 46 (StatementRep -> StatementRep Statement SEMICOL .)
    FLOAT           reduce using rule 46 (StatementRep -> StatementRep Statement SEMICOL .)
    IMAGINARY       reduce using rule 46 (StatementRep -> StatementRep Statement SEMICOL .)
    RUNE            reduce using rule 46 (StatementRep -> StatementRep Statement SEMICOL .)
    STRING          reduce using rule 46 (StatementRep -> StatementRep Statement SEMICOL .)
    LBRACK          reduce using rule 46 (StatementRep -> StatementRep Statement SEMICOL .)
    STRUCT          reduce using rule 46 (StatementRep -> StatementRep Statement SEMICOL .)
    FUNC            reduce using rule 46 (StatementRep -> StatementRep Statement SEMICOL .)
    POINTER         reduce using rule 46 (StatementRep -> StatementRep Statement SEMICOL .)
    SEMICOL         reduce using rule 46 (StatementRep -> StatementRep Statement SEMICOL .)
    LBRACE          reduce using rule 46 (StatementRep -> StatementRep Statement SEMICOL .)
    FOR             reduce using rule 46 (StatementRep -> StatementRep Statement SEMICOL .)
    RBRACE          reduce using rule 46 (StatementRep -> StatementRep Statement SEMICOL .)


state 293

    (187) ForStmt -> CreateForScope FOR . ConditionBlockOpt Block
    (189) ConditionBlockOpt -> . epsilon
    (190) ConditionBlockOpt -> . Condition
    (191) ConditionBlockOpt -> . ForClause
    (224) epsilon -> .
    (192) Condition -> . Expression
    (193) ForClause -> . SimpleStmt SEMICOL ConditionOpt SEMICOL SimpleStmt
    (116) Expression -> . UnaryExpr
    (117) Expression -> . Expression OROR Expression
    (118) Expression -> . Expression AMPAMP Expression
    (119) Expression -> . Expression EQEQ Expression
    (120) Expression -> . Expression NOTEQ Expression
    (121) Expression -> . Expression LESS Expression
    (122) Expression -> . Expression GREAT Expression
    (123) Expression -> . Expression LEQ Expression
    (124) Expression -> . Expression GEQ Expression
    (125) Expression -> . Expression PLUS Expression
    (126) Expression -> . Expression MINUS Expression
    (127) Expression -> . Expression OR Expression
    (128) Expression -> . Expression CARET Expression
    (129) Expression -> . Expression TIMES Expression
    (130) Expression -> . Expression DIVIDE Expression
    (131) Expression -> . Expression MOD Expression
    (132) Expression -> . Expression AMPERS Expression
    (133) Expression -> . Expression LL Expression
    (134) Expression -> . Expression GG Expression
    (135) Expression -> . Expression AMPCAR Expression
    (160) SimpleStmt -> . epsilon
    (161) SimpleStmt -> . ExpressionStmt
    (162) SimpleStmt -> . IncDecStmt
    (163) SimpleStmt -> . Assignment
    (164) SimpleStmt -> . ShortVarDecl
    (138) UnaryExpr -> . PrimaryExpr
    (139) UnaryExpr -> . UnaryOp UnaryExpr
    (167) ExpressionStmt -> . Expression
    (168) IncDecStmt -> . PrimaryExpr PLUSPLUS
    (169) IncDecStmt -> . PrimaryExpr MINUSMIN
    (170) Assignment -> . ExpressionList assign_op ExpressionList
    (79) ShortVarDecl -> . IDENTIFIER COLONEQ Expression
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . Conversion
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . PrimaryExpr Index
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr Arguments
    (140) UnaryOp -> . PLUS
    (141) UnaryOp -> . MINUS
    (142) UnaryOp -> . TIMES
    (143) UnaryOp -> . AMPERS
    (144) UnaryOp -> . NOT
    (113) ExpressionList -> . Expression ExpressionRep
    (85) Operand -> . Literal
    (86) Operand -> . OperandName
    (87) Operand -> . LPAREN Expression RPAREN
    (100) Conversion -> . Type LPAREN Expression RPAREN
    (88) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (89) BasicLit -> . IntLiteral
    (90) BasicLit -> . FloatLiteral
    (91) BasicLit -> . ImgLiteral
    (92) BasicLit -> . RuneLiteral
    (93) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (94) IntLiteral -> . INTEGER
    (95) FloatLiteral -> . FLOAT
    (96) ImgLiteral -> . IMAGINARY
    (97) RuneLiteral -> . RUNE
    (98) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . Pointer BaseType
    (27) FunctionType -> . FUNC Signature
    (25) Pointer -> . POINTER

    LBRACE          reduce using rule 224 (epsilon -> .)
    SEMICOL         reduce using rule 224 (epsilon -> .)
    IDENTIFIER      shift and go to state 326
    PLUS            shift and go to state 108
    MINUS           shift and go to state 102
    TIMES           shift and go to state 117
    AMPERS          shift and go to state 123
    NOT             shift and go to state 107
    LPAREN          shift and go to state 120
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 109
    FLOAT           shift and go to state 122
    IMAGINARY       shift and go to state 110
    RUNE            shift and go to state 96
    STRING          shift and go to state 103
    LBRACK          shift and go to state 67
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53
    POINTER         shift and go to state 59

    Conversion                     shift and go to state 97
    UnaryOp                        shift and go to state 106
    SimpleStmt                     shift and go to state 331
    StringLiteral                  shift and go to state 98
    ExpressionStmt                 shift and go to state 253
    PointerType                    shift and go to state 69
    FloatLiteral                   shift and go to state 100
    Type                           shift and go to state 101
    OperandName                    shift and go to state 104
    Assignment                     shift and go to state 256
    TypeName                       shift and go to state 57
    IncDecStmt                     shift and go to state 257
    Condition                      shift and go to state 327
    StructType                     shift and go to state 60
    IntLiteral                     shift and go to state 112
    ImgLiteral                     shift and go to state 113
    epsilon                        shift and go to state 328
    UnaryExpr                      shift and go to state 115
    RuneLiteral                    shift and go to state 116
    ConditionBlockOpt              shift and go to state 329
    PrimaryExpr                    shift and go to state 325
    ExpressionList                 shift and go to state 273
    ArrayType                      shift and go to state 54
    ForClause                      shift and go to state 332
    Expression                     shift and go to state 330
    ShortVarDecl                   shift and go to state 280
    Pointer                        shift and go to state 66
    Literal                        shift and go to state 99
    TypeLit                        shift and go to state 56
    BasicLit                       shift and go to state 105
    Operand                        shift and go to state 118
    FunctionType                   shift and go to state 70

state 294

    (200) ReturnStmt -> RETURN ExpressionListPureOpt .

    SEMICOL         reduce using rule 200 (ReturnStmt -> RETURN ExpressionListPureOpt .)


state 295

    (202) ExpressionListPureOpt -> epsilon .

    SEMICOL         reduce using rule 202 (ExpressionListPureOpt -> epsilon .)


state 296

    (201) ExpressionListPureOpt -> ExpressionList .

    SEMICOL         reduce using rule 201 (ExpressionListPureOpt -> ExpressionList .)


state 297

    (165) LabeledStmt -> Label COLON . Statement
    (145) Statement -> . Declaration
    (146) Statement -> . LabeledStmt
    (147) Statement -> . SimpleStmt
    (148) Statement -> . ReturnStmt
    (149) Statement -> . BreakStmt
    (150) Statement -> . ContinueStmt
    (151) Statement -> . GotoStmt
    (152) Statement -> . Block
    (153) Statement -> . IfStmt
    (154) Statement -> . PrintStmt
    (155) Statement -> . MallocStmt
    (156) Statement -> . ForStmt
    (48) Declaration -> . ConstDecl
    (49) Declaration -> . TypeDecl
    (50) Declaration -> . VarDecl
    (165) LabeledStmt -> . Label COLON Statement
    (160) SimpleStmt -> . epsilon
    (161) SimpleStmt -> . ExpressionStmt
    (162) SimpleStmt -> . IncDecStmt
    (163) SimpleStmt -> . Assignment
    (164) SimpleStmt -> . ShortVarDecl
    (200) ReturnStmt -> . RETURN ExpressionListPureOpt
    (203) BreakStmt -> . BREAK LabelOpt
    (204) ContinueStmt -> . CONTINUE LabelOpt
    (207) GotoStmt -> . GOTO Label
    (43) Block -> . CreateScope LBRACE StatementList RBRACE
    (183) IfStmt -> . IF Expression Block ElseOpt
    (158) PrintStmt -> . PRINT PD Expression
    (159) PrintStmt -> . PRINT PS Expression
    (157) MallocStmt -> . MALLOC IDENTIFIER
    (187) ForStmt -> . CreateForScope FOR ConditionBlockOpt Block
    (53) ConstDecl -> . CONST ConstSpec
    (54) ConstDecl -> . CONST LPAREN ConstSpecRep RPAREN
    (63) TypeDecl -> . TYPE TypeSpec
    (64) TypeDecl -> . TYPE LPAREN TypeSpecRep RPAREN
    (71) VarDecl -> . VAR VarSpec
    (72) VarDecl -> . VAR LPAREN VarSpecRep RPAREN
    (166) Label -> . IDENTIFIER
    (224) epsilon -> .
    (167) ExpressionStmt -> . Expression
    (168) IncDecStmt -> . PrimaryExpr PLUSPLUS
    (169) IncDecStmt -> . PrimaryExpr MINUSMIN
    (170) Assignment -> . ExpressionList assign_op ExpressionList
    (79) ShortVarDecl -> . IDENTIFIER COLONEQ Expression
    (44) CreateScope -> . epsilon
    (188) CreateForScope -> . epsilon
    (116) Expression -> . UnaryExpr
    (117) Expression -> . Expression OROR Expression
    (118) Expression -> . Expression AMPAMP Expression
    (119) Expression -> . Expression EQEQ Expression
    (120) Expression -> . Expression NOTEQ Expression
    (121) Expression -> . Expression LESS Expression
    (122) Expression -> . Expression GREAT Expression
    (123) Expression -> . Expression LEQ Expression
    (124) Expression -> . Expression GEQ Expression
    (125) Expression -> . Expression PLUS Expression
    (126) Expression -> . Expression MINUS Expression
    (127) Expression -> . Expression OR Expression
    (128) Expression -> . Expression CARET Expression
    (129) Expression -> . Expression TIMES Expression
    (130) Expression -> . Expression DIVIDE Expression
    (131) Expression -> . Expression MOD Expression
    (132) Expression -> . Expression AMPERS Expression
    (133) Expression -> . Expression LL Expression
    (134) Expression -> . Expression GG Expression
    (135) Expression -> . Expression AMPCAR Expression
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . Conversion
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . PrimaryExpr Index
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr Arguments
    (113) ExpressionList -> . Expression ExpressionRep
    (138) UnaryExpr -> . PrimaryExpr
    (139) UnaryExpr -> . UnaryOp UnaryExpr
    (85) Operand -> . Literal
    (86) Operand -> . OperandName
    (87) Operand -> . LPAREN Expression RPAREN
    (100) Conversion -> . Type LPAREN Expression RPAREN
    (140) UnaryOp -> . PLUS
    (141) UnaryOp -> . MINUS
    (142) UnaryOp -> . TIMES
    (143) UnaryOp -> . AMPERS
    (144) UnaryOp -> . NOT
    (88) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (89) BasicLit -> . IntLiteral
    (90) BasicLit -> . FloatLiteral
    (91) BasicLit -> . ImgLiteral
    (92) BasicLit -> . RuneLiteral
    (93) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (94) IntLiteral -> . INTEGER
    (95) FloatLiteral -> . FLOAT
    (96) ImgLiteral -> . IMAGINARY
    (97) RuneLiteral -> . RUNE
    (98) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . Pointer BaseType
    (27) FunctionType -> . FUNC Signature
    (25) Pointer -> . POINTER

    RETURN          shift and go to state 261
    BREAK           shift and go to state 275
    CONTINUE        shift and go to state 267
    GOTO            shift and go to state 279
    IF              shift and go to state 281
    PRINT           shift and go to state 263
    MALLOC          shift and go to state 271
    CONST           shift and go to state 14
    TYPE            shift and go to state 23
    VAR             shift and go to state 21
    IDENTIFIER      shift and go to state 270
    SEMICOL         reduce using rule 224 (epsilon -> .)
    LBRACE          reduce using rule 224 (epsilon -> .)
    FOR             reduce using rule 224 (epsilon -> .)
    LPAREN          shift and go to state 120
    PLUS            shift and go to state 108
    MINUS           shift and go to state 102
    TIMES           shift and go to state 117
    AMPERS          shift and go to state 123
    NOT             shift and go to state 107
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 109
    FLOAT           shift and go to state 122
    IMAGINARY       shift and go to state 110
    RUNE            shift and go to state 96
    STRING          shift and go to state 103
    LBRACK          shift and go to state 67
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53
    POINTER         shift and go to state 59

    CreateForScope                 shift and go to state 260
    Pointer                        shift and go to state 66
    UnaryOp                        shift and go to state 106
    ContinueStmt                   shift and go to state 252
    Conversion                     shift and go to state 97
    SimpleStmt                     shift and go to state 277
    Label                          shift and go to state 262
    ExpressionStmt                 shift and go to state 253
    PointerType                    shift and go to state 69
    ForStmt                        shift and go to state 278
    Statement                      shift and go to state 333
    RuneLiteral                    shift and go to state 116
    ImgLiteral                     shift and go to state 113
    FloatLiteral                   shift and go to state 100
    MallocStmt                     shift and go to state 268
    IfStmt                         shift and go to state 255
    OperandName                    shift and go to state 104
    ArrayType                      shift and go to state 54
    Assignment                     shift and go to state 256
    TypeName                       shift and go to state 57
    IncDecStmt                     shift and go to state 257
    Declaration                    shift and go to state 269
    FunctionType                   shift and go to state 70
    CreateScope                    shift and go to state 134
    StringLiteral                  shift and go to state 98
    GotoStmt                       shift and go to state 264
    StructType                     shift and go to state 60
    IntLiteral                     shift and go to state 112
    TypeDecl                       shift and go to state 19
    LabeledStmt                    shift and go to state 258
    epsilon                        shift and go to state 272
    UnaryExpr                      shift and go to state 115
    Operand                        shift and go to state 118
    ExpressionList                 shift and go to state 273
    Expression                     shift and go to state 274
    ShortVarDecl                   shift and go to state 280
    Block                          shift and go to state 266
    Type                           shift and go to state 101
    BreakStmt                      shift and go to state 282
    VarDecl                        shift and go to state 22
    Literal                        shift and go to state 99
    PrintStmt                      shift and go to state 259
    TypeLit                        shift and go to state 56
    BasicLit                       shift and go to state 105
    PrimaryExpr                    shift and go to state 265
    ReturnStmt                     shift and go to state 276
    ConstDecl                      shift and go to state 18

state 298

    (159) PrintStmt -> PRINT PS . Expression
    (116) Expression -> . UnaryExpr
    (117) Expression -> . Expression OROR Expression
    (118) Expression -> . Expression AMPAMP Expression
    (119) Expression -> . Expression EQEQ Expression
    (120) Expression -> . Expression NOTEQ Expression
    (121) Expression -> . Expression LESS Expression
    (122) Expression -> . Expression GREAT Expression
    (123) Expression -> . Expression LEQ Expression
    (124) Expression -> . Expression GEQ Expression
    (125) Expression -> . Expression PLUS Expression
    (126) Expression -> . Expression MINUS Expression
    (127) Expression -> . Expression OR Expression
    (128) Expression -> . Expression CARET Expression
    (129) Expression -> . Expression TIMES Expression
    (130) Expression -> . Expression DIVIDE Expression
    (131) Expression -> . Expression MOD Expression
    (132) Expression -> . Expression AMPERS Expression
    (133) Expression -> . Expression LL Expression
    (134) Expression -> . Expression GG Expression
    (135) Expression -> . Expression AMPCAR Expression
    (138) UnaryExpr -> . PrimaryExpr
    (139) UnaryExpr -> . UnaryOp UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . Conversion
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . PrimaryExpr Index
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr Arguments
    (140) UnaryOp -> . PLUS
    (141) UnaryOp -> . MINUS
    (142) UnaryOp -> . TIMES
    (143) UnaryOp -> . AMPERS
    (144) UnaryOp -> . NOT
    (85) Operand -> . Literal
    (86) Operand -> . OperandName
    (87) Operand -> . LPAREN Expression RPAREN
    (100) Conversion -> . Type LPAREN Expression RPAREN
    (88) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (89) BasicLit -> . IntLiteral
    (90) BasicLit -> . FloatLiteral
    (91) BasicLit -> . ImgLiteral
    (92) BasicLit -> . RuneLiteral
    (93) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (94) IntLiteral -> . INTEGER
    (95) FloatLiteral -> . FLOAT
    (96) ImgLiteral -> . IMAGINARY
    (97) RuneLiteral -> . RUNE
    (98) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . Pointer BaseType
    (27) FunctionType -> . FUNC Signature
    (25) Pointer -> . POINTER

    PLUS            shift and go to state 108
    MINUS           shift and go to state 102
    TIMES           shift and go to state 117
    AMPERS          shift and go to state 123
    NOT             shift and go to state 107
    LPAREN          shift and go to state 120
    IDENTIFIER      shift and go to state 111
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 109
    FLOAT           shift and go to state 122
    IMAGINARY       shift and go to state 110
    RUNE            shift and go to state 96
    STRING          shift and go to state 103
    LBRACK          shift and go to state 67
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53
    POINTER         shift and go to state 59

    Conversion                     shift and go to state 97
    UnaryOp                        shift and go to state 106
    PrimaryExpr                    shift and go to state 124
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 99
    FloatLiteral                   shift and go to state 100
    Type                           shift and go to state 101
    OperandName                    shift and go to state 104
    BasicLit                       shift and go to state 105
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 60
    IntLiteral                     shift and go to state 112
    UnaryExpr                      shift and go to state 115
    RuneLiteral                    shift and go to state 116
    Operand                        shift and go to state 118
    Expression                     shift and go to state 334
    PointerType                    shift and go to state 69
    Pointer                        shift and go to state 66
    StringLiteral                  shift and go to state 98
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 113
    FunctionType                   shift and go to state 70

state 299

    (158) PrintStmt -> PRINT PD . Expression
    (116) Expression -> . UnaryExpr
    (117) Expression -> . Expression OROR Expression
    (118) Expression -> . Expression AMPAMP Expression
    (119) Expression -> . Expression EQEQ Expression
    (120) Expression -> . Expression NOTEQ Expression
    (121) Expression -> . Expression LESS Expression
    (122) Expression -> . Expression GREAT Expression
    (123) Expression -> . Expression LEQ Expression
    (124) Expression -> . Expression GEQ Expression
    (125) Expression -> . Expression PLUS Expression
    (126) Expression -> . Expression MINUS Expression
    (127) Expression -> . Expression OR Expression
    (128) Expression -> . Expression CARET Expression
    (129) Expression -> . Expression TIMES Expression
    (130) Expression -> . Expression DIVIDE Expression
    (131) Expression -> . Expression MOD Expression
    (132) Expression -> . Expression AMPERS Expression
    (133) Expression -> . Expression LL Expression
    (134) Expression -> . Expression GG Expression
    (135) Expression -> . Expression AMPCAR Expression
    (138) UnaryExpr -> . PrimaryExpr
    (139) UnaryExpr -> . UnaryOp UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . Conversion
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . PrimaryExpr Index
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr Arguments
    (140) UnaryOp -> . PLUS
    (141) UnaryOp -> . MINUS
    (142) UnaryOp -> . TIMES
    (143) UnaryOp -> . AMPERS
    (144) UnaryOp -> . NOT
    (85) Operand -> . Literal
    (86) Operand -> . OperandName
    (87) Operand -> . LPAREN Expression RPAREN
    (100) Conversion -> . Type LPAREN Expression RPAREN
    (88) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (89) BasicLit -> . IntLiteral
    (90) BasicLit -> . FloatLiteral
    (91) BasicLit -> . ImgLiteral
    (92) BasicLit -> . RuneLiteral
    (93) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (94) IntLiteral -> . INTEGER
    (95) FloatLiteral -> . FLOAT
    (96) ImgLiteral -> . IMAGINARY
    (97) RuneLiteral -> . RUNE
    (98) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . Pointer BaseType
    (27) FunctionType -> . FUNC Signature
    (25) Pointer -> . POINTER

    PLUS            shift and go to state 108
    MINUS           shift and go to state 102
    TIMES           shift and go to state 117
    AMPERS          shift and go to state 123
    NOT             shift and go to state 107
    LPAREN          shift and go to state 120
    IDENTIFIER      shift and go to state 111
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 109
    FLOAT           shift and go to state 122
    IMAGINARY       shift and go to state 110
    RUNE            shift and go to state 96
    STRING          shift and go to state 103
    LBRACK          shift and go to state 67
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53
    POINTER         shift and go to state 59

    Conversion                     shift and go to state 97
    UnaryOp                        shift and go to state 106
    PrimaryExpr                    shift and go to state 124
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 99
    FloatLiteral                   shift and go to state 100
    Type                           shift and go to state 101
    OperandName                    shift and go to state 104
    BasicLit                       shift and go to state 105
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 60
    IntLiteral                     shift and go to state 112
    UnaryExpr                      shift and go to state 115
    RuneLiteral                    shift and go to state 116
    Operand                        shift and go to state 118
    Expression                     shift and go to state 335
    PointerType                    shift and go to state 69
    Pointer                        shift and go to state 66
    StringLiteral                  shift and go to state 98
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 113
    FunctionType                   shift and go to state 70

state 300

    (168) IncDecStmt -> PrimaryExpr PLUSPLUS .

    SEMICOL         reduce using rule 168 (IncDecStmt -> PrimaryExpr PLUSPLUS .)
    LBRACE          reduce using rule 168 (IncDecStmt -> PrimaryExpr PLUSPLUS .)


state 301

    (169) IncDecStmt -> PrimaryExpr MINUSMIN .

    SEMICOL         reduce using rule 169 (IncDecStmt -> PrimaryExpr MINUSMIN .)
    LBRACE          reduce using rule 169 (IncDecStmt -> PrimaryExpr MINUSMIN .)


state 302

    (206) LabelOpt -> epsilon .

    SEMICOL         reduce using rule 206 (LabelOpt -> epsilon .)


state 303

    (166) Label -> IDENTIFIER .

    SEMICOL         reduce using rule 166 (Label -> IDENTIFIER .)


state 304

    (204) ContinueStmt -> CONTINUE LabelOpt .

    SEMICOL         reduce using rule 204 (ContinueStmt -> CONTINUE LabelOpt .)


state 305

    (205) LabelOpt -> Label .

    SEMICOL         reduce using rule 205 (LabelOpt -> Label .)


state 306

    (79) ShortVarDecl -> IDENTIFIER COLONEQ . Expression
    (116) Expression -> . UnaryExpr
    (117) Expression -> . Expression OROR Expression
    (118) Expression -> . Expression AMPAMP Expression
    (119) Expression -> . Expression EQEQ Expression
    (120) Expression -> . Expression NOTEQ Expression
    (121) Expression -> . Expression LESS Expression
    (122) Expression -> . Expression GREAT Expression
    (123) Expression -> . Expression LEQ Expression
    (124) Expression -> . Expression GEQ Expression
    (125) Expression -> . Expression PLUS Expression
    (126) Expression -> . Expression MINUS Expression
    (127) Expression -> . Expression OR Expression
    (128) Expression -> . Expression CARET Expression
    (129) Expression -> . Expression TIMES Expression
    (130) Expression -> . Expression DIVIDE Expression
    (131) Expression -> . Expression MOD Expression
    (132) Expression -> . Expression AMPERS Expression
    (133) Expression -> . Expression LL Expression
    (134) Expression -> . Expression GG Expression
    (135) Expression -> . Expression AMPCAR Expression
    (138) UnaryExpr -> . PrimaryExpr
    (139) UnaryExpr -> . UnaryOp UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . Conversion
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . PrimaryExpr Index
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr Arguments
    (140) UnaryOp -> . PLUS
    (141) UnaryOp -> . MINUS
    (142) UnaryOp -> . TIMES
    (143) UnaryOp -> . AMPERS
    (144) UnaryOp -> . NOT
    (85) Operand -> . Literal
    (86) Operand -> . OperandName
    (87) Operand -> . LPAREN Expression RPAREN
    (100) Conversion -> . Type LPAREN Expression RPAREN
    (88) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (89) BasicLit -> . IntLiteral
    (90) BasicLit -> . FloatLiteral
    (91) BasicLit -> . ImgLiteral
    (92) BasicLit -> . RuneLiteral
    (93) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (94) IntLiteral -> . INTEGER
    (95) FloatLiteral -> . FLOAT
    (96) ImgLiteral -> . IMAGINARY
    (97) RuneLiteral -> . RUNE
    (98) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . Pointer BaseType
    (27) FunctionType -> . FUNC Signature
    (25) Pointer -> . POINTER

    PLUS            shift and go to state 108
    MINUS           shift and go to state 102
    TIMES           shift and go to state 117
    AMPERS          shift and go to state 123
    NOT             shift and go to state 107
    LPAREN          shift and go to state 120
    IDENTIFIER      shift and go to state 111
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 109
    FLOAT           shift and go to state 122
    IMAGINARY       shift and go to state 110
    RUNE            shift and go to state 96
    STRING          shift and go to state 103
    LBRACK          shift and go to state 67
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53
    POINTER         shift and go to state 59

    Conversion                     shift and go to state 97
    UnaryOp                        shift and go to state 106
    PrimaryExpr                    shift and go to state 124
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 99
    FloatLiteral                   shift and go to state 100
    Type                           shift and go to state 101
    OperandName                    shift and go to state 104
    BasicLit                       shift and go to state 105
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 60
    IntLiteral                     shift and go to state 112
    UnaryExpr                      shift and go to state 115
    RuneLiteral                    shift and go to state 116
    Operand                        shift and go to state 118
    Expression                     shift and go to state 336
    PointerType                    shift and go to state 69
    Pointer                        shift and go to state 66
    StringLiteral                  shift and go to state 98
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 113
    FunctionType                   shift and go to state 70

state 307

    (157) MallocStmt -> MALLOC IDENTIFIER .

    SEMICOL         reduce using rule 157 (MallocStmt -> MALLOC IDENTIFIER .)


state 308

    (171) assign_op -> AssignOp .

    PLUS            reduce using rule 171 (assign_op -> AssignOp .)
    MINUS           reduce using rule 171 (assign_op -> AssignOp .)
    TIMES           reduce using rule 171 (assign_op -> AssignOp .)
    AMPERS          reduce using rule 171 (assign_op -> AssignOp .)
    NOT             reduce using rule 171 (assign_op -> AssignOp .)
    LPAREN          reduce using rule 171 (assign_op -> AssignOp .)
    IDENTIFIER      reduce using rule 171 (assign_op -> AssignOp .)
    TYPEX           reduce using rule 171 (assign_op -> AssignOp .)
    TTYPE           reduce using rule 171 (assign_op -> AssignOp .)
    INTEGER         reduce using rule 171 (assign_op -> AssignOp .)
    FLOAT           reduce using rule 171 (assign_op -> AssignOp .)
    IMAGINARY       reduce using rule 171 (assign_op -> AssignOp .)
    RUNE            reduce using rule 171 (assign_op -> AssignOp .)
    STRING          reduce using rule 171 (assign_op -> AssignOp .)
    LBRACK          reduce using rule 171 (assign_op -> AssignOp .)
    STRUCT          reduce using rule 171 (assign_op -> AssignOp .)
    FUNC            reduce using rule 171 (assign_op -> AssignOp .)
    POINTER         reduce using rule 171 (assign_op -> AssignOp .)


state 309

    (182) AssignOp -> EQUAL .

    PLUS            reduce using rule 182 (AssignOp -> EQUAL .)
    MINUS           reduce using rule 182 (AssignOp -> EQUAL .)
    TIMES           reduce using rule 182 (AssignOp -> EQUAL .)
    AMPERS          reduce using rule 182 (AssignOp -> EQUAL .)
    NOT             reduce using rule 182 (AssignOp -> EQUAL .)
    LPAREN          reduce using rule 182 (AssignOp -> EQUAL .)
    IDENTIFIER      reduce using rule 182 (AssignOp -> EQUAL .)
    TYPEX           reduce using rule 182 (AssignOp -> EQUAL .)
    TTYPE           reduce using rule 182 (AssignOp -> EQUAL .)
    INTEGER         reduce using rule 182 (AssignOp -> EQUAL .)
    FLOAT           reduce using rule 182 (AssignOp -> EQUAL .)
    IMAGINARY       reduce using rule 182 (AssignOp -> EQUAL .)
    RUNE            reduce using rule 182 (AssignOp -> EQUAL .)
    STRING          reduce using rule 182 (AssignOp -> EQUAL .)
    LBRACK          reduce using rule 182 (AssignOp -> EQUAL .)
    STRUCT          reduce using rule 182 (AssignOp -> EQUAL .)
    FUNC            reduce using rule 182 (AssignOp -> EQUAL .)
    POINTER         reduce using rule 182 (AssignOp -> EQUAL .)


state 310

    (179) AssignOp -> CAREQ .

    PLUS            reduce using rule 179 (AssignOp -> CAREQ .)
    MINUS           reduce using rule 179 (AssignOp -> CAREQ .)
    TIMES           reduce using rule 179 (AssignOp -> CAREQ .)
    AMPERS          reduce using rule 179 (AssignOp -> CAREQ .)
    NOT             reduce using rule 179 (AssignOp -> CAREQ .)
    LPAREN          reduce using rule 179 (AssignOp -> CAREQ .)
    IDENTIFIER      reduce using rule 179 (AssignOp -> CAREQ .)
    TYPEX           reduce using rule 179 (AssignOp -> CAREQ .)
    TTYPE           reduce using rule 179 (AssignOp -> CAREQ .)
    INTEGER         reduce using rule 179 (AssignOp -> CAREQ .)
    FLOAT           reduce using rule 179 (AssignOp -> CAREQ .)
    IMAGINARY       reduce using rule 179 (AssignOp -> CAREQ .)
    RUNE            reduce using rule 179 (AssignOp -> CAREQ .)
    STRING          reduce using rule 179 (AssignOp -> CAREQ .)
    LBRACK          reduce using rule 179 (AssignOp -> CAREQ .)
    STRUCT          reduce using rule 179 (AssignOp -> CAREQ .)
    FUNC            reduce using rule 179 (AssignOp -> CAREQ .)
    POINTER         reduce using rule 179 (AssignOp -> CAREQ .)


state 311

    (174) AssignOp -> TIMESEQ .

    PLUS            reduce using rule 174 (AssignOp -> TIMESEQ .)
    MINUS           reduce using rule 174 (AssignOp -> TIMESEQ .)
    TIMES           reduce using rule 174 (AssignOp -> TIMESEQ .)
    AMPERS          reduce using rule 174 (AssignOp -> TIMESEQ .)
    NOT             reduce using rule 174 (AssignOp -> TIMESEQ .)
    LPAREN          reduce using rule 174 (AssignOp -> TIMESEQ .)
    IDENTIFIER      reduce using rule 174 (AssignOp -> TIMESEQ .)
    TYPEX           reduce using rule 174 (AssignOp -> TIMESEQ .)
    TTYPE           reduce using rule 174 (AssignOp -> TIMESEQ .)
    INTEGER         reduce using rule 174 (AssignOp -> TIMESEQ .)
    FLOAT           reduce using rule 174 (AssignOp -> TIMESEQ .)
    IMAGINARY       reduce using rule 174 (AssignOp -> TIMESEQ .)
    RUNE            reduce using rule 174 (AssignOp -> TIMESEQ .)
    STRING          reduce using rule 174 (AssignOp -> TIMESEQ .)
    LBRACK          reduce using rule 174 (AssignOp -> TIMESEQ .)
    STRUCT          reduce using rule 174 (AssignOp -> TIMESEQ .)
    FUNC            reduce using rule 174 (AssignOp -> TIMESEQ .)
    POINTER         reduce using rule 174 (AssignOp -> TIMESEQ .)


state 312

    (172) AssignOp -> PLUSEQ .

    PLUS            reduce using rule 172 (AssignOp -> PLUSEQ .)
    MINUS           reduce using rule 172 (AssignOp -> PLUSEQ .)
    TIMES           reduce using rule 172 (AssignOp -> PLUSEQ .)
    AMPERS          reduce using rule 172 (AssignOp -> PLUSEQ .)
    NOT             reduce using rule 172 (AssignOp -> PLUSEQ .)
    LPAREN          reduce using rule 172 (AssignOp -> PLUSEQ .)
    IDENTIFIER      reduce using rule 172 (AssignOp -> PLUSEQ .)
    TYPEX           reduce using rule 172 (AssignOp -> PLUSEQ .)
    TTYPE           reduce using rule 172 (AssignOp -> PLUSEQ .)
    INTEGER         reduce using rule 172 (AssignOp -> PLUSEQ .)
    FLOAT           reduce using rule 172 (AssignOp -> PLUSEQ .)
    IMAGINARY       reduce using rule 172 (AssignOp -> PLUSEQ .)
    RUNE            reduce using rule 172 (AssignOp -> PLUSEQ .)
    STRING          reduce using rule 172 (AssignOp -> PLUSEQ .)
    LBRACK          reduce using rule 172 (AssignOp -> PLUSEQ .)
    STRUCT          reduce using rule 172 (AssignOp -> PLUSEQ .)
    FUNC            reduce using rule 172 (AssignOp -> PLUSEQ .)
    POINTER         reduce using rule 172 (AssignOp -> PLUSEQ .)


state 313

    (176) AssignOp -> MODEQ .

    PLUS            reduce using rule 176 (AssignOp -> MODEQ .)
    MINUS           reduce using rule 176 (AssignOp -> MODEQ .)
    TIMES           reduce using rule 176 (AssignOp -> MODEQ .)
    AMPERS          reduce using rule 176 (AssignOp -> MODEQ .)
    NOT             reduce using rule 176 (AssignOp -> MODEQ .)
    LPAREN          reduce using rule 176 (AssignOp -> MODEQ .)
    IDENTIFIER      reduce using rule 176 (AssignOp -> MODEQ .)
    TYPEX           reduce using rule 176 (AssignOp -> MODEQ .)
    TTYPE           reduce using rule 176 (AssignOp -> MODEQ .)
    INTEGER         reduce using rule 176 (AssignOp -> MODEQ .)
    FLOAT           reduce using rule 176 (AssignOp -> MODEQ .)
    IMAGINARY       reduce using rule 176 (AssignOp -> MODEQ .)
    RUNE            reduce using rule 176 (AssignOp -> MODEQ .)
    STRING          reduce using rule 176 (AssignOp -> MODEQ .)
    LBRACK          reduce using rule 176 (AssignOp -> MODEQ .)
    STRUCT          reduce using rule 176 (AssignOp -> MODEQ .)
    FUNC            reduce using rule 176 (AssignOp -> MODEQ .)
    POINTER         reduce using rule 176 (AssignOp -> MODEQ .)


state 314

    (181) AssignOp -> GGEQ .

    PLUS            reduce using rule 181 (AssignOp -> GGEQ .)
    MINUS           reduce using rule 181 (AssignOp -> GGEQ .)
    TIMES           reduce using rule 181 (AssignOp -> GGEQ .)
    AMPERS          reduce using rule 181 (AssignOp -> GGEQ .)
    NOT             reduce using rule 181 (AssignOp -> GGEQ .)
    LPAREN          reduce using rule 181 (AssignOp -> GGEQ .)
    IDENTIFIER      reduce using rule 181 (AssignOp -> GGEQ .)
    TYPEX           reduce using rule 181 (AssignOp -> GGEQ .)
    TTYPE           reduce using rule 181 (AssignOp -> GGEQ .)
    INTEGER         reduce using rule 181 (AssignOp -> GGEQ .)
    FLOAT           reduce using rule 181 (AssignOp -> GGEQ .)
    IMAGINARY       reduce using rule 181 (AssignOp -> GGEQ .)
    RUNE            reduce using rule 181 (AssignOp -> GGEQ .)
    STRING          reduce using rule 181 (AssignOp -> GGEQ .)
    LBRACK          reduce using rule 181 (AssignOp -> GGEQ .)
    STRUCT          reduce using rule 181 (AssignOp -> GGEQ .)
    FUNC            reduce using rule 181 (AssignOp -> GGEQ .)
    POINTER         reduce using rule 181 (AssignOp -> GGEQ .)


state 315

    (180) AssignOp -> LLEQ .

    PLUS            reduce using rule 180 (AssignOp -> LLEQ .)
    MINUS           reduce using rule 180 (AssignOp -> LLEQ .)
    TIMES           reduce using rule 180 (AssignOp -> LLEQ .)
    AMPERS          reduce using rule 180 (AssignOp -> LLEQ .)
    NOT             reduce using rule 180 (AssignOp -> LLEQ .)
    LPAREN          reduce using rule 180 (AssignOp -> LLEQ .)
    IDENTIFIER      reduce using rule 180 (AssignOp -> LLEQ .)
    TYPEX           reduce using rule 180 (AssignOp -> LLEQ .)
    TTYPE           reduce using rule 180 (AssignOp -> LLEQ .)
    INTEGER         reduce using rule 180 (AssignOp -> LLEQ .)
    FLOAT           reduce using rule 180 (AssignOp -> LLEQ .)
    IMAGINARY       reduce using rule 180 (AssignOp -> LLEQ .)
    RUNE            reduce using rule 180 (AssignOp -> LLEQ .)
    STRING          reduce using rule 180 (AssignOp -> LLEQ .)
    LBRACK          reduce using rule 180 (AssignOp -> LLEQ .)
    STRUCT          reduce using rule 180 (AssignOp -> LLEQ .)
    FUNC            reduce using rule 180 (AssignOp -> LLEQ .)
    POINTER         reduce using rule 180 (AssignOp -> LLEQ .)


state 316

    (178) AssignOp -> OREQ .

    PLUS            reduce using rule 178 (AssignOp -> OREQ .)
    MINUS           reduce using rule 178 (AssignOp -> OREQ .)
    TIMES           reduce using rule 178 (AssignOp -> OREQ .)
    AMPERS          reduce using rule 178 (AssignOp -> OREQ .)
    NOT             reduce using rule 178 (AssignOp -> OREQ .)
    LPAREN          reduce using rule 178 (AssignOp -> OREQ .)
    IDENTIFIER      reduce using rule 178 (AssignOp -> OREQ .)
    TYPEX           reduce using rule 178 (AssignOp -> OREQ .)
    TTYPE           reduce using rule 178 (AssignOp -> OREQ .)
    INTEGER         reduce using rule 178 (AssignOp -> OREQ .)
    FLOAT           reduce using rule 178 (AssignOp -> OREQ .)
    IMAGINARY       reduce using rule 178 (AssignOp -> OREQ .)
    RUNE            reduce using rule 178 (AssignOp -> OREQ .)
    STRING          reduce using rule 178 (AssignOp -> OREQ .)
    LBRACK          reduce using rule 178 (AssignOp -> OREQ .)
    STRUCT          reduce using rule 178 (AssignOp -> OREQ .)
    FUNC            reduce using rule 178 (AssignOp -> OREQ .)
    POINTER         reduce using rule 178 (AssignOp -> OREQ .)


state 317

    (173) AssignOp -> MINUSEQ .

    PLUS            reduce using rule 173 (AssignOp -> MINUSEQ .)
    MINUS           reduce using rule 173 (AssignOp -> MINUSEQ .)
    TIMES           reduce using rule 173 (AssignOp -> MINUSEQ .)
    AMPERS          reduce using rule 173 (AssignOp -> MINUSEQ .)
    NOT             reduce using rule 173 (AssignOp -> MINUSEQ .)
    LPAREN          reduce using rule 173 (AssignOp -> MINUSEQ .)
    IDENTIFIER      reduce using rule 173 (AssignOp -> MINUSEQ .)
    TYPEX           reduce using rule 173 (AssignOp -> MINUSEQ .)
    TTYPE           reduce using rule 173 (AssignOp -> MINUSEQ .)
    INTEGER         reduce using rule 173 (AssignOp -> MINUSEQ .)
    FLOAT           reduce using rule 173 (AssignOp -> MINUSEQ .)
    IMAGINARY       reduce using rule 173 (AssignOp -> MINUSEQ .)
    RUNE            reduce using rule 173 (AssignOp -> MINUSEQ .)
    STRING          reduce using rule 173 (AssignOp -> MINUSEQ .)
    LBRACK          reduce using rule 173 (AssignOp -> MINUSEQ .)
    STRUCT          reduce using rule 173 (AssignOp -> MINUSEQ .)
    FUNC            reduce using rule 173 (AssignOp -> MINUSEQ .)
    POINTER         reduce using rule 173 (AssignOp -> MINUSEQ .)


state 318

    (177) AssignOp -> AMPEQ .

    PLUS            reduce using rule 177 (AssignOp -> AMPEQ .)
    MINUS           reduce using rule 177 (AssignOp -> AMPEQ .)
    TIMES           reduce using rule 177 (AssignOp -> AMPEQ .)
    AMPERS          reduce using rule 177 (AssignOp -> AMPEQ .)
    NOT             reduce using rule 177 (AssignOp -> AMPEQ .)
    LPAREN          reduce using rule 177 (AssignOp -> AMPEQ .)
    IDENTIFIER      reduce using rule 177 (AssignOp -> AMPEQ .)
    TYPEX           reduce using rule 177 (AssignOp -> AMPEQ .)
    TTYPE           reduce using rule 177 (AssignOp -> AMPEQ .)
    INTEGER         reduce using rule 177 (AssignOp -> AMPEQ .)
    FLOAT           reduce using rule 177 (AssignOp -> AMPEQ .)
    IMAGINARY       reduce using rule 177 (AssignOp -> AMPEQ .)
    RUNE            reduce using rule 177 (AssignOp -> AMPEQ .)
    STRING          reduce using rule 177 (AssignOp -> AMPEQ .)
    LBRACK          reduce using rule 177 (AssignOp -> AMPEQ .)
    STRUCT          reduce using rule 177 (AssignOp -> AMPEQ .)
    FUNC            reduce using rule 177 (AssignOp -> AMPEQ .)
    POINTER         reduce using rule 177 (AssignOp -> AMPEQ .)


state 319

    (170) Assignment -> ExpressionList assign_op . ExpressionList
    (113) ExpressionList -> . Expression ExpressionRep
    (116) Expression -> . UnaryExpr
    (117) Expression -> . Expression OROR Expression
    (118) Expression -> . Expression AMPAMP Expression
    (119) Expression -> . Expression EQEQ Expression
    (120) Expression -> . Expression NOTEQ Expression
    (121) Expression -> . Expression LESS Expression
    (122) Expression -> . Expression GREAT Expression
    (123) Expression -> . Expression LEQ Expression
    (124) Expression -> . Expression GEQ Expression
    (125) Expression -> . Expression PLUS Expression
    (126) Expression -> . Expression MINUS Expression
    (127) Expression -> . Expression OR Expression
    (128) Expression -> . Expression CARET Expression
    (129) Expression -> . Expression TIMES Expression
    (130) Expression -> . Expression DIVIDE Expression
    (131) Expression -> . Expression MOD Expression
    (132) Expression -> . Expression AMPERS Expression
    (133) Expression -> . Expression LL Expression
    (134) Expression -> . Expression GG Expression
    (135) Expression -> . Expression AMPCAR Expression
    (138) UnaryExpr -> . PrimaryExpr
    (139) UnaryExpr -> . UnaryOp UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . Conversion
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . PrimaryExpr Index
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr Arguments
    (140) UnaryOp -> . PLUS
    (141) UnaryOp -> . MINUS
    (142) UnaryOp -> . TIMES
    (143) UnaryOp -> . AMPERS
    (144) UnaryOp -> . NOT
    (85) Operand -> . Literal
    (86) Operand -> . OperandName
    (87) Operand -> . LPAREN Expression RPAREN
    (100) Conversion -> . Type LPAREN Expression RPAREN
    (88) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (89) BasicLit -> . IntLiteral
    (90) BasicLit -> . FloatLiteral
    (91) BasicLit -> . ImgLiteral
    (92) BasicLit -> . RuneLiteral
    (93) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (94) IntLiteral -> . INTEGER
    (95) FloatLiteral -> . FLOAT
    (96) ImgLiteral -> . IMAGINARY
    (97) RuneLiteral -> . RUNE
    (98) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . Pointer BaseType
    (27) FunctionType -> . FUNC Signature
    (25) Pointer -> . POINTER

    PLUS            shift and go to state 108
    MINUS           shift and go to state 102
    TIMES           shift and go to state 117
    AMPERS          shift and go to state 123
    NOT             shift and go to state 107
    LPAREN          shift and go to state 120
    IDENTIFIER      shift and go to state 111
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 109
    FLOAT           shift and go to state 122
    IMAGINARY       shift and go to state 110
    RUNE            shift and go to state 96
    STRING          shift and go to state 103
    LBRACK          shift and go to state 67
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53
    POINTER         shift and go to state 59

    UnaryOp                        shift and go to state 106
    PrimaryExpr                    shift and go to state 124
    Conversion                     shift and go to state 97
    ArrayType                      shift and go to state 54
    Literal                        shift and go to state 99
    FloatLiteral                   shift and go to state 100
    Type                           shift and go to state 101
    OperandName                    shift and go to state 104
    BasicLit                       shift and go to state 105
    TypeName                       shift and go to state 57
    StructType                     shift and go to state 60
    IntLiteral                     shift and go to state 112
    UnaryExpr                      shift and go to state 115
    RuneLiteral                    shift and go to state 116
    Operand                        shift and go to state 118
    ExpressionList                 shift and go to state 337
    Expression                     shift and go to state 146
    PointerType                    shift and go to state 69
    Pointer                        shift and go to state 66
    StringLiteral                  shift and go to state 98
    TypeLit                        shift and go to state 56
    ImgLiteral                     shift and go to state 113
    FunctionType                   shift and go to state 70

state 320

    (175) AssignOp -> DIVIDEEQ .

    PLUS            reduce using rule 175 (AssignOp -> DIVIDEEQ .)
    MINUS           reduce using rule 175 (AssignOp -> DIVIDEEQ .)
    TIMES           reduce using rule 175 (AssignOp -> DIVIDEEQ .)
    AMPERS          reduce using rule 175 (AssignOp -> DIVIDEEQ .)
    NOT             reduce using rule 175 (AssignOp -> DIVIDEEQ .)
    LPAREN          reduce using rule 175 (AssignOp -> DIVIDEEQ .)
    IDENTIFIER      reduce using rule 175 (AssignOp -> DIVIDEEQ .)
    TYPEX           reduce using rule 175 (AssignOp -> DIVIDEEQ .)
    TTYPE           reduce using rule 175 (AssignOp -> DIVIDEEQ .)
    INTEGER         reduce using rule 175 (AssignOp -> DIVIDEEQ .)
    FLOAT           reduce using rule 175 (AssignOp -> DIVIDEEQ .)
    IMAGINARY       reduce using rule 175 (AssignOp -> DIVIDEEQ .)
    RUNE            reduce using rule 175 (AssignOp -> DIVIDEEQ .)
    STRING          reduce using rule 175 (AssignOp -> DIVIDEEQ .)
    LBRACK          reduce using rule 175 (AssignOp -> DIVIDEEQ .)
    STRUCT          reduce using rule 175 (AssignOp -> DIVIDEEQ .)
    FUNC            reduce using rule 175 (AssignOp -> DIVIDEEQ .)
    POINTER         reduce using rule 175 (AssignOp -> DIVIDEEQ .)


state 321

    (203) BreakStmt -> BREAK LabelOpt .

    SEMICOL         reduce using rule 203 (BreakStmt -> BREAK LabelOpt .)


state 322

    (207) GotoStmt -> GOTO Label .

    SEMICOL         reduce using rule 207 (GotoStmt -> GOTO Label .)


state 323

    (183) IfStmt -> IF Expression . Block ElseOpt
    (117) Expression -> Expression . OROR Expression
    (118) Expression -> Expression . AMPAMP Expression
    (119) Expression -> Expression . EQEQ Expression
    (120) Expression -> Expression . NOTEQ Expression
    (121) Expression -> Expression . LESS Expression
    (122) Expression -> Expression . GREAT Expression
    (123) Expression -> Expression . LEQ Expression
    (124) Expression -> Expression . GEQ Expression
    (125) Expression -> Expression . PLUS Expression
    (126) Expression -> Expression . MINUS Expression
    (127) Expression -> Expression . OR Expression
    (128) Expression -> Expression . CARET Expression
    (129) Expression -> Expression . TIMES Expression
    (130) Expression -> Expression . DIVIDE Expression
    (131) Expression -> Expression . MOD Expression
    (132) Expression -> Expression . AMPERS Expression
    (133) Expression -> Expression . LL Expression
    (134) Expression -> Expression . GG Expression
    (135) Expression -> Expression . AMPCAR Expression
    (43) Block -> . CreateScope LBRACE StatementList RBRACE
    (44) CreateScope -> . epsilon
    (224) epsilon -> .

    OROR            shift and go to state 168
    AMPAMP          shift and go to state 183
    EQEQ            shift and go to state 174
    NOTEQ           shift and go to state 180
    LESS            shift and go to state 173
    GREAT           shift and go to state 170
    LEQ             shift and go to state 186
    GEQ             shift and go to state 177
    PLUS            shift and go to state 181
    MINUS           shift and go to state 185
    OR              shift and go to state 178
    CARET           shift and go to state 169
    TIMES           shift and go to state 184
    DIVIDE          shift and go to state 171
    MOD             shift and go to state 182
    AMPERS          shift and go to state 176
    LL              shift and go to state 175
    GG              shift and go to state 179
    AMPCAR          shift and go to state 172
    LBRACE          reduce using rule 224 (epsilon -> .)

    epsilon                        shift and go to state 133
    CreateScope                    shift and go to state 134
    Block                          shift and go to state 338

state 324

    (109) Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .

    PLUSPLUS        reduce using rule 109 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    MINUSMIN        reduce using rule 109 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    DOT             reduce using rule 109 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    LBRACK          reduce using rule 109 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    LPAREN          reduce using rule 109 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    OROR            reduce using rule 109 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    AMPAMP          reduce using rule 109 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    EQEQ            reduce using rule 109 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    NOTEQ           reduce using rule 109 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    LESS            reduce using rule 109 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    GREAT           reduce using rule 109 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    LEQ             reduce using rule 109 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    GEQ             reduce using rule 109 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    PLUS            reduce using rule 109 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    MINUS           reduce using rule 109 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    OR              reduce using rule 109 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    CARET           reduce using rule 109 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    TIMES           reduce using rule 109 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    DIVIDE          reduce using rule 109 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    MOD             reduce using rule 109 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    AMPERS          reduce using rule 109 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    LL              reduce using rule 109 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    GG              reduce using rule 109 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    AMPCAR          reduce using rule 109 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    COMMA           reduce using rule 109 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    SEMICOL         reduce using rule 109 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    PLUSEQ          reduce using rule 109 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    MINUSEQ         reduce using rule 109 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    TIMESEQ         reduce using rule 109 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    DIVIDEEQ        reduce using rule 109 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    MODEQ           reduce using rule 109 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    AMPEQ           reduce using rule 109 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    OREQ            reduce using rule 109 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    CAREQ           reduce using rule 109 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    LLEQ            reduce using rule 109 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    GGEQ            reduce using rule 109 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    EQUAL           reduce using rule 109 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    LBRACE          reduce using rule 109 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    RBRACK          reduce using rule 109 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    RPAREN          reduce using rule 109 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    COLON           reduce using rule 109 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)


state 325

    (138) UnaryExpr -> PrimaryExpr .
    (168) IncDecStmt -> PrimaryExpr . PLUSPLUS
    (169) IncDecStmt -> PrimaryExpr . MINUSMIN
    (103) PrimaryExpr -> PrimaryExpr . Selector
    (104) PrimaryExpr -> PrimaryExpr . Index
    (105) PrimaryExpr -> PrimaryExpr . Slice
    (106) PrimaryExpr -> PrimaryExpr . Arguments
    (107) Selector -> . DOT IDENTIFIER
    (108) Index -> . LBRACK Expression RBRACK
    (109) Slice -> . LBRACK ExpressionOpt COLON ExpressionOpt RBRACK
    (110) Arguments -> . LPAREN ExpressionListTypeOpt RPAREN

    OROR            reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    AMPAMP          reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    EQEQ            reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    NOTEQ           reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    LESS            reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    GREAT           reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    LEQ             reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    GEQ             reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    PLUS            reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    MINUS           reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    OR              reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    CARET           reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    TIMES           reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    DIVIDE          reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    MOD             reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    AMPERS          reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    LL              reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    GG              reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    AMPCAR          reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    COMMA           reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    LBRACE          reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    SEMICOL         reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    PLUSEQ          reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    MINUSEQ         reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    TIMESEQ         reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    DIVIDEEQ        reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    MODEQ           reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    AMPEQ           reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    OREQ            reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    CAREQ           reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    LLEQ            reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    GGEQ            reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    EQUAL           reduce using rule 138 (UnaryExpr -> PrimaryExpr .)
    PLUSPLUS        shift and go to state 300
    MINUSMIN        shift and go to state 301
    DOT             shift and go to state 193
    LBRACK          shift and go to state 189
    LPAREN          shift and go to state 192

    Index                          shift and go to state 187
    Slice                          shift and go to state 188
    Selector                       shift and go to state 190
    Arguments                      shift and go to state 191

state 326

    (79) ShortVarDecl -> IDENTIFIER . COLONEQ Expression
    (99) OperandName -> IDENTIFIER .

    COLONEQ         shift and go to state 306
    PLUSPLUS        reduce using rule 99 (OperandName -> IDENTIFIER .)
    MINUSMIN        reduce using rule 99 (OperandName -> IDENTIFIER .)
    DOT             reduce using rule 99 (OperandName -> IDENTIFIER .)
    LBRACK          reduce using rule 99 (OperandName -> IDENTIFIER .)
    LPAREN          reduce using rule 99 (OperandName -> IDENTIFIER .)
    OROR            reduce using rule 99 (OperandName -> IDENTIFIER .)
    AMPAMP          reduce using rule 99 (OperandName -> IDENTIFIER .)
    EQEQ            reduce using rule 99 (OperandName -> IDENTIFIER .)
    NOTEQ           reduce using rule 99 (OperandName -> IDENTIFIER .)
    LESS            reduce using rule 99 (OperandName -> IDENTIFIER .)
    GREAT           reduce using rule 99 (OperandName -> IDENTIFIER .)
    LEQ             reduce using rule 99 (OperandName -> IDENTIFIER .)
    GEQ             reduce using rule 99 (OperandName -> IDENTIFIER .)
    PLUS            reduce using rule 99 (OperandName -> IDENTIFIER .)
    MINUS           reduce using rule 99 (OperandName -> IDENTIFIER .)
    OR              reduce using rule 99 (OperandName -> IDENTIFIER .)
    CARET           reduce using rule 99 (OperandName -> IDENTIFIER .)
    TIMES           reduce using rule 99 (OperandName -> IDENTIFIER .)
    DIVIDE          reduce using rule 99 (OperandName -> IDENTIFIER .)
    MOD             reduce using rule 99 (OperandName -> IDENTIFIER .)
    AMPERS          reduce using rule 99 (OperandName -> IDENTIFIER .)
    LL              reduce using rule 99 (OperandName -> IDENTIFIER .)
    GG              reduce using rule 99 (OperandName -> IDENTIFIER .)
    AMPCAR          reduce using rule 99 (OperandName -> IDENTIFIER .)
    COMMA           reduce using rule 99 (OperandName -> IDENTIFIER .)
    LBRACE          reduce using rule 99 (OperandName -> IDENTIFIER .)
    PLUSEQ          reduce using rule 99 (OperandName -> IDENTIFIER .)
    MINUSEQ         reduce using rule 99 (OperandName -> IDENTIFIER .)
    TIMESEQ         reduce using rule 99 (OperandName -> IDENTIFIER .)
    DIVIDEEQ        reduce using rule 99 (OperandName -> IDENTIFIER .)
    MODEQ           reduce using rule 99 (OperandName -> IDENTIFIER .)
    AMPEQ           reduce using rule 99 (OperandName -> IDENTIFIER .)
    OREQ            reduce using rule 99 (OperandName -> IDENTIFIER .)
    CAREQ           reduce using rule 99 (OperandName -> IDENTIFIER .)
    LLEQ            reduce using rule 99 (OperandName -> IDENTIFIER .)
    GGEQ            reduce using rule 99 (OperandName -> IDENTIFIER .)
    EQUAL           reduce using rule 99 (OperandName -> IDENTIFIER .)
    SEMICOL         reduce using rule 99 (OperandName -> IDENTIFIER .)


state 327

    (190) ConditionBlockOpt -> Condition .

    LBRACE          reduce using rule 190 (ConditionBlockOpt -> Condition .)


state 328

    (189) ConditionBlockOpt -> epsilon .
    (160) SimpleStmt -> epsilon .

    LBRACE          reduce using rule 189 (ConditionBlockOpt -> epsilon .)
    SEMICOL         reduce using rule 160 (SimpleStmt -> epsilon .)


state 329

    (187) ForStmt -> CreateForScope FOR ConditionBlockOpt . Block
    (43) Block -> . CreateScope LBRACE StatementList RBRACE
    (44) CreateScope -> . epsilon
    (224) epsilon -> .

    LBRACE          reduce using rule 224 (epsilon -> .)

    epsilon                        shift and go to state 133
    CreateScope                    shift and go to state 134
    Block                          shift and go to state 339

state 330

    (192) Condition -> Expression .
    (117) Expression -> Expression . OROR Expression
    (118) Expression -> Expression . AMPAMP Expression
    (119) Expression -> Expression . EQEQ Expression
    (120) Expression -> Expression . NOTEQ Expression
    (121) Expression -> Expression . LESS Expression
    (122) Expression -> Expression . GREAT Expression
    (123) Expression -> Expression . LEQ Expression
    (124) Expression -> Expression . GEQ Expression
    (125) Expression -> Expression . PLUS Expression
    (126) Expression -> Expression . MINUS Expression
    (127) Expression -> Expression . OR Expression
    (128) Expression -> Expression . CARET Expression
    (129) Expression -> Expression . TIMES Expression
    (130) Expression -> Expression . DIVIDE Expression
    (131) Expression -> Expression . MOD Expression
    (132) Expression -> Expression . AMPERS Expression
    (133) Expression -> Expression . LL Expression
    (134) Expression -> Expression . GG Expression
    (135) Expression -> Expression . AMPCAR Expression
    (167) ExpressionStmt -> Expression .
    (113) ExpressionList -> Expression . ExpressionRep
    (114) ExpressionRep -> . ExpressionRep COMMA Expression
    (115) ExpressionRep -> . epsilon
    (224) epsilon -> .

    LBRACE          reduce using rule 192 (Condition -> Expression .)
    OROR            shift and go to state 168
    AMPAMP          shift and go to state 183
    EQEQ            shift and go to state 174
    NOTEQ           shift and go to state 180
    LESS            shift and go to state 173
    GREAT           shift and go to state 170
    LEQ             shift and go to state 186
    GEQ             shift and go to state 177
    PLUS            shift and go to state 181
    MINUS           shift and go to state 185
    OR              shift and go to state 178
    CARET           shift and go to state 169
    TIMES           shift and go to state 184
    DIVIDE          shift and go to state 171
    MOD             shift and go to state 182
    AMPERS          shift and go to state 176
    LL              shift and go to state 175
    GG              shift and go to state 179
    AMPCAR          shift and go to state 172
    SEMICOL         reduce using rule 167 (ExpressionStmt -> Expression .)
    COMMA           reduce using rule 224 (epsilon -> .)
    PLUSEQ          reduce using rule 224 (epsilon -> .)
    MINUSEQ         reduce using rule 224 (epsilon -> .)
    TIMESEQ         reduce using rule 224 (epsilon -> .)
    DIVIDEEQ        reduce using rule 224 (epsilon -> .)
    MODEQ           reduce using rule 224 (epsilon -> .)
    AMPEQ           reduce using rule 224 (epsilon -> .)
    OREQ            reduce using rule 224 (epsilon -> .)
    CAREQ           reduce using rule 224 (epsilon -> .)
    LLEQ            reduce using rule 224 (epsilon -> .)
    GGEQ            reduce using rule 224 (epsilon -> .)
    EQUAL           reduce using rule 224 (epsilon -> .)

    epsilon                        shift and go to state 203
    ExpressionRep                  shift and go to state 202

state 331

    (193) ForClause -> SimpleStmt . SEMICOL ConditionOpt SEMICOL SimpleStmt

    SEMICOL         shift and go to state 340


state 332

    (191) ConditionBlockOpt -> ForClause .

    LBRACE          reduce using rule 191 (ConditionBlockOpt -> ForClause .)


state 333

    (165) LabeledStmt -> Label COLON Statement .

    SEMICOL         reduce using rule 165 (LabeledStmt -> Label COLON Statement .)


state 334

    (159) PrintStmt -> PRINT PS Expression .
    (117) Expression -> Expression . OROR Expression
    (118) Expression -> Expression . AMPAMP Expression
    (119) Expression -> Expression . EQEQ Expression
    (120) Expression -> Expression . NOTEQ Expression
    (121) Expression -> Expression . LESS Expression
    (122) Expression -> Expression . GREAT Expression
    (123) Expression -> Expression . LEQ Expression
    (124) Expression -> Expression . GEQ Expression
    (125) Expression -> Expression . PLUS Expression
    (126) Expression -> Expression . MINUS Expression
    (127) Expression -> Expression . OR Expression
    (128) Expression -> Expression . CARET Expression
    (129) Expression -> Expression . TIMES Expression
    (130) Expression -> Expression . DIVIDE Expression
    (131) Expression -> Expression . MOD Expression
    (132) Expression -> Expression . AMPERS Expression
    (133) Expression -> Expression . LL Expression
    (134) Expression -> Expression . GG Expression
    (135) Expression -> Expression . AMPCAR Expression

    SEMICOL         reduce using rule 159 (PrintStmt -> PRINT PS Expression .)
    OROR            shift and go to state 168
    AMPAMP          shift and go to state 183
    EQEQ            shift and go to state 174
    NOTEQ           shift and go to state 180
    LESS            shift and go to state 173
    GREAT           shift and go to state 170
    LEQ             shift and go to state 186
    GEQ             shift and go to state 177
    PLUS            shift and go to state 181
    MINUS           shift and go to state 185
    OR              shift and go to state 178
    CARET           shift and go to state 169
    TIMES           shift and go to state 184
    DIVIDE          shift and go to state 171
    MOD             shift and go to state 182
    AMPERS          shift and go to state 176
    LL              shift and go to state 175
    GG              shift and go to state 179
    AMPCAR          shift and go to state 172


state 335

    (158) PrintStmt -> PRINT PD Expression .
    (117) Expression -> Expression . OROR Expression
    (118) Expression -> Expression . AMPAMP Expression
    (119) Expression -> Expression . EQEQ Expression
    (120) Expression -> Expression . NOTEQ Expression
    (121) Expression -> Expression . LESS Expression
    (122) Expression -> Expression . GREAT Expression
    (123) Expression -> Expression . LEQ Expression
    (124) Expression -> Expression . GEQ Expression
    (125) Expression -> Expression . PLUS Expression
    (126) Expression -> Expression . MINUS Expression
    (127) Expression -> Expression . OR Expression
    (128) Expression -> Expression . CARET Expression
    (129) Expression -> Expression . TIMES Expression
    (130) Expression -> Expression . DIVIDE Expression
    (131) Expression -> Expression . MOD Expression
    (132) Expression -> Expression . AMPERS Expression
    (133) Expression -> Expression . LL Expression
    (134) Expression -> Expression . GG Expression
    (135) Expression -> Expression . AMPCAR Expression

    SEMICOL         reduce using rule 158 (PrintStmt -> PRINT PD Expression .)
    OROR            shift and go to state 168
    AMPAMP          shift and go to state 183
    EQEQ            shift and go to state 174
    NOTEQ           shift and go to state 180
    LESS            shift and go to state 173
    GREAT           shift and go to state 170
    LEQ             shift and go to state 186
    GEQ             shift and go to state 177
    PLUS            shift and go to state 181
    MINUS           shift and go to state 185
    OR              shift and go to state 178
    CARET           shift and go to state 169
    TIMES           shift and go to state 184
    DIVIDE          shift and go to state 171
    MOD             shift and go to state 182
    AMPERS          shift and go to state 176
    LL              shift and go to state 175
    GG              shift and go to state 179
    AMPCAR          shift and go to state 172


state 336

    (79) ShortVarDecl -> IDENTIFIER COLONEQ Expression .
    (117) Expression -> Expression . OROR Expression
    (118) Expression -> Expression . AMPAMP Expression
    (119) Expression -> Expression . EQEQ Expression
    (120) Expression -> Expression . NOTEQ Expression
    (121) Expression -> Expression . LESS Expression
    (122) Expression -> Expression . GREAT Expression
    (123) Expression -> Expression . LEQ Expression
    (124) Expression -> Expression . GEQ Expression
    (125) Expression -> Expression . PLUS Expression
    (126) Expression -> Expression . MINUS Expression
    (127) Expression -> Expression . OR Expression
    (128) Expression -> Expression . CARET Expression
    (129) Expression -> Expression . TIMES Expression
    (130) Expression -> Expression . DIVIDE Expression
    (131) Expression -> Expression . MOD Expression
    (132) Expression -> Expression . AMPERS Expression
    (133) Expression -> Expression . LL Expression
    (134) Expression -> Expression . GG Expression
    (135) Expression -> Expression . AMPCAR Expression

    SEMICOL         reduce using rule 79 (ShortVarDecl -> IDENTIFIER COLONEQ Expression .)
    LBRACE          reduce using rule 79 (ShortVarDecl -> IDENTIFIER COLONEQ Expression .)
    OROR            shift and go to state 168
    AMPAMP          shift and go to state 183
    EQEQ            shift and go to state 174
    NOTEQ           shift and go to state 180
    LESS            shift and go to state 173
    GREAT           shift and go to state 170
    LEQ             shift and go to state 186
    GEQ             shift and go to state 177
    PLUS            shift and go to state 181
    MINUS           shift and go to state 185
    OR              shift and go to state 178
    CARET           shift and go to state 169
    TIMES           shift and go to state 184
    DIVIDE          shift and go to state 171
    MOD             shift and go to state 182
    AMPERS          shift and go to state 176
    LL              shift and go to state 175
    GG              shift and go to state 179
    AMPCAR          shift and go to state 172


state 337

    (170) Assignment -> ExpressionList assign_op ExpressionList .

    SEMICOL         reduce using rule 170 (Assignment -> ExpressionList assign_op ExpressionList .)
    LBRACE          reduce using rule 170 (Assignment -> ExpressionList assign_op ExpressionList .)


state 338

    (183) IfStmt -> IF Expression Block . ElseOpt
    (184) ElseOpt -> . ELSE IfStmt
    (185) ElseOpt -> . ELSE Block
    (186) ElseOpt -> . epsilon
    (224) epsilon -> .

    ELSE            shift and go to state 342
    SEMICOL         reduce using rule 224 (epsilon -> .)

    epsilon                        shift and go to state 341
    ElseOpt                        shift and go to state 343

state 339

    (187) ForStmt -> CreateForScope FOR ConditionBlockOpt Block .

    SEMICOL         reduce using rule 187 (ForStmt -> CreateForScope FOR ConditionBlockOpt Block .)


state 340

    (193) ForClause -> SimpleStmt SEMICOL . ConditionOpt SEMICOL SimpleStmt
    (194) ConditionOpt -> . epsilon
    (195) ConditionOpt -> . Condition
    (224) epsilon -> .
    (192) Condition -> . Expression
    (116) Expression -> . UnaryExpr
    (117) Expression -> . Expression OROR Expression
    (118) Expression -> . Expression AMPAMP Expression
    (119) Expression -> . Expression EQEQ Expression
    (120) Expression -> . Expression NOTEQ Expression
    (121) Expression -> . Expression LESS Expression
    (122) Expression -> . Expression GREAT Expression
    (123) Expression -> . Expression LEQ Expression
    (124) Expression -> . Expression GEQ Expression
    (125) Expression -> . Expression PLUS Expression
    (126) Expression -> . Expression MINUS Expression
    (127) Expression -> . Expression OR Expression
    (128) Expression -> . Expression CARET Expression
    (129) Expression -> . Expression TIMES Expression
    (130) Expression -> . Expression DIVIDE Expression
    (131) Expression -> . Expression MOD Expression
    (132) Expression -> . Expression AMPERS Expression
    (133) Expression -> . Expression LL Expression
    (134) Expression -> . Expression GG Expression
    (135) Expression -> . Expression AMPCAR Expression
    (138) UnaryExpr -> . PrimaryExpr
    (139) UnaryExpr -> . UnaryOp UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . Conversion
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . PrimaryExpr Index
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr Arguments
    (140) UnaryOp -> . PLUS
    (141) UnaryOp -> . MINUS
    (142) UnaryOp -> . TIMES
    (143) UnaryOp -> . AMPERS
    (144) UnaryOp -> . NOT
    (85) Operand -> . Literal
    (86) Operand -> . OperandName
    (87) Operand -> . LPAREN Expression RPAREN
    (100) Conversion -> . Type LPAREN Expression RPAREN
    (88) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (89) BasicLit -> . IntLiteral
    (90) BasicLit -> . FloatLiteral
    (91) BasicLit -> . ImgLiteral
    (92) BasicLit -> . RuneLiteral
    (93) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (94) IntLiteral -> . INTEGER
    (95) FloatLiteral -> . FLOAT
    (96) ImgLiteral -> . IMAGINARY
    (97) RuneLiteral -> . RUNE
    (98) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . Pointer BaseType
    (27) FunctionType -> . FUNC Signature
    (25) Pointer -> . POINTER

    SEMICOL         reduce using rule 224 (epsilon -> .)
    PLUS            shift and go to state 108
    MINUS           shift and go to state 102
    TIMES           shift and go to state 117
    AMPERS          shift and go to state 123
    NOT             shift and go to state 107
    LPAREN          shift and go to state 120
    IDENTIFIER      shift and go to state 111
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 109
    FLOAT           shift and go to state 122
    IMAGINARY       shift and go to state 110
    RUNE            shift and go to state 96
    STRING          shift and go to state 103
    LBRACK          shift and go to state 67
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53
    POINTER         shift and go to state 59

    Conversion                     shift and go to state 97
    UnaryOp                        shift and go to state 106
    Literal                        shift and go to state 99
    FloatLiteral                   shift and go to state 100
    Type                           shift and go to state 101
    OperandName                    shift and go to state 104
    BasicLit                       shift and go to state 105
    TypeName                       shift and go to state 57
    Condition                      shift and go to state 344
    StructType                     shift and go to state 60
    IntLiteral                     shift and go to state 112
    ImgLiteral                     shift and go to state 113
    epsilon                        shift and go to state 345
    UnaryExpr                      shift and go to state 115
    RuneLiteral                    shift and go to state 116
    PrimaryExpr                    shift and go to state 124
    ConditionOpt                   shift and go to state 346
    ArrayType                      shift and go to state 54
    Expression                     shift and go to state 347
    PointerType                    shift and go to state 69
    Pointer                        shift and go to state 66
    StringLiteral                  shift and go to state 98
    TypeLit                        shift and go to state 56
    Operand                        shift and go to state 118
    FunctionType                   shift and go to state 70

state 341

    (186) ElseOpt -> epsilon .

    SEMICOL         reduce using rule 186 (ElseOpt -> epsilon .)


state 342

    (184) ElseOpt -> ELSE . IfStmt
    (185) ElseOpt -> ELSE . Block
    (183) IfStmt -> . IF Expression Block ElseOpt
    (43) Block -> . CreateScope LBRACE StatementList RBRACE
    (44) CreateScope -> . epsilon
    (224) epsilon -> .

    IF              shift and go to state 281
    LBRACE          reduce using rule 224 (epsilon -> .)

    epsilon                        shift and go to state 133
    CreateScope                    shift and go to state 134
    IfStmt                         shift and go to state 348
    Block                          shift and go to state 349

state 343

    (183) IfStmt -> IF Expression Block ElseOpt .

    SEMICOL         reduce using rule 183 (IfStmt -> IF Expression Block ElseOpt .)


state 344

    (195) ConditionOpt -> Condition .

    SEMICOL         reduce using rule 195 (ConditionOpt -> Condition .)


state 345

    (194) ConditionOpt -> epsilon .

    SEMICOL         reduce using rule 194 (ConditionOpt -> epsilon .)


state 346

    (193) ForClause -> SimpleStmt SEMICOL ConditionOpt . SEMICOL SimpleStmt

    SEMICOL         shift and go to state 350


state 347

    (192) Condition -> Expression .
    (117) Expression -> Expression . OROR Expression
    (118) Expression -> Expression . AMPAMP Expression
    (119) Expression -> Expression . EQEQ Expression
    (120) Expression -> Expression . NOTEQ Expression
    (121) Expression -> Expression . LESS Expression
    (122) Expression -> Expression . GREAT Expression
    (123) Expression -> Expression . LEQ Expression
    (124) Expression -> Expression . GEQ Expression
    (125) Expression -> Expression . PLUS Expression
    (126) Expression -> Expression . MINUS Expression
    (127) Expression -> Expression . OR Expression
    (128) Expression -> Expression . CARET Expression
    (129) Expression -> Expression . TIMES Expression
    (130) Expression -> Expression . DIVIDE Expression
    (131) Expression -> Expression . MOD Expression
    (132) Expression -> Expression . AMPERS Expression
    (133) Expression -> Expression . LL Expression
    (134) Expression -> Expression . GG Expression
    (135) Expression -> Expression . AMPCAR Expression

    SEMICOL         reduce using rule 192 (Condition -> Expression .)
    OROR            shift and go to state 168
    AMPAMP          shift and go to state 183
    EQEQ            shift and go to state 174
    NOTEQ           shift and go to state 180
    LESS            shift and go to state 173
    GREAT           shift and go to state 170
    LEQ             shift and go to state 186
    GEQ             shift and go to state 177
    PLUS            shift and go to state 181
    MINUS           shift and go to state 185
    OR              shift and go to state 178
    CARET           shift and go to state 169
    TIMES           shift and go to state 184
    DIVIDE          shift and go to state 171
    MOD             shift and go to state 182
    AMPERS          shift and go to state 176
    LL              shift and go to state 175
    GG              shift and go to state 179
    AMPCAR          shift and go to state 172


state 348

    (184) ElseOpt -> ELSE IfStmt .

    SEMICOL         reduce using rule 184 (ElseOpt -> ELSE IfStmt .)


state 349

    (185) ElseOpt -> ELSE Block .

    SEMICOL         reduce using rule 185 (ElseOpt -> ELSE Block .)


state 350

    (193) ForClause -> SimpleStmt SEMICOL ConditionOpt SEMICOL . SimpleStmt
    (160) SimpleStmt -> . epsilon
    (161) SimpleStmt -> . ExpressionStmt
    (162) SimpleStmt -> . IncDecStmt
    (163) SimpleStmt -> . Assignment
    (164) SimpleStmt -> . ShortVarDecl
    (224) epsilon -> .
    (167) ExpressionStmt -> . Expression
    (168) IncDecStmt -> . PrimaryExpr PLUSPLUS
    (169) IncDecStmt -> . PrimaryExpr MINUSMIN
    (170) Assignment -> . ExpressionList assign_op ExpressionList
    (79) ShortVarDecl -> . IDENTIFIER COLONEQ Expression
    (116) Expression -> . UnaryExpr
    (117) Expression -> . Expression OROR Expression
    (118) Expression -> . Expression AMPAMP Expression
    (119) Expression -> . Expression EQEQ Expression
    (120) Expression -> . Expression NOTEQ Expression
    (121) Expression -> . Expression LESS Expression
    (122) Expression -> . Expression GREAT Expression
    (123) Expression -> . Expression LEQ Expression
    (124) Expression -> . Expression GEQ Expression
    (125) Expression -> . Expression PLUS Expression
    (126) Expression -> . Expression MINUS Expression
    (127) Expression -> . Expression OR Expression
    (128) Expression -> . Expression CARET Expression
    (129) Expression -> . Expression TIMES Expression
    (130) Expression -> . Expression DIVIDE Expression
    (131) Expression -> . Expression MOD Expression
    (132) Expression -> . Expression AMPERS Expression
    (133) Expression -> . Expression LL Expression
    (134) Expression -> . Expression GG Expression
    (135) Expression -> . Expression AMPCAR Expression
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . Conversion
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . PrimaryExpr Index
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr Arguments
    (113) ExpressionList -> . Expression ExpressionRep
    (138) UnaryExpr -> . PrimaryExpr
    (139) UnaryExpr -> . UnaryOp UnaryExpr
    (85) Operand -> . Literal
    (86) Operand -> . OperandName
    (87) Operand -> . LPAREN Expression RPAREN
    (100) Conversion -> . Type LPAREN Expression RPAREN
    (140) UnaryOp -> . PLUS
    (141) UnaryOp -> . MINUS
    (142) UnaryOp -> . TIMES
    (143) UnaryOp -> . AMPERS
    (144) UnaryOp -> . NOT
    (88) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (89) BasicLit -> . IntLiteral
    (90) BasicLit -> . FloatLiteral
    (91) BasicLit -> . ImgLiteral
    (92) BasicLit -> . RuneLiteral
    (93) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeName -> . TTYPE IDENTIFIER
    (7) TypeLit -> . ArrayType
    (8) TypeLit -> . StructType
    (9) TypeLit -> . PointerType
    (10) TypeLit -> . FunctionType
    (94) IntLiteral -> . INTEGER
    (95) FloatLiteral -> . FLOAT
    (96) ImgLiteral -> . IMAGINARY
    (97) RuneLiteral -> . RUNE
    (98) StringLiteral -> . STRING
    (13) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (14) ArrayType -> . LBRACK RBRACK ElementType
    (17) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (24) PointerType -> . Pointer BaseType
    (27) FunctionType -> . FUNC Signature
    (25) Pointer -> . POINTER

    LBRACE          reduce using rule 224 (epsilon -> .)
    IDENTIFIER      shift and go to state 326
    LPAREN          shift and go to state 120
    PLUS            shift and go to state 108
    MINUS           shift and go to state 102
    TIMES           shift and go to state 117
    AMPERS          shift and go to state 123
    NOT             shift and go to state 107
    TYPEX           shift and go to state 58
    TTYPE           shift and go to state 63
    INTEGER         shift and go to state 109
    FLOAT           shift and go to state 122
    IMAGINARY       shift and go to state 110
    RUNE            shift and go to state 96
    STRING          shift and go to state 103
    LBRACK          shift and go to state 67
    STRUCT          shift and go to state 65
    FUNC            shift and go to state 53
    POINTER         shift and go to state 59

    UnaryOp                        shift and go to state 106
    Conversion                     shift and go to state 97
    SimpleStmt                     shift and go to state 351
    StringLiteral                  shift and go to state 98
    ExpressionStmt                 shift and go to state 253
    FloatLiteral                   shift and go to state 100
    Type                           shift and go to state 101
    OperandName                    shift and go to state 104
    Assignment                     shift and go to state 256
    TypeName                       shift and go to state 57
    IncDecStmt                     shift and go to state 257
    StructType                     shift and go to state 60
    IntLiteral                     shift and go to state 112
    ImgLiteral                     shift and go to state 113
    epsilon                        shift and go to state 352
    UnaryExpr                      shift and go to state 115
    RuneLiteral                    shift and go to state 116
    PrimaryExpr                    shift and go to state 265
    ExpressionList                 shift and go to state 273
    ArrayType                      shift and go to state 54
    Expression                     shift and go to state 274
    ShortVarDecl                   shift and go to state 280
    PointerType                    shift and go to state 69
    Pointer                        shift and go to state 66
    Literal                        shift and go to state 99
    TypeLit                        shift and go to state 56
    BasicLit                       shift and go to state 105
    Operand                        shift and go to state 118
    FunctionType                   shift and go to state 70

state 351

    (193) ForClause -> SimpleStmt SEMICOL ConditionOpt SEMICOL SimpleStmt .

    LBRACE          reduce using rule 193 (ForClause -> SimpleStmt SEMICOL ConditionOpt SEMICOL SimpleStmt .)


state 352

    (160) SimpleStmt -> epsilon .

    LBRACE          reduce using rule 160 (SimpleStmt -> epsilon .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LPAREN in state 74 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 195 resolved as shift
