
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightEQUALNOTleftORORleftAMPAMPleftEQEQNOTEQLESSGREATLEQGEQleftPLUSMINUSORCARETleftTIMESDIVIDEMODLLGGAMPERSAMPCARAMPAMP AMPCAR AMPCAREQ AMPEQ AMPERS BREAK CAREQ CARET CASE CHAN COLON COLONEQ COMMA CONST CONSTANT CONTINUE DDD DEFAULT DEFER DIVIDE DIVIDEEQ DOT ELSE EQEQ EQUAL FALLTHROUGH FLOAT FOR FUNC GEQ GG GGEQ GO GOTO GREAT IDENTIFIER IF IMAGINARY IMPORT INTEGER INTERFACE LBRACE LBRACK LEQ LESS LL LLEQ LMINUS LPAREN MAP MINUS MINUSEQ MINUSMIN MOD MODEQ NOT NOTEQ OR OREQ OROR PACKAGE PD PLUS PLUSEQ PLUSPLUS PRINT PS RANGE RBRACE RBRACK RETURN RPAREN RUNE SELECT SEMICOL STRING STRUCT SWITCH TIMES TIMESEQ TTYPE TYPE TYPEX VARstart : SourceType : TypeName \n\t\t\t| TypeLit \n\t\t\t| LPAREN Type RPARENTypeName : TYPEX\n\t\t\t\t| TTYPE IDENTIFIERTypeLit : ArrayType\n\t\t\t   | StructType\n\t\t\t   | PointerType\n\t\t\t   | FunctionTypeTypeOpt : Type\n\t\t\t   | epsilonArrayType : LBRACK ArrayLength RBRACK ElementType ArrayLength : Expression  ElementType : Type StructType : STRUCT LBRACE FieldDeclRep RBRACE FieldDeclRep : FieldDeclRep FieldDecl SEMICOL\n\t\t\t\t  | epsilon FieldDecl : IdentifierList Type TagOpt TagOpt : Tag\n\t\t\t | epsilon  Tag : STRING PointerType : TIMES BaseTypeBaseType : TypeFunctionType : FUNC SignatureSignature : Parameters ResultOptResultOpt : Result\n\t\t\t\t | epsilonResult : Parameters\n\t\t\t  | TypeParameters : LPAREN ParameterListOpt RPARENParameterListOpt : ParametersList\n\t\t\t\t\t\t| epsilonParametersList : Type\n\t\t\t\t\t  | IdentifierList Type\n\t\t\t\t\t  | ParameterDeclCommaRepParameterDeclCommaRep : ParameterDeclCommaRep COMMA ParameterDecl\n\t\t\t\t\t\t\t | ParameterDecl COMMA ParameterDeclParameterDecl : IdentifierList Type\n\t\t\t\t\t | TypeBlock : CreateScope LBRACE StatementList RBRACECreateScope : epsilon StatementList : StatementRepStatementRep : StatementRep Statement SEMICOL\n\t\t\t\t\t| epsilonDeclaration : ConstDecl\n\t\t\t\t\t| TypeDecl\n\t\t\t\t\t| VarDeclTopLevelDecl : Declaration\n\t\t\t\t\t| FunctionDeclConstDecl : CONST ConstSpec\n\t\t\t\t | CONST LPAREN ConstSpecRep RPARENConstSpecRep : ConstSpecRep ConstSpec SEMICOL\n\t\t\t\t\t| epsilonConstSpec : IdentifierList TypeExprListOptTypeExprListOpt : TypeOpt EQUAL ExpressionList\n\t\t\t\t\t   | epsilonIdentifierList : IDENTIFIER IdentifierRepIdentifierRep : IdentifierRep COMMA IDENTIFIER\n\t\t\t\t\t | epsilonTypeDecl : TYPE TypeSpec\n\t\t\t\t| TYPE LPAREN TypeSpecRep RPARENTypeSpecRep : TypeSpecRep TypeSpec SEMICOL\n\t\t\t\t   | epsilonTypeSpec : AliasDecl\n\t\t\t\t| TypeDefAliasDecl : IDENTIFIER EQUAL TypeTypeDef : TTYPE IDENTIFIER TypeVarDecl : VAR VarSpec\n\t\t\t   | VAR LPAREN VarSpecRep RPARENVarSpecRep : VarSpecRep VarSpec SEMICOL\n\t\t\t\t  | epsilonVarSpec : IdentifierList Type ExpressionListOpt\n\t\t\t   | IdentifierList EQUAL ExpressionListExpressionListOpt : EQUAL ExpressionList\n\t\t\t\t\t\t | epsilon ShortVarDecl : IDENTIFIER COLONEQ Expression FunctionDecl : FUNC FunctionName Function\n\t\t\t\t\t| FUNC FunctionName SignatureFunctionName : IDENTIFIERFunction : Signature FunctionBodyFunctionBody : BlockOperand : Literal\n\t\t\t   | OperandName\n\t\t\t   | LPAREN Expression RPARENLiteral : BasicLitBasicLit : IntLiteral\n\t\t\t\t| FloatLiteral\n\t\t\t\t| ImgLiteral\n\t\t\t\t| RuneLiteral\n\t\t\t\t| StringLiteralIntLiteral : INTEGERFloatLiteral : FLOATImgLiteral : IMAGINARYRuneLiteral : RUNEStringLiteral : STRINGOperandName : IDENTIFIERConversion : Type LPAREN Expression RPARENPrimaryExpr : Operand\n\t\t\t\t   | Conversion\n\t\t\t\t   | PrimaryExpr Selector\n\t\t\t\t   | PrimaryExpr Index\n\t\t\t\t   | PrimaryExpr Slice\n\t\t\t\t   | PrimaryExpr ArgumentsSelector : DOT IDENTIFIERIndex : LBRACK Expression RBRACKSlice : LBRACK ExpressionOpt COLON ExpressionOpt RBRACKArguments : LPAREN ExpressionListTypeOpt RPARENExpressionListTypeOpt : ExpressionList\n\t\t\t\t\t\t\t | epsilonExpressionList : Expression ExpressionRepExpressionRep : ExpressionRep COMMA Expression\n\t\t\t\t\t | epsilonExpression : UnaryExpr\n\t\t\t\t  | Expression OROR Expression\n\t\t\t\t\t| Expression AMPAMP Expression\n\t\t\t\t\t| Expression EQEQ Expression\n\t\t\t\t\t| Expression NOTEQ Expression\n\t\t\t\t\t| Expression LESS Expression\n\t\t\t\t\t| Expression GREAT Expression\n\t\t\t\t\t| Expression LEQ Expression\n\t\t\t\t\t| Expression GEQ Expression\n\t\t\t\t\t| Expression PLUS Expression\n\t\t\t\t\t| Expression MINUS Expression\n\t\t\t\t\t| Expression OR Expression\n\t\t\t\t\t| Expression CARET Expression\n\t\t\t\t\t| Expression TIMES Expression\n\t\t\t\t\t| Expression DIVIDE Expression\n\t\t\t\t\t| Expression MOD Expression\n\t\t\t\t\t| Expression AMPERS Expression\n\t\t\t\t\t| Expression LL Expression\n\t\t\t\t\t| Expression GG Expression\n\t\t\t\t\t| Expression AMPCAR ExpressionExpressionOpt : Expression\n\t\t\t\t\t | epsilonUnaryExpr : PrimaryExpr\n\t\t\t\t | UnaryOp UnaryExprUnaryOp : PLUS\n\t\t\t   | MINUS\n\t\t\t   | TIMES\n\t\t\t   | AMPERS\n\t\t\t   | NOT Statement : Declaration\n\t\t\t\t | LabeledStmt\n\t\t\t\t | SimpleStmt\n\t\t\t\t | ReturnStmt\n\t\t\t\t | BreakStmt\n\t\t\t\t | ContinueStmt\n\t\t\t\t | GotoStmt\n\t\t\t\t | Block\n\t\t\t\t | IfStmt\n\t\t\t\t | PrintStmt\n\t\t\t\t | ForStmt PrintStmt : PRINT PD Expression\n\t\t\t\t | PRINT PS ExpressionSimpleStmt : epsilon\n\t\t\t\t  | ExpressionStmt\n\t\t\t\t  | IncDecStmt\n\t\t\t\t  | Assignment\n\t\t\t\t  | ShortVarDecl  LabeledStmt : Label COLON Statement  Label : IDENTIFIER  ExpressionStmt : Expression  IncDecStmt : PrimaryExpr PLUSPLUS\n\t\t\t\t\t| PrimaryExpr MINUSMIN Assignment : ExpressionList assign_op ExpressionList assign_op : AssignOpAssignOp : PLUSEQ\n\t\t\t\t| MINUSEQ\n\t\t\t\t| TIMESEQ\n\t\t\t\t| DIVIDEEQ\n\t\t\t\t| MODEQ\n\t\t\t\t| AMPEQ\n\t\t\t\t| OREQ\n\t\t\t\t| CAREQ\n\t\t\t\t| LLEQ\n\t\t\t\t| GGEQ\n\t\t\t\t| EQUAL  IfStmt : IF Expression Block ElseOpt  ElseOpt : ELSE IfStmt\n\t\t\t\t| ELSE Block\n\t\t\t\t| epsilon ForStmt : CreateForScope FOR ConditionBlockOpt Block CreateForScope : epsilon ConditionBlockOpt : epsilon\n\t\t\t\t| Condition\n\t\t\t\t| ForClauseCondition : Expression ForClause : SimpleStmt SEMICOL ConditionOpt SEMICOL SimpleStmtConditionOpt : epsilon\n\t\t\t| Condition RangeClause : ExpressionIdentListOpt RANGE ExpressionExpressionIdentListOpt : epsilon\n\t\t\t\t| ExpressionIdentifierExpressionIdentifier : ExpressionList EQUALReturnStmt : RETURN ExpressionListPureOptExpressionListPureOpt : ExpressionList\n\t\t\t\t| epsilonBreakStmt : BREAK LabelOptContinueStmt : CONTINUE LabelOptLabelOpt : Label\n\t\t\t| epsilon GotoStmt : GOTO Label Source : PackageClause SEMICOL ImportDeclRep TopLevelDeclRepImportDeclRep : epsilon\n\t\t\t| ImportDeclRep ImportDecl SEMICOLTopLevelDeclRep : TopLevelDeclRep TopLevelDecl SEMICOL\n\t\t\t\t\t\t| epsilonPackageClause : PACKAGE PackageNamePackageName : IDENTIFIERImportDecl : IMPORT ImportSpec\n\t\t\t| IMPORT LPAREN ImportSpecRep RPAREN  ImportSpecRep : ImportSpecRep ImportSpec SEMICOL\n\t\t\t\t| epsilon  ImportSpec : PackageNameDotOpt ImportPath  PackageNameDotOpt : DOT\n\t\t\t\t\t\t\t| PackageName\n\t\t\t\t\t\t\t| epsilon ImportPath : STRING epsilon : '
    
_lr_action_items = {'OROR':([95,96,97,98,99,102,103,104,108,109,110,111,112,113,114,116,119,120,122,144,159,163,183,184,186,187,205,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,231,235,246,248,249,262,266,270,281,287,318,319,320,321,325,329,330,331,342,],[-95,-100,-91,-83,-88,-96,-84,-86,-92,-94,-97,-87,-89,-114,-90,-99,164,-93,-136,164,-137,164,-102,-103,-101,-104,164,-85,-115,-126,-120,-128,-133,-119,-117,-131,-130,-122,-125,-132,-118,-123,-129,-116,-127,-124,-121,164,-105,-98,-106,-108,-136,-97,164,164,164,164,-107,-136,-97,164,164,164,164,164,]),'CARET':([95,96,97,98,99,102,103,104,108,109,110,111,112,113,114,116,119,120,122,144,159,163,183,184,186,187,205,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,231,235,246,248,249,262,266,270,281,287,318,319,320,321,325,329,330,331,342,],[-95,-100,-91,-83,-88,-96,-84,-86,-92,-94,-97,-87,-89,-114,-90,-99,165,-93,-136,165,-137,165,-102,-103,-101,-104,165,-85,165,-126,165,-128,-133,165,165,-131,-130,165,-125,-132,165,-123,-129,165,-127,-124,165,165,-105,-98,-106,-108,-136,-97,165,165,165,165,-107,-136,-97,165,165,165,165,165,]),'GREAT':([95,96,97,98,99,102,103,104,108,109,110,111,112,113,114,116,119,120,122,144,159,163,183,184,186,187,205,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,231,235,246,248,249,262,266,270,281,287,318,319,320,321,325,329,330,331,342,],[-95,-100,-91,-83,-88,-96,-84,-86,-92,-94,-97,-87,-89,-114,-90,-99,166,-93,-136,166,-137,166,-102,-103,-101,-104,166,-85,166,-126,-120,-128,-133,-119,-117,-131,-130,-122,-125,-132,-118,-123,-129,166,-127,-124,-121,166,-105,-98,-106,-108,-136,-97,166,166,166,166,-107,-136,-97,166,166,166,166,166,]),'SEMICOL':([1,6,7,12,15,16,17,18,19,22,26,31,33,34,38,41,43,45,49,50,54,56,57,58,59,60,67,68,69,70,71,72,73,74,79,84,85,86,87,88,89,90,92,95,96,97,98,99,102,103,104,108,109,110,111,112,113,114,116,120,122,124,125,126,127,129,130,133,141,142,143,144,146,147,148,149,150,151,154,155,159,183,184,186,187,190,192,193,198,199,200,202,204,206,207,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,235,236,237,245,246,248,249,250,251,252,253,254,255,257,260,261,262,263,264,265,266,267,268,270,271,272,273,274,276,278,279,281,282,283,284,285,288,289,290,291,292,293,296,297,298,299,300,301,316,317,319,320,321,323,325,326,328,329,330,331,332,333,334,335,336,338,339,340,341,342,343,344,],[5,-209,-210,24,-50,35,-49,-46,-47,-48,-211,-51,-220,-220,-69,-66,-65,-61,-215,-219,-7,-3,-2,-5,-8,-57,-55,-9,-10,-60,-58,-78,-220,-79,-220,-212,152,153,-52,-25,-24,-23,-6,-95,-100,-91,-83,-88,-96,-84,-86,-92,-94,-97,-87,-89,-114,-90,-99,-93,-136,-29,-30,-26,-28,-27,-81,-82,-70,197,-74,-220,-76,-73,-68,-62,201,-67,-4,-56,-137,-102,-103,-101,-104,-59,-220,-31,-111,-113,-75,244,-16,-15,-13,-85,-115,-126,-120,-128,-133,-119,-117,-131,-130,-122,-125,-132,-118,-123,-129,-116,-127,-124,-121,-105,-220,-45,-220,-98,-106,-108,-148,-157,288,-159,-144,-152,-220,-158,-149,-136,-150,-220,-143,-97,-156,-151,-163,-220,-146,-145,-153,-160,-147,-41,-112,-22,-21,-20,-19,-44,-220,-196,-198,-197,-220,-164,-165,-202,-162,-200,-201,-199,-203,-107,-136,-97,-156,-163,335,-161,-155,-154,-77,-166,-220,-183,-220,-182,-179,-191,-190,345,-188,-180,-181,]),'CONST':([5,8,9,10,11,24,35,192,236,237,288,293,],[-220,-205,-220,14,-208,-206,-207,-220,14,-45,-44,14,]),'FUNC':([5,8,9,10,11,24,33,34,35,40,61,62,66,70,71,73,75,78,80,83,93,101,105,106,107,115,118,121,128,135,145,158,160,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,185,188,190,192,193,195,196,203,208,236,237,239,243,247,257,277,288,289,293,294,295,302,303,304,305,306,307,308,309,310,311,312,313,314,315,335,345,],[-220,-205,-220,20,-208,-206,53,-220,-207,53,53,53,53,-60,-58,53,53,53,53,53,53,-139,53,-142,-138,-140,53,-141,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-59,-220,-31,53,53,53,-140,53,-45,53,53,53,53,53,-44,53,53,53,53,53,-167,-178,-175,-170,-168,-172,-177,-176,-174,-169,-173,53,-171,53,53,]),'AMPCAR':([95,96,97,98,99,102,103,104,108,109,110,111,112,113,114,116,119,120,122,144,159,163,183,184,186,187,205,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,231,235,246,248,249,262,266,270,281,287,318,319,320,321,325,329,330,331,342,],[-95,-100,-91,-83,-88,-96,-84,-86,-92,-94,-97,-87,-89,-114,-90,-99,168,-93,-136,168,-137,168,-102,-103,-101,-104,168,-85,168,168,168,-128,-133,168,168,-131,-130,168,168,-132,168,168,-129,168,-127,168,168,168,-105,-98,-106,-108,-136,-97,168,168,168,168,-107,-136,-97,168,168,168,168,168,]),'LESS':([95,96,97,98,99,102,103,104,108,109,110,111,112,113,114,116,119,120,122,144,159,163,183,184,186,187,205,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,231,235,246,248,249,262,266,270,281,287,318,319,320,321,325,329,330,331,342,],[-95,-100,-91,-83,-88,-96,-84,-86,-92,-94,-97,-87,-89,-114,-90,-99,169,-93,-136,169,-137,169,-102,-103,-101,-104,169,-85,169,-126,-120,-128,-133,-119,-117,-131,-130,-122,-125,-132,-118,-123,-129,169,-127,-124,-121,169,-105,-98,-106,-108,-136,-97,169,169,169,169,-107,-136,-97,169,169,169,169,169,]),'EQEQ':([95,96,97,98,99,102,103,104,108,109,110,111,112,113,114,116,119,120,122,144,159,163,183,184,186,187,205,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,231,235,246,248,249,262,266,270,281,287,318,319,320,321,325,329,330,331,342,],[-95,-100,-91,-83,-88,-96,-84,-86,-92,-94,-97,-87,-89,-114,-90,-99,170,-93,-136,170,-137,170,-102,-103,-101,-104,170,-85,170,-126,-120,-128,-133,-119,-117,-131,-130,-122,-125,-132,-118,-123,-129,170,-127,-124,-121,170,-105,-98,-106,-108,-136,-97,170,170,170,170,-107,-136,-97,170,170,170,170,170,]),'GGEQ':([95,96,97,98,99,102,103,104,108,109,110,111,112,113,114,116,120,122,159,183,184,186,187,198,199,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,235,246,248,249,262,266,269,270,281,319,320,321,325,],[-95,-100,-91,-83,-88,-96,-84,-86,-92,-94,-97,-87,-89,-114,-90,-99,-93,-136,-137,-102,-103,-101,-104,-111,-113,-85,-115,-126,-120,-128,-133,-119,-117,-131,-130,-122,-125,-132,-118,-123,-129,-116,-127,-124,-121,-105,-98,-106,-108,-136,-97,309,-220,-112,-107,-136,-97,-220,]),'EQUAL':([33,34,40,46,54,55,56,57,58,59,60,64,68,69,70,71,73,79,88,89,90,92,95,96,97,98,99,102,103,104,108,109,110,111,112,113,114,116,120,122,124,125,126,127,129,154,159,183,184,186,187,190,193,198,199,204,206,207,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,235,246,248,249,262,266,269,270,281,319,320,321,325,],[-220,-220,78,83,-7,-11,-3,-2,-5,-8,-12,93,-9,-10,-60,-58,-220,145,-25,-24,-23,-6,-95,-100,-91,-83,-88,-96,-84,-86,-92,-94,-97,-87,-89,-114,-90,-99,-93,-136,-29,-30,-26,-28,-27,-4,-137,-102,-103,-101,-104,-59,-31,-111,-113,-16,-15,-13,-85,-115,-126,-120,-128,-133,-119,-117,-131,-130,-122,-125,-132,-118,-123,-129,-116,-127,-124,-121,-105,-98,-106,-108,-136,-97,304,-220,-112,-107,-136,-97,-220,]),'GOTO':([192,236,237,288,293,],[-220,275,-45,-44,275,]),'CAREQ':([95,96,97,98,99,102,103,104,108,109,110,111,112,113,114,116,120,122,159,183,184,186,187,198,199,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,235,246,248,249,262,266,269,270,281,319,320,321,325,],[-95,-100,-91,-83,-88,-96,-84,-86,-92,-94,-97,-87,-89,-114,-90,-99,-93,-136,-137,-102,-103,-101,-104,-111,-113,-85,-115,-126,-120,-128,-133,-119,-117,-131,-130,-122,-125,-132,-118,-123,-129,-116,-127,-124,-121,-105,-98,-106,-108,-136,-97,305,-220,-112,-107,-136,-97,-220,]),'COLON':([95,96,97,98,99,102,103,104,108,109,110,111,112,113,114,116,120,122,159,183,184,185,186,187,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,235,246,248,249,258,266,319,],[-95,-100,-91,-83,-88,-96,-84,-86,-92,-94,-97,-87,-89,-114,-90,-99,-93,-136,-137,-102,-103,-220,-101,-104,-85,-115,-126,-120,-128,-133,-119,-117,-131,-130,-122,-125,-132,-118,-123,-129,-116,-127,-124,-121,247,-135,-134,-105,-98,-106,-108,293,-162,-107,]),'COLONEQ':([266,321,],[302,302,]),'AMPAMP':([95,96,97,98,99,102,103,104,108,109,110,111,112,113,114,116,119,120,122,144,159,163,183,184,186,187,205,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,231,235,246,248,249,262,266,270,281,287,318,319,320,321,325,329,330,331,342,],[-95,-100,-91,-83,-88,-96,-84,-86,-92,-94,-97,-87,-89,-114,-90,-99,179,-93,-136,179,-137,179,-102,-103,-101,-104,179,-85,179,-126,-120,-128,-133,-119,-117,-131,-130,-122,-125,-132,-118,-123,-129,-116,-127,-124,-121,179,-105,-98,-106,-108,-136,-97,179,179,179,179,-107,-136,-97,179,179,179,179,179,]),'PRINT':([192,236,237,288,293,],[-220,259,-45,-44,259,]),'RETURN':([192,236,237,288,293,],[-220,257,-45,-44,257,]),'RUNE':([66,78,93,101,105,106,107,115,118,121,145,158,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,185,188,192,208,236,237,243,247,257,277,288,289,293,294,295,302,303,304,305,306,307,308,309,310,311,312,313,314,315,335,345,],[95,95,95,-139,95,-142,-138,-140,95,-141,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,-220,-140,95,-45,95,95,95,95,-44,95,95,95,95,95,-167,-178,-175,-170,-168,-172,-177,-176,-174,-169,-173,95,-171,95,95,]),'MINUS':([66,78,93,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,120,121,122,144,145,158,159,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,192,205,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,231,235,236,237,243,246,247,248,249,257,262,266,270,277,281,287,288,289,293,294,295,302,303,304,305,306,307,308,309,310,311,312,313,314,315,318,319,320,321,325,329,330,331,335,342,345,],[101,101,101,-95,-100,-91,-83,-88,-139,-96,-84,-86,101,-142,-138,-92,-94,-97,-87,-89,-114,-90,-140,-99,101,181,-93,-141,-136,181,101,101,-137,101,181,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,-102,-103,101,-101,-104,101,-220,181,-140,-85,181,-126,181,-128,-133,181,181,-131,-130,181,-125,-132,181,-123,-129,181,-127,-124,181,181,-105,101,-45,101,-98,101,-106,-108,101,-136,-97,181,101,181,181,-44,101,101,101,101,101,-167,-178,-175,-170,-168,-172,-177,-176,-174,-169,-173,101,-171,181,-107,-136,-97,181,181,181,181,101,181,101,]),'DOT':([13,25,47,48,95,96,97,98,99,102,103,104,108,109,110,111,112,114,116,120,122,152,183,184,186,187,209,235,246,248,249,262,266,319,320,321,],[30,-220,-214,30,-95,-100,-91,-83,-88,-96,-84,-86,-92,-94,-97,-87,-89,-90,-99,-93,189,-213,-102,-103,-101,-104,-85,-105,-98,-106,-108,189,-97,-107,189,-97,]),'RBRACE':([94,156,157,192,236,237,238,244,288,],[-220,204,-18,-220,-43,-45,279,-17,-44,]),'PS':([259,],[294,]),'GEQ':([95,96,97,98,99,102,103,104,108,109,110,111,112,113,114,116,119,120,122,144,159,163,183,184,186,187,205,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,231,235,246,248,249,262,266,270,281,287,318,319,320,321,325,329,330,331,342,],[-95,-100,-91,-83,-88,-96,-84,-86,-92,-94,-97,-87,-89,-114,-90,-99,173,-93,-136,173,-137,173,-102,-103,-101,-104,173,-85,173,-126,-120,-128,-133,-119,-117,-131,-130,-122,-125,-132,-118,-123,-129,173,-127,-124,-121,173,-105,-98,-106,-108,-136,-97,173,173,173,173,-107,-136,-97,173,173,173,173,173,]),'RPAREN':([25,32,39,44,47,48,51,52,54,56,57,58,59,68,69,73,75,76,77,81,82,88,89,90,91,92,95,96,97,98,99,102,103,104,108,109,110,111,112,113,114,116,120,122,124,125,126,127,128,129,134,136,137,138,140,144,152,153,154,159,161,163,183,184,186,187,188,191,193,194,197,198,199,201,204,205,206,207,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,232,233,234,235,240,241,242,246,248,249,280,281,319,],[-220,-220,-220,-220,-214,84,87,-54,-7,-3,-2,-5,-8,-9,-10,-220,-220,141,-72,149,-64,-25,-24,-23,154,-6,-95,-100,-91,-83,-88,-96,-84,-86,-92,-94,-97,-87,-89,-114,-90,-99,-93,-136,-29,-30,-26,-28,-220,-27,193,-36,-34,-32,-33,-220,-213,-53,-4,-137,154,209,-102,-103,-101,-104,-220,154,-31,-35,-71,-111,-113,-63,-16,246,-15,-13,-85,-115,-126,-120,-128,-133,-119,-117,-131,-130,-122,-125,-132,-118,-123,-129,-116,-127,-124,-121,-110,-109,249,-105,-40,-37,-38,-98,-106,-108,-39,-112,-107,]),'TIMESEQ':([95,96,97,98,99,102,103,104,108,109,110,111,112,113,114,116,120,122,159,183,184,186,187,198,199,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,235,246,248,249,262,266,269,270,281,319,320,321,325,],[-95,-100,-91,-83,-88,-96,-84,-86,-92,-94,-97,-87,-89,-114,-90,-99,-93,-136,-137,-102,-103,-101,-104,-111,-113,-85,-115,-126,-120,-128,-133,-119,-117,-131,-130,-122,-125,-132,-118,-123,-129,-116,-127,-124,-121,-105,-98,-106,-108,-136,-97,306,-220,-112,-107,-136,-97,-220,]),'LL':([95,96,97,98,99,102,103,104,108,109,110,111,112,113,114,116,119,120,122,144,159,163,183,184,186,187,205,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,231,235,246,248,249,262,266,270,281,287,318,319,320,321,325,329,330,331,342,],[-95,-100,-91,-83,-88,-96,-84,-86,-92,-94,-97,-87,-89,-114,-90,-99,171,-93,-136,171,-137,171,-102,-103,-101,-104,171,-85,171,171,171,-128,-133,171,171,-131,-130,171,171,-132,171,171,-129,171,-127,171,171,171,-105,-98,-106,-108,-136,-97,171,171,171,171,-107,-136,-97,171,171,171,171,171,]),'MODEQ':([95,96,97,98,99,102,103,104,108,109,110,111,112,113,114,116,120,122,159,183,184,186,187,198,199,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,235,246,248,249,262,266,269,270,281,319,320,321,325,],[-95,-100,-91,-83,-88,-96,-84,-86,-92,-94,-97,-87,-89,-114,-90,-99,-93,-136,-137,-102,-103,-101,-104,-111,-113,-85,-115,-126,-120,-128,-133,-119,-117,-131,-130,-122,-125,-132,-118,-123,-129,-116,-127,-124,-121,-105,-98,-106,-108,-136,-97,308,-220,-112,-107,-136,-97,-220,]),'PLUS':([66,78,93,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,120,121,122,144,145,158,159,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,192,205,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,231,235,236,237,243,246,247,248,249,257,262,266,270,277,281,287,288,289,293,294,295,302,303,304,305,306,307,308,309,310,311,312,313,314,315,318,319,320,321,325,329,330,331,335,342,345,],[107,107,107,-95,-100,-91,-83,-88,-139,-96,-84,-86,107,-142,-138,-92,-94,-97,-87,-89,-114,-90,-140,-99,107,177,-93,-141,-136,177,107,107,-137,107,177,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,-102,-103,107,-101,-104,107,-220,177,-140,-85,177,-126,177,-128,-133,177,177,-131,-130,177,-125,-132,177,-123,-129,177,-127,-124,177,177,-105,107,-45,107,-98,107,-106,-108,107,-136,-97,177,107,177,177,-44,107,107,107,107,107,-167,-178,-175,-170,-168,-172,-177,-176,-174,-169,-173,107,-171,177,-107,-136,-97,177,177,177,177,107,177,107,]),'MINUSEQ':([95,96,97,98,99,102,103,104,108,109,110,111,112,113,114,116,120,122,159,183,184,186,187,198,199,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,235,246,248,249,262,266,269,270,281,319,320,321,325,],[-95,-100,-91,-83,-88,-96,-84,-86,-92,-94,-97,-87,-89,-114,-90,-99,-93,-136,-137,-102,-103,-101,-104,-111,-113,-85,-115,-126,-120,-128,-133,-119,-117,-131,-130,-122,-125,-132,-118,-123,-129,-116,-127,-124,-121,-105,-98,-106,-108,-136,-97,312,-220,-112,-107,-136,-97,-220,]),'COMMA':([34,54,56,57,58,59,68,69,70,71,73,88,89,90,92,95,96,97,98,99,102,103,104,108,109,110,111,112,113,114,116,120,122,124,125,126,127,129,136,137,139,144,154,159,183,184,186,187,190,191,193,194,198,199,204,206,207,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,235,240,241,242,246,248,249,262,266,270,280,281,319,320,321,325,],[-220,-7,-3,-2,-5,-8,-9,-10,-60,123,-220,-25,-24,-23,-6,-95,-100,-91,-83,-88,-96,-84,-86,-92,-94,-97,-87,-89,-114,-90,-99,-93,-136,-29,-30,-26,-28,-27,195,-40,196,-220,-4,-137,-102,-103,-101,-104,-59,-40,-31,-39,243,-113,-16,-15,-13,-85,-115,-126,-120,-128,-133,-119,-117,-131,-130,-122,-125,-132,-118,-123,-129,-116,-127,-124,-121,-105,-40,-37,-38,-98,-106,-108,-136,-97,-220,-39,-112,-107,-136,-97,-220,]),'TYPEX':([33,34,40,61,62,66,70,71,73,75,78,80,83,93,101,105,106,107,115,118,121,128,135,145,158,160,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,185,188,190,192,193,195,196,203,208,236,237,239,243,247,257,277,288,289,293,294,295,302,303,304,305,306,307,308,309,310,311,312,313,314,315,335,345,],[58,-220,58,58,58,58,-60,-58,58,58,58,58,58,58,-139,58,-142,-138,-140,58,-141,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-59,-220,-31,58,58,58,-140,58,-45,58,58,58,58,58,-44,58,58,58,58,58,-167,-178,-175,-170,-168,-172,-177,-176,-174,-169,-173,58,-171,58,58,]),'PD':([259,],[295,]),'IMPORT':([5,8,9,24,],[-220,-205,13,-206,]),'IMAGINARY':([66,78,93,101,105,106,107,115,118,121,145,158,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,185,188,192,208,236,237,243,247,257,277,288,289,293,294,295,302,303,304,305,306,307,308,309,310,311,312,313,314,315,335,345,],[109,109,109,-139,109,-142,-138,-140,109,-141,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,-220,-140,109,-45,109,109,109,109,-44,109,109,109,109,109,-167,-178,-175,-170,-168,-172,-177,-176,-174,-169,-173,109,-171,109,109,]),'IDENTIFIER':([2,13,14,20,21,23,25,32,39,42,44,47,48,51,52,63,66,75,76,77,78,81,82,93,94,101,105,106,107,115,118,121,123,128,145,152,153,156,157,158,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,185,188,189,192,195,196,197,201,208,236,237,243,244,247,257,264,271,275,277,288,289,293,294,295,302,303,304,305,306,307,308,309,310,311,312,313,314,315,335,345,],[7,7,34,36,34,46,-220,-220,-220,80,-220,-214,7,34,-54,92,110,34,34,-72,110,46,-64,110,-220,-139,110,-142,-138,-140,110,-141,190,34,110,-213,-53,34,-18,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,235,-220,34,34,-71,-63,-140,266,-45,110,-17,110,110,299,299,299,110,-44,321,266,110,110,110,-167,-178,-175,-170,-168,-172,-177,-176,-174,-169,-173,110,-171,110,321,]),'DIVIDEEQ':([95,96,97,98,99,102,103,104,108,109,110,111,112,113,114,116,120,122,159,183,184,186,187,198,199,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,235,246,248,249,262,266,269,270,281,319,320,321,325,],[-95,-100,-91,-83,-88,-96,-84,-86,-92,-94,-97,-87,-89,-114,-90,-99,-93,-136,-137,-102,-103,-101,-104,-111,-113,-85,-115,-126,-120,-128,-133,-119,-117,-131,-130,-122,-125,-132,-118,-123,-129,-116,-127,-124,-121,-105,-98,-106,-108,-136,-97,315,-220,-112,-107,-136,-97,-220,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'FunctionBody':([74,],[130,]),'Conversion':([66,78,93,105,118,145,158,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,185,188,236,243,247,257,277,289,293,294,295,302,314,335,345,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'ContinueStmt':([236,293,],[250,250,]),'ParameterListOpt':([75,128,],[134,134,]),'ExpressionRep':([144,270,325,],[198,198,198,]),'ExpressionStmt':([236,289,293,345,],[251,251,251,251,]),'Statement':([236,293,],[252,328,]),'ParameterDeclCommaRep':([75,128,],[136,136,]),'Selector':([122,262,320,],[186,186,186,]),'IfStmt':([236,293,337,],[268,268,343,]),'StatementRep':([192,],[236,]),'AliasDecl':([23,81,],[43,43,]),'PackageNameDotOpt':([13,48,],[29,29,]),'TypeName':([33,40,61,62,66,73,75,78,80,83,93,105,115,118,128,135,145,158,160,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,185,188,195,196,203,208,236,239,243,247,257,277,289,293,294,295,302,314,335,345,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'ParametersList':([75,128,],[138,138,]),'ParameterDecl':([75,128,195,196,],[139,139,241,242,]),'FunctionName':([20,],[37,]),'LabeledStmt':([236,293,],[254,254,]),'StatementList':([192,],[238,]),'ConditionOpt':([335,],[341,]),'ElementType':([160,],[207,]),'PointerType':([33,40,61,62,66,73,75,78,80,83,93,105,115,118,128,135,145,158,160,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,185,188,195,196,203,208,236,239,243,247,257,277,289,293,294,295,302,314,335,345,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'VarSpecRep':([39,],[76,]),'VarDecl':([10,236,293,],[22,22,22,]),'PrintStmt':([236,293,],[255,255,]),'Tag':([245,],[284,]),'CreateForScope':([236,293,],[256,256,]),'ConstSpecRep':([32,],[51,]),'PrimaryExpr':([66,78,93,105,118,145,158,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,185,188,236,243,247,257,277,289,293,294,295,302,314,335,345,],[122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,262,122,122,122,122,320,262,122,122,122,122,122,262,]),'TypeSpec':([23,81,],[45,150,]),'Index':([122,262,320,],[183,183,183,]),'Parameters':([37,53,73,],[73,73,124,]),'UnaryOp':([66,78,93,105,118,145,158,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,185,188,236,243,247,257,277,289,293,294,295,302,314,335,345,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'PackageName':([2,13,48,],[6,28,28,]),'ExpressionListPureOpt':([257,],[290,]),'Label':([236,264,271,275,293,],[258,301,301,317,258,]),'FunctionDecl':([10,],[15,]),'TopLevelDecl':([10,],[16,]),'IdentifierList':([14,21,51,75,76,128,156,195,196,],[33,40,33,135,40,135,203,239,239,]),'TypeLit':([33,40,61,62,66,73,75,78,80,83,93,105,115,118,128,135,145,158,160,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,185,188,195,196,203,208,236,239,243,247,257,277,289,293,294,295,302,314,335,345,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'ImportDeclRep':([5,],[9,]),'PackageClause':([0,],[1,]),'ResultOpt':([73,],[126,]),'FloatLiteral':([66,78,93,105,118,145,158,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,185,188,236,243,247,257,277,289,293,294,295,302,314,335,345,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'IncDecStmt':([236,289,293,345,],[260,260,260,260,]),'GotoStmt':([236,293,],[261,261,]),'TopLevelDeclRep':([9,],[10,]),'Operand':([66,78,93,105,118,145,158,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,185,188,236,243,247,257,277,289,293,294,295,302,314,335,345,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'assign_op':([269,],[314,]),'Signature':([37,53,],[74,88,]),'Block':([74,236,293,318,324,337,],[133,263,263,333,334,344,]),'ConstDecl':([10,236,293,],[18,18,18,]),'VarSpec':([21,76,],[38,142,]),'Result':([73,],[129,]),'Assignment':([236,289,293,345,],[253,253,253,253,]),'ExpressionListTypeOpt':([188,],[234,]),'Literal':([66,78,93,105,118,145,158,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,185,188,236,243,247,257,277,289,293,294,295,302,314,335,345,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'ImportDecl':([9,],[12,]),'OperandName':([66,78,93,105,118,145,158,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,185,188,236,243,247,257,277,289,293,294,295,302,314,335,345,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'AssignOp':([269,],[303,]),'FieldDeclRep':([94,],[156,]),'start':([0,],[4,]),'Declaration':([10,236,293,],[17,265,265,]),'Condition':([289,335,],[322,339,]),'StructType':([33,40,61,62,66,73,75,78,80,83,93,105,115,118,128,135,145,158,160,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,185,188,195,196,203,208,236,239,243,247,257,277,289,293,294,295,302,314,335,345,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'IntLiteral':([66,78,93,105,118,145,158,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,185,188,236,243,247,257,277,289,293,294,295,302,314,335,345,],[111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'ConstSpec':([14,51,],[31,86,]),'epsilon':([5,9,13,25,32,33,34,39,44,48,73,74,75,79,94,128,144,185,188,192,236,245,247,257,264,270,271,289,293,318,324,325,333,335,337,345,],[8,11,27,47,52,60,70,77,82,27,127,131,140,146,157,140,199,230,232,237,267,283,230,291,298,199,298,323,267,131,131,199,336,340,131,347,]),'ConditionBlockOpt':([289,],[324,]),'ExpressionList':([78,93,145,188,236,257,289,293,314,345,],[143,155,200,233,269,292,269,269,332,269,]),'SimpleStmt':([236,289,293,345,],[273,326,273,346,]),'ImportSpecRep':([25,],[48,]),'Expression':([66,78,93,118,145,158,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,185,188,236,243,247,257,277,289,293,294,295,302,314,335,345,],[119,144,144,163,144,205,163,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,231,144,270,281,287,144,318,325,270,329,330,331,144,342,270,]),'ImportPath':([29,],[49,]),'Source':([0,],[3,]),'ExpressionOpt':([185,247,],[229,286,]),'StringLiteral':([66,78,93,105,118,145,158,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,185,188,236,243,247,257,277,289,293,294,295,302,314,335,345,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'IdentifierRep':([34,],[71,]),'TypeExprListOpt':([33,],[67,]),'ReturnStmt':([236,293,],[272,272,]),'FunctionType':([33,40,61,62,66,73,75,78,80,83,93,105,115,118,128,135,145,158,160,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,185,188,195,196,203,208,236,239,243,247,257,277,289,293,294,295,302,314,335,345,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'Slice':([122,262,320,],[184,184,184,]),'ArrayType':([33,40,61,62,66,73,75,78,80,83,93,105,115,118,128,135,145,158,160,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,185,188,195,196,203,208,236,239,243,247,257,277,289,293,294,295,302,314,335,345,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'ForStmt':([236,293,],[274,274,]),'Arguments':([122,262,320,],[187,187,187,]),'Function':([37,],[72,]),'ImportSpec':([13,48,],[26,85,]),'Type':([33,40,61,62,66,73,75,78,80,83,93,105,115,118,128,135,145,158,160,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,185,188,195,196,203,208,236,239,243,247,257,277,289,293,294,295,302,314,335,345,],[55,79,89,91,100,125,137,100,148,151,100,100,89,161,191,194,100,100,206,161,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,240,240,245,89,100,280,100,100,100,100,100,100,100,100,100,100,100,100,]),'TypeSpecRep':([44,],[81,]),'CreateScope':([74,236,293,318,324,337,],[132,132,132,132,132,132,]),'LabelOpt':([264,271,],[300,316,]),'TypeDecl':([10,236,293,],[19,19,19,]),'BaseType':([61,115,208,],[90,90,90,]),'UnaryExpr':([66,78,93,105,118,145,158,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,185,188,236,243,247,257,277,289,293,294,295,302,314,335,345,],[113,113,113,159,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'RuneLiteral':([66,78,93,105,118,145,158,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,185,188,236,243,247,257,277,289,293,294,295,302,314,335,345,],[114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'ArrayLength':([66,],[117,]),'ForClause':([289,],[327,]),'TypeOpt':([33,],[64,]),'ShortVarDecl':([236,289,293,345,],[276,276,276,276,]),'TypeDef':([23,81,],[41,41,]),'FieldDecl':([156,],[202,]),'BreakStmt':([236,293,],[278,278,]),'TagOpt':([245,],[285,]),'BasicLit':([66,78,93,105,118,145,158,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,185,188,236,243,247,257,277,289,293,294,295,302,314,335,345,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'ImgLiteral':([66,78,93,105,118,145,158,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,185,188,236,243,247,257,277,289,293,294,295,302,314,335,345,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'ExpressionListOpt':([79,],[147,]),'ElseOpt':([333,],[338,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> Source','start',1,'p_start','parser.py',145),
  ('Type -> TypeName','Type',1,'p_type','parser.py',154),
  ('Type -> TypeLit','Type',1,'p_type','parser.py',155),
  ('Type -> LPAREN Type RPAREN','Type',3,'p_type','parser.py',156),
  ('TypeName -> TYPEX','TypeName',1,'p_type_name','parser.py',164),
  ('TypeName -> TTYPE IDENTIFIER','TypeName',2,'p_type_name','parser.py',165),
  ('TypeLit -> ArrayType','TypeLit',1,'p_type_lit','parser.py',177),
  ('TypeLit -> StructType','TypeLit',1,'p_type_lit','parser.py',178),
  ('TypeLit -> PointerType','TypeLit',1,'p_type_lit','parser.py',179),
  ('TypeLit -> FunctionType','TypeLit',1,'p_type_lit','parser.py',180),
  ('TypeOpt -> Type','TypeOpt',1,'p_type_opt','parser.py',184),
  ('TypeOpt -> epsilon','TypeOpt',1,'p_type_opt','parser.py',185),
  ('ArrayType -> LBRACK ArrayLength RBRACK ElementType','ArrayType',4,'p_array_type','parser.py',197),
  ('ArrayLength -> Expression','ArrayLength',1,'p_array_length','parser.py',202),
  ('ElementType -> Type','ElementType',1,'p_element_type','parser.py',208),
  ('StructType -> STRUCT LBRACE FieldDeclRep RBRACE','StructType',4,'p_struct_type','parser.py',217),
  ('FieldDeclRep -> FieldDeclRep FieldDecl SEMICOL','FieldDeclRep',3,'p_field_decl_rep','parser.py',222),
  ('FieldDeclRep -> epsilon','FieldDeclRep',1,'p_field_decl_rep','parser.py',223),
  ('FieldDecl -> IdentifierList Type TagOpt','FieldDecl',3,'p_field_decl','parser.py',231),
  ('TagOpt -> Tag','TagOpt',1,'p_tag_opt','parser.py',238),
  ('TagOpt -> epsilon','TagOpt',1,'p_tag_opt','parser.py',239),
  ('Tag -> STRING','Tag',1,'p_tag','parser.py',246),
  ('PointerType -> TIMES BaseType','PointerType',2,'p_pointer_type','parser.py',255),
  ('BaseType -> Type','BaseType',1,'p_base_type','parser.py',260),
  ('FunctionType -> FUNC Signature','FunctionType',2,'p_function_type','parser.py',269),
  ('Signature -> Parameters ResultOpt','Signature',2,'p_signature','parser.py',273),
  ('ResultOpt -> Result','ResultOpt',1,'p_result_opt','parser.py',293),
  ('ResultOpt -> epsilon','ResultOpt',1,'p_result_opt','parser.py',294),
  ('Result -> Parameters','Result',1,'p_result','parser.py',301),
  ('Result -> Type','Result',1,'p_result','parser.py',302),
  ('Parameters -> LPAREN ParameterListOpt RPAREN','Parameters',3,'p_parameters','parser.py',309),
  ('ParameterListOpt -> ParametersList','ParameterListOpt',1,'p_parameter_list_opt','parser.py',313),
  ('ParameterListOpt -> epsilon','ParameterListOpt',1,'p_parameter_list_opt','parser.py',314),
  ('ParametersList -> Type','ParametersList',1,'p_parameter_list','parser.py',321),
  ('ParametersList -> IdentifierList Type','ParametersList',2,'p_parameter_list','parser.py',322),
  ('ParametersList -> ParameterDeclCommaRep','ParametersList',1,'p_parameter_list','parser.py',323),
  ('ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA ParameterDecl','ParameterDeclCommaRep',3,'p_parameter_decl_comma_rep','parser.py',338),
  ('ParameterDeclCommaRep -> ParameterDecl COMMA ParameterDecl','ParameterDeclCommaRep',3,'p_parameter_decl_comma_rep','parser.py',339),
  ('ParameterDecl -> IdentifierList Type','ParameterDecl',2,'p_parameter_decl','parser.py',347),
  ('ParameterDecl -> Type','ParameterDecl',1,'p_parameter_decl','parser.py',348),
  ('Block -> CreateScope LBRACE StatementList RBRACE','Block',4,'p_block','parser.py',363),
  ('CreateScope -> epsilon','CreateScope',1,'p_create_scope','parser.py',370),
  ('StatementList -> StatementRep','StatementList',1,'p_statement_list','parser.py',376),
  ('StatementRep -> StatementRep Statement SEMICOL','StatementRep',3,'p_statement_rep','parser.py',380),
  ('StatementRep -> epsilon','StatementRep',1,'p_statement_rep','parser.py',381),
  ('Declaration -> ConstDecl','Declaration',1,'p_decl','parser.py',401),
  ('Declaration -> TypeDecl','Declaration',1,'p_decl','parser.py',402),
  ('Declaration -> VarDecl','Declaration',1,'p_decl','parser.py',403),
  ('TopLevelDecl -> Declaration','TopLevelDecl',1,'p_toplevel_decl','parser.py',407),
  ('TopLevelDecl -> FunctionDecl','TopLevelDecl',1,'p_toplevel_decl','parser.py',408),
  ('ConstDecl -> CONST ConstSpec','ConstDecl',2,'p_const_decl','parser.py',418),
  ('ConstDecl -> CONST LPAREN ConstSpecRep RPAREN','ConstDecl',4,'p_const_decl','parser.py',419),
  ('ConstSpecRep -> ConstSpecRep ConstSpec SEMICOL','ConstSpecRep',3,'p_const_spec_rep','parser.py',427),
  ('ConstSpecRep -> epsilon','ConstSpecRep',1,'p_const_spec_rep','parser.py',428),
  ('ConstSpec -> IdentifierList TypeExprListOpt','ConstSpec',2,'p_const_spec','parser.py',437),
  ('TypeExprListOpt -> TypeOpt EQUAL ExpressionList','TypeExprListOpt',3,'p_type_expr_list','parser.py',468),
  ('TypeExprListOpt -> epsilon','TypeExprListOpt',1,'p_type_expr_list','parser.py',469),
  ('IdentifierList -> IDENTIFIER IdentifierRep','IdentifierList',2,'p_identifier_list','parser.py',480),
  ('IdentifierRep -> IdentifierRep COMMA IDENTIFIER','IdentifierRep',3,'p_identifier_rep','parser.py',485),
  ('IdentifierRep -> epsilon','IdentifierRep',1,'p_identifier_rep','parser.py',486),
  ('TypeDecl -> TYPE TypeSpec','TypeDecl',2,'p_type_decl','parser.py',499),
  ('TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN','TypeDecl',4,'p_type_decl','parser.py',500),
  ('TypeSpecRep -> TypeSpecRep TypeSpec SEMICOL','TypeSpecRep',3,'p_type_spec_rep','parser.py',504),
  ('TypeSpecRep -> epsilon','TypeSpecRep',1,'p_type_spec_rep','parser.py',505),
  ('TypeSpec -> AliasDecl','TypeSpec',1,'p_type_spec','parser.py',513),
  ('TypeSpec -> TypeDef','TypeSpec',1,'p_type_spec','parser.py',514),
  ('AliasDecl -> IDENTIFIER EQUAL Type','AliasDecl',3,'p_alias_decl','parser.py',518),
  ('TypeDef -> TTYPE IDENTIFIER Type','TypeDef',3,'p_type_def','parser.py',530),
  ('VarDecl -> VAR VarSpec','VarDecl',2,'p_var_decl','parser.py',542),
  ('VarDecl -> VAR LPAREN VarSpecRep RPAREN','VarDecl',4,'p_var_decl','parser.py',543),
  ('VarSpecRep -> VarSpecRep VarSpec SEMICOL','VarSpecRep',3,'p_var_spec_rep','parser.py',551),
  ('VarSpecRep -> epsilon','VarSpecRep',1,'p_var_spec_rep','parser.py',552),
  ('VarSpec -> IdentifierList Type ExpressionListOpt','VarSpec',3,'p_var_spec','parser.py',560),
  ('VarSpec -> IdentifierList EQUAL ExpressionList','VarSpec',3,'p_var_spec','parser.py',561),
  ('ExpressionListOpt -> EQUAL ExpressionList','ExpressionListOpt',2,'p_expr_list_opt','parser.py',620),
  ('ExpressionListOpt -> epsilon','ExpressionListOpt',1,'p_expr_list_opt','parser.py',621),
  ('ShortVarDecl -> IDENTIFIER COLONEQ Expression','ShortVarDecl',3,'p_short_var_decl','parser.py',633),
  ('FunctionDecl -> FUNC FunctionName Function','FunctionDecl',3,'p_func_decl','parser.py',654),
  ('FunctionDecl -> FUNC FunctionName Signature','FunctionDecl',3,'p_func_decl','parser.py',655),
  ('FunctionName -> IDENTIFIER','FunctionName',1,'p_func_name','parser.py',690),
  ('Function -> Signature FunctionBody','Function',2,'p_func','parser.py',700),
  ('FunctionBody -> Block','FunctionBody',1,'p_func_body','parser.py',704),
  ('Operand -> Literal','Operand',1,'p_operand','parser.py',723),
  ('Operand -> OperandName','Operand',1,'p_operand','parser.py',724),
  ('Operand -> LPAREN Expression RPAREN','Operand',3,'p_operand','parser.py',725),
  ('Literal -> BasicLit','Literal',1,'p_literal','parser.py',732),
  ('BasicLit -> IntLiteral','BasicLit',1,'p_basic_lit','parser.py',737),
  ('BasicLit -> FloatLiteral','BasicLit',1,'p_basic_lit','parser.py',738),
  ('BasicLit -> ImgLiteral','BasicLit',1,'p_basic_lit','parser.py',739),
  ('BasicLit -> RuneLiteral','BasicLit',1,'p_basic_lit','parser.py',740),
  ('BasicLit -> StringLiteral','BasicLit',1,'p_basic_lit','parser.py',741),
  ('IntLiteral -> INTEGER','IntLiteral',1,'p_int_literal','parser.py',745),
  ('FloatLiteral -> FLOAT','FloatLiteral',1,'p_float_literal','parser.py',753),
  ('ImgLiteral -> IMAGINARY','ImgLiteral',1,'p_img_literal','parser.py',761),
  ('RuneLiteral -> RUNE','RuneLiteral',1,'p_rune_literal','parser.py',769),
  ('StringLiteral -> STRING','StringLiteral',1,'p_string_literal','parser.py',777),
  ('OperandName -> IDENTIFIER','OperandName',1,'p_operand_name','parser.py',785),
  ('Conversion -> Type LPAREN Expression RPAREN','Conversion',4,'p_conversion','parser.py',804),
  ('PrimaryExpr -> Operand','PrimaryExpr',1,'p_prim_expr','parser.py',819),
  ('PrimaryExpr -> Conversion','PrimaryExpr',1,'p_prim_expr','parser.py',820),
  ('PrimaryExpr -> PrimaryExpr Selector','PrimaryExpr',2,'p_prim_expr','parser.py',821),
  ('PrimaryExpr -> PrimaryExpr Index','PrimaryExpr',2,'p_prim_expr','parser.py',822),
  ('PrimaryExpr -> PrimaryExpr Slice','PrimaryExpr',2,'p_prim_expr','parser.py',823),
  ('PrimaryExpr -> PrimaryExpr Arguments','PrimaryExpr',2,'p_prim_expr','parser.py',824),
  ('Selector -> DOT IDENTIFIER','Selector',2,'p_selector','parser.py',921),
  ('Index -> LBRACK Expression RBRACK','Index',3,'p_index','parser.py',926),
  ('Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK','Slice',5,'p_slice','parser.py',931),
  ('Arguments -> LPAREN ExpressionListTypeOpt RPAREN','Arguments',3,'p_argument','parser.py',945),
  ('ExpressionListTypeOpt -> ExpressionList','ExpressionListTypeOpt',1,'p_expr_list_type_opt','parser.py',951),
  ('ExpressionListTypeOpt -> epsilon','ExpressionListTypeOpt',1,'p_expr_list_type_opt','parser.py',952),
  ('ExpressionList -> Expression ExpressionRep','ExpressionList',2,'p_expr_list','parser.py',975),
  ('ExpressionRep -> ExpressionRep COMMA Expression','ExpressionRep',3,'p_expr_rep','parser.py',980),
  ('ExpressionRep -> epsilon','ExpressionRep',1,'p_expr_rep','parser.py',981),
  ('Expression -> UnaryExpr','Expression',1,'p_expression','parser.py',994),
  ('Expression -> Expression OROR Expression','Expression',3,'p_expression','parser.py',995),
  ('Expression -> Expression AMPAMP Expression','Expression',3,'p_expression','parser.py',996),
  ('Expression -> Expression EQEQ Expression','Expression',3,'p_expression','parser.py',997),
  ('Expression -> Expression NOTEQ Expression','Expression',3,'p_expression','parser.py',998),
  ('Expression -> Expression LESS Expression','Expression',3,'p_expression','parser.py',999),
  ('Expression -> Expression GREAT Expression','Expression',3,'p_expression','parser.py',1000),
  ('Expression -> Expression LEQ Expression','Expression',3,'p_expression','parser.py',1001),
  ('Expression -> Expression GEQ Expression','Expression',3,'p_expression','parser.py',1002),
  ('Expression -> Expression PLUS Expression','Expression',3,'p_expression','parser.py',1003),
  ('Expression -> Expression MINUS Expression','Expression',3,'p_expression','parser.py',1004),
  ('Expression -> Expression OR Expression','Expression',3,'p_expression','parser.py',1005),
  ('Expression -> Expression CARET Expression','Expression',3,'p_expression','parser.py',1006),
  ('Expression -> Expression TIMES Expression','Expression',3,'p_expression','parser.py',1007),
  ('Expression -> Expression DIVIDE Expression','Expression',3,'p_expression','parser.py',1008),
  ('Expression -> Expression MOD Expression','Expression',3,'p_expression','parser.py',1009),
  ('Expression -> Expression AMPERS Expression','Expression',3,'p_expression','parser.py',1010),
  ('Expression -> Expression LL Expression','Expression',3,'p_expression','parser.py',1011),
  ('Expression -> Expression GG Expression','Expression',3,'p_expression','parser.py',1012),
  ('Expression -> Expression AMPCAR Expression','Expression',3,'p_expression','parser.py',1013),
  ('ExpressionOpt -> Expression','ExpressionOpt',1,'p_expr_opt','parser.py',1083),
  ('ExpressionOpt -> epsilon','ExpressionOpt',1,'p_expr_opt','parser.py',1084),
  ('UnaryExpr -> PrimaryExpr','UnaryExpr',1,'p_unary_expr','parser.py',1091),
  ('UnaryExpr -> UnaryOp UnaryExpr','UnaryExpr',2,'p_unary_expr','parser.py',1092),
  ('UnaryOp -> PLUS','UnaryOp',1,'p_unary_op','parser.py',1128),
  ('UnaryOp -> MINUS','UnaryOp',1,'p_unary_op','parser.py',1129),
  ('UnaryOp -> TIMES','UnaryOp',1,'p_unary_op','parser.py',1130),
  ('UnaryOp -> AMPERS','UnaryOp',1,'p_unary_op','parser.py',1131),
  ('UnaryOp -> NOT','UnaryOp',1,'p_unary_op','parser.py',1132),
  ('Statement -> Declaration','Statement',1,'p_statement','parser.py',1141),
  ('Statement -> LabeledStmt','Statement',1,'p_statement','parser.py',1142),
  ('Statement -> SimpleStmt','Statement',1,'p_statement','parser.py',1143),
  ('Statement -> ReturnStmt','Statement',1,'p_statement','parser.py',1144),
  ('Statement -> BreakStmt','Statement',1,'p_statement','parser.py',1145),
  ('Statement -> ContinueStmt','Statement',1,'p_statement','parser.py',1146),
  ('Statement -> GotoStmt','Statement',1,'p_statement','parser.py',1147),
  ('Statement -> Block','Statement',1,'p_statement','parser.py',1148),
  ('Statement -> IfStmt','Statement',1,'p_statement','parser.py',1149),
  ('Statement -> PrintStmt','Statement',1,'p_statement','parser.py',1150),
  ('Statement -> ForStmt','Statement',1,'p_statement','parser.py',1151),
  ('PrintStmt -> PRINT PD Expression','PrintStmt',3,'p_print_stmt','parser.py',1159),
  ('PrintStmt -> PRINT PS Expression','PrintStmt',3,'p_print_stmt','parser.py',1160),
  ('SimpleStmt -> epsilon','SimpleStmt',1,'p_simple_stmt','parser.py',1168),
  ('SimpleStmt -> ExpressionStmt','SimpleStmt',1,'p_simple_stmt','parser.py',1169),
  ('SimpleStmt -> IncDecStmt','SimpleStmt',1,'p_simple_stmt','parser.py',1170),
  ('SimpleStmt -> Assignment','SimpleStmt',1,'p_simple_stmt','parser.py',1171),
  ('SimpleStmt -> ShortVarDecl','SimpleStmt',1,'p_simple_stmt','parser.py',1172),
  ('LabeledStmt -> Label COLON Statement','LabeledStmt',3,'p_labeled_statements','parser.py',1179),
  ('Label -> IDENTIFIER','Label',1,'p_label','parser.py',1186),
  ('ExpressionStmt -> Expression','ExpressionStmt',1,'p_expression_stmt','parser.py',1190),
  ('IncDecStmt -> PrimaryExpr PLUSPLUS','IncDecStmt',2,'p_inc_dec','parser.py',1194),
  ('IncDecStmt -> PrimaryExpr MINUSMIN','IncDecStmt',2,'p_inc_dec','parser.py',1195),
  ('Assignment -> ExpressionList assign_op ExpressionList','Assignment',3,'p_assignment','parser.py',1207),
  ('assign_op -> AssignOp','assign_op',1,'p_assign_op','parser.py',1237),
  ('AssignOp -> PLUSEQ','AssignOp',1,'p_AssignOp','parser.py',1241),
  ('AssignOp -> MINUSEQ','AssignOp',1,'p_AssignOp','parser.py',1242),
  ('AssignOp -> TIMESEQ','AssignOp',1,'p_AssignOp','parser.py',1243),
  ('AssignOp -> DIVIDEEQ','AssignOp',1,'p_AssignOp','parser.py',1244),
  ('AssignOp -> MODEQ','AssignOp',1,'p_AssignOp','parser.py',1245),
  ('AssignOp -> AMPEQ','AssignOp',1,'p_AssignOp','parser.py',1246),
  ('AssignOp -> OREQ','AssignOp',1,'p_AssignOp','parser.py',1247),
  ('AssignOp -> CAREQ','AssignOp',1,'p_AssignOp','parser.py',1248),
  ('AssignOp -> LLEQ','AssignOp',1,'p_AssignOp','parser.py',1249),
  ('AssignOp -> GGEQ','AssignOp',1,'p_AssignOp','parser.py',1250),
  ('AssignOp -> EQUAL','AssignOp',1,'p_AssignOp','parser.py',1251),
  ('IfStmt -> IF Expression Block ElseOpt','IfStmt',4,'p_if_statement','parser.py',1260),
  ('ElseOpt -> ELSE IfStmt','ElseOpt',2,'p_else_opt','parser.py',1292),
  ('ElseOpt -> ELSE Block','ElseOpt',2,'p_else_opt','parser.py',1293),
  ('ElseOpt -> epsilon','ElseOpt',1,'p_else_opt','parser.py',1294),
  ('ForStmt -> CreateForScope FOR ConditionBlockOpt Block','ForStmt',4,'p_for','parser.py',1392),
  ('CreateForScope -> epsilon','CreateForScope',1,'p_for_create_scope','parser.py',1418),
  ('ConditionBlockOpt -> epsilon','ConditionBlockOpt',1,'p_conditionblockopt','parser.py',1423),
  ('ConditionBlockOpt -> Condition','ConditionBlockOpt',1,'p_conditionblockopt','parser.py',1424),
  ('ConditionBlockOpt -> ForClause','ConditionBlockOpt',1,'p_conditionblockopt','parser.py',1425),
  ('Condition -> Expression','Condition',1,'p_condition','parser.py',1433),
  ('ForClause -> SimpleStmt SEMICOL ConditionOpt SEMICOL SimpleStmt','ForClause',5,'p_forclause','parser.py',1437),
  ('ConditionOpt -> epsilon','ConditionOpt',1,'p_conditionopt','parser.py',1445),
  ('ConditionOpt -> Condition','ConditionOpt',1,'p_conditionopt','parser.py',1446),
  ('RangeClause -> ExpressionIdentListOpt RANGE Expression','RangeClause',3,'p_rageclause','parser.py',1453),
  ('ExpressionIdentListOpt -> epsilon','ExpressionIdentListOpt',1,'p_expression_ident_listopt','parser.py',1457),
  ('ExpressionIdentListOpt -> ExpressionIdentifier','ExpressionIdentListOpt',1,'p_expression_ident_listopt','parser.py',1458),
  ('ExpressionIdentifier -> ExpressionList EQUAL','ExpressionIdentifier',2,'p_expressionidentifier','parser.py',1462),
  ('ReturnStmt -> RETURN ExpressionListPureOpt','ReturnStmt',2,'p_return','parser.py',1475),
  ('ExpressionListPureOpt -> ExpressionList','ExpressionListPureOpt',1,'p_expressionlist_pure_opt','parser.py',1490),
  ('ExpressionListPureOpt -> epsilon','ExpressionListPureOpt',1,'p_expressionlist_pure_opt','parser.py',1491),
  ('BreakStmt -> BREAK LabelOpt','BreakStmt',2,'p_break','parser.py',1498),
  ('ContinueStmt -> CONTINUE LabelOpt','ContinueStmt',2,'p_continue','parser.py',1504),
  ('LabelOpt -> Label','LabelOpt',1,'p_labelopt','parser.py',1511),
  ('LabelOpt -> epsilon','LabelOpt',1,'p_labelopt','parser.py',1512),
  ('GotoStmt -> GOTO Label','GotoStmt',2,'p_goto','parser.py',1519),
  ('Source -> PackageClause SEMICOL ImportDeclRep TopLevelDeclRep','Source',4,'p_source_file','parser.py',1530),
  ('ImportDeclRep -> epsilon','ImportDeclRep',1,'p_import_decl_rep','parser.py',1534),
  ('ImportDeclRep -> ImportDeclRep ImportDecl SEMICOL','ImportDeclRep',3,'p_import_decl_rep','parser.py',1535),
  ('TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOL','TopLevelDeclRep',3,'p_toplevel_decl_rep','parser.py',1543),
  ('TopLevelDeclRep -> epsilon','TopLevelDeclRep',1,'p_toplevel_decl_rep','parser.py',1544),
  ('PackageClause -> PACKAGE PackageName','PackageClause',2,'p_package_clause','parser.py',1556),
  ('PackageName -> IDENTIFIER','PackageName',1,'p_package_name','parser.py',1562),
  ('ImportDecl -> IMPORT ImportSpec','ImportDecl',2,'p_import_decl','parser.py',1571),
  ('ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN','ImportDecl',4,'p_import_decl','parser.py',1572),
  ('ImportSpecRep -> ImportSpecRep ImportSpec SEMICOL','ImportSpecRep',3,'p_import_spec_rep','parser.py',1581),
  ('ImportSpecRep -> epsilon','ImportSpecRep',1,'p_import_spec_rep','parser.py',1582),
  ('ImportSpec -> PackageNameDotOpt ImportPath','ImportSpec',2,'p_import_spec','parser.py',1590),
  ('PackageNameDotOpt -> DOT','PackageNameDotOpt',1,'p_package_name_dot_opt','parser.py',1596),
  ('PackageNameDotOpt -> PackageName','PackageNameDotOpt',1,'p_package_name_dot_opt','parser.py',1597),
  ('PackageNameDotOpt -> epsilon','PackageNameDotOpt',1,'p_package_name_dot_opt','parser.py',1598),
  ('ImportPath -> STRING','ImportPath',1,'p_import_path','parser.py',1605),
  ('epsilon -> <empty>','epsilon',0,'p_empty','parser.py',1614),
]
