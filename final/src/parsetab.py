
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightEQUALNOTleftORORleftAMPAMPleftEQEQNOTEQLESSGREATLEQGEQleftPLUSMINUSORCARETleftTIMESDIVIDEMODLLGGAMPERSAMPCARAMPAMP AMPCAR AMPCAREQ AMPEQ AMPERS BREAK CAREQ CARET CASE CHAN COLON COLONEQ COMMA CONST CONSTANT CONTINUE DDD DEFAULT DEFER DIVIDE DIVIDEEQ DOT ELSE EQEQ EQUAL FALLTHROUGH FLOAT FOR FUNC GEQ GG GGEQ GO GOTO GREAT IDENTIFIER IF IMAGINARY IMPORT INTEGER INTERFACE LBRACE LBRACK LEQ LESS LL LLEQ LMINUS LPAREN MALLOC MAP MINUS MINUSEQ MINUSMIN MOD MODEQ NOT NOTEQ OR OREQ OROR PACKAGE PD PLUS PLUSEQ PLUSPLUS POINTER PRINT PS RANGE RBRACE RBRACK READ RETURN RPAREN RUNE SCAN SELECT SEMICOL STRING STRUCT SWITCH TIMES TIMESEQ TTYPE TYPE TYPEX VAR WRITEstart : SourceType : TypeName \n\t\t\t| TypeLit \n\t\t\t| LPAREN Type RPARENTypeName : TYPEX\n\t\t\t\t| TTYPE IDENTIFIERTypeLit : ArrayType\n\t\t\t   | StructType\n\t\t\t   | PointerType\n\t\t\t   | FunctionTypeTypeOpt : Type\n\t\t\t   | epsilonArrayType : LBRACK ArrayLength RBRACK ElementType\n\t\t\t\t | LBRACK RBRACK ElementType ArrayLength : Expression  ElementType : Type StructType : STRUCT LBRACE FieldDeclRep RBRACE FieldDeclRep : FieldDeclRep FieldDecl SEMICOL\n\t\t\t\t  | epsilon FieldDecl : IdentifierList Type TagOpt TagOpt : Tag\n\t\t\t | epsilon  Tag : STRING PointerType : Pointer BaseTypePointer : POINTERBaseType : TypeFunctionType : FUNC SignatureSignature : Parameters ResultOptResultOpt : Result\n\t\t\t\t | epsilonResult : Parameters\n\t\t\t  | TypeParameters : LPAREN ParameterListOpt RPARENParameterListOpt : ParametersList\n\t\t\t\t\t\t| epsilonParametersList : Type\n\t\t\t\t\t  | IdentifierList Type\n\t\t\t\t\t  | ParameterDeclCommaRepParameterDeclCommaRep : ParameterDeclCommaRep COMMA ParameterDecl\n\t\t\t\t\t\t\t | ParameterDecl COMMA ParameterDeclParameterDecl : IdentifierList Type\n\t\t\t\t\t | TypeBlock : CreateScope LBRACE StatementList RBRACECreateScope : epsilon StatementList : StatementRepStatementRep : StatementRep Statement SEMICOL\n\t\t\t\t\t| epsilonDeclaration : ConstDecl\n\t\t\t\t\t| TypeDecl\n\t\t\t\t\t| VarDeclTopLevelDecl : Declaration\n\t\t\t\t\t| FunctionDeclConstDecl : CONST ConstSpec\n\t\t\t\t | CONST LPAREN ConstSpecRep RPARENConstSpecRep : ConstSpecRep ConstSpec SEMICOL\n\t\t\t\t\t| epsilonConstSpec : IdentifierList TypeExprListOptTypeExprListOpt : TypeOpt EQUAL ExpressionList\n\t\t\t\t\t   | epsilonIdentifierList : IDENTIFIER IdentifierRepIdentifierRep : IdentifierRep COMMA IDENTIFIER\n\t\t\t\t\t | epsilonTypeDecl : TYPE TypeSpec\n\t\t\t\t| TYPE LPAREN TypeSpecRep RPARENTypeSpecRep : TypeSpecRep TypeSpec SEMICOL\n\t\t\t\t   | epsilonTypeSpec : AliasDecl\n\t\t\t\t| TypeDefAliasDecl : IDENTIFIER EQUAL TypeTypeDef : TTYPE IDENTIFIER TypeVarDecl : VAR VarSpec\n\t\t\t   | VAR LPAREN VarSpecRep RPARENVarSpecRep : VarSpecRep VarSpec SEMICOL\n\t\t\t\t  | epsilonVarSpec : IdentifierList Type ExpressionListOpt\n\t\t\t   | IdentifierList EQUAL ExpressionListExpressionListOpt : EQUAL ExpressionList\n\t\t\t\t\t\t | epsilon ShortVarDecl : IDENTIFIER COLONEQ Expression FunctionDecl : FUNC FunctionName Function\n\t\t\t\t\t| FUNC FunctionName SignatureFunctionName : IDENTIFIERFunction : Signature FunctionBodyFunctionBody : BlockOperand : Literal\n\t\t\t   | OperandName\n\t\t\t   | LPAREN Expression RPARENLiteral : BasicLitBasicLit : IntLiteral\n\t\t\t\t| FloatLiteral\n\t\t\t\t| ImgLiteral\n\t\t\t\t| RuneLiteral\n\t\t\t\t| StringLiteralIntLiteral : INTEGERFloatLiteral : FLOATImgLiteral : IMAGINARYRuneLiteral : RUNEStringLiteral : STRINGOperandName : IDENTIFIERConversion : Type LPAREN Expression RPARENPrimaryExpr : Operand\n\t\t\t\t   | Conversion\n\t\t\t\t   | PrimaryExpr Selector\n\t\t\t\t   | PrimaryExpr Index\n\t\t\t\t   | PrimaryExpr Slice\n\t\t\t\t   | PrimaryExpr ArgumentsSelector : DOT IDENTIFIERIndex : LBRACK Expression RBRACKSlice : LBRACK ExpressionOpt COLON ExpressionOpt RBRACKArguments : LPAREN ExpressionListTypeOpt RPARENExpressionListTypeOpt : ExpressionList\n\t\t\t\t\t\t\t | epsilonExpressionList : Expression ExpressionRepExpressionRep : ExpressionRep COMMA Expression\n\t\t\t\t\t | epsilonExpression : UnaryExpr\n\t\t\t\t  | Expression OROR Expression\n\t\t\t\t\t| Expression AMPAMP Expression\n\t\t\t\t\t| Expression EQEQ Expression\n\t\t\t\t\t| Expression NOTEQ Expression\n\t\t\t\t\t| Expression LESS Expression\n\t\t\t\t\t| Expression GREAT Expression\n\t\t\t\t\t| Expression LEQ Expression\n\t\t\t\t\t| Expression GEQ Expression\n\t\t\t\t\t| Expression PLUS Expression\n\t\t\t\t\t| Expression MINUS Expression\n\t\t\t\t\t| Expression OR Expression\n\t\t\t\t\t| Expression CARET Expression\n\t\t\t\t\t| Expression TIMES Expression\n\t\t\t\t\t| Expression DIVIDE Expression\n\t\t\t\t\t| Expression MOD Expression\n\t\t\t\t\t| Expression AMPERS Expression\n\t\t\t\t\t| Expression LL Expression\n\t\t\t\t\t| Expression GG Expression\n\t\t\t\t\t| Expression AMPCAR ExpressionExpressionOpt : Expression\n\t\t\t\t\t | epsilonUnaryExpr : PrimaryExpr\n\t\t\t\t | UnaryOp UnaryExprUnaryOp : PLUS\n\t\t\t   | MINUS\n\t\t\t   | TIMES\n\t\t\t   | AMPERS\n\t\t\t   | NOT Statement : Declaration\n\t\t\t\t | LabeledStmt\n\t\t\t\t | SimpleStmt\n\t\t\t\t | ReturnStmt\n\t\t\t\t | BreakStmt\n\t\t\t\t | ContinueStmt\n\t\t\t\t | GotoStmt\n\t\t\t\t | Block\n\t\t\t\t | IfStmt\n\t\t\t\t | PrintStmt\n\t\t\t\t | ScanStmt\n\t\t\t\t | WriteStmt\n\t\t\t\t | ReadStmt\n\t\t\t\t | MallocStmt\n\t\t\t\t | ForStmt  WriteStmt : WRITE Expression PS Expression PS Expression ReadStmt : READ Expression PS Expression PS ExpressionMallocStmt : MALLOC IDENTIFIER PrintStmt : PRINT PD Expression\n\t\t\t\t | PRINT PS ExpressionScanStmt : SCAN PD IDENTIFIERSimpleStmt : epsilon\n\t\t\t\t  | ExpressionStmt\n\t\t\t\t  | IncDecStmt\n\t\t\t\t  | Assignment\n\t\t\t\t  | ShortVarDecl  LabeledStmt : Label COLON Statement  Label : IDENTIFIER  ExpressionStmt : Expression  IncDecStmt : PrimaryExpr PLUSPLUS\n\t\t\t\t\t| PrimaryExpr MINUSMIN Assignment : ExpressionList assign_op ExpressionList assign_op : AssignOpAssignOp : PLUSEQ\n\t\t\t\t| MINUSEQ\n\t\t\t\t| TIMESEQ\n\t\t\t\t| DIVIDEEQ\n\t\t\t\t| MODEQ\n\t\t\t\t| AMPEQ\n\t\t\t\t| OREQ\n\t\t\t\t| CAREQ\n\t\t\t\t| LLEQ\n\t\t\t\t| GGEQ\n\t\t\t\t| EQUAL  IfStmt : IF Expression Block ElseOpt  ElseOpt : ELSE IfStmt\n\t\t\t\t| ELSE Block\n\t\t\t\t| epsilon ForStmt : CreateForScope FOR ConditionBlockOpt Block CreateForScope : epsilon ConditionBlockOpt : epsilon\n\t\t\t\t| Condition\n\t\t\t\t| ForClauseCondition : Expression ForClause : SimpleStmt SEMICOL ConditionOpt SEMICOL SimpleStmtConditionOpt : epsilon\n\t\t\t| Condition RangeClause : ExpressionIdentListOpt RANGE ExpressionExpressionIdentListOpt : epsilon\n\t\t\t\t| ExpressionIdentifierExpressionIdentifier : ExpressionList EQUALReturnStmt : RETURN ExpressionListPureOptExpressionListPureOpt : ExpressionList\n\t\t\t\t| epsilonBreakStmt : BREAK LabelOptContinueStmt : CONTINUE LabelOptLabelOpt : Label\n\t\t\t| epsilon GotoStmt : GOTO Label Source : PackageClause SEMICOL ImportDeclRep TopLevelDeclRepImportDeclRep : epsilon\n\t\t\t| ImportDeclRep ImportDecl SEMICOLTopLevelDeclRep : TopLevelDeclRep TopLevelDecl SEMICOL\n\t\t\t\t\t\t| epsilonPackageClause : PACKAGE PackageNamePackageName : IDENTIFIERImportDecl : IMPORT ImportSpec\n\t\t\t| IMPORT LPAREN ImportSpecRep RPAREN  ImportSpecRep : ImportSpecRep ImportSpec SEMICOL\n\t\t\t\t| epsilon  ImportSpec : PackageNameDotOpt ImportPath  PackageNameDotOpt : DOT\n\t\t\t\t\t\t\t| PackageName\n\t\t\t\t\t\t\t| epsilon ImportPath : STRING epsilon : '
    
_lr_action_items = {'OROR':([96,97,98,99,100,103,104,105,109,110,111,112,113,115,116,118,121,122,124,146,161,167,187,188,190,191,209,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,237,248,250,251,263,274,279,291,297,312,315,332,333,334,335,339,343,344,346,353,354,361,367,368,],[-97,-102,-93,-85,-90,-98,-86,-88,-94,-96,-99,-89,-91,-116,-92,-101,168,-95,-138,168,-139,168,-104,-105,-103,-106,168,-87,-117,-128,-122,-130,-135,-121,-119,-133,-132,-124,-127,-134,-120,-125,-131,-118,-129,-126,-123,168,-107,-100,-108,-110,-138,-99,168,168,168,168,168,168,-109,-138,-99,168,168,168,168,168,168,168,168,168,]),'CARET':([96,97,98,99,100,103,104,105,109,110,111,112,113,115,116,118,121,122,124,146,161,167,187,188,190,191,209,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,237,248,250,251,263,274,279,291,297,312,315,332,333,334,335,339,343,344,346,353,354,361,367,368,],[-97,-102,-93,-85,-90,-98,-86,-88,-94,-96,-99,-89,-91,-116,-92,-101,169,-95,-138,169,-139,169,-104,-105,-103,-106,169,-87,169,-128,169,-130,-135,169,169,-133,-132,169,-127,-134,169,-125,-131,169,-129,-126,169,169,-107,-100,-108,-110,-138,-99,169,169,169,169,169,169,-109,-138,-99,169,169,169,169,169,169,169,169,169,]),'GREAT':([96,97,98,99,100,103,104,105,109,110,111,112,113,115,116,118,121,122,124,146,161,167,187,188,190,191,209,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,237,248,250,251,263,274,279,291,297,312,315,332,333,334,335,339,343,344,346,353,354,361,367,368,],[-97,-102,-93,-85,-90,-98,-86,-88,-94,-96,-99,-89,-91,-116,-92,-101,170,-95,-138,170,-139,170,-104,-105,-103,-106,170,-87,170,-128,-122,-130,-135,-121,-119,-133,-132,-124,-127,-134,-120,-125,-131,170,-129,-126,-123,170,-107,-100,-108,-110,-138,-99,170,170,170,170,170,170,-109,-138,-99,170,170,170,170,170,170,170,170,170,]),'SEMICOL':([1,6,7,12,15,16,17,18,19,22,26,31,33,34,38,41,43,45,49,50,54,56,57,58,60,61,68,69,70,71,72,73,74,75,80,85,86,87,88,89,91,94,95,96,97,98,99,100,103,104,105,109,110,111,112,113,115,116,118,122,124,126,127,128,129,131,132,135,143,144,145,146,148,149,150,151,152,153,156,157,161,162,163,187,188,190,191,194,196,197,202,203,204,206,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,237,238,239,247,248,250,251,252,253,254,255,256,257,258,259,260,261,263,264,265,268,269,270,272,273,274,276,279,280,281,283,284,286,288,289,291,292,293,294,295,298,299,300,301,302,303,304,305,308,309,310,311,314,329,331,333,334,335,337,339,340,342,343,344,346,348,349,350,351,352,355,357,358,359,360,361,364,365,367,368,],[5,-219,-220,24,-52,35,-51,-48,-49,-50,-221,-53,-230,-230,-71,-68,-67,-63,-225,-229,-7,-3,-2,-5,-8,-59,-57,-9,-10,-62,-60,-80,-230,-81,-230,-222,154,155,-54,-27,-6,-26,-24,-97,-102,-93,-85,-90,-98,-86,-88,-94,-96,-99,-89,-91,-116,-92,-101,-95,-138,-31,-32,-28,-30,-29,-83,-84,-72,201,-76,-230,-78,-75,-70,-64,205,-69,-4,-58,-139,-16,-14,-104,-105,-103,-106,-61,-230,-33,-113,-115,-77,246,-17,-13,-87,-117,-128,-122,-130,-135,-121,-119,-133,-132,-124,-127,-134,-120,-125,-131,-118,-129,-126,-123,-107,-230,-47,-230,-100,-108,-110,-150,-167,-155,298,-153,-169,-168,-157,-146,-154,-138,-230,-156,-151,-152,-230,-158,-145,-99,-166,-173,-230,-148,-147,-159,-170,-149,-43,-114,-23,-22,-21,-20,-46,-230,-174,-175,-206,-208,-207,-230,-212,-172,-210,-211,-162,-209,-213,-109,-138,-99,-166,-173,352,-171,-164,-163,-79,-176,-165,-230,-193,-230,-192,-189,-201,-200,366,-198,-190,-191,-161,-160,]),'CONST':([5,8,9,10,11,24,35,196,238,239,298,305,],[-230,-215,-230,14,-218,-216,-217,-230,14,-47,-46,14,]),'FUNC':([5,8,9,10,11,24,33,34,35,40,59,62,66,67,71,72,74,76,79,81,84,92,102,106,107,108,114,117,120,123,130,137,147,160,164,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,189,192,194,196,197,199,200,207,238,239,241,245,249,264,271,277,287,298,299,305,306,307,313,316,317,318,319,320,321,322,323,324,325,326,327,328,345,347,352,362,363,366,],[-230,-215,-230,20,-218,-216,53,-230,-217,53,-25,53,53,53,-62,-60,53,53,53,53,53,53,-141,53,-144,-140,53,-142,53,-143,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-61,-230,-33,53,53,53,53,-47,53,53,53,53,53,53,53,-46,53,53,53,53,53,-177,-188,-185,-180,-178,-182,-187,-186,-184,-179,-183,53,-181,53,53,53,53,53,53,]),'AMPCAR':([96,97,98,99,100,103,104,105,109,110,111,112,113,115,116,118,121,122,124,146,161,167,187,188,190,191,209,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,237,248,250,251,263,274,279,291,297,312,315,332,333,334,335,339,343,344,346,353,354,361,367,368,],[-97,-102,-93,-85,-90,-98,-86,-88,-94,-96,-99,-89,-91,-116,-92,-101,172,-95,-138,172,-139,172,-104,-105,-103,-106,172,-87,172,172,172,-130,-135,172,172,-133,-132,172,172,-134,172,172,-131,172,-129,172,172,172,-107,-100,-108,-110,-138,-99,172,172,172,172,172,172,-109,-138,-99,172,172,172,172,172,172,172,172,172,]),'LESS':([96,97,98,99,100,103,104,105,109,110,111,112,113,115,116,118,121,122,124,146,161,167,187,188,190,191,209,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,237,248,250,251,263,274,279,291,297,312,315,332,333,334,335,339,343,344,346,353,354,361,367,368,],[-97,-102,-93,-85,-90,-98,-86,-88,-94,-96,-99,-89,-91,-116,-92,-101,173,-95,-138,173,-139,173,-104,-105,-103,-106,173,-87,173,-128,-122,-130,-135,-121,-119,-133,-132,-124,-127,-134,-120,-125,-131,173,-129,-126,-123,173,-107,-100,-108,-110,-138,-99,173,173,173,173,173,173,-109,-138,-99,173,173,173,173,173,173,173,173,173,]),'EQEQ':([96,97,98,99,100,103,104,105,109,110,111,112,113,115,116,118,121,122,124,146,161,167,187,188,190,191,209,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,237,248,250,251,263,274,279,291,297,312,315,332,333,334,335,339,343,344,346,353,354,361,367,368,],[-97,-102,-93,-85,-90,-98,-86,-88,-94,-96,-99,-89,-91,-116,-92,-101,174,-95,-138,174,-139,174,-104,-105,-103,-106,174,-87,174,-128,-122,-130,-135,-121,-119,-133,-132,-124,-127,-134,-120,-125,-131,174,-129,-126,-123,174,-107,-100,-108,-110,-138,-99,174,174,174,174,174,174,-109,-138,-99,174,174,174,174,174,174,174,174,174,]),'GGEQ':([96,97,98,99,100,103,104,105,109,110,111,112,113,115,116,118,122,124,161,187,188,190,191,202,203,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,237,248,250,251,263,274,278,279,291,333,334,335,339,],[-97,-102,-93,-85,-90,-98,-86,-88,-94,-96,-99,-89,-91,-116,-92,-101,-95,-138,-139,-104,-105,-103,-106,-113,-115,-87,-117,-128,-122,-130,-135,-121,-119,-133,-132,-124,-127,-134,-120,-125,-131,-118,-129,-126,-123,-107,-100,-108,-110,-138,-99,322,-230,-114,-109,-138,-99,-230,]),'EQUAL':([33,34,40,46,54,55,56,57,58,60,61,64,69,70,71,72,74,80,89,91,94,95,96,97,98,99,100,103,104,105,109,110,111,112,113,115,116,118,122,124,126,127,128,129,131,156,161,162,163,187,188,190,191,194,197,202,203,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,237,248,250,251,263,274,278,279,291,333,334,335,339,],[-230,-230,79,84,-7,-11,-3,-2,-5,-8,-12,92,-9,-10,-62,-60,-230,147,-27,-6,-26,-24,-97,-102,-93,-85,-90,-98,-86,-88,-94,-96,-99,-89,-91,-116,-92,-101,-95,-138,-31,-32,-28,-30,-29,-4,-139,-16,-14,-104,-105,-103,-106,-61,-33,-113,-115,-17,-13,-87,-117,-128,-122,-130,-135,-121,-119,-133,-132,-124,-127,-134,-120,-125,-131,-118,-129,-126,-123,-107,-100,-108,-110,-138,-99,317,-230,-114,-109,-138,-99,-230,]),'GOTO':([196,238,239,298,305,],[-230,285,-47,-46,285,]),'CAREQ':([96,97,98,99,100,103,104,105,109,110,111,112,113,115,116,118,122,124,161,187,188,190,191,202,203,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,237,248,250,251,263,274,278,279,291,333,334,335,339,],[-97,-102,-93,-85,-90,-98,-86,-88,-94,-96,-99,-89,-91,-116,-92,-101,-95,-138,-139,-104,-105,-103,-106,-113,-115,-87,-117,-128,-122,-130,-135,-121,-119,-133,-132,-124,-127,-134,-120,-125,-131,-118,-129,-126,-123,-107,-100,-108,-110,-138,-99,318,-230,-114,-109,-138,-99,-230,]),'COLON':([96,97,98,99,100,103,104,105,109,110,111,112,113,115,116,118,122,124,161,187,188,189,190,191,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,237,248,250,251,266,274,333,],[-97,-102,-93,-85,-90,-98,-86,-88,-94,-96,-99,-89,-91,-116,-92,-101,-95,-138,-139,-104,-105,-230,-103,-106,-87,-117,-128,-122,-130,-135,-121,-119,-133,-132,-124,-127,-134,-120,-125,-131,-118,-129,-126,-123,249,-137,-136,-107,-100,-108,-110,305,-172,-109,]),'COLONEQ':([274,335,],[313,313,]),'AMPAMP':([96,97,98,99,100,103,104,105,109,110,111,112,113,115,116,118,121,122,124,146,161,167,187,188,190,191,209,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,237,248,250,251,263,274,279,291,297,312,315,332,333,334,335,339,343,344,346,353,354,361,367,368,],[-97,-102,-93,-85,-90,-98,-86,-88,-94,-96,-99,-89,-91,-116,-92,-101,183,-95,-138,183,-139,183,-104,-105,-103,-106,183,-87,183,-128,-122,-130,-135,-121,-119,-133,-132,-124,-127,-134,-120,-125,-131,-118,-129,-126,-123,183,-107,-100,-108,-110,-138,-99,183,183,183,183,183,183,-109,-138,-99,183,183,183,183,183,183,183,183,183,]),'PRINT':([196,238,239,298,305,],[-230,267,-47,-46,267,]),'RETURN':([196,238,239,298,305,],[-230,264,-47,-46,264,]),'RUNE':([67,79,92,102,106,107,108,117,120,123,147,160,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,189,192,196,238,239,245,249,264,271,277,287,298,299,305,306,307,313,316,317,318,319,320,321,322,323,324,325,326,327,328,345,347,352,362,363,366,],[96,96,96,-141,96,-144,-140,-142,96,-143,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,-230,96,-47,96,96,96,96,96,96,-46,96,96,96,96,96,-177,-188,-185,-180,-178,-182,-187,-186,-184,-179,-183,96,-181,96,96,96,96,96,96,]),'MINUS':([67,79,92,96,97,98,99,100,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,120,121,122,123,124,146,147,160,161,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,196,209,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,237,238,239,245,248,249,250,251,263,264,271,274,277,279,287,291,297,298,299,305,306,307,312,313,315,316,317,318,319,320,321,322,323,324,325,326,327,328,332,333,334,335,339,343,344,345,346,347,352,353,354,361,362,363,366,367,368,],[102,102,102,-97,-102,-93,-85,-90,-141,-98,-86,-88,102,-144,-140,-94,-96,-99,-89,-91,-116,-92,-142,-101,102,185,-95,-143,-138,185,102,102,-139,102,185,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,-104,-105,102,-103,-106,102,-230,185,-87,185,-128,185,-130,-135,185,185,-133,-132,185,-127,-134,185,-125,-131,185,-129,-126,185,185,-107,102,-47,102,-100,102,-108,-110,-138,102,102,-99,102,185,102,185,185,-46,102,102,102,102,185,102,185,-177,-188,-185,-180,-178,-182,-187,-186,-184,-179,-183,102,-181,185,-109,-138,-99,185,185,185,102,185,102,102,185,185,185,102,102,102,185,185,]),'DOT':([13,25,47,48,96,97,98,99,100,103,104,105,109,110,111,112,113,116,118,122,124,154,187,188,190,191,211,237,248,250,251,263,274,333,334,335,],[30,-230,-224,30,-97,-102,-93,-85,-90,-98,-86,-88,-94,-96,-99,-89,-91,-92,-101,-95,193,-223,-104,-105,-103,-106,-87,-107,-100,-108,-110,193,-99,-109,193,-99,]),'RBRACE':([93,158,159,196,238,239,240,246,298,],[-230,208,-19,-230,-45,-47,289,-18,-46,]),'PS':([96,97,98,99,100,103,104,105,109,110,111,112,113,115,116,118,122,124,161,187,188,190,191,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,237,248,250,251,267,312,315,333,353,354,],[-97,-102,-93,-85,-90,-98,-86,-88,-94,-96,-99,-89,-91,-116,-92,-101,-95,-138,-139,-104,-105,-103,-106,-87,-117,-128,-122,-130,-135,-121,-119,-133,-132,-124,-127,-134,-120,-125,-131,-118,-129,-126,-123,-107,-100,-108,-110,306,345,347,-109,362,363,]),'GEQ':([96,97,98,99,100,103,104,105,109,110,111,112,113,115,116,118,121,122,124,146,161,167,187,188,190,191,209,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,237,248,250,251,263,274,279,291,297,312,315,332,333,334,335,339,343,344,346,353,354,361,367,368,],[-97,-102,-93,-85,-90,-98,-86,-88,-94,-96,-99,-89,-91,-116,-92,-101,177,-95,-138,177,-139,177,-104,-105,-103,-106,177,-87,177,-128,-122,-130,-135,-121,-119,-133,-132,-124,-127,-134,-120,-125,-131,177,-129,-126,-123,177,-107,-100,-108,-110,-138,-99,177,177,177,177,177,177,-109,-138,-99,177,177,177,177,177,177,177,177,177,]),'RPAREN':([25,32,39,44,47,48,51,52,54,56,57,58,60,69,70,74,76,77,78,82,83,89,90,91,94,95,96,97,98,99,100,103,104,105,109,110,111,112,113,115,116,118,122,124,126,127,128,129,130,131,136,138,139,140,142,146,154,155,156,161,162,163,165,167,187,188,190,191,192,195,197,198,201,202,203,205,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,234,235,236,237,242,243,244,248,250,251,290,291,333,],[-230,-230,-230,-230,-224,85,88,-56,-7,-3,-2,-5,-8,-9,-10,-230,-230,143,-74,151,-66,-27,156,-6,-26,-24,-97,-102,-93,-85,-90,-98,-86,-88,-94,-96,-99,-89,-91,-116,-92,-101,-95,-138,-31,-32,-28,-30,-230,-29,197,-38,-36,-34,-35,-230,-223,-55,-4,-139,-16,-14,156,211,-104,-105,-103,-106,-230,156,-33,-37,-73,-113,-115,-65,-17,248,-13,-87,-117,-128,-122,-130,-135,-121,-119,-133,-132,-124,-127,-134,-120,-125,-131,-118,-129,-126,-123,-112,-111,251,-107,-42,-39,-40,-100,-108,-110,-41,-114,-109,]),'TIMESEQ':([96,97,98,99,100,103,104,105,109,110,111,112,113,115,116,118,122,124,161,187,188,190,191,202,203,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,237,248,250,251,263,274,278,279,291,333,334,335,339,],[-97,-102,-93,-85,-90,-98,-86,-88,-94,-96,-99,-89,-91,-116,-92,-101,-95,-138,-139,-104,-105,-103,-106,-113,-115,-87,-117,-128,-122,-130,-135,-121,-119,-133,-132,-124,-127,-134,-120,-125,-131,-118,-129,-126,-123,-107,-100,-108,-110,-138,-99,319,-230,-114,-109,-138,-99,-230,]),'LL':([96,97,98,99,100,103,104,105,109,110,111,112,113,115,116,118,121,122,124,146,161,167,187,188,190,191,209,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,237,248,250,251,263,274,279,291,297,312,315,332,333,334,335,339,343,344,346,353,354,361,367,368,],[-97,-102,-93,-85,-90,-98,-86,-88,-94,-96,-99,-89,-91,-116,-92,-101,175,-95,-138,175,-139,175,-104,-105,-103,-106,175,-87,175,175,175,-130,-135,175,175,-133,-132,175,175,-134,175,175,-131,175,-129,175,175,175,-107,-100,-108,-110,-138,-99,175,175,175,175,175,175,-109,-138,-99,175,175,175,175,175,175,175,175,175,]),'MODEQ':([96,97,98,99,100,103,104,105,109,110,111,112,113,115,116,118,122,124,161,187,188,190,191,202,203,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,237,248,250,251,263,274,278,279,291,333,334,335,339,],[-97,-102,-93,-85,-90,-98,-86,-88,-94,-96,-99,-89,-91,-116,-92,-101,-95,-138,-139,-104,-105,-103,-106,-113,-115,-87,-117,-128,-122,-130,-135,-121,-119,-133,-132,-124,-127,-134,-120,-125,-131,-118,-129,-126,-123,-107,-100,-108,-110,-138,-99,321,-230,-114,-109,-138,-99,-230,]),'PLUS':([67,79,92,96,97,98,99,100,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,120,121,122,123,124,146,147,160,161,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,196,209,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,237,238,239,245,248,249,250,251,263,264,271,274,277,279,287,291,297,298,299,305,306,307,312,313,315,316,317,318,319,320,321,322,323,324,325,326,327,328,332,333,334,335,339,343,344,345,346,347,352,353,354,361,362,363,366,367,368,],[108,108,108,-97,-102,-93,-85,-90,-141,-98,-86,-88,108,-144,-140,-94,-96,-99,-89,-91,-116,-92,-142,-101,108,181,-95,-143,-138,181,108,108,-139,108,181,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,-104,-105,108,-103,-106,108,-230,181,-87,181,-128,181,-130,-135,181,181,-133,-132,181,-127,-134,181,-125,-131,181,-129,-126,181,181,-107,108,-47,108,-100,108,-108,-110,-138,108,108,-99,108,181,108,181,181,-46,108,108,108,108,181,108,181,-177,-188,-185,-180,-178,-182,-187,-186,-184,-179,-183,108,-181,181,-109,-138,-99,181,181,181,108,181,108,108,181,181,181,108,108,108,181,181,]),'MINUSEQ':([96,97,98,99,100,103,104,105,109,110,111,112,113,115,116,118,122,124,161,187,188,190,191,202,203,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,237,248,250,251,263,274,278,279,291,333,334,335,339,],[-97,-102,-93,-85,-90,-98,-86,-88,-94,-96,-99,-89,-91,-116,-92,-101,-95,-138,-139,-104,-105,-103,-106,-113,-115,-87,-117,-128,-122,-130,-135,-121,-119,-133,-132,-124,-127,-134,-120,-125,-131,-118,-129,-126,-123,-107,-100,-108,-110,-138,-99,325,-230,-114,-109,-138,-99,-230,]),'COMMA':([34,54,56,57,58,60,69,70,71,72,74,89,91,94,95,96,97,98,99,100,103,104,105,109,110,111,112,113,115,116,118,122,124,126,127,128,129,131,138,139,141,146,156,161,162,163,187,188,190,191,194,195,197,198,202,203,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,237,242,243,244,248,250,251,263,274,279,290,291,333,334,335,339,],[-230,-7,-3,-2,-5,-8,-9,-10,-62,125,-230,-27,-6,-26,-24,-97,-102,-93,-85,-90,-98,-86,-88,-94,-96,-99,-89,-91,-116,-92,-101,-95,-138,-31,-32,-28,-30,-29,199,-42,200,-230,-4,-139,-16,-14,-104,-105,-103,-106,-61,-42,-33,-41,245,-115,-17,-13,-87,-117,-128,-122,-130,-135,-121,-119,-133,-132,-124,-127,-134,-120,-125,-131,-118,-129,-126,-123,-107,-42,-39,-40,-100,-108,-110,-138,-99,-230,-41,-114,-109,-138,-99,-230,]),'TYPEX':([33,34,40,59,62,66,67,71,72,74,76,79,81,84,92,102,106,107,108,114,117,120,123,130,137,147,160,164,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,189,192,194,196,197,199,200,207,238,239,241,245,249,264,271,277,287,298,299,305,306,307,313,316,317,318,319,320,321,322,323,324,325,326,327,328,345,347,352,362,363,366,],[58,-230,58,-25,58,58,58,-62,-60,58,58,58,58,58,58,-141,58,-144,-140,58,-142,58,-143,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-61,-230,-33,58,58,58,58,-47,58,58,58,58,58,58,58,-46,58,58,58,58,58,-177,-188,-185,-180,-178,-182,-187,-186,-184,-179,-183,58,-181,58,58,58,58,58,58,]),'PD':([267,282,],[307,330,]),'IMPORT':([5,8,9,24,],[-230,-215,13,-216,]),'IMAGINARY':([67,79,92,102,106,107,108,117,120,123,147,160,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,189,192,196,238,239,245,249,264,271,277,287,298,299,305,306,307,313,316,317,318,319,320,321,322,323,324,325,326,327,328,345,347,352,362,363,366,],[110,110,110,-141,110,-144,-140,-142,110,-143,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,-230,110,-47,110,110,110,110,110,110,-46,110,110,110,110,110,-177,-188,-185,-180,-178,-182,-187,-186,-184,-179,-183,110,-181,110,110,110,110,110,110,]),'IDENTIFIER':([2,13,14,20,21,23,25,32,39,42,44,47,48,51,52,63,67,76,77,78,79,82,83,92,93,102,106,107,108,117,120,123,125,130,147,154,155,158,159,160,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,189,192,193,196,199,200,201,205,238,239,245,246,249,264,270,271,275,277,280,285,287,298,299,305,306,307,313,316,317,318,319,320,321,322,323,324,325,326,327,328,330,345,347,352,362,363,366,],[7,7,34,36,34,46,-230,-230,-230,81,-230,-224,7,34,-56,91,111,34,34,-74,111,46,-66,111,-230,-141,111,-144,-140,-142,111,-143,194,34,111,-223,-55,34,-19,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,237,-230,34,34,-73,-65,274,-47,111,-18,111,111,309,111,314,111,309,309,111,-46,335,274,111,111,111,-177,-188,-185,-180,-178,-182,-187,-186,-184,-179,-183,111,-181,349,111,111,111,111,111,335,]),'DIVIDEEQ':([96,97,98,99,100,103,104,105,109,110,111,112,113,115,116,118,122,124,161,187,188,190,191,202,203,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,237,248,250,251,263,274,278,279,291,333,334,335,339,],[-97,-102,-93,-85,-90,-98,-86,-88,-94,-96,-99,-89,-91,-116,-92,-101,-95,-138,-139,-104,-105,-103,-106,-113,-115,-87,-117,-128,-122,-130,-135,-121,-119,-133,-132,-124,-127,-134,-120,-125,-131,-118,-129,-126,-123,-107,-100,-108,-110,-138,-99,328,-230,-114,-109,-138,-99,-230,]),'READ':([196,238,239,298,305,],[-230,271,-47,-46,271,]),'$end':([3,4,5,8,9,10,11,24,35,],[-1,0,-230,-215,-230,-214,-218,-216,-217,]),'MALLOC':([196,238,239,298,305,],[-230,275,-47,-46,275,]),'SCAN':([196,238,239,298,305,],[-230,282,-47,-46,282,]),'STRING':([7,13,25,27,28,29,30,47,48,54,56,57,58,60,67,69,70,74,79,89,91,92,94,95,102,106,107,108,117,120,123,126,127,128,129,131,147,154,156,160,162,163,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,189,192,196,197,208,210,238,239,245,247,249,264,271,277,287,298,299,305,306,307,313,316,317,318,319,320,321,322,323,324,325,326,327,328,345,347,352,362,363,366,],[-220,-230,-230,-228,-227,50,-226,-224,-230,-7,-3,-2,-5,-8,103,-9,-10,-230,103,-27,-6,103,-26,-24,-141,103,-144,-140,-142,103,-143,-31,-32,-28,-30,-29,103,-223,-4,103,-16,-14,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,-230,-33,-17,-13,103,-47,103,292,103,103,103,103,103,-46,103,103,103,103,103,-177,-188,-185,-180,-178,-182,-187,-186,-184,-179,-183,103,-181,103,103,103,103,103,103,]),'FOR':([196,238,239,262,276,298,305,],[-230,-230,-47,299,-194,-46,-230,]),'PACKAGE':([0,],[2,]),'PLUSPLUS':([96,97,98,99,100,103,104,105,109,110,112,113,116,118,122,187,188,190,191,211,237,248,250,251,263,274,333,334,335,],[-97,-102,-93,-85,-90,-98,-86,-88,-94,-96,-89,-91,-92,-101,-95,-104,-105,-103,-106,-87,-107,-100,-108,-110,300,-99,-109,300,-99,]),'RBRACK':([67,96,97,98,99,100,103,104,105,109,110,111,112,113,115,116,118,119,121,122,124,161,187,188,190,191,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,232,233,237,248,249,250,251,296,297,333,],[114,-97,-102,-93,-85,-90,-98,-86,-88,-94,-96,-99,-89,-91,-116,-92,-101,164,-15,-95,-138,-139,-104,-105,-103,-106,-87,-117,-128,-122,-130,-135,-121,-119,-133,-132,-124,-127,-134,-120,-125,-131,-118,-129,-126,-123,-137,250,-107,-100,-230,-108,-110,333,-136,-109,]),'LLEQ':([96,97,98,99,100,103,104,105,109,110,111,112,113,115,116,118,122,124,161,187,188,190,191,202,203,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,237,248,250,251,263,274,278,279,291,333,334,335,339,],[-97,-102,-93,-85,-90,-98,-86,-88,-94,-96,-99,-89,-91,-116,-92,-101,-95,-138,-139,-104,-105,-103,-106,-113,-115,-87,-117,-128,-122,-130,-135,-121,-119,-133,-132,-124,-127,-134,-120,-125,-131,-118,-129,-126,-123,-107,-100,-108,-110,-138,-99,323,-230,-114,-109,-138,-99,-230,]),'DIVIDE':([96,97,98,99,100,103,104,105,109,110,111,112,113,115,116,118,121,122,124,146,161,167,187,188,190,191,209,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,237,248,250,251,263,274,279,291,297,312,315,332,333,334,335,339,343,344,346,353,354,361,367,368,],[-97,-102,-93,-85,-90,-98,-86,-88,-94,-96,-99,-89,-91,-116,-92,-101,171,-95,-138,171,-139,171,-104,-105,-103,-106,171,-87,171,171,171,-130,-135,171,171,-133,-132,171,171,-134,171,171,-131,171,-129,171,171,171,-107,-100,-108,-110,-138,-99,171,171,171,171,171,171,-109,-138,-99,171,171,171,171,171,171,171,171,171,]),'TIMES':([67,79,92,96,97,98,99,100,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,120,121,122,123,124,146,147,160,161,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,196,209,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,237,238,239,245,248,249,250,251,263,264,271,274,277,279,287,291,297,298,299,305,306,307,312,313,315,316,317,318,319,320,321,322,323,324,325,326,327,328,332,333,334,335,339,343,344,345,346,347,352,353,354,361,362,363,366,367,368,],[117,117,117,-97,-102,-93,-85,-90,-141,-98,-86,-88,117,-144,-140,-94,-96,-99,-89,-91,-116,-92,-142,-101,117,184,-95,-143,-138,184,117,117,-139,117,184,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,-104,-105,117,-103,-106,117,-230,184,-87,184,184,184,-130,-135,184,184,-133,-132,184,184,-134,184,184,-131,184,-129,184,184,184,-107,117,-47,117,-100,117,-108,-110,-138,117,117,-99,117,184,117,184,184,-46,117,117,117,117,184,117,184,-177,-188,-185,-180,-178,-182,-187,-186,-184,-179,-183,117,-181,184,-109,-138,-99,184,184,184,117,184,117,117,184,184,184,117,117,117,184,184,]),'GG':([96,97,98,99,100,103,104,105,109,110,111,112,113,115,116,118,121,122,124,146,161,167,187,188,190,191,209,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,237,248,250,251,263,274,279,291,297,312,315,332,333,334,335,339,343,344,346,353,354,361,367,368,],[-97,-102,-93,-85,-90,-98,-86,-88,-94,-96,-99,-89,-91,-116,-92,-101,179,-95,-138,179,-139,179,-104,-105,-103,-106,179,-87,179,179,179,-130,-135,179,179,-133,-132,179,179,-134,179,179,-131,179,-129,179,179,179,-107,-100,-108,-110,-138,-99,179,179,179,179,179,179,-109,-138,-99,179,179,179,179,179,179,179,179,179,]),'MINUSMIN':([96,97,98,99,100,103,104,105,109,110,112,113,116,118,122,187,188,190,191,211,237,248,250,251,263,274,333,334,335,],[-97,-102,-93,-85,-90,-98,-86,-88,-94,-96,-89,-91,-92,-101,-95,-104,-105,-103,-106,-87,-107,-100,-108,-110,301,-99,-109,301,-99,]),'AMPEQ':([96,97,98,99,100,103,104,105,109,110,111,112,113,115,116,118,122,124,161,187,188,190,191,202,203,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,237,248,250,251,263,274,278,279,291,333,334,335,339,],[-97,-102,-93,-85,-90,-98,-86,-88,-94,-96,-99,-89,-91,-116,-92,-101,-95,-138,-139,-104,-105,-103,-106,-113,-115,-87,-117,-128,-122,-130,-135,-121,-119,-133,-132,-124,-127,-134,-120,-125,-131,-118,-129,-126,-123,-107,-100,-108,-110,-138,-99,326,-230,-114,-109,-138,-99,-230,]),'LPAREN':([13,14,21,23,33,34,36,37,40,53,54,56,57,58,59,60,62,66,67,69,70,71,72,74,76,79,81,84,89,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,120,122,123,124,126,127,128,129,130,131,137,147,156,160,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,196,197,199,200,207,208,210,211,237,238,239,241,245,248,249,250,251,263,264,271,274,277,287,298,299,305,306,307,313,316,317,318,319,320,321,322,323,324,325,326,327,328,333,334,335,345,347,352,362,363,366,],[25,32,39,44,62,-230,-82,76,62,76,-7,-3,-2,-5,-25,-8,62,62,120,-9,-10,-62,-60,130,62,120,62,62,-27,-6,120,-26,-24,-97,-102,-93,-85,-90,160,-141,-98,-86,-88,120,-144,-140,-94,-96,-99,-89,-91,62,-92,-142,-101,166,-95,-143,192,-31,-32,-28,-30,62,-29,62,120,-4,120,-16,-14,62,160,166,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,-104,-105,120,-103,-106,120,-61,-230,-33,62,62,62,-17,-13,-87,-107,120,-47,62,120,-100,120,-108,-110,192,120,120,-99,120,120,-46,120,120,120,120,120,-177,-188,-185,-180,-178,-182,-187,-186,-184,-179,-183,120,-181,-109,192,-99,120,120,120,120,120,120,]),'INTEGER':([67,79,92,102,106,107,108,117,120,123,147,160,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,189,192,196,238,239,245,249,264,271,277,287,298,299,305,306,307,313,316,317,318,319,320,321,322,323,324,325,326,327,328,345,347,352,362,363,366,],[109,109,109,-141,109,-144,-140,-142,109,-143,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,-230,109,-47,109,109,109,109,109,109,-46,109,109,109,109,109,-177,-188,-185,-180,-178,-182,-187,-186,-184,-179,-183,109,-181,109,109,109,109,109,109,]),'VAR':([5,8,9,10,11,24,35,196,238,239,298,305,],[-230,-215,-230,21,-218,-216,-217,-230,21,-47,-46,21,]),'TTYPE':([23,33,34,40,44,59,62,66,67,71,72,74,76,79,81,82,83,84,92,102,106,107,108,114,117,120,123,130,137,147,160,164,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,189,192,194,196,197,199,200,205,207,238,239,241,245,249,264,271,277,287,298,299,305,306,307,313,316,317,318,319,320,321,322,323,324,325,326,327,328,345,347,352,362,363,366,],[42,63,-230,63,-230,-25,63,63,63,-62,-60,63,63,63,63,42,-66,63,63,-141,63,-144,-140,63,-142,63,-143,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-61,-230,-33,63,63,-65,63,63,-47,63,63,63,63,63,63,63,-46,63,63,63,63,63,-177,-188,-185,-180,-178,-182,-187,-186,-184,-179,-183,63,-181,63,63,63,63,63,63,]),'NOTEQ':([96,97,98,99,100,103,104,105,109,110,111,112,113,115,116,118,121,122,124,146,161,167,187,188,190,191,209,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,237,248,250,251,263,274,279,291,297,312,315,332,333,334,335,339,343,344,346,353,354,361,367,368,],[-97,-102,-93,-85,-90,-98,-86,-88,-94,-96,-99,-89,-91,-116,-92,-101,180,-95,-138,180,-139,180,-104,-105,-103,-106,180,-87,180,-128,-122,-130,-135,-121,-119,-133,-132,-124,-127,-134,-120,-125,-131,180,-129,-126,-123,180,-107,-100,-108,-110,-138,-99,180,180,180,180,180,180,-109,-138,-99,180,180,180,180,180,180,180,180,180,]),'ELSE':([289,350,],[-43,356,]),'IF':([196,238,239,298,305,356,],[-230,287,-47,-46,287,287,]),'WRITE':([196,238,239,298,305,],[-230,277,-47,-46,277,]),'LBRACE':([54,56,57,58,60,65,69,70,74,75,89,91,94,95,96,97,98,99,100,103,104,105,109,110,111,112,113,115,116,118,122,124,126,127,128,129,131,133,134,146,156,161,162,163,187,188,190,191,196,197,202,203,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,237,238,239,248,250,251,253,257,258,263,276,279,286,291,298,299,300,301,305,332,333,334,335,336,337,338,339,341,346,348,356,366,369,370,],[-7,-3,-2,-5,-8,93,-9,-10,-230,-230,-27,-6,-26,-24,-97,-102,-93,-85,-90,-98,-86,-88,-94,-96,-99,-89,-91,-116,-92,-101,-95,-138,-31,-32,-28,-30,-29,-44,196,-230,-4,-139,-16,-14,-104,-105,-103,-106,-230,-33,-113,-115,-17,-13,-87,-117,-128,-122,-130,-135,-121,-119,-133,-132,-124,-127,-134,-120,-125,-131,-118,-129,-126,-123,-107,-230,-47,-100,-108,-110,-167,-169,-168,-138,-44,-173,-170,-114,-46,-230,-174,-175,-230,-230,-109,-138,-99,-196,-195,-230,-198,-197,-79,-176,-230,-230,-199,-166,]),'STRUCT':([33,34,40,59,62,66,67,71,72,74,76,79,81,84,92,102,106,107,108,114,117,120,123,130,137,147,160,164,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,189,192,194,196,197,199,200,207,238,239,241,245,249,264,271,277,287,298,299,305,306,307,313,316,317,318,319,320,321,322,323,324,325,326,327,328,345,347,352,362,363,366,],[65,-230,65,-25,65,65,65,-62,-60,65,65,65,65,65,65,-141,65,-144,-140,65,-142,65,-143,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-61,-230,-33,65,65,65,65,-47,65,65,65,65,65,65,65,-46,65,65,65,65,65,-177,-188,-185,-180,-178,-182,-187,-186,-184,-179,-183,65,-181,65,65,65,65,65,65,]),'PLUSEQ':([96,97,98,99,100,103,104,105,109,110,111,112,113,115,116,118,122,124,161,187,188,190,191,202,203,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,237,248,250,251,263,274,278,279,291,333,334,335,339,],[-97,-102,-93,-85,-90,-98,-86,-88,-94,-96,-99,-89,-91,-116,-92,-101,-95,-138,-139,-104,-105,-103,-106,-113,-115,-87,-117,-128,-122,-130,-135,-121,-119,-133,-132,-124,-127,-134,-120,-125,-131,-118,-129,-126,-123,-107,-100,-108,-110,-138,-99,320,-230,-114,-109,-138,-99,-230,]),'POINTER':([33,34,40,59,62,66,67,71,72,74,76,79,81,84,92,102,106,107,108,114,117,120,123,130,137,147,160,164,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,189,192,194,196,197,199,200,207,238,239,241,245,249,264,271,277,287,298,299,305,306,307,313,316,317,318,319,320,321,322,323,324,325,326,327,328,345,347,352,362,363,366,],[59,-230,59,-25,59,59,59,-62,-60,59,59,59,59,59,59,-141,59,-144,-140,59,-142,59,-143,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-61,-230,-33,59,59,59,59,-47,59,59,59,59,59,59,59,-46,59,59,59,59,59,-177,-188,-185,-180,-178,-182,-187,-186,-184,-179,-183,59,-181,59,59,59,59,59,59,]),'FLOAT':([67,79,92,102,106,107,108,117,120,123,147,160,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,189,192,196,238,239,245,249,264,271,277,287,298,299,305,306,307,313,316,317,318,319,320,321,322,323,324,325,326,327,328,345,347,352,362,363,366,],[122,122,122,-141,122,-144,-140,-142,122,-143,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,-230,122,-47,122,122,122,122,122,122,-46,122,122,122,122,122,-177,-188,-185,-180,-178,-182,-187,-186,-184,-179,-183,122,-181,122,122,122,122,122,122,]),'AMPERS':([67,79,92,96,97,98,99,100,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,120,121,122,123,124,146,147,160,161,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,196,209,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,237,238,239,245,248,249,250,251,263,264,271,274,277,279,287,291,297,298,299,305,306,307,312,313,315,316,317,318,319,320,321,322,323,324,325,326,327,328,332,333,334,335,339,343,344,345,346,347,352,353,354,361,362,363,366,367,368,],[123,123,123,-97,-102,-93,-85,-90,-141,-98,-86,-88,123,-144,-140,-94,-96,-99,-89,-91,-116,-92,-142,-101,123,176,-95,-143,-138,176,123,123,-139,123,176,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,-104,-105,123,-103,-106,123,-230,176,-87,176,176,176,-130,-135,176,176,-133,-132,176,176,-134,176,176,-131,176,-129,176,176,176,-107,123,-47,123,-100,123,-108,-110,-138,123,123,-99,123,176,123,176,176,-46,123,123,123,123,176,123,176,-177,-188,-185,-180,-178,-182,-187,-186,-184,-179,-183,123,-181,176,-109,-138,-99,176,176,176,123,176,123,123,176,176,176,123,123,123,176,176,]),'LBRACK':([33,34,40,59,62,66,67,71,72,74,76,79,81,84,92,96,97,98,99,100,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,120,122,123,124,130,137,147,160,164,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,196,197,199,200,207,211,237,238,239,241,245,248,249,250,251,263,264,271,274,277,287,298,299,305,306,307,313,316,317,318,319,320,321,322,323,324,325,326,327,328,333,334,335,345,347,352,362,363,366,],[67,-230,67,-25,67,67,67,-62,-60,67,67,67,67,67,67,-97,-102,-93,-85,-90,-141,-98,-86,-88,67,-144,-140,-94,-96,-99,-89,-91,67,-92,-142,-101,67,-95,-143,189,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-104,-105,67,-103,-106,67,-61,-230,-33,67,67,67,-87,-107,67,-47,67,67,-100,67,-108,-110,189,67,67,-99,67,67,-46,67,67,67,67,67,-177,-188,-185,-180,-178,-182,-187,-186,-184,-179,-183,67,-181,-109,189,-99,67,67,67,67,67,67,]),'OREQ':([96,97,98,99,100,103,104,105,109,110,111,112,113,115,116,118,122,124,161,187,188,190,191,202,203,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,237,248,250,251,263,274,278,279,291,333,334,335,339,],[-97,-102,-93,-85,-90,-98,-86,-88,-94,-96,-99,-89,-91,-116,-92,-101,-95,-138,-139,-104,-105,-103,-106,-113,-115,-87,-117,-128,-122,-130,-135,-121,-119,-133,-132,-124,-127,-134,-120,-125,-131,-118,-129,-126,-123,-107,-100,-108,-110,-138,-99,324,-230,-114,-109,-138,-99,-230,]),'BREAK':([196,238,239,298,305,],[-230,280,-47,-46,280,]),'LEQ':([96,97,98,99,100,103,104,105,109,110,111,112,113,115,116,118,121,122,124,146,161,167,187,188,190,191,209,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,237,248,250,251,263,274,279,291,297,312,315,332,333,334,335,339,343,344,346,353,354,361,367,368,],[-97,-102,-93,-85,-90,-98,-86,-88,-94,-96,-99,-89,-91,-116,-92,-101,186,-95,-138,186,-139,186,-104,-105,-103,-106,186,-87,186,-128,-122,-130,-135,-121,-119,-133,-132,-124,-127,-134,-120,-125,-131,186,-129,-126,-123,186,-107,-100,-108,-110,-138,-99,186,186,186,186,186,186,-109,-138,-99,186,186,186,186,186,186,186,186,186,]),'CONTINUE':([196,238,239,298,305,],[-230,270,-47,-46,270,]),'NOT':([67,79,92,102,106,107,108,117,120,123,147,160,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,189,192,196,238,239,245,249,264,271,277,287,298,299,305,306,307,313,316,317,318,319,320,321,322,323,324,325,326,327,328,345,347,352,362,363,366,],[107,107,107,-141,107,-144,-140,-142,107,-143,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,-230,107,-47,107,107,107,107,107,107,-46,107,107,107,107,107,-177,-188,-185,-180,-178,-182,-187,-186,-184,-179,-183,107,-181,107,107,107,107,107,107,]),'TYPE':([5,8,9,10,11,24,35,196,238,239,298,305,],[-230,-215,-230,23,-218,-216,-217,-230,23,-47,-46,23,]),'OR':([96,97,98,99,100,103,104,105,109,110,111,112,113,115,116,118,121,122,124,146,161,167,187,188,190,191,209,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,237,248,250,251,263,274,279,291,297,312,315,332,333,334,335,339,343,344,346,353,354,361,367,368,],[-97,-102,-93,-85,-90,-98,-86,-88,-94,-96,-99,-89,-91,-116,-92,-101,178,-95,-138,178,-139,178,-104,-105,-103,-106,178,-87,178,-128,178,-130,-135,178,178,-133,-132,178,-127,-134,178,-125,-131,178,-129,-126,178,178,-107,-100,-108,-110,-138,-99,178,178,178,178,178,178,-109,-138,-99,178,178,178,178,178,178,178,178,178,]),'MOD':([96,97,98,99,100,103,104,105,109,110,111,112,113,115,116,118,121,122,124,146,161,167,187,188,190,191,209,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,237,248,250,251,263,274,279,291,297,312,315,332,333,334,335,339,343,344,346,353,354,361,367,368,],[-97,-102,-93,-85,-90,-98,-86,-88,-94,-96,-99,-89,-91,-116,-92,-101,182,-95,-138,182,-139,182,-104,-105,-103,-106,182,-87,182,182,182,-130,-135,182,182,-133,-132,182,182,-134,182,182,-131,182,-129,182,182,182,-107,-100,-108,-110,-138,-99,182,182,182,182,182,182,-109,-138,-99,182,182,182,182,182,182,182,182,182,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'FunctionBody':([75,],[132,]),'Conversion':([67,79,92,106,120,147,160,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,189,192,238,245,249,264,271,277,287,299,305,306,307,313,327,345,347,352,362,363,366,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'ContinueStmt':([238,305,],[252,252,]),'ParameterListOpt':([76,130,],[136,136,]),'ExpressionRep':([146,279,339,],[202,202,202,]),'ExpressionStmt':([238,299,305,366,],[253,253,253,253,]),'ScanStmt':([238,305,],[254,254,]),'Statement':([238,305,],[255,342,]),'ParameterDeclCommaRep':([76,130,],[138,138,]),'Selector':([124,263,334,],[190,190,190,]),'IfStmt':([238,305,356,],[256,256,364,]),'StatementRep':([196,],[238,]),'AliasDecl':([23,82,],[43,43,]),'PackageNameDotOpt':([13,48,],[29,29,]),'TypeName':([33,40,62,66,67,74,76,79,81,84,92,106,114,120,130,137,147,160,164,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,189,192,199,200,207,238,241,245,249,264,271,277,287,299,305,306,307,313,327,345,347,352,362,363,366,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'ParametersList':([76,130,],[140,140,]),'ParameterDecl':([76,130,199,200,],[141,141,243,244,]),'FunctionName':([20,],[37,]),'ReadStmt':([238,305,],[259,259,]),'LabeledStmt':([238,305,],[260,260,]),'StatementList':([196,],[240,]),'ConditionOpt':([352,],[360,]),'ElementType':([114,164,],[163,210,]),'PointerType':([33,40,62,66,67,74,76,79,81,84,92,106,114,120,130,137,147,160,164,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,189,192,199,200,207,238,241,245,249,264,271,277,287,299,305,306,307,313,327,345,347,352,362,363,366,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'VarSpecRep':([39,],[77,]),'VarDecl':([10,238,305,],[22,22,22,]),'PrintStmt':([238,305,],[261,261,]),'Tag':([247,],[294,]),'CreateForScope':([238,305,],[262,262,]),'ConstSpecRep':([32,],[51,]),'PrimaryExpr':([67,79,92,106,120,147,160,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,189,192,238,245,249,264,271,277,287,299,305,306,307,313,327,345,347,352,362,363,366,],[124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,263,124,124,124,124,124,124,334,263,124,124,124,124,124,124,124,124,124,263,]),'TypeSpec':([23,82,],[45,152,]),'Index':([124,263,334,],[187,187,187,]),'Parameters':([37,53,74,],[74,74,126,]),'UnaryOp':([67,79,92,106,120,147,160,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,189,192,238,245,249,264,271,277,287,299,305,306,307,313,327,345,347,352,362,363,366,],[106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'PackageName':([2,13,48,],[6,28,28,]),'ExpressionListPureOpt':([264,],[302,]),'Label':([238,270,280,285,305,],[266,311,311,331,266,]),'FunctionDecl':([10,],[15,]),'TopLevelDecl':([10,],[16,]),'IdentifierList':([14,21,51,76,77,130,158,199,200,],[33,40,33,137,40,137,207,241,241,]),'TypeLit':([33,40,62,66,67,74,76,79,81,84,92,106,114,120,130,137,147,160,164,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,189,192,199,200,207,238,241,245,249,264,271,277,287,299,305,306,307,313,327,345,347,352,362,363,366,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'ImportDeclRep':([5,],[9,]),'PackageClause':([0,],[1,]),'ResultOpt':([74,],[128,]),'FloatLiteral':([67,79,92,106,120,147,160,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,189,192,238,245,249,264,271,277,287,299,305,306,307,313,327,345,347,352,362,363,366,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'IncDecStmt':([238,299,305,366,],[258,258,258,258,]),'GotoStmt':([238,305,],[268,268,]),'TopLevelDeclRep':([9,],[10,]),'Operand':([67,79,92,106,120,147,160,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,189,192,238,245,249,264,271,277,287,299,305,306,307,313,327,345,347,352,362,363,366,],[118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,]),'assign_op':([278,],[327,]),'Signature':([37,53,],[75,89,]),'Block':([75,238,305,332,338,356,],[135,269,269,350,351,365,]),'ConstDecl':([10,238,305,],[18,18,18,]),'VarSpec':([21,77,],[38,144,]),'Result':([74,],[131,]),'Assignment':([238,299,305,366,],[257,257,257,257,]),'ExpressionListTypeOpt':([192,],[236,]),'Pointer':([33,40,62,66,67,74,76,79,81,84,92,106,114,120,130,137,147,160,164,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,189,192,199,200,207,238,241,245,249,264,271,277,287,299,305,306,307,313,327,345,347,352,362,363,366,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'Literal':([67,79,92,106,120,147,160,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,189,192,238,245,249,264,271,277,287,299,305,306,307,313,327,345,347,352,362,363,366,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'MallocStmt':([238,305,],[272,272,]),'ImportDecl':([9,],[12,]),'OperandName':([67,79,92,106,120,147,160,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,189,192,238,245,249,264,271,277,287,299,305,306,307,313,327,345,347,352,362,363,366,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'AssignOp':([278,],[316,]),'FieldDeclRep':([93,],[158,]),'start':([0,],[4,]),'Declaration':([10,238,305,],[17,273,273,]),'WriteStmt':([238,305,],[265,265,]),'Condition':([299,352,],[336,358,]),'StructType':([33,40,62,66,67,74,76,79,81,84,92,106,114,120,130,137,147,160,164,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,189,192,199,200,207,238,241,245,249,264,271,277,287,299,305,306,307,313,327,345,347,352,362,363,366,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'IntLiteral':([67,79,92,106,120,147,160,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,189,192,238,245,249,264,271,277,287,299,305,306,307,313,327,345,347,352,362,363,366,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'ConstSpec':([14,51,],[31,87,]),'epsilon':([5,9,13,25,32,33,34,39,44,48,74,75,76,80,93,130,146,189,192,196,238,247,249,264,270,279,280,299,305,332,338,339,350,352,356,366,],[8,11,27,47,52,61,71,78,83,27,129,133,142,148,159,142,203,232,234,239,276,293,232,303,308,203,308,337,276,133,133,203,355,359,133,370,]),'ConditionBlockOpt':([299,],[338,]),'ExpressionList':([79,92,147,192,238,264,299,305,327,366,],[145,157,204,235,278,304,278,278,348,278,]),'SimpleStmt':([238,299,305,366,],[283,340,283,369,]),'ImportSpecRep':([25,],[48,]),'Expression':([67,79,92,120,147,160,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,189,192,238,245,249,264,271,277,287,299,305,306,307,313,327,345,347,352,362,363,366,],[121,146,146,167,146,209,167,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,146,279,291,297,146,312,315,332,339,279,343,344,346,146,353,354,361,367,368,279,]),'ImportPath':([29,],[49,]),'Source':([0,],[3,]),'ExpressionOpt':([189,249,],[231,296,]),'StringLiteral':([67,79,92,106,120,147,160,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,189,192,238,245,249,264,271,277,287,299,305,306,307,313,327,345,347,352,362,363,366,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'IdentifierRep':([34,],[72,]),'TypeExprListOpt':([33,],[68,]),'ReturnStmt':([238,305,],[281,281,]),'FunctionType':([33,40,62,66,67,74,76,79,81,84,92,106,114,120,130,137,147,160,164,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,189,192,199,200,207,238,241,245,249,264,271,277,287,299,305,306,307,313,327,345,347,352,362,363,366,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'Slice':([124,263,334,],[188,188,188,]),'ArrayType':([33,40,62,66,67,74,76,79,81,84,92,106,114,120,130,137,147,160,164,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,189,192,199,200,207,238,241,245,249,264,271,277,287,299,305,306,307,313,327,345,347,352,362,363,366,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'ForStmt':([238,305,],[284,284,]),'Arguments':([124,263,334,],[191,191,191,]),'Function':([37,],[73,]),'ImportSpec':([13,48,],[26,86,]),'Type':([33,40,62,66,67,74,76,79,81,84,92,106,114,120,130,137,147,160,164,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,189,192,199,200,207,238,241,245,249,264,271,277,287,299,305,306,307,313,327,345,347,352,362,363,366,],[55,80,90,94,101,127,139,101,150,153,101,101,162,165,195,198,101,101,162,165,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,242,242,247,101,290,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'TypeSpecRep':([44,],[82,]),'CreateScope':([75,238,305,332,338,356,],[134,134,134,134,134,134,]),'LabelOpt':([270,280,],[310,329,]),'TypeDecl':([10,238,305,],[19,19,19,]),'BaseType':([66,],[95,]),'UnaryExpr':([67,79,92,106,120,147,160,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,189,192,238,245,249,264,271,277,287,299,305,306,307,313,327,345,347,352,362,363,366,],[115,115,115,161,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'RuneLiteral':([67,79,92,106,120,147,160,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,189,192,238,245,249,264,271,277,287,299,305,306,307,313,327,345,347,352,362,363,366,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'ArrayLength':([67,],[119,]),'ForClause':([299,],[341,]),'TypeOpt':([33,],[64,]),'ShortVarDecl':([238,299,305,366,],[286,286,286,286,]),'TypeDef':([23,82,],[41,41,]),'FieldDecl':([158,],[206,]),'BreakStmt':([238,305,],[288,288,]),'TagOpt':([247,],[295,]),'BasicLit':([67,79,92,106,120,147,160,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,189,192,238,245,249,264,271,277,287,299,305,306,307,313,327,345,347,352,362,363,366,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'ImgLiteral':([67,79,92,106,120,147,160,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,189,192,238,245,249,264,271,277,287,299,305,306,307,313,327,345,347,352,362,363,366,],[113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'ExpressionListOpt':([80,],[149,]),'ElseOpt':([350,],[357,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> Source','start',1,'p_start','parser.py',206),
  ('Type -> TypeName','Type',1,'p_type','parser.py',215),
  ('Type -> TypeLit','Type',1,'p_type','parser.py',216),
  ('Type -> LPAREN Type RPAREN','Type',3,'p_type','parser.py',217),
  ('TypeName -> TYPEX','TypeName',1,'p_type_name','parser.py',225),
  ('TypeName -> TTYPE IDENTIFIER','TypeName',2,'p_type_name','parser.py',226),
  ('TypeLit -> ArrayType','TypeLit',1,'p_type_lit','parser.py',239),
  ('TypeLit -> StructType','TypeLit',1,'p_type_lit','parser.py',240),
  ('TypeLit -> PointerType','TypeLit',1,'p_type_lit','parser.py',241),
  ('TypeLit -> FunctionType','TypeLit',1,'p_type_lit','parser.py',242),
  ('TypeOpt -> Type','TypeOpt',1,'p_type_opt','parser.py',246),
  ('TypeOpt -> epsilon','TypeOpt',1,'p_type_opt','parser.py',247),
  ('ArrayType -> LBRACK ArrayLength RBRACK ElementType','ArrayType',4,'p_array_type','parser.py',259),
  ('ArrayType -> LBRACK RBRACK ElementType','ArrayType',3,'p_array_type','parser.py',260),
  ('ArrayLength -> Expression','ArrayLength',1,'p_array_length','parser.py',268),
  ('ElementType -> Type','ElementType',1,'p_element_type','parser.py',274),
  ('StructType -> STRUCT LBRACE FieldDeclRep RBRACE','StructType',4,'p_struct_type','parser.py',283),
  ('FieldDeclRep -> FieldDeclRep FieldDecl SEMICOL','FieldDeclRep',3,'p_field_decl_rep','parser.py',288),
  ('FieldDeclRep -> epsilon','FieldDeclRep',1,'p_field_decl_rep','parser.py',289),
  ('FieldDecl -> IdentifierList Type TagOpt','FieldDecl',3,'p_field_decl','parser.py',297),
  ('TagOpt -> Tag','TagOpt',1,'p_tag_opt','parser.py',307),
  ('TagOpt -> epsilon','TagOpt',1,'p_tag_opt','parser.py',308),
  ('Tag -> STRING','Tag',1,'p_tag','parser.py',315),
  ('PointerType -> Pointer BaseType','PointerType',2,'p_pointer_type','parser.py',324),
  ('Pointer -> POINTER','Pointer',1,'p_pointer','parser.py',330),
  ('BaseType -> Type','BaseType',1,'p_base_type','parser.py',334),
  ('FunctionType -> FUNC Signature','FunctionType',2,'p_function_type','parser.py',343),
  ('Signature -> Parameters ResultOpt','Signature',2,'p_signature','parser.py',347),
  ('ResultOpt -> Result','ResultOpt',1,'p_result_opt','parser.py',371),
  ('ResultOpt -> epsilon','ResultOpt',1,'p_result_opt','parser.py',372),
  ('Result -> Parameters','Result',1,'p_result','parser.py',379),
  ('Result -> Type','Result',1,'p_result','parser.py',380),
  ('Parameters -> LPAREN ParameterListOpt RPAREN','Parameters',3,'p_parameters','parser.py',387),
  ('ParameterListOpt -> ParametersList','ParameterListOpt',1,'p_parameter_list_opt','parser.py',391),
  ('ParameterListOpt -> epsilon','ParameterListOpt',1,'p_parameter_list_opt','parser.py',392),
  ('ParametersList -> Type','ParametersList',1,'p_parameter_list','parser.py',399),
  ('ParametersList -> IdentifierList Type','ParametersList',2,'p_parameter_list','parser.py',400),
  ('ParametersList -> ParameterDeclCommaRep','ParametersList',1,'p_parameter_list','parser.py',401),
  ('ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA ParameterDecl','ParameterDeclCommaRep',3,'p_parameter_decl_comma_rep','parser.py',416),
  ('ParameterDeclCommaRep -> ParameterDecl COMMA ParameterDecl','ParameterDeclCommaRep',3,'p_parameter_decl_comma_rep','parser.py',417),
  ('ParameterDecl -> IdentifierList Type','ParameterDecl',2,'p_parameter_decl','parser.py',425),
  ('ParameterDecl -> Type','ParameterDecl',1,'p_parameter_decl','parser.py',426),
  ('Block -> CreateScope LBRACE StatementList RBRACE','Block',4,'p_block','parser.py',441),
  ('CreateScope -> epsilon','CreateScope',1,'p_create_scope','parser.py',448),
  ('StatementList -> StatementRep','StatementList',1,'p_statement_list','parser.py',454),
  ('StatementRep -> StatementRep Statement SEMICOL','StatementRep',3,'p_statement_rep','parser.py',458),
  ('StatementRep -> epsilon','StatementRep',1,'p_statement_rep','parser.py',459),
  ('Declaration -> ConstDecl','Declaration',1,'p_decl','parser.py',479),
  ('Declaration -> TypeDecl','Declaration',1,'p_decl','parser.py',480),
  ('Declaration -> VarDecl','Declaration',1,'p_decl','parser.py',481),
  ('TopLevelDecl -> Declaration','TopLevelDecl',1,'p_toplevel_decl','parser.py',485),
  ('TopLevelDecl -> FunctionDecl','TopLevelDecl',1,'p_toplevel_decl','parser.py',486),
  ('ConstDecl -> CONST ConstSpec','ConstDecl',2,'p_const_decl','parser.py',496),
  ('ConstDecl -> CONST LPAREN ConstSpecRep RPAREN','ConstDecl',4,'p_const_decl','parser.py',497),
  ('ConstSpecRep -> ConstSpecRep ConstSpec SEMICOL','ConstSpecRep',3,'p_const_spec_rep','parser.py',505),
  ('ConstSpecRep -> epsilon','ConstSpecRep',1,'p_const_spec_rep','parser.py',506),
  ('ConstSpec -> IdentifierList TypeExprListOpt','ConstSpec',2,'p_const_spec','parser.py',515),
  ('TypeExprListOpt -> TypeOpt EQUAL ExpressionList','TypeExprListOpt',3,'p_type_expr_list','parser.py',546),
  ('TypeExprListOpt -> epsilon','TypeExprListOpt',1,'p_type_expr_list','parser.py',547),
  ('IdentifierList -> IDENTIFIER IdentifierRep','IdentifierList',2,'p_identifier_list','parser.py',558),
  ('IdentifierRep -> IdentifierRep COMMA IDENTIFIER','IdentifierRep',3,'p_identifier_rep','parser.py',563),
  ('IdentifierRep -> epsilon','IdentifierRep',1,'p_identifier_rep','parser.py',564),
  ('TypeDecl -> TYPE TypeSpec','TypeDecl',2,'p_type_decl','parser.py',577),
  ('TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN','TypeDecl',4,'p_type_decl','parser.py',578),
  ('TypeSpecRep -> TypeSpecRep TypeSpec SEMICOL','TypeSpecRep',3,'p_type_spec_rep','parser.py',582),
  ('TypeSpecRep -> epsilon','TypeSpecRep',1,'p_type_spec_rep','parser.py',583),
  ('TypeSpec -> AliasDecl','TypeSpec',1,'p_type_spec','parser.py',591),
  ('TypeSpec -> TypeDef','TypeSpec',1,'p_type_spec','parser.py',592),
  ('AliasDecl -> IDENTIFIER EQUAL Type','AliasDecl',3,'p_alias_decl','parser.py',596),
  ('TypeDef -> TTYPE IDENTIFIER Type','TypeDef',3,'p_type_def','parser.py',608),
  ('VarDecl -> VAR VarSpec','VarDecl',2,'p_var_decl','parser.py',620),
  ('VarDecl -> VAR LPAREN VarSpecRep RPAREN','VarDecl',4,'p_var_decl','parser.py',621),
  ('VarSpecRep -> VarSpecRep VarSpec SEMICOL','VarSpecRep',3,'p_var_spec_rep','parser.py',629),
  ('VarSpecRep -> epsilon','VarSpecRep',1,'p_var_spec_rep','parser.py',630),
  ('VarSpec -> IdentifierList Type ExpressionListOpt','VarSpec',3,'p_var_spec','parser.py',638),
  ('VarSpec -> IdentifierList EQUAL ExpressionList','VarSpec',3,'p_var_spec','parser.py',639),
  ('ExpressionListOpt -> EQUAL ExpressionList','ExpressionListOpt',2,'p_expr_list_opt','parser.py',713),
  ('ExpressionListOpt -> epsilon','ExpressionListOpt',1,'p_expr_list_opt','parser.py',714),
  ('ShortVarDecl -> IDENTIFIER COLONEQ Expression','ShortVarDecl',3,'p_short_var_decl','parser.py',726),
  ('FunctionDecl -> FUNC FunctionName Function','FunctionDecl',3,'p_func_decl','parser.py',750),
  ('FunctionDecl -> FUNC FunctionName Signature','FunctionDecl',3,'p_func_decl','parser.py',751),
  ('FunctionName -> IDENTIFIER','FunctionName',1,'p_func_name','parser.py',791),
  ('Function -> Signature FunctionBody','Function',2,'p_func','parser.py',801),
  ('FunctionBody -> Block','FunctionBody',1,'p_func_body','parser.py',805),
  ('Operand -> Literal','Operand',1,'p_operand','parser.py',824),
  ('Operand -> OperandName','Operand',1,'p_operand','parser.py',825),
  ('Operand -> LPAREN Expression RPAREN','Operand',3,'p_operand','parser.py',826),
  ('Literal -> BasicLit','Literal',1,'p_literal','parser.py',833),
  ('BasicLit -> IntLiteral','BasicLit',1,'p_basic_lit','parser.py',838),
  ('BasicLit -> FloatLiteral','BasicLit',1,'p_basic_lit','parser.py',839),
  ('BasicLit -> ImgLiteral','BasicLit',1,'p_basic_lit','parser.py',840),
  ('BasicLit -> RuneLiteral','BasicLit',1,'p_basic_lit','parser.py',841),
  ('BasicLit -> StringLiteral','BasicLit',1,'p_basic_lit','parser.py',842),
  ('IntLiteral -> INTEGER','IntLiteral',1,'p_int_literal','parser.py',846),
  ('FloatLiteral -> FLOAT','FloatLiteral',1,'p_float_literal','parser.py',854),
  ('ImgLiteral -> IMAGINARY','ImgLiteral',1,'p_img_literal','parser.py',862),
  ('RuneLiteral -> RUNE','RuneLiteral',1,'p_rune_literal','parser.py',870),
  ('StringLiteral -> STRING','StringLiteral',1,'p_string_literal','parser.py',878),
  ('OperandName -> IDENTIFIER','OperandName',1,'p_operand_name','parser.py',889),
  ('Conversion -> Type LPAREN Expression RPAREN','Conversion',4,'p_conversion','parser.py',908),
  ('PrimaryExpr -> Operand','PrimaryExpr',1,'p_prim_expr','parser.py',923),
  ('PrimaryExpr -> Conversion','PrimaryExpr',1,'p_prim_expr','parser.py',924),
  ('PrimaryExpr -> PrimaryExpr Selector','PrimaryExpr',2,'p_prim_expr','parser.py',925),
  ('PrimaryExpr -> PrimaryExpr Index','PrimaryExpr',2,'p_prim_expr','parser.py',926),
  ('PrimaryExpr -> PrimaryExpr Slice','PrimaryExpr',2,'p_prim_expr','parser.py',927),
  ('PrimaryExpr -> PrimaryExpr Arguments','PrimaryExpr',2,'p_prim_expr','parser.py',928),
  ('Selector -> DOT IDENTIFIER','Selector',2,'p_selector','parser.py',1115),
  ('Index -> LBRACK Expression RBRACK','Index',3,'p_index','parser.py',1120),
  ('Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK','Slice',5,'p_slice','parser.py',1125),
  ('Arguments -> LPAREN ExpressionListTypeOpt RPAREN','Arguments',3,'p_argument','parser.py',1139),
  ('ExpressionListTypeOpt -> ExpressionList','ExpressionListTypeOpt',1,'p_expr_list_type_opt','parser.py',1145),
  ('ExpressionListTypeOpt -> epsilon','ExpressionListTypeOpt',1,'p_expr_list_type_opt','parser.py',1146),
  ('ExpressionList -> Expression ExpressionRep','ExpressionList',2,'p_expr_list','parser.py',1169),
  ('ExpressionRep -> ExpressionRep COMMA Expression','ExpressionRep',3,'p_expr_rep','parser.py',1174),
  ('ExpressionRep -> epsilon','ExpressionRep',1,'p_expr_rep','parser.py',1175),
  ('Expression -> UnaryExpr','Expression',1,'p_expression','parser.py',1188),
  ('Expression -> Expression OROR Expression','Expression',3,'p_expression','parser.py',1189),
  ('Expression -> Expression AMPAMP Expression','Expression',3,'p_expression','parser.py',1190),
  ('Expression -> Expression EQEQ Expression','Expression',3,'p_expression','parser.py',1191),
  ('Expression -> Expression NOTEQ Expression','Expression',3,'p_expression','parser.py',1192),
  ('Expression -> Expression LESS Expression','Expression',3,'p_expression','parser.py',1193),
  ('Expression -> Expression GREAT Expression','Expression',3,'p_expression','parser.py',1194),
  ('Expression -> Expression LEQ Expression','Expression',3,'p_expression','parser.py',1195),
  ('Expression -> Expression GEQ Expression','Expression',3,'p_expression','parser.py',1196),
  ('Expression -> Expression PLUS Expression','Expression',3,'p_expression','parser.py',1197),
  ('Expression -> Expression MINUS Expression','Expression',3,'p_expression','parser.py',1198),
  ('Expression -> Expression OR Expression','Expression',3,'p_expression','parser.py',1199),
  ('Expression -> Expression CARET Expression','Expression',3,'p_expression','parser.py',1200),
  ('Expression -> Expression TIMES Expression','Expression',3,'p_expression','parser.py',1201),
  ('Expression -> Expression DIVIDE Expression','Expression',3,'p_expression','parser.py',1202),
  ('Expression -> Expression MOD Expression','Expression',3,'p_expression','parser.py',1203),
  ('Expression -> Expression AMPERS Expression','Expression',3,'p_expression','parser.py',1204),
  ('Expression -> Expression LL Expression','Expression',3,'p_expression','parser.py',1205),
  ('Expression -> Expression GG Expression','Expression',3,'p_expression','parser.py',1206),
  ('Expression -> Expression AMPCAR Expression','Expression',3,'p_expression','parser.py',1207),
  ('ExpressionOpt -> Expression','ExpressionOpt',1,'p_expr_opt','parser.py',1287),
  ('ExpressionOpt -> epsilon','ExpressionOpt',1,'p_expr_opt','parser.py',1288),
  ('UnaryExpr -> PrimaryExpr','UnaryExpr',1,'p_unary_expr','parser.py',1295),
  ('UnaryExpr -> UnaryOp UnaryExpr','UnaryExpr',2,'p_unary_expr','parser.py',1296),
  ('UnaryOp -> PLUS','UnaryOp',1,'p_unary_op','parser.py',1346),
  ('UnaryOp -> MINUS','UnaryOp',1,'p_unary_op','parser.py',1347),
  ('UnaryOp -> TIMES','UnaryOp',1,'p_unary_op','parser.py',1348),
  ('UnaryOp -> AMPERS','UnaryOp',1,'p_unary_op','parser.py',1349),
  ('UnaryOp -> NOT','UnaryOp',1,'p_unary_op','parser.py',1350),
  ('Statement -> Declaration','Statement',1,'p_statement','parser.py',1359),
  ('Statement -> LabeledStmt','Statement',1,'p_statement','parser.py',1360),
  ('Statement -> SimpleStmt','Statement',1,'p_statement','parser.py',1361),
  ('Statement -> ReturnStmt','Statement',1,'p_statement','parser.py',1362),
  ('Statement -> BreakStmt','Statement',1,'p_statement','parser.py',1363),
  ('Statement -> ContinueStmt','Statement',1,'p_statement','parser.py',1364),
  ('Statement -> GotoStmt','Statement',1,'p_statement','parser.py',1365),
  ('Statement -> Block','Statement',1,'p_statement','parser.py',1366),
  ('Statement -> IfStmt','Statement',1,'p_statement','parser.py',1367),
  ('Statement -> PrintStmt','Statement',1,'p_statement','parser.py',1368),
  ('Statement -> ScanStmt','Statement',1,'p_statement','parser.py',1369),
  ('Statement -> WriteStmt','Statement',1,'p_statement','parser.py',1370),
  ('Statement -> ReadStmt','Statement',1,'p_statement','parser.py',1371),
  ('Statement -> MallocStmt','Statement',1,'p_statement','parser.py',1372),
  ('Statement -> ForStmt','Statement',1,'p_statement','parser.py',1373),
  ('WriteStmt -> WRITE Expression PS Expression PS Expression','WriteStmt',6,'p_write_stmt','parser.py',1381),
  ('ReadStmt -> READ Expression PS Expression PS Expression','ReadStmt',6,'p_read_stmt','parser.py',1385),
  ('MallocStmt -> MALLOC IDENTIFIER','MallocStmt',2,'p_malloc_stmt','parser.py',1388),
  ('PrintStmt -> PRINT PD Expression','PrintStmt',3,'p_print_stmt','parser.py',1402),
  ('PrintStmt -> PRINT PS Expression','PrintStmt',3,'p_print_stmt','parser.py',1403),
  ('ScanStmt -> SCAN PD IDENTIFIER','ScanStmt',3,'p_scan_stmt','parser.py',1413),
  ('SimpleStmt -> epsilon','SimpleStmt',1,'p_simple_stmt','parser.py',1430),
  ('SimpleStmt -> ExpressionStmt','SimpleStmt',1,'p_simple_stmt','parser.py',1431),
  ('SimpleStmt -> IncDecStmt','SimpleStmt',1,'p_simple_stmt','parser.py',1432),
  ('SimpleStmt -> Assignment','SimpleStmt',1,'p_simple_stmt','parser.py',1433),
  ('SimpleStmt -> ShortVarDecl','SimpleStmt',1,'p_simple_stmt','parser.py',1434),
  ('LabeledStmt -> Label COLON Statement','LabeledStmt',3,'p_labeled_statements','parser.py',1441),
  ('Label -> IDENTIFIER','Label',1,'p_label','parser.py',1448),
  ('ExpressionStmt -> Expression','ExpressionStmt',1,'p_expression_stmt','parser.py',1452),
  ('IncDecStmt -> PrimaryExpr PLUSPLUS','IncDecStmt',2,'p_inc_dec','parser.py',1456),
  ('IncDecStmt -> PrimaryExpr MINUSMIN','IncDecStmt',2,'p_inc_dec','parser.py',1457),
  ('Assignment -> ExpressionList assign_op ExpressionList','Assignment',3,'p_assignment','parser.py',1469),
  ('assign_op -> AssignOp','assign_op',1,'p_assign_op','parser.py',1531),
  ('AssignOp -> PLUSEQ','AssignOp',1,'p_AssignOp','parser.py',1535),
  ('AssignOp -> MINUSEQ','AssignOp',1,'p_AssignOp','parser.py',1536),
  ('AssignOp -> TIMESEQ','AssignOp',1,'p_AssignOp','parser.py',1537),
  ('AssignOp -> DIVIDEEQ','AssignOp',1,'p_AssignOp','parser.py',1538),
  ('AssignOp -> MODEQ','AssignOp',1,'p_AssignOp','parser.py',1539),
  ('AssignOp -> AMPEQ','AssignOp',1,'p_AssignOp','parser.py',1540),
  ('AssignOp -> OREQ','AssignOp',1,'p_AssignOp','parser.py',1541),
  ('AssignOp -> CAREQ','AssignOp',1,'p_AssignOp','parser.py',1542),
  ('AssignOp -> LLEQ','AssignOp',1,'p_AssignOp','parser.py',1543),
  ('AssignOp -> GGEQ','AssignOp',1,'p_AssignOp','parser.py',1544),
  ('AssignOp -> EQUAL','AssignOp',1,'p_AssignOp','parser.py',1545),
  ('IfStmt -> IF Expression Block ElseOpt','IfStmt',4,'p_if_statement','parser.py',1554),
  ('ElseOpt -> ELSE IfStmt','ElseOpt',2,'p_else_opt','parser.py',1586),
  ('ElseOpt -> ELSE Block','ElseOpt',2,'p_else_opt','parser.py',1587),
  ('ElseOpt -> epsilon','ElseOpt',1,'p_else_opt','parser.py',1588),
  ('ForStmt -> CreateForScope FOR ConditionBlockOpt Block','ForStmt',4,'p_for','parser.py',1686),
  ('CreateForScope -> epsilon','CreateForScope',1,'p_for_create_scope','parser.py',1712),
  ('ConditionBlockOpt -> epsilon','ConditionBlockOpt',1,'p_conditionblockopt','parser.py',1717),
  ('ConditionBlockOpt -> Condition','ConditionBlockOpt',1,'p_conditionblockopt','parser.py',1718),
  ('ConditionBlockOpt -> ForClause','ConditionBlockOpt',1,'p_conditionblockopt','parser.py',1719),
  ('Condition -> Expression','Condition',1,'p_condition','parser.py',1727),
  ('ForClause -> SimpleStmt SEMICOL ConditionOpt SEMICOL SimpleStmt','ForClause',5,'p_forclause','parser.py',1731),
  ('ConditionOpt -> epsilon','ConditionOpt',1,'p_conditionopt','parser.py',1739),
  ('ConditionOpt -> Condition','ConditionOpt',1,'p_conditionopt','parser.py',1740),
  ('RangeClause -> ExpressionIdentListOpt RANGE Expression','RangeClause',3,'p_rageclause','parser.py',1747),
  ('ExpressionIdentListOpt -> epsilon','ExpressionIdentListOpt',1,'p_expression_ident_listopt','parser.py',1751),
  ('ExpressionIdentListOpt -> ExpressionIdentifier','ExpressionIdentListOpt',1,'p_expression_ident_listopt','parser.py',1752),
  ('ExpressionIdentifier -> ExpressionList EQUAL','ExpressionIdentifier',2,'p_expressionidentifier','parser.py',1756),
  ('ReturnStmt -> RETURN ExpressionListPureOpt','ReturnStmt',2,'p_return','parser.py',1769),
  ('ExpressionListPureOpt -> ExpressionList','ExpressionListPureOpt',1,'p_expressionlist_pure_opt','parser.py',1795),
  ('ExpressionListPureOpt -> epsilon','ExpressionListPureOpt',1,'p_expressionlist_pure_opt','parser.py',1796),
  ('BreakStmt -> BREAK LabelOpt','BreakStmt',2,'p_break','parser.py',1803),
  ('ContinueStmt -> CONTINUE LabelOpt','ContinueStmt',2,'p_continue','parser.py',1809),
  ('LabelOpt -> Label','LabelOpt',1,'p_labelopt','parser.py',1816),
  ('LabelOpt -> epsilon','LabelOpt',1,'p_labelopt','parser.py',1817),
  ('GotoStmt -> GOTO Label','GotoStmt',2,'p_goto','parser.py',1824),
  ('Source -> PackageClause SEMICOL ImportDeclRep TopLevelDeclRep','Source',4,'p_source_file','parser.py',1835),
  ('ImportDeclRep -> epsilon','ImportDeclRep',1,'p_import_decl_rep','parser.py',1839),
  ('ImportDeclRep -> ImportDeclRep ImportDecl SEMICOL','ImportDeclRep',3,'p_import_decl_rep','parser.py',1840),
  ('TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOL','TopLevelDeclRep',3,'p_toplevel_decl_rep','parser.py',1848),
  ('TopLevelDeclRep -> epsilon','TopLevelDeclRep',1,'p_toplevel_decl_rep','parser.py',1849),
  ('PackageClause -> PACKAGE PackageName','PackageClause',2,'p_package_clause','parser.py',1861),
  ('PackageName -> IDENTIFIER','PackageName',1,'p_package_name','parser.py',1867),
  ('ImportDecl -> IMPORT ImportSpec','ImportDecl',2,'p_import_decl','parser.py',1876),
  ('ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN','ImportDecl',4,'p_import_decl','parser.py',1877),
  ('ImportSpecRep -> ImportSpecRep ImportSpec SEMICOL','ImportSpecRep',3,'p_import_spec_rep','parser.py',1886),
  ('ImportSpecRep -> epsilon','ImportSpecRep',1,'p_import_spec_rep','parser.py',1887),
  ('ImportSpec -> PackageNameDotOpt ImportPath','ImportSpec',2,'p_import_spec','parser.py',1895),
  ('PackageNameDotOpt -> DOT','PackageNameDotOpt',1,'p_package_name_dot_opt','parser.py',1901),
  ('PackageNameDotOpt -> PackageName','PackageNameDotOpt',1,'p_package_name_dot_opt','parser.py',1902),
  ('PackageNameDotOpt -> epsilon','PackageNameDotOpt',1,'p_package_name_dot_opt','parser.py',1903),
  ('ImportPath -> STRING','ImportPath',1,'p_import_path','parser.py',1910),
  ('epsilon -> <empty>','epsilon',0,'p_empty','parser.py',1919),
]
