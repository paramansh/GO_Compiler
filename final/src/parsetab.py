
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightEQUALNOTleftORORleftAMPAMPleftEQEQNOTEQLESSGREATLEQGEQleftPLUSMINUSORCARETleftTIMESDIVIDEMODLLGGAMPERSAMPCARAMPAMP AMPCAR AMPCAREQ AMPEQ AMPERS BREAK CAREQ CARET CASE CHAN COLON COLONEQ COMMA CONST CONSTANT CONTINUE DDD DEFAULT DEFER DIVIDE DIVIDEEQ DOT ELSE EQEQ EQUAL FALLTHROUGH FLOAT FOR FUNC GEQ GG GGEQ GO GOTO GREAT IDENTIFIER IF IMAGINARY IMPORT INTEGER INTERFACE LBRACE LBRACK LEQ LESS LL LLEQ LMINUS LPAREN MAP MINUS MINUSEQ MINUSMIN MOD MODEQ NOT NOTEQ OR OREQ OROR PACKAGE PD PLUS PLUSEQ PLUSPLUS PRINT PS RANGE RBRACE RBRACK RETURN RPAREN RUNE SELECT SEMICOL STRING STRUCT SWITCH TIMES TIMESEQ TTYPE TYPE TYPEX VARstart : SourceType : TypeName \n\t\t\t| TypeLit \n\t\t\t| LPAREN Type RPARENTypeName : TYPEX\n\t\t\t\t| TTYPE IDENTIFIERTypeLit : ArrayType\n\t\t\t   | StructType\n\t\t\t   | PointerType\n\t\t\t   | FunctionTypeTypeOpt : Type\n\t\t\t   | epsilonArrayType : LBRACK ArrayLength RBRACK ElementType\n\t\t\t\t | LBRACK RBRACK ElementType ArrayLength : Expression  ElementType : Type StructType : STRUCT LBRACE FieldDeclRep RBRACE FieldDeclRep : FieldDeclRep FieldDecl SEMICOL\n\t\t\t\t  | epsilon FieldDecl : IdentifierList Type TagOpt TagOpt : Tag\n\t\t\t | epsilon  Tag : STRING PointerType : TIMES BaseTypeBaseType : TypeFunctionType : FUNC SignatureSignature : Parameters ResultOptResultOpt : Result\n\t\t\t\t | epsilonResult : Parameters\n\t\t\t  | TypeParameters : LPAREN ParameterListOpt RPARENParameterListOpt : ParametersList\n\t\t\t\t\t\t| epsilonParametersList : Type\n\t\t\t\t\t  | IdentifierList Type\n\t\t\t\t\t  | ParameterDeclCommaRepParameterDeclCommaRep : ParameterDeclCommaRep COMMA ParameterDecl\n\t\t\t\t\t\t\t | ParameterDecl COMMA ParameterDeclParameterDecl : IdentifierList Type\n\t\t\t\t\t | TypeBlock : CreateScope LBRACE StatementList RBRACECreateScope : epsilon StatementList : StatementRepStatementRep : StatementRep Statement SEMICOL\n\t\t\t\t\t| epsilonDeclaration : ConstDecl\n\t\t\t\t\t| TypeDecl\n\t\t\t\t\t| VarDeclTopLevelDecl : Declaration\n\t\t\t\t\t| FunctionDeclConstDecl : CONST ConstSpec\n\t\t\t\t | CONST LPAREN ConstSpecRep RPARENConstSpecRep : ConstSpecRep ConstSpec SEMICOL\n\t\t\t\t\t| epsilonConstSpec : IdentifierList TypeExprListOptTypeExprListOpt : TypeOpt EQUAL ExpressionList\n\t\t\t\t\t   | epsilonIdentifierList : IDENTIFIER IdentifierRepIdentifierRep : IdentifierRep COMMA IDENTIFIER\n\t\t\t\t\t | epsilonTypeDecl : TYPE TypeSpec\n\t\t\t\t| TYPE LPAREN TypeSpecRep RPARENTypeSpecRep : TypeSpecRep TypeSpec SEMICOL\n\t\t\t\t   | epsilonTypeSpec : AliasDecl\n\t\t\t\t| TypeDefAliasDecl : IDENTIFIER EQUAL TypeTypeDef : TTYPE IDENTIFIER TypeVarDecl : VAR VarSpec\n\t\t\t   | VAR LPAREN VarSpecRep RPARENVarSpecRep : VarSpecRep VarSpec SEMICOL\n\t\t\t\t  | epsilonVarSpec : IdentifierList Type ExpressionListOpt\n\t\t\t   | IdentifierList EQUAL ExpressionListExpressionListOpt : EQUAL ExpressionList\n\t\t\t\t\t\t | epsilon ShortVarDecl : IDENTIFIER COLONEQ Expression FunctionDecl : FUNC FunctionName Function\n\t\t\t\t\t| FUNC FunctionName SignatureFunctionName : IDENTIFIERFunction : Signature FunctionBodyFunctionBody : BlockOperand : Literal\n\t\t\t   | OperandName\n\t\t\t   | LPAREN Expression RPARENLiteral : BasicLitBasicLit : IntLiteral\n\t\t\t\t| FloatLiteral\n\t\t\t\t| ImgLiteral\n\t\t\t\t| RuneLiteral\n\t\t\t\t| StringLiteralIntLiteral : INTEGERFloatLiteral : FLOATImgLiteral : IMAGINARYRuneLiteral : RUNEStringLiteral : STRINGOperandName : IDENTIFIERConversion : Type LPAREN Expression RPARENPrimaryExpr : Operand\n\t\t\t\t   | Conversion\n\t\t\t\t   | PrimaryExpr Selector\n\t\t\t\t   | PrimaryExpr Index\n\t\t\t\t   | PrimaryExpr Slice\n\t\t\t\t   | PrimaryExpr ArgumentsSelector : DOT IDENTIFIERIndex : LBRACK Expression RBRACKSlice : LBRACK ExpressionOpt COLON ExpressionOpt RBRACKArguments : LPAREN ExpressionListTypeOpt RPARENExpressionListTypeOpt : ExpressionList\n\t\t\t\t\t\t\t | epsilonExpressionList : Expression ExpressionRepExpressionRep : ExpressionRep COMMA Expression\n\t\t\t\t\t | epsilonExpression : UnaryExpr\n\t\t\t\t  | Expression OROR Expression\n\t\t\t\t\t| Expression AMPAMP Expression\n\t\t\t\t\t| Expression EQEQ Expression\n\t\t\t\t\t| Expression NOTEQ Expression\n\t\t\t\t\t| Expression LESS Expression\n\t\t\t\t\t| Expression GREAT Expression\n\t\t\t\t\t| Expression LEQ Expression\n\t\t\t\t\t| Expression GEQ Expression\n\t\t\t\t\t| Expression PLUS Expression\n\t\t\t\t\t| Expression MINUS Expression\n\t\t\t\t\t| Expression OR Expression\n\t\t\t\t\t| Expression CARET Expression\n\t\t\t\t\t| Expression TIMES Expression\n\t\t\t\t\t| Expression DIVIDE Expression\n\t\t\t\t\t| Expression MOD Expression\n\t\t\t\t\t| Expression AMPERS Expression\n\t\t\t\t\t| Expression LL Expression\n\t\t\t\t\t| Expression GG Expression\n\t\t\t\t\t| Expression AMPCAR ExpressionExpressionOpt : Expression\n\t\t\t\t\t | epsilonUnaryExpr : PrimaryExpr\n\t\t\t\t | UnaryOp UnaryExprUnaryOp : PLUS\n\t\t\t   | MINUS\n\t\t\t   | TIMES\n\t\t\t   | AMPERS\n\t\t\t   | NOT Statement : Declaration\n\t\t\t\t | LabeledStmt\n\t\t\t\t | SimpleStmt\n\t\t\t\t | ReturnStmt\n\t\t\t\t | BreakStmt\n\t\t\t\t | ContinueStmt\n\t\t\t\t | GotoStmt\n\t\t\t\t | Block\n\t\t\t\t | IfStmt\n\t\t\t\t | PrintStmt\n\t\t\t\t | ForStmt PrintStmt : PRINT PD Expression\n\t\t\t\t | PRINT PS ExpressionSimpleStmt : epsilon\n\t\t\t\t  | ExpressionStmt\n\t\t\t\t  | IncDecStmt\n\t\t\t\t  | Assignment\n\t\t\t\t  | ShortVarDecl  LabeledStmt : Label COLON Statement  Label : IDENTIFIER  ExpressionStmt : Expression  IncDecStmt : PrimaryExpr PLUSPLUS\n\t\t\t\t\t| PrimaryExpr MINUSMIN Assignment : ExpressionList assign_op ExpressionList assign_op : AssignOpAssignOp : PLUSEQ\n\t\t\t\t| MINUSEQ\n\t\t\t\t| TIMESEQ\n\t\t\t\t| DIVIDEEQ\n\t\t\t\t| MODEQ\n\t\t\t\t| AMPEQ\n\t\t\t\t| OREQ\n\t\t\t\t| CAREQ\n\t\t\t\t| LLEQ\n\t\t\t\t| GGEQ\n\t\t\t\t| EQUAL  IfStmt : IF Expression Block ElseOpt  ElseOpt : ELSE IfStmt\n\t\t\t\t| ELSE Block\n\t\t\t\t| epsilon ForStmt : CreateForScope FOR ConditionBlockOpt Block CreateForScope : epsilon ConditionBlockOpt : epsilon\n\t\t\t\t| Condition\n\t\t\t\t| ForClauseCondition : Expression ForClause : SimpleStmt SEMICOL ConditionOpt SEMICOL SimpleStmtConditionOpt : epsilon\n\t\t\t| Condition RangeClause : ExpressionIdentListOpt RANGE ExpressionExpressionIdentListOpt : epsilon\n\t\t\t\t| ExpressionIdentifierExpressionIdentifier : ExpressionList EQUALReturnStmt : RETURN ExpressionListPureOptExpressionListPureOpt : ExpressionList\n\t\t\t\t| epsilonBreakStmt : BREAK LabelOptContinueStmt : CONTINUE LabelOptLabelOpt : Label\n\t\t\t| epsilon GotoStmt : GOTO Label Source : PackageClause SEMICOL ImportDeclRep TopLevelDeclRepImportDeclRep : epsilon\n\t\t\t| ImportDeclRep ImportDecl SEMICOLTopLevelDeclRep : TopLevelDeclRep TopLevelDecl SEMICOL\n\t\t\t\t\t\t| epsilonPackageClause : PACKAGE PackageNamePackageName : IDENTIFIERImportDecl : IMPORT ImportSpec\n\t\t\t| IMPORT LPAREN ImportSpecRep RPAREN  ImportSpecRep : ImportSpecRep ImportSpec SEMICOL\n\t\t\t\t| epsilon  ImportSpec : PackageNameDotOpt ImportPath  PackageNameDotOpt : DOT\n\t\t\t\t\t\t\t| PackageName\n\t\t\t\t\t\t\t| epsilon ImportPath : STRING epsilon : '
    
_lr_action_items = {'OROR':([95,96,97,98,99,102,103,104,108,109,110,111,112,114,115,117,120,121,123,145,160,166,186,187,189,190,208,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,237,248,250,251,264,268,272,283,289,320,321,322,323,327,331,332,333,344,],[-96,-101,-92,-84,-89,-97,-85,-87,-93,-95,-98,-88,-90,-115,-91,-100,167,-94,-137,167,-138,167,-103,-104,-102,-105,167,-86,-116,-127,-121,-129,-134,-120,-118,-132,-131,-123,-126,-133,-119,-124,-130,-117,-128,-125,-122,167,-106,-99,-107,-109,-137,-98,167,167,167,167,-108,-137,-98,167,167,167,167,167,]),'CARET':([95,96,97,98,99,102,103,104,108,109,110,111,112,114,115,117,120,121,123,145,160,166,186,187,189,190,208,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,237,248,250,251,264,268,272,283,289,320,321,322,323,327,331,332,333,344,],[-96,-101,-92,-84,-89,-97,-85,-87,-93,-95,-98,-88,-90,-115,-91,-100,168,-94,-137,168,-138,168,-103,-104,-102,-105,168,-86,168,-127,168,-129,-134,168,168,-132,-131,168,-126,-133,168,-124,-130,168,-128,-125,168,168,-106,-99,-107,-109,-137,-98,168,168,168,168,-108,-137,-98,168,168,168,168,168,]),'GREAT':([95,96,97,98,99,102,103,104,108,109,110,111,112,114,115,117,120,121,123,145,160,166,186,187,189,190,208,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,237,248,250,251,264,268,272,283,289,320,321,322,323,327,331,332,333,344,],[-96,-101,-92,-84,-89,-97,-85,-87,-93,-95,-98,-88,-90,-115,-91,-100,169,-94,-137,169,-138,169,-103,-104,-102,-105,169,-86,169,-127,-121,-129,-134,-120,-118,-132,-131,-123,-126,-133,-119,-124,-130,169,-128,-125,-122,169,-106,-99,-107,-109,-137,-98,169,169,169,169,-108,-137,-98,169,169,169,169,169,]),'SEMICOL':([1,6,7,12,15,16,17,18,19,22,26,31,33,34,38,41,43,45,49,50,54,56,57,58,59,60,67,68,69,70,71,72,73,74,79,84,85,86,87,88,89,90,92,95,96,97,98,99,102,103,104,108,109,110,111,112,114,115,117,121,123,125,126,127,128,130,131,134,142,143,144,145,147,148,149,150,151,152,155,156,160,161,162,186,187,189,190,193,195,196,201,202,203,205,207,209,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,237,238,239,247,248,250,251,252,253,254,255,256,257,259,262,263,264,265,266,267,268,269,270,272,273,274,275,276,278,280,281,283,284,285,286,287,290,291,292,293,294,295,298,299,300,301,302,303,318,319,321,322,323,325,327,328,330,331,332,333,334,335,336,337,338,340,341,342,343,344,345,346,],[5,-210,-211,24,-51,35,-50,-47,-48,-49,-212,-52,-221,-221,-70,-67,-66,-62,-216,-220,-7,-3,-2,-5,-8,-58,-56,-9,-10,-61,-59,-79,-221,-80,-221,-213,153,154,-53,-26,-25,-24,-6,-96,-101,-92,-84,-89,-97,-85,-87,-93,-95,-98,-88,-90,-115,-91,-100,-94,-137,-30,-31,-27,-29,-28,-82,-83,-71,200,-75,-221,-77,-74,-69,-63,204,-68,-4,-57,-138,-16,-14,-103,-104,-102,-105,-60,-221,-32,-112,-114,-76,246,-17,-13,-86,-116,-127,-121,-129,-134,-120,-118,-132,-131,-123,-126,-133,-119,-124,-130,-117,-128,-125,-122,-106,-221,-46,-221,-99,-107,-109,-149,-158,290,-160,-145,-153,-221,-159,-150,-137,-151,-221,-144,-98,-157,-152,-164,-221,-147,-146,-154,-161,-148,-42,-113,-23,-22,-21,-20,-45,-221,-197,-199,-198,-221,-165,-166,-203,-163,-201,-202,-200,-204,-108,-137,-98,-157,-164,337,-162,-156,-155,-78,-167,-221,-184,-221,-183,-180,-192,-191,347,-189,-181,-182,]),'CONST':([5,8,9,10,11,24,35,195,238,239,290,295,],[-221,-206,-221,14,-209,-207,-208,-221,14,-46,-45,14,]),'FUNC':([5,8,9,10,11,24,33,34,35,40,61,62,66,70,71,73,75,78,80,83,93,101,105,106,107,113,116,119,122,129,136,146,159,163,165,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,188,191,193,195,196,198,199,206,210,238,239,241,245,249,259,279,290,291,295,296,297,304,305,306,307,308,309,310,311,312,313,314,315,316,317,337,347,],[-221,-206,-221,20,-209,-207,53,-221,-208,53,53,53,53,-61,-59,53,53,53,53,53,53,-140,53,-143,-139,53,-141,53,-142,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-60,-221,-32,53,53,53,-141,53,-46,53,53,53,53,53,-45,53,53,53,53,53,-168,-179,-176,-171,-169,-173,-178,-177,-175,-170,-174,53,-172,53,53,]),'AMPCAR':([95,96,97,98,99,102,103,104,108,109,110,111,112,114,115,117,120,121,123,145,160,166,186,187,189,190,208,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,237,248,250,251,264,268,272,283,289,320,321,322,323,327,331,332,333,344,],[-96,-101,-92,-84,-89,-97,-85,-87,-93,-95,-98,-88,-90,-115,-91,-100,171,-94,-137,171,-138,171,-103,-104,-102,-105,171,-86,171,171,171,-129,-134,171,171,-132,-131,171,171,-133,171,171,-130,171,-128,171,171,171,-106,-99,-107,-109,-137,-98,171,171,171,171,-108,-137,-98,171,171,171,171,171,]),'LESS':([95,96,97,98,99,102,103,104,108,109,110,111,112,114,115,117,120,121,123,145,160,166,186,187,189,190,208,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,237,248,250,251,264,268,272,283,289,320,321,322,323,327,331,332,333,344,],[-96,-101,-92,-84,-89,-97,-85,-87,-93,-95,-98,-88,-90,-115,-91,-100,172,-94,-137,172,-138,172,-103,-104,-102,-105,172,-86,172,-127,-121,-129,-134,-120,-118,-132,-131,-123,-126,-133,-119,-124,-130,172,-128,-125,-122,172,-106,-99,-107,-109,-137,-98,172,172,172,172,-108,-137,-98,172,172,172,172,172,]),'EQEQ':([95,96,97,98,99,102,103,104,108,109,110,111,112,114,115,117,120,121,123,145,160,166,186,187,189,190,208,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,237,248,250,251,264,268,272,283,289,320,321,322,323,327,331,332,333,344,],[-96,-101,-92,-84,-89,-97,-85,-87,-93,-95,-98,-88,-90,-115,-91,-100,173,-94,-137,173,-138,173,-103,-104,-102,-105,173,-86,173,-127,-121,-129,-134,-120,-118,-132,-131,-123,-126,-133,-119,-124,-130,173,-128,-125,-122,173,-106,-99,-107,-109,-137,-98,173,173,173,173,-108,-137,-98,173,173,173,173,173,]),'GGEQ':([95,96,97,98,99,102,103,104,108,109,110,111,112,114,115,117,121,123,160,186,187,189,190,201,202,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,237,248,250,251,264,268,271,272,283,321,322,323,327,],[-96,-101,-92,-84,-89,-97,-85,-87,-93,-95,-98,-88,-90,-115,-91,-100,-94,-137,-138,-103,-104,-102,-105,-112,-114,-86,-116,-127,-121,-129,-134,-120,-118,-132,-131,-123,-126,-133,-119,-124,-130,-117,-128,-125,-122,-106,-99,-107,-109,-137,-98,311,-221,-113,-108,-137,-98,-221,]),'EQUAL':([33,34,40,46,54,55,56,57,58,59,60,64,68,69,70,71,73,79,88,89,90,92,95,96,97,98,99,102,103,104,108,109,110,111,112,114,115,117,121,123,125,126,127,128,130,155,160,161,162,186,187,189,190,193,196,201,202,207,209,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,237,248,250,251,264,268,271,272,283,321,322,323,327,],[-221,-221,78,83,-7,-11,-3,-2,-5,-8,-12,93,-9,-10,-61,-59,-221,146,-26,-25,-24,-6,-96,-101,-92,-84,-89,-97,-85,-87,-93,-95,-98,-88,-90,-115,-91,-100,-94,-137,-30,-31,-27,-29,-28,-4,-138,-16,-14,-103,-104,-102,-105,-60,-32,-112,-114,-17,-13,-86,-116,-127,-121,-129,-134,-120,-118,-132,-131,-123,-126,-133,-119,-124,-130,-117,-128,-125,-122,-106,-99,-107,-109,-137,-98,306,-221,-113,-108,-137,-98,-221,]),'GOTO':([195,238,239,290,295,],[-221,277,-46,-45,277,]),'CAREQ':([95,96,97,98,99,102,103,104,108,109,110,111,112,114,115,117,121,123,160,186,187,189,190,201,202,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,237,248,250,251,264,268,271,272,283,321,322,323,327,],[-96,-101,-92,-84,-89,-97,-85,-87,-93,-95,-98,-88,-90,-115,-91,-100,-94,-137,-138,-103,-104,-102,-105,-112,-114,-86,-116,-127,-121,-129,-134,-120,-118,-132,-131,-123,-126,-133,-119,-124,-130,-117,-128,-125,-122,-106,-99,-107,-109,-137,-98,307,-221,-113,-108,-137,-98,-221,]),'COLON':([95,96,97,98,99,102,103,104,108,109,110,111,112,114,115,117,121,123,160,186,187,188,189,190,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,237,248,250,251,260,268,321,],[-96,-101,-92,-84,-89,-97,-85,-87,-93,-95,-98,-88,-90,-115,-91,-100,-94,-137,-138,-103,-104,-221,-102,-105,-86,-116,-127,-121,-129,-134,-120,-118,-132,-131,-123,-126,-133,-119,-124,-130,-117,-128,-125,-122,249,-136,-135,-106,-99,-107,-109,295,-163,-108,]),'COLONEQ':([268,323,],[304,304,]),'AMPAMP':([95,96,97,98,99,102,103,104,108,109,110,111,112,114,115,117,120,121,123,145,160,166,186,187,189,190,208,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,237,248,250,251,264,268,272,283,289,320,321,322,323,327,331,332,333,344,],[-96,-101,-92,-84,-89,-97,-85,-87,-93,-95,-98,-88,-90,-115,-91,-100,182,-94,-137,182,-138,182,-103,-104,-102,-105,182,-86,182,-127,-121,-129,-134,-120,-118,-132,-131,-123,-126,-133,-119,-124,-130,-117,-128,-125,-122,182,-106,-99,-107,-109,-137,-98,182,182,182,182,-108,-137,-98,182,182,182,182,182,]),'PRINT':([195,238,239,290,295,],[-221,261,-46,-45,261,]),'RETURN':([195,238,239,290,295,],[-221,259,-46,-45,259,]),'RUNE':([66,78,93,101,105,106,107,116,119,122,146,159,165,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,188,191,195,210,238,239,245,249,259,279,290,291,295,296,297,304,305,306,307,308,309,310,311,312,313,314,315,316,317,337,347,],[95,95,95,-140,95,-143,-139,-141,95,-142,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,-221,-141,95,-46,95,95,95,95,-45,95,95,95,95,95,-168,-179,-176,-171,-169,-173,-178,-177,-175,-170,-174,95,-172,95,95,]),'MINUS':([66,78,93,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,117,119,120,121,122,123,145,146,159,160,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,195,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,237,238,239,245,248,249,250,251,259,264,268,272,279,283,289,290,291,295,296,297,304,305,306,307,308,309,310,311,312,313,314,315,316,317,320,321,322,323,327,331,332,333,337,344,347,],[101,101,101,-96,-101,-92,-84,-89,-140,-97,-85,-87,101,-143,-139,-93,-95,-98,-88,-90,-115,-91,-141,-100,101,184,-94,-142,-137,184,101,101,-138,101,184,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,-103,-104,101,-102,-105,101,-221,184,-141,-86,184,-127,184,-129,-134,184,184,-132,-131,184,-126,-133,184,-124,-130,184,-128,-125,184,184,-106,101,-46,101,-99,101,-107,-109,101,-137,-98,184,101,184,184,-45,101,101,101,101,101,-168,-179,-176,-171,-169,-173,-178,-177,-175,-170,-174,101,-172,184,-108,-137,-98,184,184,184,184,101,184,101,]),'DOT':([13,25,47,48,95,96,97,98,99,102,103,104,108,109,110,111,112,115,117,121,123,153,186,187,189,190,211,237,248,250,251,264,268,321,322,323,],[30,-221,-215,30,-96,-101,-92,-84,-89,-97,-85,-87,-93,-95,-98,-88,-90,-91,-100,-94,192,-214,-103,-104,-102,-105,-86,-106,-99,-107,-109,192,-98,-108,192,-98,]),'RBRACE':([94,157,158,195,238,239,240,246,290,],[-221,207,-19,-221,-44,-46,281,-18,-45,]),'PS':([261,],[296,]),'GEQ':([95,96,97,98,99,102,103,104,108,109,110,111,112,114,115,117,120,121,123,145,160,166,186,187,189,190,208,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,237,248,250,251,264,268,272,283,289,320,321,322,323,327,331,332,333,344,],[-96,-101,-92,-84,-89,-97,-85,-87,-93,-95,-98,-88,-90,-115,-91,-100,176,-94,-137,176,-138,176,-103,-104,-102,-105,176,-86,176,-127,-121,-129,-134,-120,-118,-132,-131,-123,-126,-133,-119,-124,-130,176,-128,-125,-122,176,-106,-99,-107,-109,-137,-98,176,176,176,176,-108,-137,-98,176,176,176,176,176,]),'RPAREN':([25,32,39,44,47,48,51,52,54,56,57,58,59,68,69,73,75,76,77,81,82,88,89,90,91,92,95,96,97,98,99,102,103,104,108,109,110,111,112,114,115,117,121,123,125,126,127,128,129,130,135,137,138,139,141,145,153,154,155,160,161,162,164,166,186,187,189,190,191,194,196,197,200,201,202,204,207,208,209,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,234,235,236,237,242,243,244,248,250,251,282,283,321,],[-221,-221,-221,-221,-215,84,87,-55,-7,-3,-2,-5,-8,-9,-10,-221,-221,142,-73,150,-65,-26,-25,-24,155,-6,-96,-101,-92,-84,-89,-97,-85,-87,-93,-95,-98,-88,-90,-115,-91,-100,-94,-137,-30,-31,-27,-29,-221,-28,196,-37,-35,-33,-34,-221,-214,-54,-4,-138,-16,-14,155,211,-103,-104,-102,-105,-221,155,-32,-36,-72,-112,-114,-64,-17,248,-13,-86,-116,-127,-121,-129,-134,-120,-118,-132,-131,-123,-126,-133,-119,-124,-130,-117,-128,-125,-122,-111,-110,251,-106,-41,-38,-39,-99,-107,-109,-40,-113,-108,]),'TIMESEQ':([95,96,97,98,99,102,103,104,108,109,110,111,112,114,115,117,121,123,160,186,187,189,190,201,202,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,237,248,250,251,264,268,271,272,283,321,322,323,327,],[-96,-101,-92,-84,-89,-97,-85,-87,-93,-95,-98,-88,-90,-115,-91,-100,-94,-137,-138,-103,-104,-102,-105,-112,-114,-86,-116,-127,-121,-129,-134,-120,-118,-132,-131,-123,-126,-133,-119,-124,-130,-117,-128,-125,-122,-106,-99,-107,-109,-137,-98,308,-221,-113,-108,-137,-98,-221,]),'LL':([95,96,97,98,99,102,103,104,108,109,110,111,112,114,115,117,120,121,123,145,160,166,186,187,189,190,208,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,237,248,250,251,264,268,272,283,289,320,321,322,323,327,331,332,333,344,],[-96,-101,-92,-84,-89,-97,-85,-87,-93,-95,-98,-88,-90,-115,-91,-100,174,-94,-137,174,-138,174,-103,-104,-102,-105,174,-86,174,174,174,-129,-134,174,174,-132,-131,174,174,-133,174,174,-130,174,-128,174,174,174,-106,-99,-107,-109,-137,-98,174,174,174,174,-108,-137,-98,174,174,174,174,174,]),'MODEQ':([95,96,97,98,99,102,103,104,108,109,110,111,112,114,115,117,121,123,160,186,187,189,190,201,202,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,237,248,250,251,264,268,271,272,283,321,322,323,327,],[-96,-101,-92,-84,-89,-97,-85,-87,-93,-95,-98,-88,-90,-115,-91,-100,-94,-137,-138,-103,-104,-102,-105,-112,-114,-86,-116,-127,-121,-129,-134,-120,-118,-132,-131,-123,-126,-133,-119,-124,-130,-117,-128,-125,-122,-106,-99,-107,-109,-137,-98,310,-221,-113,-108,-137,-98,-221,]),'PLUS':([66,78,93,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,117,119,120,121,122,123,145,146,159,160,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,195,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,237,238,239,245,248,249,250,251,259,264,268,272,279,283,289,290,291,295,296,297,304,305,306,307,308,309,310,311,312,313,314,315,316,317,320,321,322,323,327,331,332,333,337,344,347,],[107,107,107,-96,-101,-92,-84,-89,-140,-97,-85,-87,107,-143,-139,-93,-95,-98,-88,-90,-115,-91,-141,-100,107,180,-94,-142,-137,180,107,107,-138,107,180,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,-103,-104,107,-102,-105,107,-221,180,-141,-86,180,-127,180,-129,-134,180,180,-132,-131,180,-126,-133,180,-124,-130,180,-128,-125,180,180,-106,107,-46,107,-99,107,-107,-109,107,-137,-98,180,107,180,180,-45,107,107,107,107,107,-168,-179,-176,-171,-169,-173,-178,-177,-175,-170,-174,107,-172,180,-108,-137,-98,180,180,180,180,107,180,107,]),'MINUSEQ':([95,96,97,98,99,102,103,104,108,109,110,111,112,114,115,117,121,123,160,186,187,189,190,201,202,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,237,248,250,251,264,268,271,272,283,321,322,323,327,],[-96,-101,-92,-84,-89,-97,-85,-87,-93,-95,-98,-88,-90,-115,-91,-100,-94,-137,-138,-103,-104,-102,-105,-112,-114,-86,-116,-127,-121,-129,-134,-120,-118,-132,-131,-123,-126,-133,-119,-124,-130,-117,-128,-125,-122,-106,-99,-107,-109,-137,-98,314,-221,-113,-108,-137,-98,-221,]),'COMMA':([34,54,56,57,58,59,68,69,70,71,73,88,89,90,92,95,96,97,98,99,102,103,104,108,109,110,111,112,114,115,117,121,123,125,126,127,128,130,137,138,140,145,155,160,161,162,186,187,189,190,193,194,196,197,201,202,207,209,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,237,242,243,244,248,250,251,264,268,272,282,283,321,322,323,327,],[-221,-7,-3,-2,-5,-8,-9,-10,-61,124,-221,-26,-25,-24,-6,-96,-101,-92,-84,-89,-97,-85,-87,-93,-95,-98,-88,-90,-115,-91,-100,-94,-137,-30,-31,-27,-29,-28,198,-41,199,-221,-4,-138,-16,-14,-103,-104,-102,-105,-60,-41,-32,-40,245,-114,-17,-13,-86,-116,-127,-121,-129,-134,-120,-118,-132,-131,-123,-126,-133,-119,-124,-130,-117,-128,-125,-122,-106,-41,-38,-39,-99,-107,-109,-137,-98,-221,-40,-113,-108,-137,-98,-221,]),'TYPEX':([33,34,40,61,62,66,70,71,73,75,78,80,83,93,101,105,106,107,113,116,119,122,129,136,146,159,163,165,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,188,191,193,195,196,198,199,206,210,238,239,241,245,249,259,279,290,291,295,296,297,304,305,306,307,308,309,310,311,312,313,314,315,316,317,337,347,],[58,-221,58,58,58,58,-61,-59,58,58,58,58,58,58,-140,58,-143,-139,58,-141,58,-142,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-60,-221,-32,58,58,58,-141,58,-46,58,58,58,58,58,-45,58,58,58,58,58,-168,-179,-176,-171,-169,-173,-178,-177,-175,-170,-174,58,-172,58,58,]),'PD':([261,],[297,]),'IMPORT':([5,8,9,24,],[-221,-206,13,-207,]),'IMAGINARY':([66,78,93,101,105,106,107,116,119,122,146,159,165,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,188,191,195,210,238,239,245,249,259,279,290,291,295,296,297,304,305,306,307,308,309,310,311,312,313,314,315,316,317,337,347,],[109,109,109,-140,109,-143,-139,-141,109,-142,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,-221,-141,109,-46,109,109,109,109,-45,109,109,109,109,109,-168,-179,-176,-171,-169,-173,-178,-177,-175,-170,-174,109,-172,109,109,]),'IDENTIFIER':([2,13,14,20,21,23,25,32,39,42,44,47,48,51,52,63,66,75,76,77,78,81,82,93,94,101,105,106,107,116,119,122,124,129,146,153,154,157,158,159,165,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,188,191,192,195,198,199,200,204,210,238,239,245,246,249,259,266,273,277,279,290,291,295,296,297,304,305,306,307,308,309,310,311,312,313,314,315,316,317,337,347,],[7,7,34,36,34,46,-221,-221,-221,80,-221,-215,7,34,-55,92,110,34,34,-73,110,46,-65,110,-221,-140,110,-143,-139,-141,110,-142,193,34,110,-214,-54,34,-19,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,237,-221,34,34,-72,-64,-141,268,-46,110,-18,110,110,301,301,301,110,-45,323,268,110,110,110,-168,-179,-176,-171,-169,-173,-178,-177,-175,-170,-174,110,-172,110,323,]),'DIVIDEEQ':([95,96,97,98,99,102,103,104,108,109,110,111,112,114,115,117,121,123,160,186,187,189,190,201,202,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,237,248,250,251,264,268,271,272,283,321,322,323,327,],[-96,-101,-92,-84,-89,-97,-85,-87,-93,-95,-98,-88,-90,-115,-91,-100,-94,-137,-138,-103,-104,-102,-105,-112,-114,-86,-116,-127,-121,-129,-134,-120,-118,-132,-131,-123,-126,-133,-119,-124,-130,-117,-128,-125,-122,-106,-99,-107,-109,-137,-98,317,-221,-113,-108,-137,-98,-221,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'FunctionBody':([74,],[131,]),'Conversion':([66,78,93,105,119,146,159,165,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,188,191,238,245,249,259,279,291,295,296,297,304,316,337,347,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'ContinueStmt':([238,295,],[252,252,]),'ParameterListOpt':([75,129,],[135,135,]),'ExpressionRep':([145,272,327,],[201,201,201,]),'ExpressionStmt':([238,291,295,347,],[253,253,253,253,]),'Statement':([238,295,],[254,330,]),'ParameterDeclCommaRep':([75,129,],[137,137,]),'Selector':([123,264,322,],[189,189,189,]),'IfStmt':([238,295,339,],[270,270,345,]),'StatementRep':([195,],[238,]),'AliasDecl':([23,81,],[43,43,]),'PackageNameDotOpt':([13,48,],[29,29,]),'TypeName':([33,40,61,62,66,73,75,78,80,83,93,105,113,116,119,129,136,146,159,163,165,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,188,191,198,199,206,210,238,241,245,249,259,279,291,295,296,297,304,316,337,347,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'ParametersList':([75,129,],[139,139,]),'ParameterDecl':([75,129,198,199,],[140,140,243,244,]),'FunctionName':([20,],[37,]),'LabeledStmt':([238,295,],[256,256,]),'StatementList':([195,],[240,]),'ConditionOpt':([337,],[343,]),'ElementType':([113,163,],[162,209,]),'PointerType':([33,40,61,62,66,73,75,78,80,83,93,105,113,116,119,129,136,146,159,163,165,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,188,191,198,199,206,210,238,241,245,249,259,279,291,295,296,297,304,316,337,347,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'VarSpecRep':([39,],[76,]),'VarDecl':([10,238,295,],[22,22,22,]),'PrintStmt':([238,295,],[257,257,]),'Tag':([247,],[286,]),'CreateForScope':([238,295,],[258,258,]),'ConstSpecRep':([32,],[51,]),'PrimaryExpr':([66,78,93,105,119,146,159,165,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,188,191,238,245,249,259,279,291,295,296,297,304,316,337,347,],[123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,264,123,123,123,123,322,264,123,123,123,123,123,264,]),'TypeSpec':([23,81,],[45,151,]),'Index':([123,264,322,],[186,186,186,]),'Parameters':([37,53,73,],[73,73,125,]),'UnaryOp':([66,78,93,105,119,146,159,165,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,188,191,238,245,249,259,279,291,295,296,297,304,316,337,347,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'PackageName':([2,13,48,],[6,28,28,]),'ExpressionListPureOpt':([259,],[292,]),'Label':([238,266,273,277,295,],[260,303,303,319,260,]),'FunctionDecl':([10,],[15,]),'TopLevelDecl':([10,],[16,]),'IdentifierList':([14,21,51,75,76,129,157,198,199,],[33,40,33,136,40,136,206,241,241,]),'TypeLit':([33,40,61,62,66,73,75,78,80,83,93,105,113,116,119,129,136,146,159,163,165,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,188,191,198,199,206,210,238,241,245,249,259,279,291,295,296,297,304,316,337,347,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'ImportDeclRep':([5,],[9,]),'PackageClause':([0,],[1,]),'ResultOpt':([73,],[127,]),'FloatLiteral':([66,78,93,105,119,146,159,165,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,188,191,238,245,249,259,279,291,295,296,297,304,316,337,347,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'IncDecStmt':([238,291,295,347,],[262,262,262,262,]),'GotoStmt':([238,295,],[263,263,]),'TopLevelDeclRep':([9,],[10,]),'Operand':([66,78,93,105,119,146,159,165,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,188,191,238,245,249,259,279,291,295,296,297,304,316,337,347,],[117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,]),'assign_op':([271,],[316,]),'Signature':([37,53,],[74,88,]),'Block':([74,238,295,320,326,339,],[134,265,265,335,336,346,]),'ConstDecl':([10,238,295,],[18,18,18,]),'VarSpec':([21,76,],[38,143,]),'Result':([73,],[130,]),'Assignment':([238,291,295,347,],[255,255,255,255,]),'ExpressionListTypeOpt':([191,],[236,]),'Literal':([66,78,93,105,119,146,159,165,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,188,191,238,245,249,259,279,291,295,296,297,304,316,337,347,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'ImportDecl':([9,],[12,]),'OperandName':([66,78,93,105,119,146,159,165,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,188,191,238,245,249,259,279,291,295,296,297,304,316,337,347,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'AssignOp':([271,],[305,]),'FieldDeclRep':([94,],[157,]),'start':([0,],[4,]),'Declaration':([10,238,295,],[17,267,267,]),'Condition':([291,337,],[324,341,]),'StructType':([33,40,61,62,66,73,75,78,80,83,93,105,113,116,119,129,136,146,159,163,165,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,188,191,198,199,206,210,238,241,245,249,259,279,291,295,296,297,304,316,337,347,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'IntLiteral':([66,78,93,105,119,146,159,165,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,188,191,238,245,249,259,279,291,295,296,297,304,316,337,347,],[111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'ConstSpec':([14,51,],[31,86,]),'epsilon':([5,9,13,25,32,33,34,39,44,48,73,74,75,79,94,129,145,188,191,195,238,247,249,259,266,272,273,291,295,320,326,327,335,337,339,347,],[8,11,27,47,52,60,70,77,82,27,128,132,141,147,158,141,202,232,234,239,269,285,232,293,300,202,300,325,269,132,132,202,338,342,132,349,]),'ConditionBlockOpt':([291,],[326,]),'ExpressionList':([78,93,146,191,238,259,291,295,316,347,],[144,156,203,235,271,294,271,271,334,271,]),'SimpleStmt':([238,291,295,347,],[275,328,275,348,]),'ImportSpecRep':([25,],[48,]),'Expression':([66,78,93,119,146,159,165,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,188,191,238,245,249,259,279,291,295,296,297,304,316,337,347,],[120,145,145,166,145,208,166,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,145,272,283,289,145,320,327,272,331,332,333,145,344,272,]),'ImportPath':([29,],[49,]),'Source':([0,],[3,]),'ExpressionOpt':([188,249,],[231,288,]),'StringLiteral':([66,78,93,105,119,146,159,165,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,188,191,238,245,249,259,279,291,295,296,297,304,316,337,347,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'IdentifierRep':([34,],[71,]),'TypeExprListOpt':([33,],[67,]),'ReturnStmt':([238,295,],[274,274,]),'FunctionType':([33,40,61,62,66,73,75,78,80,83,93,105,113,116,119,129,136,146,159,163,165,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,188,191,198,199,206,210,238,241,245,249,259,279,291,295,296,297,304,316,337,347,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'Slice':([123,264,322,],[187,187,187,]),'ArrayType':([33,40,61,62,66,73,75,78,80,83,93,105,113,116,119,129,136,146,159,163,165,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,188,191,198,199,206,210,238,241,245,249,259,279,291,295,296,297,304,316,337,347,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'ForStmt':([238,295,],[276,276,]),'Arguments':([123,264,322,],[190,190,190,]),'Function':([37,],[72,]),'ImportSpec':([13,48,],[26,85,]),'Type':([33,40,61,62,66,73,75,78,80,83,93,105,113,116,119,129,136,146,159,163,165,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,188,191,198,199,206,210,238,241,245,249,259,279,291,295,296,297,304,316,337,347,],[55,79,89,91,100,126,138,100,149,152,100,100,161,89,164,194,197,100,100,161,164,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,242,242,247,89,100,282,100,100,100,100,100,100,100,100,100,100,100,100,]),'TypeSpecRep':([44,],[81,]),'CreateScope':([74,238,295,320,326,339,],[133,133,133,133,133,133,]),'LabelOpt':([266,273,],[302,318,]),'TypeDecl':([10,238,295,],[19,19,19,]),'BaseType':([61,116,210,],[90,90,90,]),'UnaryExpr':([66,78,93,105,119,146,159,165,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,188,191,238,245,249,259,279,291,295,296,297,304,316,337,347,],[114,114,114,160,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'RuneLiteral':([66,78,93,105,119,146,159,165,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,188,191,238,245,249,259,279,291,295,296,297,304,316,337,347,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'ArrayLength':([66,],[118,]),'ForClause':([291,],[329,]),'TypeOpt':([33,],[64,]),'ShortVarDecl':([238,291,295,347,],[278,278,278,278,]),'TypeDef':([23,81,],[41,41,]),'FieldDecl':([157,],[205,]),'BreakStmt':([238,295,],[280,280,]),'TagOpt':([247,],[287,]),'BasicLit':([66,78,93,105,119,146,159,165,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,188,191,238,245,249,259,279,291,295,296,297,304,316,337,347,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'ImgLiteral':([66,78,93,105,119,146,159,165,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,188,191,238,245,249,259,279,291,295,296,297,304,316,337,347,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'ExpressionListOpt':([79,],[148,]),'ElseOpt':([335,],[340,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> Source','start',1,'p_start','parser.py',160),
  ('Type -> TypeName','Type',1,'p_type','parser.py',169),
  ('Type -> TypeLit','Type',1,'p_type','parser.py',170),
  ('Type -> LPAREN Type RPAREN','Type',3,'p_type','parser.py',171),
  ('TypeName -> TYPEX','TypeName',1,'p_type_name','parser.py',179),
  ('TypeName -> TTYPE IDENTIFIER','TypeName',2,'p_type_name','parser.py',180),
  ('TypeLit -> ArrayType','TypeLit',1,'p_type_lit','parser.py',192),
  ('TypeLit -> StructType','TypeLit',1,'p_type_lit','parser.py',193),
  ('TypeLit -> PointerType','TypeLit',1,'p_type_lit','parser.py',194),
  ('TypeLit -> FunctionType','TypeLit',1,'p_type_lit','parser.py',195),
  ('TypeOpt -> Type','TypeOpt',1,'p_type_opt','parser.py',199),
  ('TypeOpt -> epsilon','TypeOpt',1,'p_type_opt','parser.py',200),
  ('ArrayType -> LBRACK ArrayLength RBRACK ElementType','ArrayType',4,'p_array_type','parser.py',212),
  ('ArrayType -> LBRACK RBRACK ElementType','ArrayType',3,'p_array_type','parser.py',213),
  ('ArrayLength -> Expression','ArrayLength',1,'p_array_length','parser.py',218),
  ('ElementType -> Type','ElementType',1,'p_element_type','parser.py',224),
  ('StructType -> STRUCT LBRACE FieldDeclRep RBRACE','StructType',4,'p_struct_type','parser.py',233),
  ('FieldDeclRep -> FieldDeclRep FieldDecl SEMICOL','FieldDeclRep',3,'p_field_decl_rep','parser.py',238),
  ('FieldDeclRep -> epsilon','FieldDeclRep',1,'p_field_decl_rep','parser.py',239),
  ('FieldDecl -> IdentifierList Type TagOpt','FieldDecl',3,'p_field_decl','parser.py',247),
  ('TagOpt -> Tag','TagOpt',1,'p_tag_opt','parser.py',254),
  ('TagOpt -> epsilon','TagOpt',1,'p_tag_opt','parser.py',255),
  ('Tag -> STRING','Tag',1,'p_tag','parser.py',262),
  ('PointerType -> TIMES BaseType','PointerType',2,'p_pointer_type','parser.py',271),
  ('BaseType -> Type','BaseType',1,'p_base_type','parser.py',276),
  ('FunctionType -> FUNC Signature','FunctionType',2,'p_function_type','parser.py',285),
  ('Signature -> Parameters ResultOpt','Signature',2,'p_signature','parser.py',289),
  ('ResultOpt -> Result','ResultOpt',1,'p_result_opt','parser.py',313),
  ('ResultOpt -> epsilon','ResultOpt',1,'p_result_opt','parser.py',314),
  ('Result -> Parameters','Result',1,'p_result','parser.py',321),
  ('Result -> Type','Result',1,'p_result','parser.py',322),
  ('Parameters -> LPAREN ParameterListOpt RPAREN','Parameters',3,'p_parameters','parser.py',329),
  ('ParameterListOpt -> ParametersList','ParameterListOpt',1,'p_parameter_list_opt','parser.py',333),
  ('ParameterListOpt -> epsilon','ParameterListOpt',1,'p_parameter_list_opt','parser.py',334),
  ('ParametersList -> Type','ParametersList',1,'p_parameter_list','parser.py',341),
  ('ParametersList -> IdentifierList Type','ParametersList',2,'p_parameter_list','parser.py',342),
  ('ParametersList -> ParameterDeclCommaRep','ParametersList',1,'p_parameter_list','parser.py',343),
  ('ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA ParameterDecl','ParameterDeclCommaRep',3,'p_parameter_decl_comma_rep','parser.py',358),
  ('ParameterDeclCommaRep -> ParameterDecl COMMA ParameterDecl','ParameterDeclCommaRep',3,'p_parameter_decl_comma_rep','parser.py',359),
  ('ParameterDecl -> IdentifierList Type','ParameterDecl',2,'p_parameter_decl','parser.py',367),
  ('ParameterDecl -> Type','ParameterDecl',1,'p_parameter_decl','parser.py',368),
  ('Block -> CreateScope LBRACE StatementList RBRACE','Block',4,'p_block','parser.py',383),
  ('CreateScope -> epsilon','CreateScope',1,'p_create_scope','parser.py',390),
  ('StatementList -> StatementRep','StatementList',1,'p_statement_list','parser.py',396),
  ('StatementRep -> StatementRep Statement SEMICOL','StatementRep',3,'p_statement_rep','parser.py',400),
  ('StatementRep -> epsilon','StatementRep',1,'p_statement_rep','parser.py',401),
  ('Declaration -> ConstDecl','Declaration',1,'p_decl','parser.py',421),
  ('Declaration -> TypeDecl','Declaration',1,'p_decl','parser.py',422),
  ('Declaration -> VarDecl','Declaration',1,'p_decl','parser.py',423),
  ('TopLevelDecl -> Declaration','TopLevelDecl',1,'p_toplevel_decl','parser.py',427),
  ('TopLevelDecl -> FunctionDecl','TopLevelDecl',1,'p_toplevel_decl','parser.py',428),
  ('ConstDecl -> CONST ConstSpec','ConstDecl',2,'p_const_decl','parser.py',438),
  ('ConstDecl -> CONST LPAREN ConstSpecRep RPAREN','ConstDecl',4,'p_const_decl','parser.py',439),
  ('ConstSpecRep -> ConstSpecRep ConstSpec SEMICOL','ConstSpecRep',3,'p_const_spec_rep','parser.py',447),
  ('ConstSpecRep -> epsilon','ConstSpecRep',1,'p_const_spec_rep','parser.py',448),
  ('ConstSpec -> IdentifierList TypeExprListOpt','ConstSpec',2,'p_const_spec','parser.py',457),
  ('TypeExprListOpt -> TypeOpt EQUAL ExpressionList','TypeExprListOpt',3,'p_type_expr_list','parser.py',488),
  ('TypeExprListOpt -> epsilon','TypeExprListOpt',1,'p_type_expr_list','parser.py',489),
  ('IdentifierList -> IDENTIFIER IdentifierRep','IdentifierList',2,'p_identifier_list','parser.py',500),
  ('IdentifierRep -> IdentifierRep COMMA IDENTIFIER','IdentifierRep',3,'p_identifier_rep','parser.py',505),
  ('IdentifierRep -> epsilon','IdentifierRep',1,'p_identifier_rep','parser.py',506),
  ('TypeDecl -> TYPE TypeSpec','TypeDecl',2,'p_type_decl','parser.py',519),
  ('TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN','TypeDecl',4,'p_type_decl','parser.py',520),
  ('TypeSpecRep -> TypeSpecRep TypeSpec SEMICOL','TypeSpecRep',3,'p_type_spec_rep','parser.py',524),
  ('TypeSpecRep -> epsilon','TypeSpecRep',1,'p_type_spec_rep','parser.py',525),
  ('TypeSpec -> AliasDecl','TypeSpec',1,'p_type_spec','parser.py',533),
  ('TypeSpec -> TypeDef','TypeSpec',1,'p_type_spec','parser.py',534),
  ('AliasDecl -> IDENTIFIER EQUAL Type','AliasDecl',3,'p_alias_decl','parser.py',538),
  ('TypeDef -> TTYPE IDENTIFIER Type','TypeDef',3,'p_type_def','parser.py',550),
  ('VarDecl -> VAR VarSpec','VarDecl',2,'p_var_decl','parser.py',562),
  ('VarDecl -> VAR LPAREN VarSpecRep RPAREN','VarDecl',4,'p_var_decl','parser.py',563),
  ('VarSpecRep -> VarSpecRep VarSpec SEMICOL','VarSpecRep',3,'p_var_spec_rep','parser.py',571),
  ('VarSpecRep -> epsilon','VarSpecRep',1,'p_var_spec_rep','parser.py',572),
  ('VarSpec -> IdentifierList Type ExpressionListOpt','VarSpec',3,'p_var_spec','parser.py',580),
  ('VarSpec -> IdentifierList EQUAL ExpressionList','VarSpec',3,'p_var_spec','parser.py',581),
  ('ExpressionListOpt -> EQUAL ExpressionList','ExpressionListOpt',2,'p_expr_list_opt','parser.py',641),
  ('ExpressionListOpt -> epsilon','ExpressionListOpt',1,'p_expr_list_opt','parser.py',642),
  ('ShortVarDecl -> IDENTIFIER COLONEQ Expression','ShortVarDecl',3,'p_short_var_decl','parser.py',654),
  ('FunctionDecl -> FUNC FunctionName Function','FunctionDecl',3,'p_func_decl','parser.py',675),
  ('FunctionDecl -> FUNC FunctionName Signature','FunctionDecl',3,'p_func_decl','parser.py',676),
  ('FunctionName -> IDENTIFIER','FunctionName',1,'p_func_name','parser.py',711),
  ('Function -> Signature FunctionBody','Function',2,'p_func','parser.py',721),
  ('FunctionBody -> Block','FunctionBody',1,'p_func_body','parser.py',725),
  ('Operand -> Literal','Operand',1,'p_operand','parser.py',744),
  ('Operand -> OperandName','Operand',1,'p_operand','parser.py',745),
  ('Operand -> LPAREN Expression RPAREN','Operand',3,'p_operand','parser.py',746),
  ('Literal -> BasicLit','Literal',1,'p_literal','parser.py',753),
  ('BasicLit -> IntLiteral','BasicLit',1,'p_basic_lit','parser.py',758),
  ('BasicLit -> FloatLiteral','BasicLit',1,'p_basic_lit','parser.py',759),
  ('BasicLit -> ImgLiteral','BasicLit',1,'p_basic_lit','parser.py',760),
  ('BasicLit -> RuneLiteral','BasicLit',1,'p_basic_lit','parser.py',761),
  ('BasicLit -> StringLiteral','BasicLit',1,'p_basic_lit','parser.py',762),
  ('IntLiteral -> INTEGER','IntLiteral',1,'p_int_literal','parser.py',766),
  ('FloatLiteral -> FLOAT','FloatLiteral',1,'p_float_literal','parser.py',774),
  ('ImgLiteral -> IMAGINARY','ImgLiteral',1,'p_img_literal','parser.py',782),
  ('RuneLiteral -> RUNE','RuneLiteral',1,'p_rune_literal','parser.py',790),
  ('StringLiteral -> STRING','StringLiteral',1,'p_string_literal','parser.py',798),
  ('OperandName -> IDENTIFIER','OperandName',1,'p_operand_name','parser.py',806),
  ('Conversion -> Type LPAREN Expression RPAREN','Conversion',4,'p_conversion','parser.py',825),
  ('PrimaryExpr -> Operand','PrimaryExpr',1,'p_prim_expr','parser.py',840),
  ('PrimaryExpr -> Conversion','PrimaryExpr',1,'p_prim_expr','parser.py',841),
  ('PrimaryExpr -> PrimaryExpr Selector','PrimaryExpr',2,'p_prim_expr','parser.py',842),
  ('PrimaryExpr -> PrimaryExpr Index','PrimaryExpr',2,'p_prim_expr','parser.py',843),
  ('PrimaryExpr -> PrimaryExpr Slice','PrimaryExpr',2,'p_prim_expr','parser.py',844),
  ('PrimaryExpr -> PrimaryExpr Arguments','PrimaryExpr',2,'p_prim_expr','parser.py',845),
  ('Selector -> DOT IDENTIFIER','Selector',2,'p_selector','parser.py',945),
  ('Index -> LBRACK Expression RBRACK','Index',3,'p_index','parser.py',950),
  ('Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK','Slice',5,'p_slice','parser.py',955),
  ('Arguments -> LPAREN ExpressionListTypeOpt RPAREN','Arguments',3,'p_argument','parser.py',969),
  ('ExpressionListTypeOpt -> ExpressionList','ExpressionListTypeOpt',1,'p_expr_list_type_opt','parser.py',975),
  ('ExpressionListTypeOpt -> epsilon','ExpressionListTypeOpt',1,'p_expr_list_type_opt','parser.py',976),
  ('ExpressionList -> Expression ExpressionRep','ExpressionList',2,'p_expr_list','parser.py',999),
  ('ExpressionRep -> ExpressionRep COMMA Expression','ExpressionRep',3,'p_expr_rep','parser.py',1004),
  ('ExpressionRep -> epsilon','ExpressionRep',1,'p_expr_rep','parser.py',1005),
  ('Expression -> UnaryExpr','Expression',1,'p_expression','parser.py',1018),
  ('Expression -> Expression OROR Expression','Expression',3,'p_expression','parser.py',1019),
  ('Expression -> Expression AMPAMP Expression','Expression',3,'p_expression','parser.py',1020),
  ('Expression -> Expression EQEQ Expression','Expression',3,'p_expression','parser.py',1021),
  ('Expression -> Expression NOTEQ Expression','Expression',3,'p_expression','parser.py',1022),
  ('Expression -> Expression LESS Expression','Expression',3,'p_expression','parser.py',1023),
  ('Expression -> Expression GREAT Expression','Expression',3,'p_expression','parser.py',1024),
  ('Expression -> Expression LEQ Expression','Expression',3,'p_expression','parser.py',1025),
  ('Expression -> Expression GEQ Expression','Expression',3,'p_expression','parser.py',1026),
  ('Expression -> Expression PLUS Expression','Expression',3,'p_expression','parser.py',1027),
  ('Expression -> Expression MINUS Expression','Expression',3,'p_expression','parser.py',1028),
  ('Expression -> Expression OR Expression','Expression',3,'p_expression','parser.py',1029),
  ('Expression -> Expression CARET Expression','Expression',3,'p_expression','parser.py',1030),
  ('Expression -> Expression TIMES Expression','Expression',3,'p_expression','parser.py',1031),
  ('Expression -> Expression DIVIDE Expression','Expression',3,'p_expression','parser.py',1032),
  ('Expression -> Expression MOD Expression','Expression',3,'p_expression','parser.py',1033),
  ('Expression -> Expression AMPERS Expression','Expression',3,'p_expression','parser.py',1034),
  ('Expression -> Expression LL Expression','Expression',3,'p_expression','parser.py',1035),
  ('Expression -> Expression GG Expression','Expression',3,'p_expression','parser.py',1036),
  ('Expression -> Expression AMPCAR Expression','Expression',3,'p_expression','parser.py',1037),
  ('ExpressionOpt -> Expression','ExpressionOpt',1,'p_expr_opt','parser.py',1107),
  ('ExpressionOpt -> epsilon','ExpressionOpt',1,'p_expr_opt','parser.py',1108),
  ('UnaryExpr -> PrimaryExpr','UnaryExpr',1,'p_unary_expr','parser.py',1115),
  ('UnaryExpr -> UnaryOp UnaryExpr','UnaryExpr',2,'p_unary_expr','parser.py',1116),
  ('UnaryOp -> PLUS','UnaryOp',1,'p_unary_op','parser.py',1160),
  ('UnaryOp -> MINUS','UnaryOp',1,'p_unary_op','parser.py',1161),
  ('UnaryOp -> TIMES','UnaryOp',1,'p_unary_op','parser.py',1162),
  ('UnaryOp -> AMPERS','UnaryOp',1,'p_unary_op','parser.py',1163),
  ('UnaryOp -> NOT','UnaryOp',1,'p_unary_op','parser.py',1164),
  ('Statement -> Declaration','Statement',1,'p_statement','parser.py',1173),
  ('Statement -> LabeledStmt','Statement',1,'p_statement','parser.py',1174),
  ('Statement -> SimpleStmt','Statement',1,'p_statement','parser.py',1175),
  ('Statement -> ReturnStmt','Statement',1,'p_statement','parser.py',1176),
  ('Statement -> BreakStmt','Statement',1,'p_statement','parser.py',1177),
  ('Statement -> ContinueStmt','Statement',1,'p_statement','parser.py',1178),
  ('Statement -> GotoStmt','Statement',1,'p_statement','parser.py',1179),
  ('Statement -> Block','Statement',1,'p_statement','parser.py',1180),
  ('Statement -> IfStmt','Statement',1,'p_statement','parser.py',1181),
  ('Statement -> PrintStmt','Statement',1,'p_statement','parser.py',1182),
  ('Statement -> ForStmt','Statement',1,'p_statement','parser.py',1183),
  ('PrintStmt -> PRINT PD Expression','PrintStmt',3,'p_print_stmt','parser.py',1191),
  ('PrintStmt -> PRINT PS Expression','PrintStmt',3,'p_print_stmt','parser.py',1192),
  ('SimpleStmt -> epsilon','SimpleStmt',1,'p_simple_stmt','parser.py',1200),
  ('SimpleStmt -> ExpressionStmt','SimpleStmt',1,'p_simple_stmt','parser.py',1201),
  ('SimpleStmt -> IncDecStmt','SimpleStmt',1,'p_simple_stmt','parser.py',1202),
  ('SimpleStmt -> Assignment','SimpleStmt',1,'p_simple_stmt','parser.py',1203),
  ('SimpleStmt -> ShortVarDecl','SimpleStmt',1,'p_simple_stmt','parser.py',1204),
  ('LabeledStmt -> Label COLON Statement','LabeledStmt',3,'p_labeled_statements','parser.py',1211),
  ('Label -> IDENTIFIER','Label',1,'p_label','parser.py',1218),
  ('ExpressionStmt -> Expression','ExpressionStmt',1,'p_expression_stmt','parser.py',1222),
  ('IncDecStmt -> PrimaryExpr PLUSPLUS','IncDecStmt',2,'p_inc_dec','parser.py',1226),
  ('IncDecStmt -> PrimaryExpr MINUSMIN','IncDecStmt',2,'p_inc_dec','parser.py',1227),
  ('Assignment -> ExpressionList assign_op ExpressionList','Assignment',3,'p_assignment','parser.py',1239),
  ('assign_op -> AssignOp','assign_op',1,'p_assign_op','parser.py',1274),
  ('AssignOp -> PLUSEQ','AssignOp',1,'p_AssignOp','parser.py',1278),
  ('AssignOp -> MINUSEQ','AssignOp',1,'p_AssignOp','parser.py',1279),
  ('AssignOp -> TIMESEQ','AssignOp',1,'p_AssignOp','parser.py',1280),
  ('AssignOp -> DIVIDEEQ','AssignOp',1,'p_AssignOp','parser.py',1281),
  ('AssignOp -> MODEQ','AssignOp',1,'p_AssignOp','parser.py',1282),
  ('AssignOp -> AMPEQ','AssignOp',1,'p_AssignOp','parser.py',1283),
  ('AssignOp -> OREQ','AssignOp',1,'p_AssignOp','parser.py',1284),
  ('AssignOp -> CAREQ','AssignOp',1,'p_AssignOp','parser.py',1285),
  ('AssignOp -> LLEQ','AssignOp',1,'p_AssignOp','parser.py',1286),
  ('AssignOp -> GGEQ','AssignOp',1,'p_AssignOp','parser.py',1287),
  ('AssignOp -> EQUAL','AssignOp',1,'p_AssignOp','parser.py',1288),
  ('IfStmt -> IF Expression Block ElseOpt','IfStmt',4,'p_if_statement','parser.py',1297),
  ('ElseOpt -> ELSE IfStmt','ElseOpt',2,'p_else_opt','parser.py',1329),
  ('ElseOpt -> ELSE Block','ElseOpt',2,'p_else_opt','parser.py',1330),
  ('ElseOpt -> epsilon','ElseOpt',1,'p_else_opt','parser.py',1331),
  ('ForStmt -> CreateForScope FOR ConditionBlockOpt Block','ForStmt',4,'p_for','parser.py',1429),
  ('CreateForScope -> epsilon','CreateForScope',1,'p_for_create_scope','parser.py',1455),
  ('ConditionBlockOpt -> epsilon','ConditionBlockOpt',1,'p_conditionblockopt','parser.py',1460),
  ('ConditionBlockOpt -> Condition','ConditionBlockOpt',1,'p_conditionblockopt','parser.py',1461),
  ('ConditionBlockOpt -> ForClause','ConditionBlockOpt',1,'p_conditionblockopt','parser.py',1462),
  ('Condition -> Expression','Condition',1,'p_condition','parser.py',1470),
  ('ForClause -> SimpleStmt SEMICOL ConditionOpt SEMICOL SimpleStmt','ForClause',5,'p_forclause','parser.py',1474),
  ('ConditionOpt -> epsilon','ConditionOpt',1,'p_conditionopt','parser.py',1482),
  ('ConditionOpt -> Condition','ConditionOpt',1,'p_conditionopt','parser.py',1483),
  ('RangeClause -> ExpressionIdentListOpt RANGE Expression','RangeClause',3,'p_rageclause','parser.py',1490),
  ('ExpressionIdentListOpt -> epsilon','ExpressionIdentListOpt',1,'p_expression_ident_listopt','parser.py',1494),
  ('ExpressionIdentListOpt -> ExpressionIdentifier','ExpressionIdentListOpt',1,'p_expression_ident_listopt','parser.py',1495),
  ('ExpressionIdentifier -> ExpressionList EQUAL','ExpressionIdentifier',2,'p_expressionidentifier','parser.py',1499),
  ('ReturnStmt -> RETURN ExpressionListPureOpt','ReturnStmt',2,'p_return','parser.py',1512),
  ('ExpressionListPureOpt -> ExpressionList','ExpressionListPureOpt',1,'p_expressionlist_pure_opt','parser.py',1532),
  ('ExpressionListPureOpt -> epsilon','ExpressionListPureOpt',1,'p_expressionlist_pure_opt','parser.py',1533),
  ('BreakStmt -> BREAK LabelOpt','BreakStmt',2,'p_break','parser.py',1540),
  ('ContinueStmt -> CONTINUE LabelOpt','ContinueStmt',2,'p_continue','parser.py',1546),
  ('LabelOpt -> Label','LabelOpt',1,'p_labelopt','parser.py',1553),
  ('LabelOpt -> epsilon','LabelOpt',1,'p_labelopt','parser.py',1554),
  ('GotoStmt -> GOTO Label','GotoStmt',2,'p_goto','parser.py',1561),
  ('Source -> PackageClause SEMICOL ImportDeclRep TopLevelDeclRep','Source',4,'p_source_file','parser.py',1572),
  ('ImportDeclRep -> epsilon','ImportDeclRep',1,'p_import_decl_rep','parser.py',1576),
  ('ImportDeclRep -> ImportDeclRep ImportDecl SEMICOL','ImportDeclRep',3,'p_import_decl_rep','parser.py',1577),
  ('TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOL','TopLevelDeclRep',3,'p_toplevel_decl_rep','parser.py',1585),
  ('TopLevelDeclRep -> epsilon','TopLevelDeclRep',1,'p_toplevel_decl_rep','parser.py',1586),
  ('PackageClause -> PACKAGE PackageName','PackageClause',2,'p_package_clause','parser.py',1598),
  ('PackageName -> IDENTIFIER','PackageName',1,'p_package_name','parser.py',1604),
  ('ImportDecl -> IMPORT ImportSpec','ImportDecl',2,'p_import_decl','parser.py',1613),
  ('ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN','ImportDecl',4,'p_import_decl','parser.py',1614),
  ('ImportSpecRep -> ImportSpecRep ImportSpec SEMICOL','ImportSpecRep',3,'p_import_spec_rep','parser.py',1623),
  ('ImportSpecRep -> epsilon','ImportSpecRep',1,'p_import_spec_rep','parser.py',1624),
  ('ImportSpec -> PackageNameDotOpt ImportPath','ImportSpec',2,'p_import_spec','parser.py',1632),
  ('PackageNameDotOpt -> DOT','PackageNameDotOpt',1,'p_package_name_dot_opt','parser.py',1638),
  ('PackageNameDotOpt -> PackageName','PackageNameDotOpt',1,'p_package_name_dot_opt','parser.py',1639),
  ('PackageNameDotOpt -> epsilon','PackageNameDotOpt',1,'p_package_name_dot_opt','parser.py',1640),
  ('ImportPath -> STRING','ImportPath',1,'p_import_path','parser.py',1647),
  ('epsilon -> <empty>','epsilon',0,'p_empty','parser.py',1656),
]
