
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightEQUALNOTleftORORleftAMPAMPleftEQEQNOTEQLESSGREATLEQGEQleftPLUSMINUSORCARETleftTIMESDIVIDEMODLLGGAMPERSAMPCARAMPAMP AMPCAR AMPCAREQ AMPEQ AMPERS BREAK CAREQ CARET CASE CHAN COLON COLONEQ COMMA CONST CONSTANT CONTINUE DDD DEFAULT DEFER DIVIDE DIVIDEEQ DOT ELSE EQEQ EQUAL FALLTHROUGH FLOAT FOR FUNC GEQ GG GGEQ GO GOTO GREAT IDENTIFIER IF IMAGINARY IMPORT INTEGER INTERFACE LBRACE LBRACK LEQ LESS LL LLEQ LMINUS LPAREN MAP MINUS MINUSEQ MINUSMIN MOD MODEQ NOT NOTEQ OR OREQ OROR PACKAGE PLUS PLUSEQ PLUSPLUS RANGE RBRACE RBRACK RETURN RPAREN RUNE SELECT SEMICOL STRING STRUCT SWITCH TIMES TIMESEQ TTYPE TYPE TYPEX VARstart : SourceType : TypeName \n\t\t\t| TypeLit \n\t\t\t| LPAREN Type RPARENTypeName : TYPEX\n\t\t\t\t| TTYPE IDENTIFIERTypeLit : ArrayType\n\t\t\t   | StructType\n\t\t\t   | PointerType\n\t\t\t   | FunctionTypeTypeOpt : Type\n\t\t\t   | epsilonArrayType : LBRACK ArrayLength RBRACK ElementType ArrayLength : Expression  ElementType : Type StructType : STRUCT LBRACE FieldDeclRep RBRACE FieldDeclRep : FieldDeclRep FieldDecl SEMICOL\n\t\t\t\t  | epsilon FieldDecl : IdentifierList Type TagOpt TagOpt : Tag\n\t\t\t | epsilon  Tag : STRING PointerType : TIMES BaseTypeBaseType : TypeFunctionType : FUNC SignatureSignature : Parameters ResultOptResultOpt : Result\n\t\t\t\t | epsilonResult : Parameters\n\t\t\t  | TypeParameters : LPAREN ParameterListOpt RPARENParameterListOpt : ParametersList\n\t\t\t\t\t\t| epsilonParametersList : Type\n\t\t\t\t\t  | IdentifierList Type\n\t\t\t\t\t  | ParameterDeclCommaRepParameterDeclCommaRep : ParameterDeclCommaRep COMMA ParameterDecl\n\t\t\t\t\t\t\t | ParameterDecl COMMA ParameterDeclParameterDecl : IdentifierList Type\n\t\t\t\t\t | TypeBlock : LBRACE StatementList RBRACEStatementList : StatementRepStatementRep : StatementRep Statement SEMICOL\n\t\t\t\t\t| epsilonDeclaration : ConstDecl\n\t\t\t\t\t| TypeDecl\n\t\t\t\t\t| VarDeclTopLevelDecl : Declaration\n\t\t\t\t\t| FunctionDeclConstDecl : CONST ConstSpec\n\t\t\t\t | CONST LPAREN ConstSpecRep RPARENConstSpecRep : ConstSpecRep ConstSpec SEMICOL\n\t\t\t\t\t| epsilonConstSpec : IdentifierList TypeExprListOptTypeExprListOpt : TypeOpt EQUAL ExpressionList\n\t\t\t\t\t   | epsilonIdentifierList : IDENTIFIER IdentifierRepIdentifierRep : IdentifierRep COMMA IDENTIFIER\n\t\t\t\t\t | epsilonTypeDecl : TYPE TypeSpec\n\t\t\t\t| TYPE LPAREN TypeSpecRep RPARENTypeSpecRep : TypeSpecRep TypeSpec SEMICOL\n\t\t\t\t   | epsilonTypeSpec : AliasDecl\n\t\t\t\t| TypeDefAliasDecl : IDENTIFIER EQUAL TypeTypeDef : TTYPE IDENTIFIER TypeVarDecl : VAR VarSpec\n\t\t\t   | VAR LPAREN VarSpecRep RPARENVarSpecRep : VarSpecRep VarSpec SEMICOL\n\t\t\t\t  | epsilonVarSpec : IdentifierList Type ExpressionListOpt\n\t\t\t   | IdentifierList EQUAL ExpressionListExpressionListOpt : EQUAL ExpressionList\n\t\t\t\t\t\t | epsilon ShortVarDecl : IDENTIFIER COLONEQ Expression FunctionDecl : FUNC FunctionName Function\n\t\t\t\t\t| FUNC FunctionName SignatureFunctionName : IDENTIFIERFunction : Signature FunctionBodyFunctionBody : BlockOperand : Literal\n\t\t\t   | OperandName\n\t\t\t   | LPAREN Expression RPARENLiteral : BasicLitBasicLit : IntLiteral\n\t\t\t\t| FloatLiteral\n\t\t\t\t| ImgLiteral\n\t\t\t\t| RuneLiteral\n\t\t\t\t| StringLiteralIntLiteral : INTEGERFloatLiteral : FLOATImgLiteral : IMAGINARYRuneLiteral : RUNEStringLiteral : STRINGOperandName : IDENTIFIERConversion : Type LPAREN Expression RPARENPrimaryExpr : Operand\n\t\t\t\t   | Conversion\n\t\t\t\t   | PrimaryExpr Selector\n\t\t\t\t   | PrimaryExpr Index\n\t\t\t\t   | PrimaryExpr Slice\n\t\t\t\t   | PrimaryExpr ArgumentsSelector : DOT IDENTIFIERIndex : LBRACK Expression RBRACKSlice : LBRACK ExpressionOpt COLON ExpressionOpt RBRACKArguments : LPAREN ExpressionListTypeOpt RPARENExpressionListTypeOpt : ExpressionList\n\t\t\t\t\t\t\t | epsilonExpressionList : Expression ExpressionRepExpressionRep : ExpressionRep COMMA Expression\n\t\t\t\t\t | epsilonExpression : UnaryExpr\n\t\t\t\t  | Expression OROR Expression\n\t\t\t\t\t| Expression AMPAMP Expression\n\t\t\t\t\t| Expression EQEQ Expression\n\t\t\t\t\t| Expression NOTEQ Expression\n\t\t\t\t\t| Expression LESS Expression\n\t\t\t\t\t| Expression GREAT Expression\n\t\t\t\t\t| Expression LEQ Expression\n\t\t\t\t\t| Expression GEQ Expression\n\t\t\t\t\t| Expression PLUS Expression\n\t\t\t\t\t| Expression MINUS Expression\n\t\t\t\t\t| Expression OR Expression\n\t\t\t\t\t| Expression CARET Expression\n\t\t\t\t\t| Expression TIMES Expression\n\t\t\t\t\t| Expression DIVIDE Expression\n\t\t\t\t\t| Expression MOD Expression\n\t\t\t\t\t| Expression AMPERS Expression\n\t\t\t\t\t| Expression LL Expression\n\t\t\t\t\t| Expression GG Expression\n\t\t\t\t\t| Expression AMPCAR ExpressionExpressionOpt : Expression\n\t\t\t\t\t | epsilonUnaryExpr : PrimaryExpr\n\t\t\t\t | UnaryOp UnaryExprUnaryOp : PLUS\n\t\t\t   | MINUS\n\t\t\t   | TIMES\n\t\t\t   | AMPERS\n\t\t\t   | NOT Statement : Declaration\n\t\t\t\t | LabeledStmt\n\t\t\t\t | SimpleStmt\n\t\t\t\t | ReturnStmt\n\t\t\t\t | BreakStmt\n\t\t\t\t | ContinueStmt\n\t\t\t\t | GotoStmt\n\t\t\t\t | Block\n\t\t\t\t | IfStmt\n\t\t\t\t | ForStmt SimpleStmt : epsilon\n\t\t\t\t  | ExpressionStmt\n\t\t\t\t  | IncDecStmt\n\t\t\t\t  | Assignment\n\t\t\t\t  | ShortVarDecl  LabeledStmt : Label COLON Statement  Label : IDENTIFIER  ExpressionStmt : Expression  IncDecStmt : PrimaryExpr PLUSPLUS\n\t\t\t\t\t| PrimaryExpr MINUSMIN Assignment : ExpressionList assign_op ExpressionList assign_op : AssignOpAssignOp : PLUSEQ\n\t\t\t\t| MINUSEQ\n\t\t\t\t| TIMESEQ\n\t\t\t\t| DIVIDEEQ\n\t\t\t\t| MODEQ\n\t\t\t\t| AMPEQ\n\t\t\t\t| OREQ\n\t\t\t\t| CAREQ\n\t\t\t\t| LLEQ\n\t\t\t\t| GGEQ\n\t\t\t\t| EQUAL  IfStmt : IF Expression Block ElseOpt  ElseOpt : ELSE IfStmt\n\t\t\t\t| ELSE Block\n\t\t\t\t| epsilon ForStmt : FOR ConditionBlockOpt BlockConditionBlockOpt : epsilon\n\t\t\t\t| Condition\n\t\t\t\t| ForClauseCondition : Expression ForClause : SimpleStmt SEMICOL ConditionOpt SEMICOL SimpleStmtConditionOpt : epsilon\n\t\t\t| Condition RangeClause : ExpressionIdentListOpt RANGE ExpressionExpressionIdentListOpt : epsilon\n\t\t\t\t| ExpressionIdentifierExpressionIdentifier : ExpressionList EQUALReturnStmt : RETURN ExpressionListPureOptExpressionListPureOpt : ExpressionList\n\t\t\t\t| epsilonBreakStmt : BREAK LabelOptContinueStmt : CONTINUE LabelOptLabelOpt : Label\n\t\t\t| epsilon GotoStmt : GOTO Label Source : PackageClause SEMICOL ImportDeclRep TopLevelDeclRepImportDeclRep : epsilon\n\t\t\t| ImportDeclRep ImportDecl SEMICOLTopLevelDeclRep : TopLevelDeclRep TopLevelDecl SEMICOL\n\t\t\t\t\t\t| epsilonPackageClause : PACKAGE PackageNamePackageName : IDENTIFIERImportDecl : IMPORT ImportSpec\n\t\t\t| IMPORT LPAREN ImportSpecRep RPAREN  ImportSpecRep : ImportSpecRep ImportSpec SEMICOL\n\t\t\t\t| epsilon  ImportSpec : PackageNameDotOpt ImportPath  PackageNameDotOpt : DOT\n\t\t\t\t\t\t\t| PackageName\n\t\t\t\t\t\t\t| epsilon ImportPath : STRING epsilon : '
    
_lr_action_items = {'OROR':([95,96,97,98,99,102,103,104,108,109,110,111,112,113,114,116,119,120,122,143,158,162,182,183,185,186,206,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,232,236,247,251,255,272,274,275,282,287,288,311,313,319,323,326,330,],[-94,-99,-90,-82,-87,-95,-83,-85,-91,-93,-96,-86,-88,-113,-89,-98,163,-92,-135,163,-136,163,-101,-102,-100,-103,163,-84,-114,-125,-119,-127,-132,-118,-116,-130,-129,-121,-124,-131,-117,-122,-128,-115,-126,-123,-120,163,-104,-135,-96,163,-97,-105,-107,-96,163,-135,163,163,163,163,-106,163,]),'CARET':([95,96,97,98,99,102,103,104,108,109,110,111,112,113,114,116,119,120,122,143,158,162,182,183,185,186,206,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,232,236,247,251,255,272,274,275,282,287,288,311,313,319,323,326,330,],[-94,-99,-90,-82,-87,-95,-83,-85,-91,-93,-96,-86,-88,-113,-89,-98,164,-92,-135,164,-136,164,-101,-102,-100,-103,164,-84,164,-125,164,-127,-132,164,164,-130,-129,164,-124,-131,164,-122,-128,164,-126,-123,164,164,-104,-135,-96,164,-97,-105,-107,-96,164,-135,164,164,164,164,-106,164,]),'GREAT':([95,96,97,98,99,102,103,104,108,109,110,111,112,113,114,116,119,120,122,143,158,162,182,183,185,186,206,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,232,236,247,251,255,272,274,275,282,287,288,311,313,319,323,326,330,],[-94,-99,-90,-82,-87,-95,-83,-85,-91,-93,-96,-86,-88,-113,-89,-98,165,-92,-135,165,-136,165,-101,-102,-100,-103,165,-84,165,-125,-119,-127,-132,-118,-116,-130,-129,-121,-124,-131,-117,-122,-128,165,-126,-123,-120,165,-104,-135,-96,165,-97,-105,-107,-96,165,-135,165,165,165,165,-106,165,]),'SEMICOL':([1,6,7,12,15,16,17,18,19,22,26,31,33,34,38,41,43,45,49,50,54,56,57,58,59,60,67,68,69,70,71,72,73,74,79,84,85,86,87,88,89,90,92,95,96,97,98,99,102,103,104,108,109,110,111,112,113,114,116,120,122,124,125,126,127,129,130,131,132,140,141,142,143,145,146,147,148,149,150,153,154,158,182,183,185,186,189,191,192,194,199,200,201,203,205,207,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,236,237,238,239,240,241,242,244,245,246,247,248,249,250,251,252,253,255,256,257,258,259,261,263,264,271,272,274,275,276,277,278,279,280,281,282,284,287,288,289,290,291,292,293,294,309,310,313,314,315,316,317,320,321,322,323,324,325,326,327,328,329,330,331,333,335,336,],[5,-204,-205,24,-49,35,-48,-45,-46,-47,-206,-50,-215,-215,-68,-65,-64,-60,-210,-214,-7,-3,-2,-5,-8,-56,-54,-9,-10,-59,-57,-77,-215,-78,-215,-207,151,152,-51,-25,-24,-23,-6,-94,-99,-90,-82,-87,-95,-83,-85,-91,-93,-96,-86,-88,-113,-89,-98,-92,-135,-29,-30,-26,-28,-27,-80,-215,-81,-69,198,-73,-215,-75,-72,-67,-61,202,-66,-4,-55,-136,-101,-102,-100,-103,-58,-215,-44,-31,-110,-112,-74,270,-16,-15,-13,-84,-114,-125,-119,-127,-132,-118,-116,-130,-129,-121,-124,-131,-117,-122,-128,-115,-126,-123,-120,-104,-147,-153,276,-155,-143,-215,-154,-148,-215,-135,-149,-215,-142,-96,-152,-150,-159,-215,-145,-144,-151,-156,-146,-41,-215,-97,-105,-107,-43,-191,-193,-192,-215,321,-96,-152,-159,-135,-160,-161,-197,-158,-195,-196,-194,-198,-111,-22,-21,-20,-19,-157,-215,-179,-76,-162,-215,-106,-186,-185,334,-183,-178,-175,-176,-177,]),'CONST':([5,8,9,10,11,24,35,131,191,192,276,280,],[-215,-200,-215,14,-203,-201,-202,-215,14,-44,-43,14,]),'FUNC':([5,8,9,10,11,24,33,34,35,40,61,62,66,70,71,73,75,78,80,83,93,101,105,106,107,115,118,121,128,131,134,144,157,159,161,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,184,187,189,191,192,194,196,197,204,209,242,246,262,265,269,273,276,280,295,296,297,298,299,300,301,302,303,304,305,306,307,308,321,334,],[-215,-200,-215,20,-203,-201,53,-215,-202,53,53,53,53,-59,-57,53,53,53,53,53,53,-138,53,-141,-137,-139,53,-140,53,-215,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-58,53,-44,-31,53,53,53,-139,53,53,53,53,53,53,-43,53,53,-163,-174,-171,-166,-164,-168,-173,-172,-170,-165,-169,53,-167,53,53,]),'AMPCAR':([95,96,97,98,99,102,103,104,108,109,110,111,112,113,114,116,119,120,122,143,158,162,182,183,185,186,206,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,232,236,247,251,255,272,274,275,282,287,288,311,313,319,323,326,330,],[-94,-99,-90,-82,-87,-95,-83,-85,-91,-93,-96,-86,-88,-113,-89,-98,167,-92,-135,167,-136,167,-101,-102,-100,-103,167,-84,167,167,167,-127,-132,167,167,-130,-129,167,167,-131,167,167,-128,167,-126,167,167,167,-104,-135,-96,167,-97,-105,-107,-96,167,-135,167,167,167,167,-106,167,]),'LESS':([95,96,97,98,99,102,103,104,108,109,110,111,112,113,114,116,119,120,122,143,158,162,182,183,185,186,206,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,232,236,247,251,255,272,274,275,282,287,288,311,313,319,323,326,330,],[-94,-99,-90,-82,-87,-95,-83,-85,-91,-93,-96,-86,-88,-113,-89,-98,168,-92,-135,168,-136,168,-101,-102,-100,-103,168,-84,168,-125,-119,-127,-132,-118,-116,-130,-129,-121,-124,-131,-117,-122,-128,168,-126,-123,-120,168,-104,-135,-96,168,-97,-105,-107,-96,168,-135,168,168,168,168,-106,168,]),'EQEQ':([95,96,97,98,99,102,103,104,108,109,110,111,112,113,114,116,119,120,122,143,158,162,182,183,185,186,206,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,232,236,247,251,255,272,274,275,282,287,288,311,313,319,323,326,330,],[-94,-99,-90,-82,-87,-95,-83,-85,-91,-93,-96,-86,-88,-113,-89,-98,169,-92,-135,169,-136,169,-101,-102,-100,-103,169,-84,169,-125,-119,-127,-132,-118,-116,-130,-129,-121,-124,-131,-117,-122,-128,169,-126,-123,-120,169,-104,-135,-96,169,-97,-105,-107,-96,169,-135,169,169,169,169,-106,169,]),'GGEQ':([95,96,97,98,99,102,103,104,108,109,110,111,112,113,114,116,120,122,158,182,183,185,186,199,200,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,236,247,251,254,255,272,274,275,282,287,288,313,326,],[-94,-99,-90,-82,-87,-95,-83,-85,-91,-93,-96,-86,-88,-113,-89,-98,-92,-135,-136,-101,-102,-100,-103,-110,-112,-84,-114,-125,-119,-127,-132,-118,-116,-130,-129,-121,-124,-131,-117,-122,-128,-115,-126,-123,-120,-104,-135,-96,302,-215,-97,-105,-107,-96,-215,-135,-111,-106,]),'EQUAL':([33,34,40,46,54,55,56,57,58,59,60,64,68,69,70,71,73,79,88,89,90,92,95,96,97,98,99,102,103,104,108,109,110,111,112,113,114,116,120,122,124,125,126,127,129,153,158,182,183,185,186,189,194,199,200,205,207,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,236,247,251,254,255,272,274,275,282,287,288,313,326,],[-215,-215,78,83,-7,-11,-3,-2,-5,-8,-12,93,-9,-10,-59,-57,-215,144,-25,-24,-23,-6,-94,-99,-90,-82,-87,-95,-83,-85,-91,-93,-96,-86,-88,-113,-89,-98,-92,-135,-29,-30,-26,-28,-27,-4,-136,-101,-102,-100,-103,-58,-31,-110,-112,-16,-15,-13,-84,-114,-125,-119,-127,-132,-118,-116,-130,-129,-121,-124,-131,-117,-122,-128,-115,-126,-123,-120,-104,-135,-96,297,-215,-97,-105,-107,-96,-215,-135,-111,-106,]),'GOTO':([131,191,192,276,280,],[-215,260,-44,-43,260,]),'CAREQ':([95,96,97,98,99,102,103,104,108,109,110,111,112,113,114,116,120,122,158,182,183,185,186,199,200,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,236,247,251,254,255,272,274,275,282,287,288,313,326,],[-94,-99,-90,-82,-87,-95,-83,-85,-91,-93,-96,-86,-88,-113,-89,-98,-92,-135,-136,-101,-102,-100,-103,-110,-112,-84,-114,-125,-119,-127,-132,-118,-116,-130,-129,-121,-124,-131,-117,-122,-128,-115,-126,-123,-120,-104,-135,-96,298,-215,-97,-105,-107,-96,-215,-135,-111,-106,]),'COLON':([95,96,97,98,99,102,103,104,108,109,110,111,112,113,114,116,120,122,158,182,183,184,185,186,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,236,243,251,272,274,275,326,],[-94,-99,-90,-82,-87,-95,-83,-85,-91,-93,-96,-86,-88,-113,-89,-98,-92,-135,-136,-101,-102,-215,-100,-103,-84,-114,-125,-119,-127,-132,-118,-116,-130,-129,-121,-124,-131,-117,-122,-128,-115,-126,-123,-120,273,-134,-133,-104,280,-158,-97,-105,-107,-106,]),'COLONEQ':([251,282,],[295,295,]),'AMPAMP':([95,96,97,98,99,102,103,104,108,109,110,111,112,113,114,116,119,120,122,143,158,162,182,183,185,186,206,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,232,236,247,251,255,272,274,275,282,287,288,311,313,319,323,326,330,],[-94,-99,-90,-82,-87,-95,-83,-85,-91,-93,-96,-86,-88,-113,-89,-98,178,-92,-135,178,-136,178,-101,-102,-100,-103,178,-84,178,-125,-119,-127,-132,-118,-116,-130,-129,-121,-124,-131,-117,-122,-128,-115,-126,-123,-120,178,-104,-135,-96,178,-97,-105,-107,-96,178,-135,178,178,178,178,-106,178,]),'RETURN':([131,191,192,276,280,],[-215,242,-44,-43,242,]),'RUNE':([66,78,93,101,105,106,107,115,118,121,131,144,157,161,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,184,187,191,192,209,242,246,262,269,273,276,280,295,296,297,298,299,300,301,302,303,304,305,306,307,308,321,334,],[95,95,95,-138,95,-141,-137,-139,95,-140,-215,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,-44,-139,95,95,95,95,95,-43,95,95,-163,-174,-171,-166,-164,-168,-173,-172,-170,-165,-169,95,-167,95,95,]),'MINUS':([66,78,93,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,120,121,122,131,143,144,157,158,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,191,192,206,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,232,236,242,246,247,251,255,262,269,272,273,274,275,276,280,282,287,288,295,296,297,298,299,300,301,302,303,304,305,306,307,308,311,313,319,321,323,326,330,334,],[101,101,101,-94,-99,-90,-82,-87,-138,-95,-83,-85,101,-141,-137,-91,-93,-96,-86,-88,-113,-89,-139,-98,101,180,-92,-140,-135,-215,180,101,101,-136,101,180,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,-101,-102,101,-100,-103,101,101,-44,180,-139,-84,180,-125,180,-127,-132,180,180,-130,-129,180,-124,-131,180,-122,-128,180,-126,-123,180,180,-104,101,101,-135,-96,180,101,101,-97,101,-105,-107,-43,101,-96,180,-135,101,-163,-174,-171,-166,-164,-168,-173,-172,-170,-165,-169,101,-167,180,180,180,101,180,-106,180,101,]),'DOT':([13,25,47,48,95,96,97,98,99,102,103,104,108,109,110,111,112,114,116,120,122,151,182,183,185,186,210,236,247,251,272,274,275,282,288,326,],[30,-215,-209,30,-94,-99,-90,-82,-87,-95,-83,-85,-91,-93,-96,-86,-88,-89,-98,-92,188,-208,-101,-102,-100,-103,-84,-104,188,-96,-97,-105,-107,-96,188,-106,]),'RBRACE':([94,131,155,156,191,192,193,270,276,],[-215,-215,205,-18,-42,-44,264,-17,-43,]),'GEQ':([95,96,97,98,99,102,103,104,108,109,110,111,112,113,114,116,119,120,122,143,158,162,182,183,185,186,206,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,232,236,247,251,255,272,274,275,282,287,288,311,313,319,323,326,330,],[-94,-99,-90,-82,-87,-95,-83,-85,-91,-93,-96,-86,-88,-113,-89,-98,172,-92,-135,172,-136,172,-101,-102,-100,-103,172,-84,172,-125,-119,-127,-132,-118,-116,-130,-129,-121,-124,-131,-117,-122,-128,172,-126,-123,-120,172,-104,-135,-96,172,-97,-105,-107,-96,172,-135,172,172,172,172,-106,172,]),'RPAREN':([25,32,39,44,47,48,51,52,54,56,57,58,59,68,69,73,75,76,77,81,82,88,89,90,91,92,95,96,97,98,99,102,103,104,108,109,110,111,112,113,114,116,120,122,124,125,126,127,128,129,133,135,136,137,139,143,151,152,153,158,160,162,182,183,185,186,187,190,194,195,198,199,200,202,205,206,207,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,233,234,235,236,266,267,268,272,274,275,312,313,326,],[-215,-215,-215,-215,-209,84,87,-53,-7,-3,-2,-5,-8,-9,-10,-215,-215,140,-71,148,-63,-25,-24,-23,153,-6,-94,-99,-90,-82,-87,-95,-83,-85,-91,-93,-96,-86,-88,-113,-89,-98,-92,-135,-29,-30,-26,-28,-215,-27,194,-36,-34,-32,-33,-215,-208,-52,-4,-136,153,210,-101,-102,-100,-103,-215,153,-31,-35,-70,-110,-112,-62,-16,272,-15,-13,-84,-114,-125,-119,-127,-132,-118,-116,-130,-129,-121,-124,-131,-117,-122,-128,-115,-126,-123,-120,-109,-108,275,-104,-40,-37,-38,-97,-105,-107,-39,-111,-106,]),'TIMESEQ':([95,96,97,98,99,102,103,104,108,109,110,111,112,113,114,116,120,122,158,182,183,185,186,199,200,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,236,247,251,254,255,272,274,275,282,287,288,313,326,],[-94,-99,-90,-82,-87,-95,-83,-85,-91,-93,-96,-86,-88,-113,-89,-98,-92,-135,-136,-101,-102,-100,-103,-110,-112,-84,-114,-125,-119,-127,-132,-118,-116,-130,-129,-121,-124,-131,-117,-122,-128,-115,-126,-123,-120,-104,-135,-96,299,-215,-97,-105,-107,-96,-215,-135,-111,-106,]),'LL':([95,96,97,98,99,102,103,104,108,109,110,111,112,113,114,116,119,120,122,143,158,162,182,183,185,186,206,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,232,236,247,251,255,272,274,275,282,287,288,311,313,319,323,326,330,],[-94,-99,-90,-82,-87,-95,-83,-85,-91,-93,-96,-86,-88,-113,-89,-98,170,-92,-135,170,-136,170,-101,-102,-100,-103,170,-84,170,170,170,-127,-132,170,170,-130,-129,170,170,-131,170,170,-128,170,-126,170,170,170,-104,-135,-96,170,-97,-105,-107,-96,170,-135,170,170,170,170,-106,170,]),'MODEQ':([95,96,97,98,99,102,103,104,108,109,110,111,112,113,114,116,120,122,158,182,183,185,186,199,200,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,236,247,251,254,255,272,274,275,282,287,288,313,326,],[-94,-99,-90,-82,-87,-95,-83,-85,-91,-93,-96,-86,-88,-113,-89,-98,-92,-135,-136,-101,-102,-100,-103,-110,-112,-84,-114,-125,-119,-127,-132,-118,-116,-130,-129,-121,-124,-131,-117,-122,-128,-115,-126,-123,-120,-104,-135,-96,301,-215,-97,-105,-107,-96,-215,-135,-111,-106,]),'PLUS':([66,78,93,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,120,121,122,131,143,144,157,158,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,191,192,206,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,232,236,242,246,247,251,255,262,269,272,273,274,275,276,280,282,287,288,295,296,297,298,299,300,301,302,303,304,305,306,307,308,311,313,319,321,323,326,330,334,],[107,107,107,-94,-99,-90,-82,-87,-138,-95,-83,-85,107,-141,-137,-91,-93,-96,-86,-88,-113,-89,-139,-98,107,176,-92,-140,-135,-215,176,107,107,-136,107,176,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,-101,-102,107,-100,-103,107,107,-44,176,-139,-84,176,-125,176,-127,-132,176,176,-130,-129,176,-124,-131,176,-122,-128,176,-126,-123,176,176,-104,107,107,-135,-96,176,107,107,-97,107,-105,-107,-43,107,-96,176,-135,107,-163,-174,-171,-166,-164,-168,-173,-172,-170,-165,-169,107,-167,176,176,176,107,176,-106,176,107,]),'MINUSEQ':([95,96,97,98,99,102,103,104,108,109,110,111,112,113,114,116,120,122,158,182,183,185,186,199,200,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,236,247,251,254,255,272,274,275,282,287,288,313,326,],[-94,-99,-90,-82,-87,-95,-83,-85,-91,-93,-96,-86,-88,-113,-89,-98,-92,-135,-136,-101,-102,-100,-103,-110,-112,-84,-114,-125,-119,-127,-132,-118,-116,-130,-129,-121,-124,-131,-117,-122,-128,-115,-126,-123,-120,-104,-135,-96,305,-215,-97,-105,-107,-96,-215,-135,-111,-106,]),'COMMA':([34,54,56,57,58,59,68,69,70,71,73,88,89,90,92,95,96,97,98,99,102,103,104,108,109,110,111,112,113,114,116,120,122,124,125,126,127,129,135,136,138,143,153,158,182,183,185,186,189,190,194,195,199,200,205,207,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,236,247,251,255,266,267,268,272,274,275,282,287,288,312,313,326,],[-215,-7,-3,-2,-5,-8,-9,-10,-59,123,-215,-25,-24,-23,-6,-94,-99,-90,-82,-87,-95,-83,-85,-91,-93,-96,-86,-88,-113,-89,-98,-92,-135,-29,-30,-26,-28,-27,196,-40,197,-215,-4,-136,-101,-102,-100,-103,-58,-40,-31,-39,269,-112,-16,-15,-13,-84,-114,-125,-119,-127,-132,-118,-116,-130,-129,-121,-124,-131,-117,-122,-128,-115,-126,-123,-120,-104,-135,-96,-215,-40,-37,-38,-97,-105,-107,-96,-215,-135,-39,-111,-106,]),'TYPEX':([33,34,40,61,62,66,70,71,73,75,78,80,83,93,101,105,106,107,115,118,121,128,131,134,144,157,159,161,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,184,187,189,191,192,194,196,197,204,209,242,246,262,265,269,273,276,280,295,296,297,298,299,300,301,302,303,304,305,306,307,308,321,334,],[58,-215,58,58,58,58,-59,-57,58,58,58,58,58,58,-138,58,-141,-137,-139,58,-140,58,-215,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-58,58,-44,-31,58,58,58,-139,58,58,58,58,58,58,-43,58,58,-163,-174,-171,-166,-164,-168,-173,-172,-170,-165,-169,58,-167,58,58,]),'IMPORT':([5,8,9,24,],[-215,-200,13,-201,]),'IMAGINARY':([66,78,93,101,105,106,107,115,118,121,131,144,157,161,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,184,187,191,192,209,242,246,262,269,273,276,280,295,296,297,298,299,300,301,302,303,304,305,306,307,308,321,334,],[109,109,109,-138,109,-141,-137,-139,109,-140,-215,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,-44,-139,109,109,109,109,109,-43,109,109,-163,-174,-171,-166,-164,-168,-173,-172,-170,-165,-169,109,-167,109,109,]),'IDENTIFIER':([2,13,14,20,21,23,25,32,39,42,44,47,48,51,52,63,66,75,76,77,78,81,82,93,94,101,105,106,107,115,118,121,123,128,131,144,151,152,155,156,157,161,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,184,187,188,191,192,196,197,198,202,209,242,246,249,256,260,262,269,270,273,276,280,295,296,297,298,299,300,301,302,303,304,305,306,307,308,321,334,],[7,7,34,36,34,46,-215,-215,-215,80,-215,-209,7,34,-53,92,110,34,34,-71,110,46,-63,110,-215,-138,110,-141,-137,-139,110,-140,189,34,-215,110,-208,-52,34,-18,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,236,251,-44,34,34,-70,-62,-139,110,282,292,292,292,110,110,-17,110,-43,251,110,-163,-174,-171,-166,-164,-168,-173,-172,-170,-165,-169,110,-167,110,282,]),'DIVIDEEQ':([95,96,97,98,99,102,103,104,108,109,110,111,112,113,114,116,120,122,158,182,183,185,186,199,200,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,236,247,251,254,255,272,274,275,282,287,288,313,326,],[-94,-99,-90,-82,-87,-95,-83,-85,-91,-93,-96,-86,-88,-113,-89,-98,-92,-135,-136,-101,-102,-100,-103,-110,-112,-84,-114,-125,-119,-127,-132,-118,-116,-130,-129,-121,-124,-131,-117,-122,-128,-115,-126,-123,-120,-104,-135,-96,308,-215,-97,-105,-107,-96,-215,-135,-111,-106,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'FunctionBody':([74,],[130,]),'Conversion':([66,78,93,105,118,144,157,161,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,184,187,191,242,246,262,269,273,280,295,307,321,334,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'ContinueStmt':([191,280,],[237,237,]),'ParameterListOpt':([75,128,],[133,133,]),'ExpressionRep':([143,255,287,],[199,199,199,]),'ExpressionStmt':([191,246,280,334,],[238,238,238,238,]),'Statement':([191,280,],[239,320,]),'ParameterDeclCommaRep':([75,128,],[135,135,]),'Selector':([122,247,288,],[185,185,185,]),'IfStmt':([191,280,332,],[253,253,335,]),'StatementRep':([131,],[191,]),'Assignment':([191,246,280,334,],[240,240,240,240,]),'PackageNameDotOpt':([13,48,],[29,29,]),'TypeName':([33,40,61,62,66,73,75,78,80,83,93,105,115,118,128,134,144,157,159,161,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,184,187,191,196,197,204,209,242,246,262,265,269,273,280,295,307,321,334,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'ParametersList':([75,128,],[137,137,]),'ParameterDecl':([75,128,196,197,],[138,138,267,268,]),'FunctionName':([20,],[37,]),'LabeledStmt':([191,280,],[241,241,]),'StatementList':([131,],[193,]),'ConditionOpt':([321,],[329,]),'ElementType':([159,],[208,]),'PointerType':([33,40,61,62,66,73,75,78,80,83,93,105,115,118,128,134,144,157,159,161,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,184,187,191,196,197,204,209,242,246,262,265,269,273,280,295,307,321,334,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'VarSpecRep':([39,],[76,]),'VarDecl':([10,191,280,],[22,22,22,]),'Tag':([271,],[316,]),'ConstSpecRep':([32,],[51,]),'PrimaryExpr':([66,78,93,105,118,144,157,161,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,184,187,191,242,246,262,269,273,280,295,307,321,334,],[122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,247,122,288,122,122,122,247,122,122,122,247,]),'TypeSpec':([23,81,],[45,149,]),'Index':([122,247,288,],[182,182,182,]),'Parameters':([37,53,73,],[73,73,124,]),'UnaryOp':([66,78,93,105,118,144,157,161,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,184,187,191,242,246,262,269,273,280,295,307,321,334,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'PackageName':([2,13,48,],[6,28,28,]),'ExpressionListPureOpt':([242,],[277,]),'Label':([191,249,256,260,280,],[243,294,294,310,243,]),'FunctionDecl':([10,],[15,]),'TopLevelDecl':([10,],[16,]),'IdentifierList':([14,21,51,75,76,128,155,196,197,],[33,40,33,134,40,134,204,265,265,]),'TypeLit':([33,40,61,62,66,73,75,78,80,83,93,105,115,118,128,134,144,157,159,161,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,184,187,191,196,197,204,209,242,246,262,265,269,273,280,295,307,321,334,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'ImportDeclRep':([5,],[9,]),'PackageClause':([0,],[1,]),'ResultOpt':([73,],[126,]),'FloatLiteral':([66,78,93,105,118,144,157,161,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,184,187,191,242,246,262,269,273,280,295,307,321,334,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'IncDecStmt':([191,246,280,334,],[244,244,244,244,]),'GotoStmt':([191,280,],[245,245,]),'TopLevelDeclRep':([9,],[10,]),'Operand':([66,78,93,105,118,144,157,161,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,184,187,191,242,246,262,269,273,280,295,307,321,334,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'assign_op':([254,],[307,]),'Signature':([37,53,],[74,88,]),'Block':([74,191,280,285,311,332,],[132,248,248,322,325,336,]),'ConstDecl':([10,191,280,],[18,18,18,]),'VarSpec':([21,76,],[38,141,]),'Result':([73,],[129,]),'AliasDecl':([23,81,],[43,43,]),'ExpressionListTypeOpt':([187,],[235,]),'Literal':([66,78,93,105,118,144,157,161,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,184,187,191,242,246,262,269,273,280,295,307,321,334,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'ImportDecl':([9,],[12,]),'OperandName':([66,78,93,105,118,144,157,161,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,184,187,191,242,246,262,269,273,280,295,307,321,334,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'AssignOp':([254,],[296,]),'FieldDeclRep':([94,],[155,]),'start':([0,],[4,]),'Declaration':([10,191,280,],[17,250,250,]),'Condition':([246,321,],[283,327,]),'StructType':([33,40,61,62,66,73,75,78,80,83,93,105,115,118,128,134,144,157,159,161,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,184,187,191,196,197,204,209,242,246,262,265,269,273,280,295,307,321,334,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'IntLiteral':([66,78,93,105,118,144,157,161,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,184,187,191,242,246,262,269,273,280,295,307,321,334,],[111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'ConstSpec':([14,51,],[31,86,]),'epsilon':([5,9,13,25,32,33,34,39,44,48,73,75,79,94,128,131,143,184,187,191,242,246,249,255,256,271,273,280,287,321,325,334,],[8,11,27,47,52,60,70,77,82,27,127,139,145,156,139,192,200,231,233,252,278,284,291,200,291,315,231,252,200,328,331,252,]),'ConditionBlockOpt':([246,],[285,]),'ExpressionList':([78,93,144,187,191,242,246,280,307,334,],[142,154,201,234,254,279,254,254,324,254,]),'SimpleStmt':([191,246,280,334,],[258,281,258,337,]),'ImportSpecRep':([25,],[48,]),'Expression':([66,78,93,118,144,157,161,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,184,187,191,242,246,262,269,273,280,295,307,321,334,],[119,143,143,162,143,206,162,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,232,143,255,143,287,311,313,319,255,323,143,330,255,]),'ImportPath':([29,],[49,]),'Source':([0,],[3,]),'ExpressionOpt':([184,273,],[230,318,]),'StringLiteral':([66,78,93,105,118,144,157,161,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,184,187,191,242,246,262,269,273,280,295,307,321,334,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'IdentifierRep':([34,],[71,]),'TypeExprListOpt':([33,],[67,]),'ReturnStmt':([191,280,],[257,257,]),'FunctionType':([33,40,61,62,66,73,75,78,80,83,93,105,115,118,128,134,144,157,159,161,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,184,187,191,196,197,204,209,242,246,262,265,269,273,280,295,307,321,334,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'Slice':([122,247,288,],[183,183,183,]),'ArrayType':([33,40,61,62,66,73,75,78,80,83,93,105,115,118,128,134,144,157,159,161,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,184,187,191,196,197,204,209,242,246,262,265,269,273,280,295,307,321,334,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'ForStmt':([191,280,],[259,259,]),'Arguments':([122,247,288,],[186,186,186,]),'Function':([37,],[72,]),'ImportSpec':([13,48,],[26,85,]),'Type':([33,40,61,62,66,73,75,78,80,83,93,105,115,118,128,134,144,157,159,161,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,184,187,191,196,197,204,209,242,246,262,265,269,273,280,295,307,321,334,],[55,79,89,91,100,125,136,100,147,150,100,100,89,160,190,195,100,100,207,160,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,266,266,271,89,100,100,100,312,100,100,100,100,100,100,100,]),'TypeSpecRep':([44,],[81,]),'LabelOpt':([249,256,],[293,309,]),'TypeDecl':([10,191,280,],[19,19,19,]),'BaseType':([61,115,209,],[90,90,90,]),'UnaryExpr':([66,78,93,105,118,144,157,161,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,184,187,191,242,246,262,269,273,280,295,307,321,334,],[113,113,113,158,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'RuneLiteral':([66,78,93,105,118,144,157,161,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,184,187,191,242,246,262,269,273,280,295,307,321,334,],[114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'ArrayLength':([66,],[117,]),'ForClause':([246,],[286,]),'TypeOpt':([33,],[64,]),'ShortVarDecl':([191,246,280,334,],[261,261,261,261,]),'TypeDef':([23,81,],[41,41,]),'FieldDecl':([155,],[203,]),'BreakStmt':([191,280,],[263,263,]),'TagOpt':([271,],[317,]),'BasicLit':([66,78,93,105,118,144,157,161,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,184,187,191,242,246,262,269,273,280,295,307,321,334,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'ImgLiteral':([66,78,93,105,118,144,157,161,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,184,187,191,242,246,262,269,273,280,295,307,321,334,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'ExpressionListOpt':([79,],[146,]),'ElseOpt':([325,],[333,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> Source','start',1,'p_start','parser.py',107),
  ('Type -> TypeName','Type',1,'p_type','parser.py',116),
  ('Type -> TypeLit','Type',1,'p_type','parser.py',117),
  ('Type -> LPAREN Type RPAREN','Type',3,'p_type','parser.py',118),
  ('TypeName -> TYPEX','TypeName',1,'p_type_name','parser.py',126),
  ('TypeName -> TTYPE IDENTIFIER','TypeName',2,'p_type_name','parser.py',127),
  ('TypeLit -> ArrayType','TypeLit',1,'p_type_lit','parser.py',137),
  ('TypeLit -> StructType','TypeLit',1,'p_type_lit','parser.py',138),
  ('TypeLit -> PointerType','TypeLit',1,'p_type_lit','parser.py',139),
  ('TypeLit -> FunctionType','TypeLit',1,'p_type_lit','parser.py',140),
  ('TypeOpt -> Type','TypeOpt',1,'p_type_opt','parser.py',146),
  ('TypeOpt -> epsilon','TypeOpt',1,'p_type_opt','parser.py',147),
  ('ArrayType -> LBRACK ArrayLength RBRACK ElementType','ArrayType',4,'p_array_type','parser.py',159),
  ('ArrayLength -> Expression','ArrayLength',1,'p_array_length','parser.py',164),
  ('ElementType -> Type','ElementType',1,'p_element_type','parser.py',168),
  ('StructType -> STRUCT LBRACE FieldDeclRep RBRACE','StructType',4,'p_struct_type','parser.py',177),
  ('FieldDeclRep -> FieldDeclRep FieldDecl SEMICOL','FieldDeclRep',3,'p_field_decl_rep','parser.py',182),
  ('FieldDeclRep -> epsilon','FieldDeclRep',1,'p_field_decl_rep','parser.py',183),
  ('FieldDecl -> IdentifierList Type TagOpt','FieldDecl',3,'p_field_decl','parser.py',191),
  ('TagOpt -> Tag','TagOpt',1,'p_tag_opt','parser.py',201),
  ('TagOpt -> epsilon','TagOpt',1,'p_tag_opt','parser.py',202),
  ('Tag -> STRING','Tag',1,'p_tag','parser.py',209),
  ('PointerType -> TIMES BaseType','PointerType',2,'p_pointer_type','parser.py',218),
  ('BaseType -> Type','BaseType',1,'p_base_type','parser.py',223),
  ('FunctionType -> FUNC Signature','FunctionType',2,'p_function_type','parser.py',232),
  ('Signature -> Parameters ResultOpt','Signature',2,'p_signature','parser.py',236),
  ('ResultOpt -> Result','ResultOpt',1,'p_result_opt','parser.py',243),
  ('ResultOpt -> epsilon','ResultOpt',1,'p_result_opt','parser.py',244),
  ('Result -> Parameters','Result',1,'p_result','parser.py',251),
  ('Result -> Type','Result',1,'p_result','parser.py',252),
  ('Parameters -> LPAREN ParameterListOpt RPAREN','Parameters',3,'p_parameters','parser.py',259),
  ('ParameterListOpt -> ParametersList','ParameterListOpt',1,'p_parameter_list_opt','parser.py',263),
  ('ParameterListOpt -> epsilon','ParameterListOpt',1,'p_parameter_list_opt','parser.py',264),
  ('ParametersList -> Type','ParametersList',1,'p_parameter_list','parser.py',271),
  ('ParametersList -> IdentifierList Type','ParametersList',2,'p_parameter_list','parser.py',272),
  ('ParametersList -> ParameterDeclCommaRep','ParametersList',1,'p_parameter_list','parser.py',273),
  ('ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA ParameterDecl','ParameterDeclCommaRep',3,'p_parameter_decl_comma_rep','parser.py',289),
  ('ParameterDeclCommaRep -> ParameterDecl COMMA ParameterDecl','ParameterDeclCommaRep',3,'p_parameter_decl_comma_rep','parser.py',290),
  ('ParameterDecl -> IdentifierList Type','ParameterDecl',2,'p_parameter_decl','parser.py',298),
  ('ParameterDecl -> Type','ParameterDecl',1,'p_parameter_decl','parser.py',299),
  ('Block -> LBRACE StatementList RBRACE','Block',3,'p_block','parser.py',315),
  ('StatementList -> StatementRep','StatementList',1,'p_statement_list','parser.py',322),
  ('StatementRep -> StatementRep Statement SEMICOL','StatementRep',3,'p_statement_rep','parser.py',326),
  ('StatementRep -> epsilon','StatementRep',1,'p_statement_rep','parser.py',327),
  ('Declaration -> ConstDecl','Declaration',1,'p_decl','parser.py',346),
  ('Declaration -> TypeDecl','Declaration',1,'p_decl','parser.py',347),
  ('Declaration -> VarDecl','Declaration',1,'p_decl','parser.py',348),
  ('TopLevelDecl -> Declaration','TopLevelDecl',1,'p_toplevel_decl','parser.py',352),
  ('TopLevelDecl -> FunctionDecl','TopLevelDecl',1,'p_toplevel_decl','parser.py',353),
  ('ConstDecl -> CONST ConstSpec','ConstDecl',2,'p_const_decl','parser.py',363),
  ('ConstDecl -> CONST LPAREN ConstSpecRep RPAREN','ConstDecl',4,'p_const_decl','parser.py',364),
  ('ConstSpecRep -> ConstSpecRep ConstSpec SEMICOL','ConstSpecRep',3,'p_const_spec_rep','parser.py',372),
  ('ConstSpecRep -> epsilon','ConstSpecRep',1,'p_const_spec_rep','parser.py',373),
  ('ConstSpec -> IdentifierList TypeExprListOpt','ConstSpec',2,'p_const_spec','parser.py',382),
  ('TypeExprListOpt -> TypeOpt EQUAL ExpressionList','TypeExprListOpt',3,'p_type_expr_list','parser.py',412),
  ('TypeExprListOpt -> epsilon','TypeExprListOpt',1,'p_type_expr_list','parser.py',413),
  ('IdentifierList -> IDENTIFIER IdentifierRep','IdentifierList',2,'p_identifier_list','parser.py',424),
  ('IdentifierRep -> IdentifierRep COMMA IDENTIFIER','IdentifierRep',3,'p_identifier_rep','parser.py',429),
  ('IdentifierRep -> epsilon','IdentifierRep',1,'p_identifier_rep','parser.py',430),
  ('TypeDecl -> TYPE TypeSpec','TypeDecl',2,'p_type_decl','parser.py',444),
  ('TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN','TypeDecl',4,'p_type_decl','parser.py',445),
  ('TypeSpecRep -> TypeSpecRep TypeSpec SEMICOL','TypeSpecRep',3,'p_type_spec_rep','parser.py',449),
  ('TypeSpecRep -> epsilon','TypeSpecRep',1,'p_type_spec_rep','parser.py',450),
  ('TypeSpec -> AliasDecl','TypeSpec',1,'p_type_spec','parser.py',458),
  ('TypeSpec -> TypeDef','TypeSpec',1,'p_type_spec','parser.py',459),
  ('AliasDecl -> IDENTIFIER EQUAL Type','AliasDecl',3,'p_alias_decl','parser.py',463),
  ('TypeDef -> TTYPE IDENTIFIER Type','TypeDef',3,'p_type_def','parser.py',475),
  ('VarDecl -> VAR VarSpec','VarDecl',2,'p_var_decl','parser.py',487),
  ('VarDecl -> VAR LPAREN VarSpecRep RPAREN','VarDecl',4,'p_var_decl','parser.py',488),
  ('VarSpecRep -> VarSpecRep VarSpec SEMICOL','VarSpecRep',3,'p_var_spec_rep','parser.py',498),
  ('VarSpecRep -> epsilon','VarSpecRep',1,'p_var_spec_rep','parser.py',499),
  ('VarSpec -> IdentifierList Type ExpressionListOpt','VarSpec',3,'p_var_spec','parser.py',507),
  ('VarSpec -> IdentifierList EQUAL ExpressionList','VarSpec',3,'p_var_spec','parser.py',508),
  ('ExpressionListOpt -> EQUAL ExpressionList','ExpressionListOpt',2,'p_expr_list_opt','parser.py',549),
  ('ExpressionListOpt -> epsilon','ExpressionListOpt',1,'p_expr_list_opt','parser.py',550),
  ('ShortVarDecl -> IDENTIFIER COLONEQ Expression','ShortVarDecl',3,'p_short_var_decl','parser.py',562),
  ('FunctionDecl -> FUNC FunctionName Function','FunctionDecl',3,'p_func_decl','parser.py',577),
  ('FunctionDecl -> FUNC FunctionName Signature','FunctionDecl',3,'p_func_decl','parser.py',578),
  ('FunctionName -> IDENTIFIER','FunctionName',1,'p_func_name','parser.py',596),
  ('Function -> Signature FunctionBody','Function',2,'p_func','parser.py',600),
  ('FunctionBody -> Block','FunctionBody',1,'p_func_body','parser.py',605),
  ('Operand -> Literal','Operand',1,'p_operand','parser.py',623),
  ('Operand -> OperandName','Operand',1,'p_operand','parser.py',624),
  ('Operand -> LPAREN Expression RPAREN','Operand',3,'p_operand','parser.py',625),
  ('Literal -> BasicLit','Literal',1,'p_literal','parser.py',632),
  ('BasicLit -> IntLiteral','BasicLit',1,'p_basic_lit','parser.py',637),
  ('BasicLit -> FloatLiteral','BasicLit',1,'p_basic_lit','parser.py',638),
  ('BasicLit -> ImgLiteral','BasicLit',1,'p_basic_lit','parser.py',639),
  ('BasicLit -> RuneLiteral','BasicLit',1,'p_basic_lit','parser.py',640),
  ('BasicLit -> StringLiteral','BasicLit',1,'p_basic_lit','parser.py',641),
  ('IntLiteral -> INTEGER','IntLiteral',1,'p_int_literal','parser.py',645),
  ('FloatLiteral -> FLOAT','FloatLiteral',1,'p_float_literal','parser.py',653),
  ('ImgLiteral -> IMAGINARY','ImgLiteral',1,'p_img_literal','parser.py',661),
  ('RuneLiteral -> RUNE','RuneLiteral',1,'p_rune_literal','parser.py',669),
  ('StringLiteral -> STRING','StringLiteral',1,'p_string_literal','parser.py',677),
  ('OperandName -> IDENTIFIER','OperandName',1,'p_operand_name','parser.py',685),
  ('Conversion -> Type LPAREN Expression RPAREN','Conversion',4,'p_conversion','parser.py',704),
  ('PrimaryExpr -> Operand','PrimaryExpr',1,'p_prim_expr','parser.py',714),
  ('PrimaryExpr -> Conversion','PrimaryExpr',1,'p_prim_expr','parser.py',715),
  ('PrimaryExpr -> PrimaryExpr Selector','PrimaryExpr',2,'p_prim_expr','parser.py',716),
  ('PrimaryExpr -> PrimaryExpr Index','PrimaryExpr',2,'p_prim_expr','parser.py',717),
  ('PrimaryExpr -> PrimaryExpr Slice','PrimaryExpr',2,'p_prim_expr','parser.py',718),
  ('PrimaryExpr -> PrimaryExpr Arguments','PrimaryExpr',2,'p_prim_expr','parser.py',719),
  ('Selector -> DOT IDENTIFIER','Selector',2,'p_selector','parser.py',749),
  ('Index -> LBRACK Expression RBRACK','Index',3,'p_index','parser.py',754),
  ('Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK','Slice',5,'p_slice','parser.py',759),
  ('Arguments -> LPAREN ExpressionListTypeOpt RPAREN','Arguments',3,'p_argument','parser.py',773),
  ('ExpressionListTypeOpt -> ExpressionList','ExpressionListTypeOpt',1,'p_expr_list_type_opt','parser.py',779),
  ('ExpressionListTypeOpt -> epsilon','ExpressionListTypeOpt',1,'p_expr_list_type_opt','parser.py',780),
  ('ExpressionList -> Expression ExpressionRep','ExpressionList',2,'p_expr_list','parser.py',803),
  ('ExpressionRep -> ExpressionRep COMMA Expression','ExpressionRep',3,'p_expr_rep','parser.py',808),
  ('ExpressionRep -> epsilon','ExpressionRep',1,'p_expr_rep','parser.py',809),
  ('Expression -> UnaryExpr','Expression',1,'p_expression','parser.py',822),
  ('Expression -> Expression OROR Expression','Expression',3,'p_expression','parser.py',823),
  ('Expression -> Expression AMPAMP Expression','Expression',3,'p_expression','parser.py',824),
  ('Expression -> Expression EQEQ Expression','Expression',3,'p_expression','parser.py',825),
  ('Expression -> Expression NOTEQ Expression','Expression',3,'p_expression','parser.py',826),
  ('Expression -> Expression LESS Expression','Expression',3,'p_expression','parser.py',827),
  ('Expression -> Expression GREAT Expression','Expression',3,'p_expression','parser.py',828),
  ('Expression -> Expression LEQ Expression','Expression',3,'p_expression','parser.py',829),
  ('Expression -> Expression GEQ Expression','Expression',3,'p_expression','parser.py',830),
  ('Expression -> Expression PLUS Expression','Expression',3,'p_expression','parser.py',831),
  ('Expression -> Expression MINUS Expression','Expression',3,'p_expression','parser.py',832),
  ('Expression -> Expression OR Expression','Expression',3,'p_expression','parser.py',833),
  ('Expression -> Expression CARET Expression','Expression',3,'p_expression','parser.py',834),
  ('Expression -> Expression TIMES Expression','Expression',3,'p_expression','parser.py',835),
  ('Expression -> Expression DIVIDE Expression','Expression',3,'p_expression','parser.py',836),
  ('Expression -> Expression MOD Expression','Expression',3,'p_expression','parser.py',837),
  ('Expression -> Expression AMPERS Expression','Expression',3,'p_expression','parser.py',838),
  ('Expression -> Expression LL Expression','Expression',3,'p_expression','parser.py',839),
  ('Expression -> Expression GG Expression','Expression',3,'p_expression','parser.py',840),
  ('Expression -> Expression AMPCAR Expression','Expression',3,'p_expression','parser.py',841),
  ('ExpressionOpt -> Expression','ExpressionOpt',1,'p_expr_opt','parser.py',911),
  ('ExpressionOpt -> epsilon','ExpressionOpt',1,'p_expr_opt','parser.py',912),
  ('UnaryExpr -> PrimaryExpr','UnaryExpr',1,'p_unary_expr','parser.py',919),
  ('UnaryExpr -> UnaryOp UnaryExpr','UnaryExpr',2,'p_unary_expr','parser.py',920),
  ('UnaryOp -> PLUS','UnaryOp',1,'p_unary_op','parser.py',957),
  ('UnaryOp -> MINUS','UnaryOp',1,'p_unary_op','parser.py',958),
  ('UnaryOp -> TIMES','UnaryOp',1,'p_unary_op','parser.py',959),
  ('UnaryOp -> AMPERS','UnaryOp',1,'p_unary_op','parser.py',960),
  ('UnaryOp -> NOT','UnaryOp',1,'p_unary_op','parser.py',961),
  ('Statement -> Declaration','Statement',1,'p_statement','parser.py',970),
  ('Statement -> LabeledStmt','Statement',1,'p_statement','parser.py',971),
  ('Statement -> SimpleStmt','Statement',1,'p_statement','parser.py',972),
  ('Statement -> ReturnStmt','Statement',1,'p_statement','parser.py',973),
  ('Statement -> BreakStmt','Statement',1,'p_statement','parser.py',974),
  ('Statement -> ContinueStmt','Statement',1,'p_statement','parser.py',975),
  ('Statement -> GotoStmt','Statement',1,'p_statement','parser.py',976),
  ('Statement -> Block','Statement',1,'p_statement','parser.py',977),
  ('Statement -> IfStmt','Statement',1,'p_statement','parser.py',978),
  ('Statement -> ForStmt','Statement',1,'p_statement','parser.py',979),
  ('SimpleStmt -> epsilon','SimpleStmt',1,'p_simple_stmt','parser.py',992),
  ('SimpleStmt -> ExpressionStmt','SimpleStmt',1,'p_simple_stmt','parser.py',993),
  ('SimpleStmt -> IncDecStmt','SimpleStmt',1,'p_simple_stmt','parser.py',994),
  ('SimpleStmt -> Assignment','SimpleStmt',1,'p_simple_stmt','parser.py',995),
  ('SimpleStmt -> ShortVarDecl','SimpleStmt',1,'p_simple_stmt','parser.py',996),
  ('LabeledStmt -> Label COLON Statement','LabeledStmt',3,'p_labeled_statements','parser.py',1003),
  ('Label -> IDENTIFIER','Label',1,'p_label','parser.py',1010),
  ('ExpressionStmt -> Expression','ExpressionStmt',1,'p_expression_stmt','parser.py',1014),
  ('IncDecStmt -> PrimaryExpr PLUSPLUS','IncDecStmt',2,'p_inc_dec','parser.py',1018),
  ('IncDecStmt -> PrimaryExpr MINUSMIN','IncDecStmt',2,'p_inc_dec','parser.py',1019),
  ('Assignment -> ExpressionList assign_op ExpressionList','Assignment',3,'p_assignment','parser.py',1031),
  ('assign_op -> AssignOp','assign_op',1,'p_assign_op','parser.py',1055),
  ('AssignOp -> PLUSEQ','AssignOp',1,'p_AssignOp','parser.py',1059),
  ('AssignOp -> MINUSEQ','AssignOp',1,'p_AssignOp','parser.py',1060),
  ('AssignOp -> TIMESEQ','AssignOp',1,'p_AssignOp','parser.py',1061),
  ('AssignOp -> DIVIDEEQ','AssignOp',1,'p_AssignOp','parser.py',1062),
  ('AssignOp -> MODEQ','AssignOp',1,'p_AssignOp','parser.py',1063),
  ('AssignOp -> AMPEQ','AssignOp',1,'p_AssignOp','parser.py',1064),
  ('AssignOp -> OREQ','AssignOp',1,'p_AssignOp','parser.py',1065),
  ('AssignOp -> CAREQ','AssignOp',1,'p_AssignOp','parser.py',1066),
  ('AssignOp -> LLEQ','AssignOp',1,'p_AssignOp','parser.py',1067),
  ('AssignOp -> GGEQ','AssignOp',1,'p_AssignOp','parser.py',1068),
  ('AssignOp -> EQUAL','AssignOp',1,'p_AssignOp','parser.py',1069),
  ('IfStmt -> IF Expression Block ElseOpt','IfStmt',4,'p_if_statement','parser.py',1078),
  ('ElseOpt -> ELSE IfStmt','ElseOpt',2,'p_else_opt','parser.py',1105),
  ('ElseOpt -> ELSE Block','ElseOpt',2,'p_else_opt','parser.py',1106),
  ('ElseOpt -> epsilon','ElseOpt',1,'p_else_opt','parser.py',1107),
  ('ForStmt -> FOR ConditionBlockOpt Block','ForStmt',3,'p_for','parser.py',1203),
  ('ConditionBlockOpt -> epsilon','ConditionBlockOpt',1,'p_conditionblockopt','parser.py',1228),
  ('ConditionBlockOpt -> Condition','ConditionBlockOpt',1,'p_conditionblockopt','parser.py',1229),
  ('ConditionBlockOpt -> ForClause','ConditionBlockOpt',1,'p_conditionblockopt','parser.py',1230),
  ('Condition -> Expression','Condition',1,'p_condition','parser.py',1238),
  ('ForClause -> SimpleStmt SEMICOL ConditionOpt SEMICOL SimpleStmt','ForClause',5,'p_forclause','parser.py',1242),
  ('ConditionOpt -> epsilon','ConditionOpt',1,'p_conditionopt','parser.py',1250),
  ('ConditionOpt -> Condition','ConditionOpt',1,'p_conditionopt','parser.py',1251),
  ('RangeClause -> ExpressionIdentListOpt RANGE Expression','RangeClause',3,'p_rageclause','parser.py',1258),
  ('ExpressionIdentListOpt -> epsilon','ExpressionIdentListOpt',1,'p_expression_ident_listopt','parser.py',1262),
  ('ExpressionIdentListOpt -> ExpressionIdentifier','ExpressionIdentListOpt',1,'p_expression_ident_listopt','parser.py',1263),
  ('ExpressionIdentifier -> ExpressionList EQUAL','ExpressionIdentifier',2,'p_expressionidentifier','parser.py',1267),
  ('ReturnStmt -> RETURN ExpressionListPureOpt','ReturnStmt',2,'p_return','parser.py',1280),
  ('ExpressionListPureOpt -> ExpressionList','ExpressionListPureOpt',1,'p_expressionlist_pure_opt','parser.py',1286),
  ('ExpressionListPureOpt -> epsilon','ExpressionListPureOpt',1,'p_expressionlist_pure_opt','parser.py',1287),
  ('BreakStmt -> BREAK LabelOpt','BreakStmt',2,'p_break','parser.py',1294),
  ('ContinueStmt -> CONTINUE LabelOpt','ContinueStmt',2,'p_continue','parser.py',1302),
  ('LabelOpt -> Label','LabelOpt',1,'p_labelopt','parser.py',1311),
  ('LabelOpt -> epsilon','LabelOpt',1,'p_labelopt','parser.py',1312),
  ('GotoStmt -> GOTO Label','GotoStmt',2,'p_goto','parser.py',1319),
  ('Source -> PackageClause SEMICOL ImportDeclRep TopLevelDeclRep','Source',4,'p_source_file','parser.py',1330),
  ('ImportDeclRep -> epsilon','ImportDeclRep',1,'p_import_decl_rep','parser.py',1340),
  ('ImportDeclRep -> ImportDeclRep ImportDecl SEMICOL','ImportDeclRep',3,'p_import_decl_rep','parser.py',1341),
  ('TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOL','TopLevelDeclRep',3,'p_toplevel_decl_rep','parser.py',1349),
  ('TopLevelDeclRep -> epsilon','TopLevelDeclRep',1,'p_toplevel_decl_rep','parser.py',1350),
  ('PackageClause -> PACKAGE PackageName','PackageClause',2,'p_package_clause','parser.py',1362),
  ('PackageName -> IDENTIFIER','PackageName',1,'p_package_name','parser.py',1368),
  ('ImportDecl -> IMPORT ImportSpec','ImportDecl',2,'p_import_decl','parser.py',1377),
  ('ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN','ImportDecl',4,'p_import_decl','parser.py',1378),
  ('ImportSpecRep -> ImportSpecRep ImportSpec SEMICOL','ImportSpecRep',3,'p_import_spec_rep','parser.py',1387),
  ('ImportSpecRep -> epsilon','ImportSpecRep',1,'p_import_spec_rep','parser.py',1388),
  ('ImportSpec -> PackageNameDotOpt ImportPath','ImportSpec',2,'p_import_spec','parser.py',1396),
  ('PackageNameDotOpt -> DOT','PackageNameDotOpt',1,'p_package_name_dot_opt','parser.py',1402),
  ('PackageNameDotOpt -> PackageName','PackageNameDotOpt',1,'p_package_name_dot_opt','parser.py',1403),
  ('PackageNameDotOpt -> epsilon','PackageNameDotOpt',1,'p_package_name_dot_opt','parser.py',1404),
  ('ImportPath -> STRING','ImportPath',1,'p_import_path','parser.py',1411),
  ('epsilon -> <empty>','epsilon',0,'p_empty','parser.py',1420),
]
