Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DEFAULT
    CHAN
    CONSTANT
    CASE
    DEFER
    FALLTHROUGH
    SWITCH
    SELECT
    LMINUS
    AMPCAREQ
    GO
    DDD
    MAP
    INTERFACE

Grammar

Rule 0     S' -> start
Rule 1     start -> Source
Rule 2     Type -> TypeName
Rule 3     Type -> TypeLit
Rule 4     Type -> LPAREN Type RPAREN
Rule 5     TypeName -> TYPEX
Rule 6     TypeLit -> ArrayType
Rule 7     TypeLit -> StructType
Rule 8     TypeLit -> PointerType
Rule 9     TypeLit -> FunctionType
Rule 10    TypeOpt -> Type
Rule 11    TypeOpt -> epsilon
Rule 12    ArrayType -> LBRACK ArrayLength RBRACK ElementType
Rule 13    ArrayLength -> Expression
Rule 14    ElementType -> Type
Rule 15    StructType -> STRUCT LBRACE FieldDeclRep RBRACE
Rule 16    FieldDeclRep -> FieldDeclRep FieldDecl SEMICOL
Rule 17    FieldDeclRep -> epsilon
Rule 18    FieldDecl -> IdentifierList Type TagOpt
Rule 19    TagOpt -> Tag
Rule 20    TagOpt -> epsilon
Rule 21    Tag -> STRING
Rule 22    PointerType -> TIMES BaseType
Rule 23    BaseType -> Type
Rule 24    FunctionType -> FUNC Signature
Rule 25    Signature -> Parameters ResultOpt
Rule 26    ResultOpt -> Result
Rule 27    ResultOpt -> epsilon
Rule 28    Result -> Parameters
Rule 29    Result -> Type
Rule 30    Parameters -> LPAREN ParameterListOpt RPAREN
Rule 31    ParameterListOpt -> ParametersList
Rule 32    ParameterListOpt -> epsilon
Rule 33    ParametersList -> Type
Rule 34    ParametersList -> IdentifierList Type
Rule 35    ParametersList -> ParameterDeclCommaRep
Rule 36    ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA ParameterDecl
Rule 37    ParameterDeclCommaRep -> ParameterDecl COMMA ParameterDecl
Rule 38    ParameterDecl -> IdentifierList Type
Rule 39    ParameterDecl -> Type
Rule 40    Block -> LBRACE StatementList RBRACE
Rule 41    StatementList -> StatementRep
Rule 42    StatementRep -> StatementRep Statement SEMICOL
Rule 43    StatementRep -> epsilon
Rule 44    Declaration -> ConstDecl
Rule 45    Declaration -> TypeDecl
Rule 46    Declaration -> VarDecl
Rule 47    TopLevelDecl -> Declaration
Rule 48    TopLevelDecl -> FunctionDecl
Rule 49    ConstDecl -> CONST ConstSpec
Rule 50    ConstDecl -> CONST LPAREN ConstSpecRep RPAREN
Rule 51    ConstSpecRep -> ConstSpecRep ConstSpec SEMICOL
Rule 52    ConstSpecRep -> epsilon
Rule 53    ConstSpec -> IdentifierList TypeExprListOpt
Rule 54    TypeExprListOpt -> TypeOpt EQUAL ExpressionList
Rule 55    TypeExprListOpt -> epsilon
Rule 56    IdentifierList -> IDENTIFIER IdentifierRep
Rule 57    IdentifierRep -> IdentifierRep COMMA IDENTIFIER
Rule 58    IdentifierRep -> epsilon
Rule 59    TypeDecl -> TYPE TypeSpec
Rule 60    TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN
Rule 61    TypeSpecRep -> TypeSpecRep TypeSpec SEMICOL
Rule 62    TypeSpecRep -> epsilon
Rule 63    TypeSpec -> AliasDecl
Rule 64    TypeSpec -> TypeDef
Rule 65    AliasDecl -> IDENTIFIER EQUAL Type
Rule 66    TypeDef -> IDENTIFIER Type
Rule 67    VarDecl -> VAR VarSpec
Rule 68    VarDecl -> VAR LPAREN VarSpecRep RPAREN
Rule 69    VarSpecRep -> VarSpecRep VarSpec SEMICOL
Rule 70    VarSpecRep -> epsilon
Rule 71    VarSpec -> IdentifierList Type ExpressionListOpt
Rule 72    VarSpec -> IdentifierList EQUAL ExpressionList
Rule 73    ExpressionListOpt -> EQUAL ExpressionList
Rule 74    ExpressionListOpt -> epsilon
Rule 75    ShortVarDecl -> IDENTIFIER COLONEQ Expression
Rule 76    FunctionDecl -> FUNC FunctionName Function
Rule 77    FunctionDecl -> FUNC FunctionName Signature
Rule 78    FunctionName -> IDENTIFIER
Rule 79    Function -> Signature FunctionBody
Rule 80    FunctionBody -> Block
Rule 81    Operand -> Literal
Rule 82    Operand -> OperandName
Rule 83    Operand -> LPAREN Expression RPAREN
Rule 84    Literal -> BasicLit
Rule 85    BasicLit -> IntLiteral
Rule 86    BasicLit -> FloatLiteral
Rule 87    BasicLit -> ImgLiteral
Rule 88    BasicLit -> RuneLiteral
Rule 89    BasicLit -> StringLiteral
Rule 90    IntLiteral -> INTEGER
Rule 91    FloatLiteral -> FLOAT
Rule 92    ImgLiteral -> IMAGINARY
Rule 93    RuneLiteral -> RUNE
Rule 94    StringLiteral -> STRING
Rule 95    OperandName -> IDENTIFIER
Rule 96    Conversion -> Type LPAREN Expression RPAREN
Rule 97    PrimaryExpr -> Operand
Rule 98    PrimaryExpr -> Conversion
Rule 99    PrimaryExpr -> PrimaryExpr Selector
Rule 100   PrimaryExpr -> PrimaryExpr Index
Rule 101   PrimaryExpr -> PrimaryExpr Slice
Rule 102   PrimaryExpr -> PrimaryExpr Arguments
Rule 103   Selector -> DOT IDENTIFIER
Rule 104   Index -> LBRACK Expression RBRACK
Rule 105   Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK
Rule 106   Arguments -> LPAREN ExpressionListTypeOpt RPAREN
Rule 107   ExpressionListTypeOpt -> ExpressionList
Rule 108   ExpressionListTypeOpt -> epsilon
Rule 109   ExpressionList -> Expression ExpressionRep
Rule 110   ExpressionRep -> ExpressionRep COMMA Expression
Rule 111   ExpressionRep -> epsilon
Rule 112   Expression -> UnaryExpr
Rule 113   Expression -> Expression OROR Expression
Rule 114   Expression -> Expression AMPAMP Expression
Rule 115   Expression -> Expression EQEQ Expression
Rule 116   Expression -> Expression NOTEQ Expression
Rule 117   Expression -> Expression LESS Expression
Rule 118   Expression -> Expression GREAT Expression
Rule 119   Expression -> Expression LEQ Expression
Rule 120   Expression -> Expression GEQ Expression
Rule 121   Expression -> Expression PLUS Expression
Rule 122   Expression -> Expression MINUS Expression
Rule 123   Expression -> Expression OR Expression
Rule 124   Expression -> Expression CARET Expression
Rule 125   Expression -> Expression TIMES Expression
Rule 126   Expression -> Expression DIVIDE Expression
Rule 127   Expression -> Expression MOD Expression
Rule 128   Expression -> Expression AMPERS Expression
Rule 129   Expression -> Expression LL Expression
Rule 130   Expression -> Expression GG Expression
Rule 131   Expression -> Expression AMPCAR Expression
Rule 132   ExpressionOpt -> Expression
Rule 133   ExpressionOpt -> epsilon
Rule 134   UnaryExpr -> PrimaryExpr
Rule 135   UnaryExpr -> UnaryOp UnaryExpr
Rule 136   UnaryOp -> PLUS
Rule 137   UnaryOp -> MINUS
Rule 138   UnaryOp -> TIMES
Rule 139   UnaryOp -> AMPERS
Rule 140   UnaryOp -> NOT
Rule 141   Statement -> Declaration
Rule 142   Statement -> LabeledStmt
Rule 143   Statement -> SimpleStmt
Rule 144   Statement -> ReturnStmt
Rule 145   Statement -> BreakStmt
Rule 146   Statement -> ContinueStmt
Rule 147   Statement -> GotoStmt
Rule 148   Statement -> Block
Rule 149   Statement -> IfStmt
Rule 150   Statement -> ForStmt
Rule 151   SimpleStmt -> epsilon
Rule 152   SimpleStmt -> ExpressionStmt
Rule 153   SimpleStmt -> IncDecStmt
Rule 154   SimpleStmt -> Assignment
Rule 155   SimpleStmt -> ShortVarDecl
Rule 156   LabeledStmt -> Label COLON Statement
Rule 157   Label -> IDENTIFIER
Rule 158   ExpressionStmt -> Expression
Rule 159   IncDecStmt -> Expression PLUSPLUS
Rule 160   IncDecStmt -> Expression MINUSMIN
Rule 161   Assignment -> ExpressionList assign_op ExpressionList
Rule 162   assign_op -> AssignOp
Rule 163   AssignOp -> PLUSEQ
Rule 164   AssignOp -> MINUSEQ
Rule 165   AssignOp -> TIMESEQ
Rule 166   AssignOp -> DIVIDEEQ
Rule 167   AssignOp -> MODEQ
Rule 168   AssignOp -> AMPEQ
Rule 169   AssignOp -> OREQ
Rule 170   AssignOp -> CAREQ
Rule 171   AssignOp -> LLEQ
Rule 172   AssignOp -> GGEQ
Rule 173   AssignOp -> EQUAL
Rule 174   IfStmt -> IF Expression Block ElseOpt
Rule 175   ElseOpt -> ELSE IfStmt
Rule 176   ElseOpt -> ELSE Block
Rule 177   ElseOpt -> epsilon
Rule 178   ForStmt -> FOR ConditionBlockOpt Block
Rule 179   ConditionBlockOpt -> epsilon
Rule 180   ConditionBlockOpt -> Condition
Rule 181   ConditionBlockOpt -> ForClause
Rule 182   Condition -> Expression
Rule 183   ForClause -> SimpleStmt SEMICOL ConditionOpt SEMICOL SimpleStmt
Rule 184   ConditionOpt -> epsilon
Rule 185   ConditionOpt -> Condition
Rule 186   RangeClause -> ExpressionIdentListOpt RANGE Expression
Rule 187   ExpressionIdentListOpt -> epsilon
Rule 188   ExpressionIdentListOpt -> ExpressionIdentifier
Rule 189   ExpressionIdentifier -> ExpressionList EQUAL
Rule 190   ReturnStmt -> RETURN ExpressionListPureOpt
Rule 191   ExpressionListPureOpt -> ExpressionList
Rule 192   ExpressionListPureOpt -> epsilon
Rule 193   BreakStmt -> BREAK LabelOpt
Rule 194   ContinueStmt -> CONTINUE LabelOpt
Rule 195   LabelOpt -> Label
Rule 196   LabelOpt -> epsilon
Rule 197   GotoStmt -> GOTO Label
Rule 198   Source -> PackageClause SEMICOL ImportDeclRep TopLevelDeclRep
Rule 199   ImportDeclRep -> epsilon
Rule 200   ImportDeclRep -> ImportDeclRep ImportDecl SEMICOL
Rule 201   TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOL
Rule 202   TopLevelDeclRep -> epsilon
Rule 203   PackageClause -> PACKAGE PackageName
Rule 204   PackageName -> IDENTIFIER
Rule 205   ImportDecl -> IMPORT ImportSpec
Rule 206   ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN
Rule 207   ImportSpecRep -> ImportSpecRep ImportSpec SEMICOL
Rule 208   ImportSpecRep -> epsilon
Rule 209   ImportSpec -> PackageNameDotOpt ImportPath
Rule 210   PackageNameDotOpt -> DOT
Rule 211   PackageNameDotOpt -> PackageName
Rule 212   PackageNameDotOpt -> epsilon
Rule 213   ImportPath -> STRING
Rule 214   epsilon -> <empty>

Terminals, with rules where they appear

AMPAMP               : 114
AMPCAR               : 131
AMPCAREQ             : 
AMPEQ                : 168
AMPERS               : 128 139
BREAK                : 193
CAREQ                : 170
CARET                : 124
CASE                 : 
CHAN                 : 
COLON                : 105 156
COLONEQ              : 75
COMMA                : 36 37 57 110
CONST                : 49 50
CONSTANT             : 
CONTINUE             : 194
DDD                  : 
DEFAULT              : 
DEFER                : 
DIVIDE               : 126
DIVIDEEQ             : 166
DOT                  : 103 210
ELSE                 : 175 176
EQEQ                 : 115
EQUAL                : 54 65 72 73 173 189
FALLTHROUGH          : 
FLOAT                : 91
FOR                  : 178
FUNC                 : 24 76 77
GEQ                  : 120
GG                   : 130
GGEQ                 : 172
GO                   : 
GOTO                 : 197
GREAT                : 118
IDENTIFIER           : 56 57 65 66 75 78 95 103 157 204
IF                   : 174
IMAGINARY            : 92
IMPORT               : 205 206
INTEGER              : 90
INTERFACE            : 
LBRACE               : 15 40
LBRACK               : 12 104 105
LEQ                  : 119
LESS                 : 117
LL                   : 129
LLEQ                 : 171
LMINUS               : 
LPAREN               : 4 30 50 60 68 83 96 106 206
MAP                  : 
MINUS                : 122 137
MINUSEQ              : 164
MINUSMIN             : 160
MOD                  : 127
MODEQ                : 167
NOT                  : 140
NOTEQ                : 116
OR                   : 123
OREQ                 : 169
OROR                 : 113
PACKAGE              : 203
PLUS                 : 121 136
PLUSEQ               : 163
PLUSPLUS             : 159
RANGE                : 186
RBRACE               : 15 40
RBRACK               : 12 104 105
RETURN               : 190
RPAREN               : 4 30 50 60 68 83 96 106 206
RUNE                 : 93
SELECT               : 
SEMICOL              : 16 42 51 61 69 183 183 198 200 201 207
STRING               : 21 94 213
STRUCT               : 15
SWITCH               : 
TIMES                : 22 125 138
TIMESEQ              : 165
TYPE                 : 59 60
TYPEX                : 5
VAR                  : 67 68
error                : 

Nonterminals, with rules where they appear

AliasDecl            : 63
Arguments            : 102
ArrayLength          : 12
ArrayType            : 6
AssignOp             : 162
Assignment           : 154
BaseType             : 22
BasicLit             : 84
Block                : 80 148 174 176 178
BreakStmt            : 145
Condition            : 180 185
ConditionBlockOpt    : 178
ConditionOpt         : 183
ConstDecl            : 44
ConstSpec            : 49 51
ConstSpecRep         : 50 51
ContinueStmt         : 146
Conversion           : 98
Declaration          : 47 141
ElementType          : 12
ElseOpt              : 174
Expression           : 13 75 83 96 104 109 110 113 113 114 114 115 115 116 116 117 117 118 118 119 119 120 120 121 121 122 122 123 123 124 124 125 125 126 126 127 127 128 128 129 129 130 130 131 131 132 158 159 160 174 182 186
ExpressionIdentListOpt : 186
ExpressionIdentifier : 188
ExpressionList       : 54 72 73 107 161 161 189 191
ExpressionListOpt    : 71
ExpressionListPureOpt : 190
ExpressionListTypeOpt : 106
ExpressionOpt        : 105 105
ExpressionRep        : 109 110
ExpressionStmt       : 152
FieldDecl            : 16
FieldDeclRep         : 15 16
FloatLiteral         : 86
ForClause            : 181
ForStmt              : 150
Function             : 76
FunctionBody         : 79
FunctionDecl         : 48
FunctionName         : 76 77
FunctionType         : 9
GotoStmt             : 147
IdentifierList       : 18 34 38 53 71 72
IdentifierRep        : 56 57
IfStmt               : 149 175
ImgLiteral           : 87
ImportDecl           : 200
ImportDeclRep        : 198 200
ImportPath           : 209
ImportSpec           : 205 207
ImportSpecRep        : 206 207
IncDecStmt           : 153
Index                : 100
IntLiteral           : 85
Label                : 156 195 197
LabelOpt             : 193 194
LabeledStmt          : 142
Literal              : 81
Operand              : 97
OperandName          : 82
PackageClause        : 198
PackageName          : 203 211
PackageNameDotOpt    : 209
ParameterDecl        : 36 37 37
ParameterDeclCommaRep : 35 36
ParameterListOpt     : 30
Parameters           : 25 28
ParametersList       : 31
PointerType          : 8
PrimaryExpr          : 99 100 101 102 134
RangeClause          : 
Result               : 26
ResultOpt            : 25
ReturnStmt           : 144
RuneLiteral          : 88
Selector             : 99
ShortVarDecl         : 155
Signature            : 24 77 79
SimpleStmt           : 143 183 183
Slice                : 101
Source               : 1
Statement            : 42 156
StatementList        : 40
StatementRep         : 41 42
StringLiteral        : 89
StructType           : 7
Tag                  : 19
TagOpt               : 18
TopLevelDecl         : 201
TopLevelDeclRep      : 198 201
Type                 : 4 10 14 18 23 29 33 34 38 39 65 66 71 96
TypeDecl             : 45
TypeDef              : 64
TypeExprListOpt      : 53
TypeLit              : 3
TypeName             : 2
TypeOpt              : 54
TypeSpec             : 59 61
TypeSpecRep          : 60 61
UnaryExpr            : 112 135
UnaryOp              : 135
VarDecl              : 46
VarSpec              : 67 69
VarSpecRep           : 68 69
assign_op            : 161
epsilon              : 11 17 20 27 32 43 52 55 58 62 70 74 108 111 133 151 177 179 184 187 192 196 199 202 208 212
start                : 0

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . Source
    (198) Source -> . PackageClause SEMICOL ImportDeclRep TopLevelDeclRep
    (203) PackageClause -> . PACKAGE PackageName

    PACKAGE         shift and go to state 2

    PackageClause                  shift and go to state 1
    Source                         shift and go to state 3
    start                          shift and go to state 4

state 1

    (198) Source -> PackageClause . SEMICOL ImportDeclRep TopLevelDeclRep

    SEMICOL         shift and go to state 5


state 2

    (203) PackageClause -> PACKAGE . PackageName
    (204) PackageName -> . IDENTIFIER

    IDENTIFIER      shift and go to state 7

    PackageName                    shift and go to state 6

state 3

    (1) start -> Source .

    $end            reduce using rule 1 (start -> Source .)


state 4

    (0) S' -> start .



state 5

    (198) Source -> PackageClause SEMICOL . ImportDeclRep TopLevelDeclRep
    (199) ImportDeclRep -> . epsilon
    (200) ImportDeclRep -> . ImportDeclRep ImportDecl SEMICOL
    (214) epsilon -> .

    IMPORT          reduce using rule 214 (epsilon -> .)
    FUNC            reduce using rule 214 (epsilon -> .)
    CONST           reduce using rule 214 (epsilon -> .)
    TYPE            reduce using rule 214 (epsilon -> .)
    VAR             reduce using rule 214 (epsilon -> .)
    $end            reduce using rule 214 (epsilon -> .)

    ImportDeclRep                  shift and go to state 9
    epsilon                        shift and go to state 8

state 6

    (203) PackageClause -> PACKAGE PackageName .

    SEMICOL         reduce using rule 203 (PackageClause -> PACKAGE PackageName .)


state 7

    (204) PackageName -> IDENTIFIER .

    SEMICOL         reduce using rule 204 (PackageName -> IDENTIFIER .)
    STRING          reduce using rule 204 (PackageName -> IDENTIFIER .)


state 8

    (199) ImportDeclRep -> epsilon .

    IMPORT          reduce using rule 199 (ImportDeclRep -> epsilon .)
    FUNC            reduce using rule 199 (ImportDeclRep -> epsilon .)
    CONST           reduce using rule 199 (ImportDeclRep -> epsilon .)
    TYPE            reduce using rule 199 (ImportDeclRep -> epsilon .)
    VAR             reduce using rule 199 (ImportDeclRep -> epsilon .)
    $end            reduce using rule 199 (ImportDeclRep -> epsilon .)


state 9

    (198) Source -> PackageClause SEMICOL ImportDeclRep . TopLevelDeclRep
    (200) ImportDeclRep -> ImportDeclRep . ImportDecl SEMICOL
    (201) TopLevelDeclRep -> . TopLevelDeclRep TopLevelDecl SEMICOL
    (202) TopLevelDeclRep -> . epsilon
    (205) ImportDecl -> . IMPORT ImportSpec
    (206) ImportDecl -> . IMPORT LPAREN ImportSpecRep RPAREN
    (214) epsilon -> .

    IMPORT          shift and go to state 13
    FUNC            reduce using rule 214 (epsilon -> .)
    CONST           reduce using rule 214 (epsilon -> .)
    TYPE            reduce using rule 214 (epsilon -> .)
    VAR             reduce using rule 214 (epsilon -> .)
    $end            reduce using rule 214 (epsilon -> .)

    TopLevelDeclRep                shift and go to state 10
    epsilon                        shift and go to state 11
    ImportDecl                     shift and go to state 12

state 10

    (198) Source -> PackageClause SEMICOL ImportDeclRep TopLevelDeclRep .
    (201) TopLevelDeclRep -> TopLevelDeclRep . TopLevelDecl SEMICOL
    (47) TopLevelDecl -> . Declaration
    (48) TopLevelDecl -> . FunctionDecl
    (44) Declaration -> . ConstDecl
    (45) Declaration -> . TypeDecl
    (46) Declaration -> . VarDecl
    (76) FunctionDecl -> . FUNC FunctionName Function
    (77) FunctionDecl -> . FUNC FunctionName Signature
    (49) ConstDecl -> . CONST ConstSpec
    (50) ConstDecl -> . CONST LPAREN ConstSpecRep RPAREN
    (59) TypeDecl -> . TYPE TypeSpec
    (60) TypeDecl -> . TYPE LPAREN TypeSpecRep RPAREN
    (67) VarDecl -> . VAR VarSpec
    (68) VarDecl -> . VAR LPAREN VarSpecRep RPAREN

    $end            reduce using rule 198 (Source -> PackageClause SEMICOL ImportDeclRep TopLevelDeclRep .)
    FUNC            shift and go to state 20
    CONST           shift and go to state 14
    TYPE            shift and go to state 23
    VAR             shift and go to state 21

    TypeDecl                       shift and go to state 19
    VarDecl                        shift and go to state 22
    FunctionDecl                   shift and go to state 15
    TopLevelDecl                   shift and go to state 16
    Declaration                    shift and go to state 17
    ConstDecl                      shift and go to state 18

state 11

    (202) TopLevelDeclRep -> epsilon .

    FUNC            reduce using rule 202 (TopLevelDeclRep -> epsilon .)
    CONST           reduce using rule 202 (TopLevelDeclRep -> epsilon .)
    TYPE            reduce using rule 202 (TopLevelDeclRep -> epsilon .)
    VAR             reduce using rule 202 (TopLevelDeclRep -> epsilon .)
    $end            reduce using rule 202 (TopLevelDeclRep -> epsilon .)


state 12

    (200) ImportDeclRep -> ImportDeclRep ImportDecl . SEMICOL

    SEMICOL         shift and go to state 24


state 13

    (205) ImportDecl -> IMPORT . ImportSpec
    (206) ImportDecl -> IMPORT . LPAREN ImportSpecRep RPAREN
    (209) ImportSpec -> . PackageNameDotOpt ImportPath
    (210) PackageNameDotOpt -> . DOT
    (211) PackageNameDotOpt -> . PackageName
    (212) PackageNameDotOpt -> . epsilon
    (204) PackageName -> . IDENTIFIER
    (214) epsilon -> .

    LPAREN          shift and go to state 25
    DOT             shift and go to state 30
    IDENTIFIER      shift and go to state 7
    STRING          reduce using rule 214 (epsilon -> .)

    ImportSpec                     shift and go to state 26
    epsilon                        shift and go to state 27
    PackageName                    shift and go to state 28
    PackageNameDotOpt              shift and go to state 29

state 14

    (49) ConstDecl -> CONST . ConstSpec
    (50) ConstDecl -> CONST . LPAREN ConstSpecRep RPAREN
    (53) ConstSpec -> . IdentifierList TypeExprListOpt
    (56) IdentifierList -> . IDENTIFIER IdentifierRep

    LPAREN          shift and go to state 32
    IDENTIFIER      shift and go to state 34

    ConstSpec                      shift and go to state 31
    IdentifierList                 shift and go to state 33

state 15

    (48) TopLevelDecl -> FunctionDecl .

    SEMICOL         reduce using rule 48 (TopLevelDecl -> FunctionDecl .)


state 16

    (201) TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl . SEMICOL

    SEMICOL         shift and go to state 35


state 17

    (47) TopLevelDecl -> Declaration .

    SEMICOL         reduce using rule 47 (TopLevelDecl -> Declaration .)


state 18

    (44) Declaration -> ConstDecl .

    SEMICOL         reduce using rule 44 (Declaration -> ConstDecl .)


state 19

    (45) Declaration -> TypeDecl .

    SEMICOL         reduce using rule 45 (Declaration -> TypeDecl .)


state 20

    (76) FunctionDecl -> FUNC . FunctionName Function
    (77) FunctionDecl -> FUNC . FunctionName Signature
    (78) FunctionName -> . IDENTIFIER

    IDENTIFIER      shift and go to state 36

    FunctionName                   shift and go to state 37

state 21

    (67) VarDecl -> VAR . VarSpec
    (68) VarDecl -> VAR . LPAREN VarSpecRep RPAREN
    (71) VarSpec -> . IdentifierList Type ExpressionListOpt
    (72) VarSpec -> . IdentifierList EQUAL ExpressionList
    (56) IdentifierList -> . IDENTIFIER IdentifierRep

    LPAREN          shift and go to state 39
    IDENTIFIER      shift and go to state 34

    VarSpec                        shift and go to state 38
    IdentifierList                 shift and go to state 40

state 22

    (46) Declaration -> VarDecl .

    SEMICOL         reduce using rule 46 (Declaration -> VarDecl .)


state 23

    (59) TypeDecl -> TYPE . TypeSpec
    (60) TypeDecl -> TYPE . LPAREN TypeSpecRep RPAREN
    (63) TypeSpec -> . AliasDecl
    (64) TypeSpec -> . TypeDef
    (65) AliasDecl -> . IDENTIFIER EQUAL Type
    (66) TypeDef -> . IDENTIFIER Type

    LPAREN          shift and go to state 43
    IDENTIFIER      shift and go to state 45

    TypeSpec                       shift and go to state 44
    TypeDef                        shift and go to state 41
    AliasDecl                      shift and go to state 42

state 24

    (200) ImportDeclRep -> ImportDeclRep ImportDecl SEMICOL .

    IMPORT          reduce using rule 200 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOL .)
    FUNC            reduce using rule 200 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOL .)
    CONST           reduce using rule 200 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOL .)
    TYPE            reduce using rule 200 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOL .)
    VAR             reduce using rule 200 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOL .)
    $end            reduce using rule 200 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOL .)


state 25

    (206) ImportDecl -> IMPORT LPAREN . ImportSpecRep RPAREN
    (207) ImportSpecRep -> . ImportSpecRep ImportSpec SEMICOL
    (208) ImportSpecRep -> . epsilon
    (214) epsilon -> .

    RPAREN          reduce using rule 214 (epsilon -> .)
    DOT             reduce using rule 214 (epsilon -> .)
    IDENTIFIER      reduce using rule 214 (epsilon -> .)
    STRING          reduce using rule 214 (epsilon -> .)

    epsilon                        shift and go to state 46
    ImportSpecRep                  shift and go to state 47

state 26

    (205) ImportDecl -> IMPORT ImportSpec .

    SEMICOL         reduce using rule 205 (ImportDecl -> IMPORT ImportSpec .)


state 27

    (212) PackageNameDotOpt -> epsilon .

    STRING          reduce using rule 212 (PackageNameDotOpt -> epsilon .)


state 28

    (211) PackageNameDotOpt -> PackageName .

    STRING          reduce using rule 211 (PackageNameDotOpt -> PackageName .)


state 29

    (209) ImportSpec -> PackageNameDotOpt . ImportPath
    (213) ImportPath -> . STRING

    STRING          shift and go to state 49

    ImportPath                     shift and go to state 48

state 30

    (210) PackageNameDotOpt -> DOT .

    STRING          reduce using rule 210 (PackageNameDotOpt -> DOT .)


state 31

    (49) ConstDecl -> CONST ConstSpec .

    SEMICOL         reduce using rule 49 (ConstDecl -> CONST ConstSpec .)


state 32

    (50) ConstDecl -> CONST LPAREN . ConstSpecRep RPAREN
    (51) ConstSpecRep -> . ConstSpecRep ConstSpec SEMICOL
    (52) ConstSpecRep -> . epsilon
    (214) epsilon -> .

    RPAREN          reduce using rule 214 (epsilon -> .)
    IDENTIFIER      reduce using rule 214 (epsilon -> .)

    ConstSpecRep                   shift and go to state 50
    epsilon                        shift and go to state 51

state 33

    (53) ConstSpec -> IdentifierList . TypeExprListOpt
    (54) TypeExprListOpt -> . TypeOpt EQUAL ExpressionList
    (55) TypeExprListOpt -> . epsilon
    (10) TypeOpt -> . Type
    (11) TypeOpt -> . epsilon
    (214) epsilon -> .
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    SEMICOL         reduce using rule 214 (epsilon -> .)
    EQUAL           reduce using rule 214 (epsilon -> .)
    LPAREN          shift and go to state 61
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    TypeOpt                        shift and go to state 62
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    TypeLit                        shift and go to state 55
    TypeExprListOpt                shift and go to state 65
    epsilon                        shift and go to state 59
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    Type                           shift and go to state 54

state 34

    (56) IdentifierList -> IDENTIFIER . IdentifierRep
    (57) IdentifierRep -> . IdentifierRep COMMA IDENTIFIER
    (58) IdentifierRep -> . epsilon
    (214) epsilon -> .

    COMMA           reduce using rule 214 (epsilon -> .)
    LPAREN          reduce using rule 214 (epsilon -> .)
    TYPEX           reduce using rule 214 (epsilon -> .)
    LBRACK          reduce using rule 214 (epsilon -> .)
    STRUCT          reduce using rule 214 (epsilon -> .)
    TIMES           reduce using rule 214 (epsilon -> .)
    FUNC            reduce using rule 214 (epsilon -> .)
    EQUAL           reduce using rule 214 (epsilon -> .)
    SEMICOL         reduce using rule 214 (epsilon -> .)

    epsilon                        shift and go to state 68
    IdentifierRep                  shift and go to state 69

state 35

    (201) TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOL .

    FUNC            reduce using rule 201 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOL .)
    CONST           reduce using rule 201 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOL .)
    TYPE            reduce using rule 201 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOL .)
    VAR             reduce using rule 201 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOL .)
    $end            reduce using rule 201 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOL .)


state 36

    (78) FunctionName -> IDENTIFIER .

    LPAREN          reduce using rule 78 (FunctionName -> IDENTIFIER .)


state 37

    (76) FunctionDecl -> FUNC FunctionName . Function
    (77) FunctionDecl -> FUNC FunctionName . Signature
    (79) Function -> . Signature FunctionBody
    (25) Signature -> . Parameters ResultOpt
    (30) Parameters -> . LPAREN ParameterListOpt RPAREN

    LPAREN          shift and go to state 73

    Function                       shift and go to state 70
    Parameters                     shift and go to state 71
    Signature                      shift and go to state 72

state 38

    (67) VarDecl -> VAR VarSpec .

    SEMICOL         reduce using rule 67 (VarDecl -> VAR VarSpec .)


state 39

    (68) VarDecl -> VAR LPAREN . VarSpecRep RPAREN
    (69) VarSpecRep -> . VarSpecRep VarSpec SEMICOL
    (70) VarSpecRep -> . epsilon
    (214) epsilon -> .

    RPAREN          reduce using rule 214 (epsilon -> .)
    IDENTIFIER      reduce using rule 214 (epsilon -> .)

    VarSpecRep                     shift and go to state 74
    epsilon                        shift and go to state 75

state 40

    (71) VarSpec -> IdentifierList . Type ExpressionListOpt
    (72) VarSpec -> IdentifierList . EQUAL ExpressionList
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    EQUAL           shift and go to state 76
    LPAREN          shift and go to state 61
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    Type                           shift and go to state 77
    TypeLit                        shift and go to state 55
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67

state 41

    (64) TypeSpec -> TypeDef .

    SEMICOL         reduce using rule 64 (TypeSpec -> TypeDef .)


state 42

    (63) TypeSpec -> AliasDecl .

    SEMICOL         reduce using rule 63 (TypeSpec -> AliasDecl .)


state 43

    (60) TypeDecl -> TYPE LPAREN . TypeSpecRep RPAREN
    (61) TypeSpecRep -> . TypeSpecRep TypeSpec SEMICOL
    (62) TypeSpecRep -> . epsilon
    (214) epsilon -> .

    RPAREN          reduce using rule 214 (epsilon -> .)
    IDENTIFIER      reduce using rule 214 (epsilon -> .)

    TypeSpecRep                    shift and go to state 78
    epsilon                        shift and go to state 79

state 44

    (59) TypeDecl -> TYPE TypeSpec .

    SEMICOL         reduce using rule 59 (TypeDecl -> TYPE TypeSpec .)


state 45

    (65) AliasDecl -> IDENTIFIER . EQUAL Type
    (66) TypeDef -> IDENTIFIER . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    EQUAL           shift and go to state 80
    LPAREN          shift and go to state 61
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    Type                           shift and go to state 81
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    TypeLit                        shift and go to state 55

state 46

    (208) ImportSpecRep -> epsilon .

    RPAREN          reduce using rule 208 (ImportSpecRep -> epsilon .)
    DOT             reduce using rule 208 (ImportSpecRep -> epsilon .)
    IDENTIFIER      reduce using rule 208 (ImportSpecRep -> epsilon .)
    STRING          reduce using rule 208 (ImportSpecRep -> epsilon .)


state 47

    (206) ImportDecl -> IMPORT LPAREN ImportSpecRep . RPAREN
    (207) ImportSpecRep -> ImportSpecRep . ImportSpec SEMICOL
    (209) ImportSpec -> . PackageNameDotOpt ImportPath
    (210) PackageNameDotOpt -> . DOT
    (211) PackageNameDotOpt -> . PackageName
    (212) PackageNameDotOpt -> . epsilon
    (204) PackageName -> . IDENTIFIER
    (214) epsilon -> .

    RPAREN          shift and go to state 82
    DOT             shift and go to state 30
    IDENTIFIER      shift and go to state 7
    STRING          reduce using rule 214 (epsilon -> .)

    ImportSpec                     shift and go to state 83
    epsilon                        shift and go to state 27
    PackageName                    shift and go to state 28
    PackageNameDotOpt              shift and go to state 29

state 48

    (209) ImportSpec -> PackageNameDotOpt ImportPath .

    SEMICOL         reduce using rule 209 (ImportSpec -> PackageNameDotOpt ImportPath .)


state 49

    (213) ImportPath -> STRING .

    SEMICOL         reduce using rule 213 (ImportPath -> STRING .)


state 50

    (50) ConstDecl -> CONST LPAREN ConstSpecRep . RPAREN
    (51) ConstSpecRep -> ConstSpecRep . ConstSpec SEMICOL
    (53) ConstSpec -> . IdentifierList TypeExprListOpt
    (56) IdentifierList -> . IDENTIFIER IdentifierRep

    RPAREN          shift and go to state 85
    IDENTIFIER      shift and go to state 34

    ConstSpec                      shift and go to state 84
    IdentifierList                 shift and go to state 33

state 51

    (52) ConstSpecRep -> epsilon .

    RPAREN          reduce using rule 52 (ConstSpecRep -> epsilon .)
    IDENTIFIER      reduce using rule 52 (ConstSpecRep -> epsilon .)


state 52

    (24) FunctionType -> FUNC . Signature
    (25) Signature -> . Parameters ResultOpt
    (30) Parameters -> . LPAREN ParameterListOpt RPAREN

    LPAREN          shift and go to state 73

    Parameters                     shift and go to state 71
    Signature                      shift and go to state 86

state 53

    (6) TypeLit -> ArrayType .

    LPAREN          reduce using rule 6 (TypeLit -> ArrayType .)
    RPAREN          reduce using rule 6 (TypeLit -> ArrayType .)
    COMMA           reduce using rule 6 (TypeLit -> ArrayType .)
    STRING          reduce using rule 6 (TypeLit -> ArrayType .)
    SEMICOL         reduce using rule 6 (TypeLit -> ArrayType .)
    EQUAL           reduce using rule 6 (TypeLit -> ArrayType .)
    LBRACE          reduce using rule 6 (TypeLit -> ArrayType .)


state 54

    (10) TypeOpt -> Type .

    EQUAL           reduce using rule 10 (TypeOpt -> Type .)


state 55

    (3) Type -> TypeLit .

    LPAREN          reduce using rule 3 (Type -> TypeLit .)
    RPAREN          reduce using rule 3 (Type -> TypeLit .)
    EQUAL           reduce using rule 3 (Type -> TypeLit .)
    SEMICOL         reduce using rule 3 (Type -> TypeLit .)
    LBRACE          reduce using rule 3 (Type -> TypeLit .)
    COMMA           reduce using rule 3 (Type -> TypeLit .)
    STRING          reduce using rule 3 (Type -> TypeLit .)


state 56

    (2) Type -> TypeName .

    LPAREN          reduce using rule 2 (Type -> TypeName .)
    RPAREN          reduce using rule 2 (Type -> TypeName .)
    EQUAL           reduce using rule 2 (Type -> TypeName .)
    SEMICOL         reduce using rule 2 (Type -> TypeName .)
    LBRACE          reduce using rule 2 (Type -> TypeName .)
    COMMA           reduce using rule 2 (Type -> TypeName .)
    STRING          reduce using rule 2 (Type -> TypeName .)


state 57

    (5) TypeName -> TYPEX .

    LPAREN          reduce using rule 5 (TypeName -> TYPEX .)
    RPAREN          reduce using rule 5 (TypeName -> TYPEX .)
    COMMA           reduce using rule 5 (TypeName -> TYPEX .)
    SEMICOL         reduce using rule 5 (TypeName -> TYPEX .)
    EQUAL           reduce using rule 5 (TypeName -> TYPEX .)
    LBRACE          reduce using rule 5 (TypeName -> TYPEX .)
    STRING          reduce using rule 5 (TypeName -> TYPEX .)


state 58

    (7) TypeLit -> StructType .

    LPAREN          reduce using rule 7 (TypeLit -> StructType .)
    RPAREN          reduce using rule 7 (TypeLit -> StructType .)
    COMMA           reduce using rule 7 (TypeLit -> StructType .)
    STRING          reduce using rule 7 (TypeLit -> StructType .)
    SEMICOL         reduce using rule 7 (TypeLit -> StructType .)
    EQUAL           reduce using rule 7 (TypeLit -> StructType .)
    LBRACE          reduce using rule 7 (TypeLit -> StructType .)


state 59

    (55) TypeExprListOpt -> epsilon .
    (11) TypeOpt -> epsilon .

    SEMICOL         reduce using rule 55 (TypeExprListOpt -> epsilon .)
    EQUAL           reduce using rule 11 (TypeOpt -> epsilon .)


state 60

    (22) PointerType -> TIMES . BaseType
    (23) BaseType -> . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 61
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    BaseType                       shift and go to state 88
    Type                           shift and go to state 87
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    TypeLit                        shift and go to state 55

state 61

    (4) Type -> LPAREN . Type RPAREN
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 61
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    Type                           shift and go to state 89
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    TypeLit                        shift and go to state 55

state 62

    (54) TypeExprListOpt -> TypeOpt . EQUAL ExpressionList

    EQUAL           shift and go to state 90


state 63

    (15) StructType -> STRUCT . LBRACE FieldDeclRep RBRACE

    LBRACE          shift and go to state 91


state 64

    (12) ArrayType -> LBRACK . ArrayLength RBRACK ElementType
    (13) ArrayLength -> . Expression
    (112) Expression -> . UnaryExpr
    (113) Expression -> . Expression OROR Expression
    (114) Expression -> . Expression AMPAMP Expression
    (115) Expression -> . Expression EQEQ Expression
    (116) Expression -> . Expression NOTEQ Expression
    (117) Expression -> . Expression LESS Expression
    (118) Expression -> . Expression GREAT Expression
    (119) Expression -> . Expression LEQ Expression
    (120) Expression -> . Expression GEQ Expression
    (121) Expression -> . Expression PLUS Expression
    (122) Expression -> . Expression MINUS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression CARET Expression
    (125) Expression -> . Expression TIMES Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MOD Expression
    (128) Expression -> . Expression AMPERS Expression
    (129) Expression -> . Expression LL Expression
    (130) Expression -> . Expression GG Expression
    (131) Expression -> . Expression AMPCAR Expression
    (134) UnaryExpr -> . PrimaryExpr
    (135) UnaryExpr -> . UnaryOp UnaryExpr
    (97) PrimaryExpr -> . Operand
    (98) PrimaryExpr -> . Conversion
    (99) PrimaryExpr -> . PrimaryExpr Selector
    (100) PrimaryExpr -> . PrimaryExpr Index
    (101) PrimaryExpr -> . PrimaryExpr Slice
    (102) PrimaryExpr -> . PrimaryExpr Arguments
    (136) UnaryOp -> . PLUS
    (137) UnaryOp -> . MINUS
    (138) UnaryOp -> . TIMES
    (139) UnaryOp -> . AMPERS
    (140) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (96) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (95) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . IntLiteral
    (86) BasicLit -> . FloatLiteral
    (87) BasicLit -> . ImgLiteral
    (88) BasicLit -> . RuneLiteral
    (89) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (90) IntLiteral -> . INTEGER
    (91) FloatLiteral -> . FLOAT
    (92) ImgLiteral -> . IMAGINARY
    (93) RuneLiteral -> . RUNE
    (94) StringLiteral -> . STRING
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 104
    MINUS           shift and go to state 98
    TIMES           shift and go to state 112
    AMPERS          shift and go to state 118
    NOT             shift and go to state 103
    LPAREN          shift and go to state 115
    IDENTIFIER      shift and go to state 107
    TYPEX           shift and go to state 57
    INTEGER         shift and go to state 105
    FLOAT           shift and go to state 117
    IMAGINARY       shift and go to state 106
    RUNE            shift and go to state 92
    STRING          shift and go to state 99
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 93
    UnaryOp                        shift and go to state 102
    PrimaryExpr                    shift and go to state 119
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    FloatLiteral                   shift and go to state 96
    Type                           shift and go to state 97
    OperandName                    shift and go to state 100
    TypeLit                        shift and go to state 55
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    IntLiteral                     shift and go to state 108
    UnaryExpr                      shift and go to state 110
    RuneLiteral                    shift and go to state 111
    Operand                        shift and go to state 113
    ArrayLength                    shift and go to state 114
    Expression                     shift and go to state 116
    PointerType                    shift and go to state 66
    StringLiteral                  shift and go to state 94
    BasicLit                       shift and go to state 101
    ImgLiteral                     shift and go to state 109
    FunctionType                   shift and go to state 67

state 65

    (53) ConstSpec -> IdentifierList TypeExprListOpt .

    SEMICOL         reduce using rule 53 (ConstSpec -> IdentifierList TypeExprListOpt .)


state 66

    (8) TypeLit -> PointerType .

    LPAREN          reduce using rule 8 (TypeLit -> PointerType .)
    RPAREN          reduce using rule 8 (TypeLit -> PointerType .)
    COMMA           reduce using rule 8 (TypeLit -> PointerType .)
    STRING          reduce using rule 8 (TypeLit -> PointerType .)
    SEMICOL         reduce using rule 8 (TypeLit -> PointerType .)
    EQUAL           reduce using rule 8 (TypeLit -> PointerType .)
    LBRACE          reduce using rule 8 (TypeLit -> PointerType .)


state 67

    (9) TypeLit -> FunctionType .

    LPAREN          reduce using rule 9 (TypeLit -> FunctionType .)
    RPAREN          reduce using rule 9 (TypeLit -> FunctionType .)
    COMMA           reduce using rule 9 (TypeLit -> FunctionType .)
    STRING          reduce using rule 9 (TypeLit -> FunctionType .)
    SEMICOL         reduce using rule 9 (TypeLit -> FunctionType .)
    EQUAL           reduce using rule 9 (TypeLit -> FunctionType .)
    LBRACE          reduce using rule 9 (TypeLit -> FunctionType .)


state 68

    (58) IdentifierRep -> epsilon .

    COMMA           reduce using rule 58 (IdentifierRep -> epsilon .)
    LPAREN          reduce using rule 58 (IdentifierRep -> epsilon .)
    TYPEX           reduce using rule 58 (IdentifierRep -> epsilon .)
    LBRACK          reduce using rule 58 (IdentifierRep -> epsilon .)
    STRUCT          reduce using rule 58 (IdentifierRep -> epsilon .)
    TIMES           reduce using rule 58 (IdentifierRep -> epsilon .)
    FUNC            reduce using rule 58 (IdentifierRep -> epsilon .)
    EQUAL           reduce using rule 58 (IdentifierRep -> epsilon .)
    SEMICOL         reduce using rule 58 (IdentifierRep -> epsilon .)


state 69

    (56) IdentifierList -> IDENTIFIER IdentifierRep .
    (57) IdentifierRep -> IdentifierRep . COMMA IDENTIFIER

    LPAREN          reduce using rule 56 (IdentifierList -> IDENTIFIER IdentifierRep .)
    TYPEX           reduce using rule 56 (IdentifierList -> IDENTIFIER IdentifierRep .)
    LBRACK          reduce using rule 56 (IdentifierList -> IDENTIFIER IdentifierRep .)
    STRUCT          reduce using rule 56 (IdentifierList -> IDENTIFIER IdentifierRep .)
    TIMES           reduce using rule 56 (IdentifierList -> IDENTIFIER IdentifierRep .)
    FUNC            reduce using rule 56 (IdentifierList -> IDENTIFIER IdentifierRep .)
    EQUAL           reduce using rule 56 (IdentifierList -> IDENTIFIER IdentifierRep .)
    SEMICOL         reduce using rule 56 (IdentifierList -> IDENTIFIER IdentifierRep .)
    COMMA           shift and go to state 120


state 70

    (76) FunctionDecl -> FUNC FunctionName Function .

    SEMICOL         reduce using rule 76 (FunctionDecl -> FUNC FunctionName Function .)


state 71

    (25) Signature -> Parameters . ResultOpt
    (26) ResultOpt -> . Result
    (27) ResultOpt -> . epsilon
    (28) Result -> . Parameters
    (29) Result -> . Type
    (214) epsilon -> .
    (30) Parameters -> . LPAREN ParameterListOpt RPAREN
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

  ! shift/reduce conflict for LPAREN resolved as shift
    EQUAL           reduce using rule 214 (epsilon -> .)
    SEMICOL         reduce using rule 214 (epsilon -> .)
    RPAREN          reduce using rule 214 (epsilon -> .)
    LBRACE          reduce using rule 214 (epsilon -> .)
    COMMA           reduce using rule 214 (epsilon -> .)
    STRING          reduce using rule 214 (epsilon -> .)
    LPAREN          shift and go to state 125
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

  ! LPAREN          [ reduce using rule 214 (epsilon -> .) ]

    StructType                     shift and go to state 58
    Parameters                     shift and go to state 121
    epsilon                        shift and go to state 124
    ResultOpt                      shift and go to state 123
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    TypeLit                        shift and go to state 55
    Result                         shift and go to state 126
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    Type                           shift and go to state 122

state 72

    (77) FunctionDecl -> FUNC FunctionName Signature .
    (79) Function -> Signature . FunctionBody
    (80) FunctionBody -> . Block
    (40) Block -> . LBRACE StatementList RBRACE

    SEMICOL         reduce using rule 77 (FunctionDecl -> FUNC FunctionName Signature .)
    LBRACE          shift and go to state 128

    FunctionBody                   shift and go to state 127
    Block                          shift and go to state 129

state 73

    (30) Parameters -> LPAREN . ParameterListOpt RPAREN
    (31) ParameterListOpt -> . ParametersList
    (32) ParameterListOpt -> . epsilon
    (33) ParametersList -> . Type
    (34) ParametersList -> . IdentifierList Type
    (35) ParametersList -> . ParameterDeclCommaRep
    (214) epsilon -> .
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (56) IdentifierList -> . IDENTIFIER IdentifierRep
    (36) ParameterDeclCommaRep -> . ParameterDeclCommaRep COMMA ParameterDecl
    (37) ParameterDeclCommaRep -> . ParameterDecl COMMA ParameterDecl
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (38) ParameterDecl -> . IdentifierList Type
    (39) ParameterDecl -> . Type
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    RPAREN          reduce using rule 214 (epsilon -> .)
    LPAREN          shift and go to state 61
    IDENTIFIER      shift and go to state 34
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    epsilon                        shift and go to state 136
    ParameterListOpt               shift and go to state 130
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    TypeLit                        shift and go to state 55
    IdentifierList                 shift and go to state 131
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    ParametersList                 shift and go to state 134
    Type                           shift and go to state 133
    ParameterDeclCommaRep          shift and go to state 132
    ParameterDecl                  shift and go to state 135

state 74

    (68) VarDecl -> VAR LPAREN VarSpecRep . RPAREN
    (69) VarSpecRep -> VarSpecRep . VarSpec SEMICOL
    (71) VarSpec -> . IdentifierList Type ExpressionListOpt
    (72) VarSpec -> . IdentifierList EQUAL ExpressionList
    (56) IdentifierList -> . IDENTIFIER IdentifierRep

    RPAREN          shift and go to state 137
    IDENTIFIER      shift and go to state 34

    VarSpec                        shift and go to state 138
    IdentifierList                 shift and go to state 40

state 75

    (70) VarSpecRep -> epsilon .

    RPAREN          reduce using rule 70 (VarSpecRep -> epsilon .)
    IDENTIFIER      reduce using rule 70 (VarSpecRep -> epsilon .)


state 76

    (72) VarSpec -> IdentifierList EQUAL . ExpressionList
    (109) ExpressionList -> . Expression ExpressionRep
    (112) Expression -> . UnaryExpr
    (113) Expression -> . Expression OROR Expression
    (114) Expression -> . Expression AMPAMP Expression
    (115) Expression -> . Expression EQEQ Expression
    (116) Expression -> . Expression NOTEQ Expression
    (117) Expression -> . Expression LESS Expression
    (118) Expression -> . Expression GREAT Expression
    (119) Expression -> . Expression LEQ Expression
    (120) Expression -> . Expression GEQ Expression
    (121) Expression -> . Expression PLUS Expression
    (122) Expression -> . Expression MINUS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression CARET Expression
    (125) Expression -> . Expression TIMES Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MOD Expression
    (128) Expression -> . Expression AMPERS Expression
    (129) Expression -> . Expression LL Expression
    (130) Expression -> . Expression GG Expression
    (131) Expression -> . Expression AMPCAR Expression
    (134) UnaryExpr -> . PrimaryExpr
    (135) UnaryExpr -> . UnaryOp UnaryExpr
    (97) PrimaryExpr -> . Operand
    (98) PrimaryExpr -> . Conversion
    (99) PrimaryExpr -> . PrimaryExpr Selector
    (100) PrimaryExpr -> . PrimaryExpr Index
    (101) PrimaryExpr -> . PrimaryExpr Slice
    (102) PrimaryExpr -> . PrimaryExpr Arguments
    (136) UnaryOp -> . PLUS
    (137) UnaryOp -> . MINUS
    (138) UnaryOp -> . TIMES
    (139) UnaryOp -> . AMPERS
    (140) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (96) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (95) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . IntLiteral
    (86) BasicLit -> . FloatLiteral
    (87) BasicLit -> . ImgLiteral
    (88) BasicLit -> . RuneLiteral
    (89) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (90) IntLiteral -> . INTEGER
    (91) FloatLiteral -> . FLOAT
    (92) ImgLiteral -> . IMAGINARY
    (93) RuneLiteral -> . RUNE
    (94) StringLiteral -> . STRING
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 104
    MINUS           shift and go to state 98
    TIMES           shift and go to state 112
    AMPERS          shift and go to state 118
    NOT             shift and go to state 103
    LPAREN          shift and go to state 115
    IDENTIFIER      shift and go to state 107
    TYPEX           shift and go to state 57
    INTEGER         shift and go to state 105
    FLOAT           shift and go to state 117
    IMAGINARY       shift and go to state 106
    RUNE            shift and go to state 92
    STRING          shift and go to state 99
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    UnaryOp                        shift and go to state 102
    PrimaryExpr                    shift and go to state 119
    Conversion                     shift and go to state 93
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    FloatLiteral                   shift and go to state 96
    Type                           shift and go to state 97
    OperandName                    shift and go to state 100
    BasicLit                       shift and go to state 101
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    IntLiteral                     shift and go to state 108
    UnaryExpr                      shift and go to state 110
    RuneLiteral                    shift and go to state 111
    Operand                        shift and go to state 113
    ExpressionList                 shift and go to state 139
    Expression                     shift and go to state 140
    PointerType                    shift and go to state 66
    StringLiteral                  shift and go to state 94
    TypeLit                        shift and go to state 55
    ImgLiteral                     shift and go to state 109
    FunctionType                   shift and go to state 67

state 77

    (71) VarSpec -> IdentifierList Type . ExpressionListOpt
    (73) ExpressionListOpt -> . EQUAL ExpressionList
    (74) ExpressionListOpt -> . epsilon
    (214) epsilon -> .

    EQUAL           shift and go to state 141
    SEMICOL         reduce using rule 214 (epsilon -> .)

    ExpressionListOpt              shift and go to state 143
    epsilon                        shift and go to state 142

state 78

    (60) TypeDecl -> TYPE LPAREN TypeSpecRep . RPAREN
    (61) TypeSpecRep -> TypeSpecRep . TypeSpec SEMICOL
    (63) TypeSpec -> . AliasDecl
    (64) TypeSpec -> . TypeDef
    (65) AliasDecl -> . IDENTIFIER EQUAL Type
    (66) TypeDef -> . IDENTIFIER Type

    RPAREN          shift and go to state 144
    IDENTIFIER      shift and go to state 45

    TypeDef                        shift and go to state 41
    AliasDecl                      shift and go to state 42
    TypeSpec                       shift and go to state 145

state 79

    (62) TypeSpecRep -> epsilon .

    RPAREN          reduce using rule 62 (TypeSpecRep -> epsilon .)
    IDENTIFIER      reduce using rule 62 (TypeSpecRep -> epsilon .)


state 80

    (65) AliasDecl -> IDENTIFIER EQUAL . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 61
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    Type                           shift and go to state 146
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    TypeLit                        shift and go to state 55

state 81

    (66) TypeDef -> IDENTIFIER Type .

    SEMICOL         reduce using rule 66 (TypeDef -> IDENTIFIER Type .)


state 82

    (206) ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN .

    SEMICOL         reduce using rule 206 (ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN .)


state 83

    (207) ImportSpecRep -> ImportSpecRep ImportSpec . SEMICOL

    SEMICOL         shift and go to state 147


state 84

    (51) ConstSpecRep -> ConstSpecRep ConstSpec . SEMICOL

    SEMICOL         shift and go to state 148


state 85

    (50) ConstDecl -> CONST LPAREN ConstSpecRep RPAREN .

    SEMICOL         reduce using rule 50 (ConstDecl -> CONST LPAREN ConstSpecRep RPAREN .)


state 86

    (24) FunctionType -> FUNC Signature .

    LPAREN          reduce using rule 24 (FunctionType -> FUNC Signature .)
    RPAREN          reduce using rule 24 (FunctionType -> FUNC Signature .)
    COMMA           reduce using rule 24 (FunctionType -> FUNC Signature .)
    EQUAL           reduce using rule 24 (FunctionType -> FUNC Signature .)
    SEMICOL         reduce using rule 24 (FunctionType -> FUNC Signature .)
    LBRACE          reduce using rule 24 (FunctionType -> FUNC Signature .)
    STRING          reduce using rule 24 (FunctionType -> FUNC Signature .)


state 87

    (23) BaseType -> Type .

    RPAREN          reduce using rule 23 (BaseType -> Type .)
    LPAREN          reduce using rule 23 (BaseType -> Type .)
    EQUAL           reduce using rule 23 (BaseType -> Type .)
    SEMICOL         reduce using rule 23 (BaseType -> Type .)
    LBRACE          reduce using rule 23 (BaseType -> Type .)
    COMMA           reduce using rule 23 (BaseType -> Type .)
    STRING          reduce using rule 23 (BaseType -> Type .)


state 88

    (22) PointerType -> TIMES BaseType .

    LPAREN          reduce using rule 22 (PointerType -> TIMES BaseType .)
    EQUAL           reduce using rule 22 (PointerType -> TIMES BaseType .)
    SEMICOL         reduce using rule 22 (PointerType -> TIMES BaseType .)
    RPAREN          reduce using rule 22 (PointerType -> TIMES BaseType .)
    LBRACE          reduce using rule 22 (PointerType -> TIMES BaseType .)
    COMMA           reduce using rule 22 (PointerType -> TIMES BaseType .)
    STRING          reduce using rule 22 (PointerType -> TIMES BaseType .)


state 89

    (4) Type -> LPAREN Type . RPAREN

    RPAREN          shift and go to state 149


state 90

    (54) TypeExprListOpt -> TypeOpt EQUAL . ExpressionList
    (109) ExpressionList -> . Expression ExpressionRep
    (112) Expression -> . UnaryExpr
    (113) Expression -> . Expression OROR Expression
    (114) Expression -> . Expression AMPAMP Expression
    (115) Expression -> . Expression EQEQ Expression
    (116) Expression -> . Expression NOTEQ Expression
    (117) Expression -> . Expression LESS Expression
    (118) Expression -> . Expression GREAT Expression
    (119) Expression -> . Expression LEQ Expression
    (120) Expression -> . Expression GEQ Expression
    (121) Expression -> . Expression PLUS Expression
    (122) Expression -> . Expression MINUS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression CARET Expression
    (125) Expression -> . Expression TIMES Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MOD Expression
    (128) Expression -> . Expression AMPERS Expression
    (129) Expression -> . Expression LL Expression
    (130) Expression -> . Expression GG Expression
    (131) Expression -> . Expression AMPCAR Expression
    (134) UnaryExpr -> . PrimaryExpr
    (135) UnaryExpr -> . UnaryOp UnaryExpr
    (97) PrimaryExpr -> . Operand
    (98) PrimaryExpr -> . Conversion
    (99) PrimaryExpr -> . PrimaryExpr Selector
    (100) PrimaryExpr -> . PrimaryExpr Index
    (101) PrimaryExpr -> . PrimaryExpr Slice
    (102) PrimaryExpr -> . PrimaryExpr Arguments
    (136) UnaryOp -> . PLUS
    (137) UnaryOp -> . MINUS
    (138) UnaryOp -> . TIMES
    (139) UnaryOp -> . AMPERS
    (140) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (96) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (95) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . IntLiteral
    (86) BasicLit -> . FloatLiteral
    (87) BasicLit -> . ImgLiteral
    (88) BasicLit -> . RuneLiteral
    (89) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (90) IntLiteral -> . INTEGER
    (91) FloatLiteral -> . FLOAT
    (92) ImgLiteral -> . IMAGINARY
    (93) RuneLiteral -> . RUNE
    (94) StringLiteral -> . STRING
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 104
    MINUS           shift and go to state 98
    TIMES           shift and go to state 112
    AMPERS          shift and go to state 118
    NOT             shift and go to state 103
    LPAREN          shift and go to state 115
    IDENTIFIER      shift and go to state 107
    TYPEX           shift and go to state 57
    INTEGER         shift and go to state 105
    FLOAT           shift and go to state 117
    IMAGINARY       shift and go to state 106
    RUNE            shift and go to state 92
    STRING          shift and go to state 99
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    UnaryOp                        shift and go to state 102
    PrimaryExpr                    shift and go to state 119
    Conversion                     shift and go to state 93
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    Expression                     shift and go to state 140
    FloatLiteral                   shift and go to state 96
    Type                           shift and go to state 97
    OperandName                    shift and go to state 100
    BasicLit                       shift and go to state 101
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    IntLiteral                     shift and go to state 108
    UnaryExpr                      shift and go to state 110
    RuneLiteral                    shift and go to state 111
    Operand                        shift and go to state 113
    ExpressionList                 shift and go to state 150
    PointerType                    shift and go to state 66
    StringLiteral                  shift and go to state 94
    TypeLit                        shift and go to state 55
    ImgLiteral                     shift and go to state 109
    FunctionType                   shift and go to state 67

state 91

    (15) StructType -> STRUCT LBRACE . FieldDeclRep RBRACE
    (16) FieldDeclRep -> . FieldDeclRep FieldDecl SEMICOL
    (17) FieldDeclRep -> . epsilon
    (214) epsilon -> .

    RBRACE          reduce using rule 214 (epsilon -> .)
    IDENTIFIER      reduce using rule 214 (epsilon -> .)

    FieldDeclRep                   shift and go to state 151
    epsilon                        shift and go to state 152

state 92

    (93) RuneLiteral -> RUNE .

    DOT             reduce using rule 93 (RuneLiteral -> RUNE .)
    LBRACK          reduce using rule 93 (RuneLiteral -> RUNE .)
    LPAREN          reduce using rule 93 (RuneLiteral -> RUNE .)
    OROR            reduce using rule 93 (RuneLiteral -> RUNE .)
    AMPAMP          reduce using rule 93 (RuneLiteral -> RUNE .)
    EQEQ            reduce using rule 93 (RuneLiteral -> RUNE .)
    NOTEQ           reduce using rule 93 (RuneLiteral -> RUNE .)
    LESS            reduce using rule 93 (RuneLiteral -> RUNE .)
    GREAT           reduce using rule 93 (RuneLiteral -> RUNE .)
    LEQ             reduce using rule 93 (RuneLiteral -> RUNE .)
    GEQ             reduce using rule 93 (RuneLiteral -> RUNE .)
    PLUS            reduce using rule 93 (RuneLiteral -> RUNE .)
    MINUS           reduce using rule 93 (RuneLiteral -> RUNE .)
    OR              reduce using rule 93 (RuneLiteral -> RUNE .)
    CARET           reduce using rule 93 (RuneLiteral -> RUNE .)
    TIMES           reduce using rule 93 (RuneLiteral -> RUNE .)
    DIVIDE          reduce using rule 93 (RuneLiteral -> RUNE .)
    MOD             reduce using rule 93 (RuneLiteral -> RUNE .)
    AMPERS          reduce using rule 93 (RuneLiteral -> RUNE .)
    LL              reduce using rule 93 (RuneLiteral -> RUNE .)
    GG              reduce using rule 93 (RuneLiteral -> RUNE .)
    AMPCAR          reduce using rule 93 (RuneLiteral -> RUNE .)
    RBRACK          reduce using rule 93 (RuneLiteral -> RUNE .)
    COMMA           reduce using rule 93 (RuneLiteral -> RUNE .)
    SEMICOL         reduce using rule 93 (RuneLiteral -> RUNE .)
    RPAREN          reduce using rule 93 (RuneLiteral -> RUNE .)
    COLON           reduce using rule 93 (RuneLiteral -> RUNE .)
    PLUSPLUS        reduce using rule 93 (RuneLiteral -> RUNE .)
    MINUSMIN        reduce using rule 93 (RuneLiteral -> RUNE .)
    PLUSEQ          reduce using rule 93 (RuneLiteral -> RUNE .)
    MINUSEQ         reduce using rule 93 (RuneLiteral -> RUNE .)
    TIMESEQ         reduce using rule 93 (RuneLiteral -> RUNE .)
    DIVIDEEQ        reduce using rule 93 (RuneLiteral -> RUNE .)
    MODEQ           reduce using rule 93 (RuneLiteral -> RUNE .)
    AMPEQ           reduce using rule 93 (RuneLiteral -> RUNE .)
    OREQ            reduce using rule 93 (RuneLiteral -> RUNE .)
    CAREQ           reduce using rule 93 (RuneLiteral -> RUNE .)
    LLEQ            reduce using rule 93 (RuneLiteral -> RUNE .)
    GGEQ            reduce using rule 93 (RuneLiteral -> RUNE .)
    EQUAL           reduce using rule 93 (RuneLiteral -> RUNE .)
    LBRACE          reduce using rule 93 (RuneLiteral -> RUNE .)


state 93

    (98) PrimaryExpr -> Conversion .

    DOT             reduce using rule 98 (PrimaryExpr -> Conversion .)
    LBRACK          reduce using rule 98 (PrimaryExpr -> Conversion .)
    LPAREN          reduce using rule 98 (PrimaryExpr -> Conversion .)
    RPAREN          reduce using rule 98 (PrimaryExpr -> Conversion .)
    OROR            reduce using rule 98 (PrimaryExpr -> Conversion .)
    AMPAMP          reduce using rule 98 (PrimaryExpr -> Conversion .)
    EQEQ            reduce using rule 98 (PrimaryExpr -> Conversion .)
    NOTEQ           reduce using rule 98 (PrimaryExpr -> Conversion .)
    LESS            reduce using rule 98 (PrimaryExpr -> Conversion .)
    GREAT           reduce using rule 98 (PrimaryExpr -> Conversion .)
    LEQ             reduce using rule 98 (PrimaryExpr -> Conversion .)
    GEQ             reduce using rule 98 (PrimaryExpr -> Conversion .)
    PLUS            reduce using rule 98 (PrimaryExpr -> Conversion .)
    MINUS           reduce using rule 98 (PrimaryExpr -> Conversion .)
    OR              reduce using rule 98 (PrimaryExpr -> Conversion .)
    CARET           reduce using rule 98 (PrimaryExpr -> Conversion .)
    TIMES           reduce using rule 98 (PrimaryExpr -> Conversion .)
    DIVIDE          reduce using rule 98 (PrimaryExpr -> Conversion .)
    MOD             reduce using rule 98 (PrimaryExpr -> Conversion .)
    AMPERS          reduce using rule 98 (PrimaryExpr -> Conversion .)
    LL              reduce using rule 98 (PrimaryExpr -> Conversion .)
    GG              reduce using rule 98 (PrimaryExpr -> Conversion .)
    AMPCAR          reduce using rule 98 (PrimaryExpr -> Conversion .)
    PLUSPLUS        reduce using rule 98 (PrimaryExpr -> Conversion .)
    MINUSMIN        reduce using rule 98 (PrimaryExpr -> Conversion .)
    COMMA           reduce using rule 98 (PrimaryExpr -> Conversion .)
    SEMICOL         reduce using rule 98 (PrimaryExpr -> Conversion .)
    PLUSEQ          reduce using rule 98 (PrimaryExpr -> Conversion .)
    MINUSEQ         reduce using rule 98 (PrimaryExpr -> Conversion .)
    TIMESEQ         reduce using rule 98 (PrimaryExpr -> Conversion .)
    DIVIDEEQ        reduce using rule 98 (PrimaryExpr -> Conversion .)
    MODEQ           reduce using rule 98 (PrimaryExpr -> Conversion .)
    AMPEQ           reduce using rule 98 (PrimaryExpr -> Conversion .)
    OREQ            reduce using rule 98 (PrimaryExpr -> Conversion .)
    CAREQ           reduce using rule 98 (PrimaryExpr -> Conversion .)
    LLEQ            reduce using rule 98 (PrimaryExpr -> Conversion .)
    GGEQ            reduce using rule 98 (PrimaryExpr -> Conversion .)
    EQUAL           reduce using rule 98 (PrimaryExpr -> Conversion .)
    RBRACK          reduce using rule 98 (PrimaryExpr -> Conversion .)
    COLON           reduce using rule 98 (PrimaryExpr -> Conversion .)
    LBRACE          reduce using rule 98 (PrimaryExpr -> Conversion .)


state 94

    (89) BasicLit -> StringLiteral .

    DOT             reduce using rule 89 (BasicLit -> StringLiteral .)
    LBRACK          reduce using rule 89 (BasicLit -> StringLiteral .)
    LPAREN          reduce using rule 89 (BasicLit -> StringLiteral .)
    RPAREN          reduce using rule 89 (BasicLit -> StringLiteral .)
    OROR            reduce using rule 89 (BasicLit -> StringLiteral .)
    AMPAMP          reduce using rule 89 (BasicLit -> StringLiteral .)
    EQEQ            reduce using rule 89 (BasicLit -> StringLiteral .)
    NOTEQ           reduce using rule 89 (BasicLit -> StringLiteral .)
    LESS            reduce using rule 89 (BasicLit -> StringLiteral .)
    GREAT           reduce using rule 89 (BasicLit -> StringLiteral .)
    LEQ             reduce using rule 89 (BasicLit -> StringLiteral .)
    GEQ             reduce using rule 89 (BasicLit -> StringLiteral .)
    PLUS            reduce using rule 89 (BasicLit -> StringLiteral .)
    MINUS           reduce using rule 89 (BasicLit -> StringLiteral .)
    OR              reduce using rule 89 (BasicLit -> StringLiteral .)
    CARET           reduce using rule 89 (BasicLit -> StringLiteral .)
    TIMES           reduce using rule 89 (BasicLit -> StringLiteral .)
    DIVIDE          reduce using rule 89 (BasicLit -> StringLiteral .)
    MOD             reduce using rule 89 (BasicLit -> StringLiteral .)
    AMPERS          reduce using rule 89 (BasicLit -> StringLiteral .)
    LL              reduce using rule 89 (BasicLit -> StringLiteral .)
    GG              reduce using rule 89 (BasicLit -> StringLiteral .)
    AMPCAR          reduce using rule 89 (BasicLit -> StringLiteral .)
    PLUSPLUS        reduce using rule 89 (BasicLit -> StringLiteral .)
    MINUSMIN        reduce using rule 89 (BasicLit -> StringLiteral .)
    COMMA           reduce using rule 89 (BasicLit -> StringLiteral .)
    LBRACE          reduce using rule 89 (BasicLit -> StringLiteral .)
    SEMICOL         reduce using rule 89 (BasicLit -> StringLiteral .)
    PLUSEQ          reduce using rule 89 (BasicLit -> StringLiteral .)
    MINUSEQ         reduce using rule 89 (BasicLit -> StringLiteral .)
    TIMESEQ         reduce using rule 89 (BasicLit -> StringLiteral .)
    DIVIDEEQ        reduce using rule 89 (BasicLit -> StringLiteral .)
    MODEQ           reduce using rule 89 (BasicLit -> StringLiteral .)
    AMPEQ           reduce using rule 89 (BasicLit -> StringLiteral .)
    OREQ            reduce using rule 89 (BasicLit -> StringLiteral .)
    CAREQ           reduce using rule 89 (BasicLit -> StringLiteral .)
    LLEQ            reduce using rule 89 (BasicLit -> StringLiteral .)
    GGEQ            reduce using rule 89 (BasicLit -> StringLiteral .)
    EQUAL           reduce using rule 89 (BasicLit -> StringLiteral .)
    RBRACK          reduce using rule 89 (BasicLit -> StringLiteral .)
    COLON           reduce using rule 89 (BasicLit -> StringLiteral .)


state 95

    (81) Operand -> Literal .

    DOT             reduce using rule 81 (Operand -> Literal .)
    LBRACK          reduce using rule 81 (Operand -> Literal .)
    LPAREN          reduce using rule 81 (Operand -> Literal .)
    OROR            reduce using rule 81 (Operand -> Literal .)
    AMPAMP          reduce using rule 81 (Operand -> Literal .)
    EQEQ            reduce using rule 81 (Operand -> Literal .)
    NOTEQ           reduce using rule 81 (Operand -> Literal .)
    LESS            reduce using rule 81 (Operand -> Literal .)
    GREAT           reduce using rule 81 (Operand -> Literal .)
    LEQ             reduce using rule 81 (Operand -> Literal .)
    GEQ             reduce using rule 81 (Operand -> Literal .)
    PLUS            reduce using rule 81 (Operand -> Literal .)
    MINUS           reduce using rule 81 (Operand -> Literal .)
    OR              reduce using rule 81 (Operand -> Literal .)
    CARET           reduce using rule 81 (Operand -> Literal .)
    TIMES           reduce using rule 81 (Operand -> Literal .)
    DIVIDE          reduce using rule 81 (Operand -> Literal .)
    MOD             reduce using rule 81 (Operand -> Literal .)
    AMPERS          reduce using rule 81 (Operand -> Literal .)
    LL              reduce using rule 81 (Operand -> Literal .)
    GG              reduce using rule 81 (Operand -> Literal .)
    AMPCAR          reduce using rule 81 (Operand -> Literal .)
    RBRACK          reduce using rule 81 (Operand -> Literal .)
    COMMA           reduce using rule 81 (Operand -> Literal .)
    SEMICOL         reduce using rule 81 (Operand -> Literal .)
    RPAREN          reduce using rule 81 (Operand -> Literal .)
    COLON           reduce using rule 81 (Operand -> Literal .)
    PLUSPLUS        reduce using rule 81 (Operand -> Literal .)
    MINUSMIN        reduce using rule 81 (Operand -> Literal .)
    PLUSEQ          reduce using rule 81 (Operand -> Literal .)
    MINUSEQ         reduce using rule 81 (Operand -> Literal .)
    TIMESEQ         reduce using rule 81 (Operand -> Literal .)
    DIVIDEEQ        reduce using rule 81 (Operand -> Literal .)
    MODEQ           reduce using rule 81 (Operand -> Literal .)
    AMPEQ           reduce using rule 81 (Operand -> Literal .)
    OREQ            reduce using rule 81 (Operand -> Literal .)
    CAREQ           reduce using rule 81 (Operand -> Literal .)
    LLEQ            reduce using rule 81 (Operand -> Literal .)
    GGEQ            reduce using rule 81 (Operand -> Literal .)
    EQUAL           reduce using rule 81 (Operand -> Literal .)
    LBRACE          reduce using rule 81 (Operand -> Literal .)


state 96

    (86) BasicLit -> FloatLiteral .

    DOT             reduce using rule 86 (BasicLit -> FloatLiteral .)
    LBRACK          reduce using rule 86 (BasicLit -> FloatLiteral .)
    LPAREN          reduce using rule 86 (BasicLit -> FloatLiteral .)
    RPAREN          reduce using rule 86 (BasicLit -> FloatLiteral .)
    OROR            reduce using rule 86 (BasicLit -> FloatLiteral .)
    AMPAMP          reduce using rule 86 (BasicLit -> FloatLiteral .)
    EQEQ            reduce using rule 86 (BasicLit -> FloatLiteral .)
    NOTEQ           reduce using rule 86 (BasicLit -> FloatLiteral .)
    LESS            reduce using rule 86 (BasicLit -> FloatLiteral .)
    GREAT           reduce using rule 86 (BasicLit -> FloatLiteral .)
    LEQ             reduce using rule 86 (BasicLit -> FloatLiteral .)
    GEQ             reduce using rule 86 (BasicLit -> FloatLiteral .)
    PLUS            reduce using rule 86 (BasicLit -> FloatLiteral .)
    MINUS           reduce using rule 86 (BasicLit -> FloatLiteral .)
    OR              reduce using rule 86 (BasicLit -> FloatLiteral .)
    CARET           reduce using rule 86 (BasicLit -> FloatLiteral .)
    TIMES           reduce using rule 86 (BasicLit -> FloatLiteral .)
    DIVIDE          reduce using rule 86 (BasicLit -> FloatLiteral .)
    MOD             reduce using rule 86 (BasicLit -> FloatLiteral .)
    AMPERS          reduce using rule 86 (BasicLit -> FloatLiteral .)
    LL              reduce using rule 86 (BasicLit -> FloatLiteral .)
    GG              reduce using rule 86 (BasicLit -> FloatLiteral .)
    AMPCAR          reduce using rule 86 (BasicLit -> FloatLiteral .)
    PLUSPLUS        reduce using rule 86 (BasicLit -> FloatLiteral .)
    MINUSMIN        reduce using rule 86 (BasicLit -> FloatLiteral .)
    COMMA           reduce using rule 86 (BasicLit -> FloatLiteral .)
    LBRACE          reduce using rule 86 (BasicLit -> FloatLiteral .)
    SEMICOL         reduce using rule 86 (BasicLit -> FloatLiteral .)
    PLUSEQ          reduce using rule 86 (BasicLit -> FloatLiteral .)
    MINUSEQ         reduce using rule 86 (BasicLit -> FloatLiteral .)
    TIMESEQ         reduce using rule 86 (BasicLit -> FloatLiteral .)
    DIVIDEEQ        reduce using rule 86 (BasicLit -> FloatLiteral .)
    MODEQ           reduce using rule 86 (BasicLit -> FloatLiteral .)
    AMPEQ           reduce using rule 86 (BasicLit -> FloatLiteral .)
    OREQ            reduce using rule 86 (BasicLit -> FloatLiteral .)
    CAREQ           reduce using rule 86 (BasicLit -> FloatLiteral .)
    LLEQ            reduce using rule 86 (BasicLit -> FloatLiteral .)
    GGEQ            reduce using rule 86 (BasicLit -> FloatLiteral .)
    EQUAL           reduce using rule 86 (BasicLit -> FloatLiteral .)
    RBRACK          reduce using rule 86 (BasicLit -> FloatLiteral .)
    COLON           reduce using rule 86 (BasicLit -> FloatLiteral .)


state 97

    (96) Conversion -> Type . LPAREN Expression RPAREN

    LPAREN          shift and go to state 153


state 98

    (137) UnaryOp -> MINUS .

    PLUS            reduce using rule 137 (UnaryOp -> MINUS .)
    MINUS           reduce using rule 137 (UnaryOp -> MINUS .)
    TIMES           reduce using rule 137 (UnaryOp -> MINUS .)
    AMPERS          reduce using rule 137 (UnaryOp -> MINUS .)
    NOT             reduce using rule 137 (UnaryOp -> MINUS .)
    LPAREN          reduce using rule 137 (UnaryOp -> MINUS .)
    IDENTIFIER      reduce using rule 137 (UnaryOp -> MINUS .)
    TYPEX           reduce using rule 137 (UnaryOp -> MINUS .)
    INTEGER         reduce using rule 137 (UnaryOp -> MINUS .)
    FLOAT           reduce using rule 137 (UnaryOp -> MINUS .)
    IMAGINARY       reduce using rule 137 (UnaryOp -> MINUS .)
    RUNE            reduce using rule 137 (UnaryOp -> MINUS .)
    STRING          reduce using rule 137 (UnaryOp -> MINUS .)
    LBRACK          reduce using rule 137 (UnaryOp -> MINUS .)
    STRUCT          reduce using rule 137 (UnaryOp -> MINUS .)
    FUNC            reduce using rule 137 (UnaryOp -> MINUS .)


state 99

    (94) StringLiteral -> STRING .

    DOT             reduce using rule 94 (StringLiteral -> STRING .)
    LBRACK          reduce using rule 94 (StringLiteral -> STRING .)
    LPAREN          reduce using rule 94 (StringLiteral -> STRING .)
    PLUSPLUS        reduce using rule 94 (StringLiteral -> STRING .)
    MINUSMIN        reduce using rule 94 (StringLiteral -> STRING .)
    OROR            reduce using rule 94 (StringLiteral -> STRING .)
    AMPAMP          reduce using rule 94 (StringLiteral -> STRING .)
    EQEQ            reduce using rule 94 (StringLiteral -> STRING .)
    NOTEQ           reduce using rule 94 (StringLiteral -> STRING .)
    LESS            reduce using rule 94 (StringLiteral -> STRING .)
    GREAT           reduce using rule 94 (StringLiteral -> STRING .)
    LEQ             reduce using rule 94 (StringLiteral -> STRING .)
    GEQ             reduce using rule 94 (StringLiteral -> STRING .)
    PLUS            reduce using rule 94 (StringLiteral -> STRING .)
    MINUS           reduce using rule 94 (StringLiteral -> STRING .)
    OR              reduce using rule 94 (StringLiteral -> STRING .)
    CARET           reduce using rule 94 (StringLiteral -> STRING .)
    TIMES           reduce using rule 94 (StringLiteral -> STRING .)
    DIVIDE          reduce using rule 94 (StringLiteral -> STRING .)
    MOD             reduce using rule 94 (StringLiteral -> STRING .)
    AMPERS          reduce using rule 94 (StringLiteral -> STRING .)
    LL              reduce using rule 94 (StringLiteral -> STRING .)
    GG              reduce using rule 94 (StringLiteral -> STRING .)
    AMPCAR          reduce using rule 94 (StringLiteral -> STRING .)
    COMMA           reduce using rule 94 (StringLiteral -> STRING .)
    LBRACE          reduce using rule 94 (StringLiteral -> STRING .)
    PLUSEQ          reduce using rule 94 (StringLiteral -> STRING .)
    MINUSEQ         reduce using rule 94 (StringLiteral -> STRING .)
    TIMESEQ         reduce using rule 94 (StringLiteral -> STRING .)
    DIVIDEEQ        reduce using rule 94 (StringLiteral -> STRING .)
    MODEQ           reduce using rule 94 (StringLiteral -> STRING .)
    AMPEQ           reduce using rule 94 (StringLiteral -> STRING .)
    OREQ            reduce using rule 94 (StringLiteral -> STRING .)
    CAREQ           reduce using rule 94 (StringLiteral -> STRING .)
    LLEQ            reduce using rule 94 (StringLiteral -> STRING .)
    GGEQ            reduce using rule 94 (StringLiteral -> STRING .)
    EQUAL           reduce using rule 94 (StringLiteral -> STRING .)
    SEMICOL         reduce using rule 94 (StringLiteral -> STRING .)
    RBRACK          reduce using rule 94 (StringLiteral -> STRING .)
    RPAREN          reduce using rule 94 (StringLiteral -> STRING .)
    COLON           reduce using rule 94 (StringLiteral -> STRING .)


state 100

    (82) Operand -> OperandName .

    DOT             reduce using rule 82 (Operand -> OperandName .)
    LBRACK          reduce using rule 82 (Operand -> OperandName .)
    LPAREN          reduce using rule 82 (Operand -> OperandName .)
    OROR            reduce using rule 82 (Operand -> OperandName .)
    AMPAMP          reduce using rule 82 (Operand -> OperandName .)
    EQEQ            reduce using rule 82 (Operand -> OperandName .)
    NOTEQ           reduce using rule 82 (Operand -> OperandName .)
    LESS            reduce using rule 82 (Operand -> OperandName .)
    GREAT           reduce using rule 82 (Operand -> OperandName .)
    LEQ             reduce using rule 82 (Operand -> OperandName .)
    GEQ             reduce using rule 82 (Operand -> OperandName .)
    PLUS            reduce using rule 82 (Operand -> OperandName .)
    MINUS           reduce using rule 82 (Operand -> OperandName .)
    OR              reduce using rule 82 (Operand -> OperandName .)
    CARET           reduce using rule 82 (Operand -> OperandName .)
    TIMES           reduce using rule 82 (Operand -> OperandName .)
    DIVIDE          reduce using rule 82 (Operand -> OperandName .)
    MOD             reduce using rule 82 (Operand -> OperandName .)
    AMPERS          reduce using rule 82 (Operand -> OperandName .)
    LL              reduce using rule 82 (Operand -> OperandName .)
    GG              reduce using rule 82 (Operand -> OperandName .)
    AMPCAR          reduce using rule 82 (Operand -> OperandName .)
    RBRACK          reduce using rule 82 (Operand -> OperandName .)
    COMMA           reduce using rule 82 (Operand -> OperandName .)
    SEMICOL         reduce using rule 82 (Operand -> OperandName .)
    RPAREN          reduce using rule 82 (Operand -> OperandName .)
    COLON           reduce using rule 82 (Operand -> OperandName .)
    PLUSPLUS        reduce using rule 82 (Operand -> OperandName .)
    MINUSMIN        reduce using rule 82 (Operand -> OperandName .)
    PLUSEQ          reduce using rule 82 (Operand -> OperandName .)
    MINUSEQ         reduce using rule 82 (Operand -> OperandName .)
    TIMESEQ         reduce using rule 82 (Operand -> OperandName .)
    DIVIDEEQ        reduce using rule 82 (Operand -> OperandName .)
    MODEQ           reduce using rule 82 (Operand -> OperandName .)
    AMPEQ           reduce using rule 82 (Operand -> OperandName .)
    OREQ            reduce using rule 82 (Operand -> OperandName .)
    CAREQ           reduce using rule 82 (Operand -> OperandName .)
    LLEQ            reduce using rule 82 (Operand -> OperandName .)
    GGEQ            reduce using rule 82 (Operand -> OperandName .)
    EQUAL           reduce using rule 82 (Operand -> OperandName .)
    LBRACE          reduce using rule 82 (Operand -> OperandName .)


state 101

    (84) Literal -> BasicLit .

    DOT             reduce using rule 84 (Literal -> BasicLit .)
    LBRACK          reduce using rule 84 (Literal -> BasicLit .)
    LPAREN          reduce using rule 84 (Literal -> BasicLit .)
    OROR            reduce using rule 84 (Literal -> BasicLit .)
    AMPAMP          reduce using rule 84 (Literal -> BasicLit .)
    EQEQ            reduce using rule 84 (Literal -> BasicLit .)
    NOTEQ           reduce using rule 84 (Literal -> BasicLit .)
    LESS            reduce using rule 84 (Literal -> BasicLit .)
    GREAT           reduce using rule 84 (Literal -> BasicLit .)
    LEQ             reduce using rule 84 (Literal -> BasicLit .)
    GEQ             reduce using rule 84 (Literal -> BasicLit .)
    PLUS            reduce using rule 84 (Literal -> BasicLit .)
    MINUS           reduce using rule 84 (Literal -> BasicLit .)
    OR              reduce using rule 84 (Literal -> BasicLit .)
    CARET           reduce using rule 84 (Literal -> BasicLit .)
    TIMES           reduce using rule 84 (Literal -> BasicLit .)
    DIVIDE          reduce using rule 84 (Literal -> BasicLit .)
    MOD             reduce using rule 84 (Literal -> BasicLit .)
    AMPERS          reduce using rule 84 (Literal -> BasicLit .)
    LL              reduce using rule 84 (Literal -> BasicLit .)
    GG              reduce using rule 84 (Literal -> BasicLit .)
    AMPCAR          reduce using rule 84 (Literal -> BasicLit .)
    RBRACK          reduce using rule 84 (Literal -> BasicLit .)
    COMMA           reduce using rule 84 (Literal -> BasicLit .)
    SEMICOL         reduce using rule 84 (Literal -> BasicLit .)
    RPAREN          reduce using rule 84 (Literal -> BasicLit .)
    COLON           reduce using rule 84 (Literal -> BasicLit .)
    PLUSPLUS        reduce using rule 84 (Literal -> BasicLit .)
    MINUSMIN        reduce using rule 84 (Literal -> BasicLit .)
    PLUSEQ          reduce using rule 84 (Literal -> BasicLit .)
    MINUSEQ         reduce using rule 84 (Literal -> BasicLit .)
    TIMESEQ         reduce using rule 84 (Literal -> BasicLit .)
    DIVIDEEQ        reduce using rule 84 (Literal -> BasicLit .)
    MODEQ           reduce using rule 84 (Literal -> BasicLit .)
    AMPEQ           reduce using rule 84 (Literal -> BasicLit .)
    OREQ            reduce using rule 84 (Literal -> BasicLit .)
    CAREQ           reduce using rule 84 (Literal -> BasicLit .)
    LLEQ            reduce using rule 84 (Literal -> BasicLit .)
    GGEQ            reduce using rule 84 (Literal -> BasicLit .)
    EQUAL           reduce using rule 84 (Literal -> BasicLit .)
    LBRACE          reduce using rule 84 (Literal -> BasicLit .)


state 102

    (135) UnaryExpr -> UnaryOp . UnaryExpr
    (134) UnaryExpr -> . PrimaryExpr
    (135) UnaryExpr -> . UnaryOp UnaryExpr
    (97) PrimaryExpr -> . Operand
    (98) PrimaryExpr -> . Conversion
    (99) PrimaryExpr -> . PrimaryExpr Selector
    (100) PrimaryExpr -> . PrimaryExpr Index
    (101) PrimaryExpr -> . PrimaryExpr Slice
    (102) PrimaryExpr -> . PrimaryExpr Arguments
    (136) UnaryOp -> . PLUS
    (137) UnaryOp -> . MINUS
    (138) UnaryOp -> . TIMES
    (139) UnaryOp -> . AMPERS
    (140) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (96) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (95) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . IntLiteral
    (86) BasicLit -> . FloatLiteral
    (87) BasicLit -> . ImgLiteral
    (88) BasicLit -> . RuneLiteral
    (89) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (90) IntLiteral -> . INTEGER
    (91) FloatLiteral -> . FLOAT
    (92) ImgLiteral -> . IMAGINARY
    (93) RuneLiteral -> . RUNE
    (94) StringLiteral -> . STRING
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 104
    MINUS           shift and go to state 98
    TIMES           shift and go to state 112
    AMPERS          shift and go to state 118
    NOT             shift and go to state 103
    LPAREN          shift and go to state 115
    IDENTIFIER      shift and go to state 107
    TYPEX           shift and go to state 57
    INTEGER         shift and go to state 105
    FLOAT           shift and go to state 117
    IMAGINARY       shift and go to state 106
    RUNE            shift and go to state 92
    STRING          shift and go to state 99
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 93
    UnaryOp                        shift and go to state 102
    PrimaryExpr                    shift and go to state 119
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    FloatLiteral                   shift and go to state 96
    Type                           shift and go to state 97
    OperandName                    shift and go to state 100
    BasicLit                       shift and go to state 101
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    IntLiteral                     shift and go to state 108
    UnaryExpr                      shift and go to state 154
    RuneLiteral                    shift and go to state 111
    Operand                        shift and go to state 113
    PointerType                    shift and go to state 66
    StringLiteral                  shift and go to state 94
    TypeLit                        shift and go to state 55
    ImgLiteral                     shift and go to state 109
    FunctionType                   shift and go to state 67

state 103

    (140) UnaryOp -> NOT .

    PLUS            reduce using rule 140 (UnaryOp -> NOT .)
    MINUS           reduce using rule 140 (UnaryOp -> NOT .)
    TIMES           reduce using rule 140 (UnaryOp -> NOT .)
    AMPERS          reduce using rule 140 (UnaryOp -> NOT .)
    NOT             reduce using rule 140 (UnaryOp -> NOT .)
    LPAREN          reduce using rule 140 (UnaryOp -> NOT .)
    IDENTIFIER      reduce using rule 140 (UnaryOp -> NOT .)
    TYPEX           reduce using rule 140 (UnaryOp -> NOT .)
    INTEGER         reduce using rule 140 (UnaryOp -> NOT .)
    FLOAT           reduce using rule 140 (UnaryOp -> NOT .)
    IMAGINARY       reduce using rule 140 (UnaryOp -> NOT .)
    RUNE            reduce using rule 140 (UnaryOp -> NOT .)
    STRING          reduce using rule 140 (UnaryOp -> NOT .)
    LBRACK          reduce using rule 140 (UnaryOp -> NOT .)
    STRUCT          reduce using rule 140 (UnaryOp -> NOT .)
    FUNC            reduce using rule 140 (UnaryOp -> NOT .)


state 104

    (136) UnaryOp -> PLUS .

    PLUS            reduce using rule 136 (UnaryOp -> PLUS .)
    MINUS           reduce using rule 136 (UnaryOp -> PLUS .)
    TIMES           reduce using rule 136 (UnaryOp -> PLUS .)
    AMPERS          reduce using rule 136 (UnaryOp -> PLUS .)
    NOT             reduce using rule 136 (UnaryOp -> PLUS .)
    LPAREN          reduce using rule 136 (UnaryOp -> PLUS .)
    IDENTIFIER      reduce using rule 136 (UnaryOp -> PLUS .)
    TYPEX           reduce using rule 136 (UnaryOp -> PLUS .)
    INTEGER         reduce using rule 136 (UnaryOp -> PLUS .)
    FLOAT           reduce using rule 136 (UnaryOp -> PLUS .)
    IMAGINARY       reduce using rule 136 (UnaryOp -> PLUS .)
    RUNE            reduce using rule 136 (UnaryOp -> PLUS .)
    STRING          reduce using rule 136 (UnaryOp -> PLUS .)
    LBRACK          reduce using rule 136 (UnaryOp -> PLUS .)
    STRUCT          reduce using rule 136 (UnaryOp -> PLUS .)
    FUNC            reduce using rule 136 (UnaryOp -> PLUS .)


state 105

    (90) IntLiteral -> INTEGER .

    DOT             reduce using rule 90 (IntLiteral -> INTEGER .)
    LBRACK          reduce using rule 90 (IntLiteral -> INTEGER .)
    LPAREN          reduce using rule 90 (IntLiteral -> INTEGER .)
    OROR            reduce using rule 90 (IntLiteral -> INTEGER .)
    AMPAMP          reduce using rule 90 (IntLiteral -> INTEGER .)
    EQEQ            reduce using rule 90 (IntLiteral -> INTEGER .)
    NOTEQ           reduce using rule 90 (IntLiteral -> INTEGER .)
    LESS            reduce using rule 90 (IntLiteral -> INTEGER .)
    GREAT           reduce using rule 90 (IntLiteral -> INTEGER .)
    LEQ             reduce using rule 90 (IntLiteral -> INTEGER .)
    GEQ             reduce using rule 90 (IntLiteral -> INTEGER .)
    PLUS            reduce using rule 90 (IntLiteral -> INTEGER .)
    MINUS           reduce using rule 90 (IntLiteral -> INTEGER .)
    OR              reduce using rule 90 (IntLiteral -> INTEGER .)
    CARET           reduce using rule 90 (IntLiteral -> INTEGER .)
    TIMES           reduce using rule 90 (IntLiteral -> INTEGER .)
    DIVIDE          reduce using rule 90 (IntLiteral -> INTEGER .)
    MOD             reduce using rule 90 (IntLiteral -> INTEGER .)
    AMPERS          reduce using rule 90 (IntLiteral -> INTEGER .)
    LL              reduce using rule 90 (IntLiteral -> INTEGER .)
    GG              reduce using rule 90 (IntLiteral -> INTEGER .)
    AMPCAR          reduce using rule 90 (IntLiteral -> INTEGER .)
    RBRACK          reduce using rule 90 (IntLiteral -> INTEGER .)
    COMMA           reduce using rule 90 (IntLiteral -> INTEGER .)
    SEMICOL         reduce using rule 90 (IntLiteral -> INTEGER .)
    RPAREN          reduce using rule 90 (IntLiteral -> INTEGER .)
    COLON           reduce using rule 90 (IntLiteral -> INTEGER .)
    PLUSPLUS        reduce using rule 90 (IntLiteral -> INTEGER .)
    MINUSMIN        reduce using rule 90 (IntLiteral -> INTEGER .)
    PLUSEQ          reduce using rule 90 (IntLiteral -> INTEGER .)
    MINUSEQ         reduce using rule 90 (IntLiteral -> INTEGER .)
    TIMESEQ         reduce using rule 90 (IntLiteral -> INTEGER .)
    DIVIDEEQ        reduce using rule 90 (IntLiteral -> INTEGER .)
    MODEQ           reduce using rule 90 (IntLiteral -> INTEGER .)
    AMPEQ           reduce using rule 90 (IntLiteral -> INTEGER .)
    OREQ            reduce using rule 90 (IntLiteral -> INTEGER .)
    CAREQ           reduce using rule 90 (IntLiteral -> INTEGER .)
    LLEQ            reduce using rule 90 (IntLiteral -> INTEGER .)
    GGEQ            reduce using rule 90 (IntLiteral -> INTEGER .)
    EQUAL           reduce using rule 90 (IntLiteral -> INTEGER .)
    LBRACE          reduce using rule 90 (IntLiteral -> INTEGER .)


state 106

    (92) ImgLiteral -> IMAGINARY .

    DOT             reduce using rule 92 (ImgLiteral -> IMAGINARY .)
    LBRACK          reduce using rule 92 (ImgLiteral -> IMAGINARY .)
    LPAREN          reduce using rule 92 (ImgLiteral -> IMAGINARY .)
    OROR            reduce using rule 92 (ImgLiteral -> IMAGINARY .)
    AMPAMP          reduce using rule 92 (ImgLiteral -> IMAGINARY .)
    EQEQ            reduce using rule 92 (ImgLiteral -> IMAGINARY .)
    NOTEQ           reduce using rule 92 (ImgLiteral -> IMAGINARY .)
    LESS            reduce using rule 92 (ImgLiteral -> IMAGINARY .)
    GREAT           reduce using rule 92 (ImgLiteral -> IMAGINARY .)
    LEQ             reduce using rule 92 (ImgLiteral -> IMAGINARY .)
    GEQ             reduce using rule 92 (ImgLiteral -> IMAGINARY .)
    PLUS            reduce using rule 92 (ImgLiteral -> IMAGINARY .)
    MINUS           reduce using rule 92 (ImgLiteral -> IMAGINARY .)
    OR              reduce using rule 92 (ImgLiteral -> IMAGINARY .)
    CARET           reduce using rule 92 (ImgLiteral -> IMAGINARY .)
    TIMES           reduce using rule 92 (ImgLiteral -> IMAGINARY .)
    DIVIDE          reduce using rule 92 (ImgLiteral -> IMAGINARY .)
    MOD             reduce using rule 92 (ImgLiteral -> IMAGINARY .)
    AMPERS          reduce using rule 92 (ImgLiteral -> IMAGINARY .)
    LL              reduce using rule 92 (ImgLiteral -> IMAGINARY .)
    GG              reduce using rule 92 (ImgLiteral -> IMAGINARY .)
    AMPCAR          reduce using rule 92 (ImgLiteral -> IMAGINARY .)
    RBRACK          reduce using rule 92 (ImgLiteral -> IMAGINARY .)
    COMMA           reduce using rule 92 (ImgLiteral -> IMAGINARY .)
    SEMICOL         reduce using rule 92 (ImgLiteral -> IMAGINARY .)
    RPAREN          reduce using rule 92 (ImgLiteral -> IMAGINARY .)
    COLON           reduce using rule 92 (ImgLiteral -> IMAGINARY .)
    PLUSPLUS        reduce using rule 92 (ImgLiteral -> IMAGINARY .)
    MINUSMIN        reduce using rule 92 (ImgLiteral -> IMAGINARY .)
    PLUSEQ          reduce using rule 92 (ImgLiteral -> IMAGINARY .)
    MINUSEQ         reduce using rule 92 (ImgLiteral -> IMAGINARY .)
    TIMESEQ         reduce using rule 92 (ImgLiteral -> IMAGINARY .)
    DIVIDEEQ        reduce using rule 92 (ImgLiteral -> IMAGINARY .)
    MODEQ           reduce using rule 92 (ImgLiteral -> IMAGINARY .)
    AMPEQ           reduce using rule 92 (ImgLiteral -> IMAGINARY .)
    OREQ            reduce using rule 92 (ImgLiteral -> IMAGINARY .)
    CAREQ           reduce using rule 92 (ImgLiteral -> IMAGINARY .)
    LLEQ            reduce using rule 92 (ImgLiteral -> IMAGINARY .)
    GGEQ            reduce using rule 92 (ImgLiteral -> IMAGINARY .)
    EQUAL           reduce using rule 92 (ImgLiteral -> IMAGINARY .)
    LBRACE          reduce using rule 92 (ImgLiteral -> IMAGINARY .)


state 107

    (95) OperandName -> IDENTIFIER .

    DOT             reduce using rule 95 (OperandName -> IDENTIFIER .)
    LBRACK          reduce using rule 95 (OperandName -> IDENTIFIER .)
    LPAREN          reduce using rule 95 (OperandName -> IDENTIFIER .)
    OROR            reduce using rule 95 (OperandName -> IDENTIFIER .)
    AMPAMP          reduce using rule 95 (OperandName -> IDENTIFIER .)
    EQEQ            reduce using rule 95 (OperandName -> IDENTIFIER .)
    NOTEQ           reduce using rule 95 (OperandName -> IDENTIFIER .)
    LESS            reduce using rule 95 (OperandName -> IDENTIFIER .)
    GREAT           reduce using rule 95 (OperandName -> IDENTIFIER .)
    LEQ             reduce using rule 95 (OperandName -> IDENTIFIER .)
    GEQ             reduce using rule 95 (OperandName -> IDENTIFIER .)
    PLUS            reduce using rule 95 (OperandName -> IDENTIFIER .)
    MINUS           reduce using rule 95 (OperandName -> IDENTIFIER .)
    OR              reduce using rule 95 (OperandName -> IDENTIFIER .)
    CARET           reduce using rule 95 (OperandName -> IDENTIFIER .)
    TIMES           reduce using rule 95 (OperandName -> IDENTIFIER .)
    DIVIDE          reduce using rule 95 (OperandName -> IDENTIFIER .)
    MOD             reduce using rule 95 (OperandName -> IDENTIFIER .)
    AMPERS          reduce using rule 95 (OperandName -> IDENTIFIER .)
    LL              reduce using rule 95 (OperandName -> IDENTIFIER .)
    GG              reduce using rule 95 (OperandName -> IDENTIFIER .)
    AMPCAR          reduce using rule 95 (OperandName -> IDENTIFIER .)
    RBRACK          reduce using rule 95 (OperandName -> IDENTIFIER .)
    COMMA           reduce using rule 95 (OperandName -> IDENTIFIER .)
    SEMICOL         reduce using rule 95 (OperandName -> IDENTIFIER .)
    RPAREN          reduce using rule 95 (OperandName -> IDENTIFIER .)
    COLON           reduce using rule 95 (OperandName -> IDENTIFIER .)
    PLUSPLUS        reduce using rule 95 (OperandName -> IDENTIFIER .)
    MINUSMIN        reduce using rule 95 (OperandName -> IDENTIFIER .)
    PLUSEQ          reduce using rule 95 (OperandName -> IDENTIFIER .)
    MINUSEQ         reduce using rule 95 (OperandName -> IDENTIFIER .)
    TIMESEQ         reduce using rule 95 (OperandName -> IDENTIFIER .)
    DIVIDEEQ        reduce using rule 95 (OperandName -> IDENTIFIER .)
    MODEQ           reduce using rule 95 (OperandName -> IDENTIFIER .)
    AMPEQ           reduce using rule 95 (OperandName -> IDENTIFIER .)
    OREQ            reduce using rule 95 (OperandName -> IDENTIFIER .)
    CAREQ           reduce using rule 95 (OperandName -> IDENTIFIER .)
    LLEQ            reduce using rule 95 (OperandName -> IDENTIFIER .)
    GGEQ            reduce using rule 95 (OperandName -> IDENTIFIER .)
    EQUAL           reduce using rule 95 (OperandName -> IDENTIFIER .)
    LBRACE          reduce using rule 95 (OperandName -> IDENTIFIER .)


state 108

    (85) BasicLit -> IntLiteral .

    DOT             reduce using rule 85 (BasicLit -> IntLiteral .)
    LBRACK          reduce using rule 85 (BasicLit -> IntLiteral .)
    LPAREN          reduce using rule 85 (BasicLit -> IntLiteral .)
    RPAREN          reduce using rule 85 (BasicLit -> IntLiteral .)
    OROR            reduce using rule 85 (BasicLit -> IntLiteral .)
    AMPAMP          reduce using rule 85 (BasicLit -> IntLiteral .)
    EQEQ            reduce using rule 85 (BasicLit -> IntLiteral .)
    NOTEQ           reduce using rule 85 (BasicLit -> IntLiteral .)
    LESS            reduce using rule 85 (BasicLit -> IntLiteral .)
    GREAT           reduce using rule 85 (BasicLit -> IntLiteral .)
    LEQ             reduce using rule 85 (BasicLit -> IntLiteral .)
    GEQ             reduce using rule 85 (BasicLit -> IntLiteral .)
    PLUS            reduce using rule 85 (BasicLit -> IntLiteral .)
    MINUS           reduce using rule 85 (BasicLit -> IntLiteral .)
    OR              reduce using rule 85 (BasicLit -> IntLiteral .)
    CARET           reduce using rule 85 (BasicLit -> IntLiteral .)
    TIMES           reduce using rule 85 (BasicLit -> IntLiteral .)
    DIVIDE          reduce using rule 85 (BasicLit -> IntLiteral .)
    MOD             reduce using rule 85 (BasicLit -> IntLiteral .)
    AMPERS          reduce using rule 85 (BasicLit -> IntLiteral .)
    LL              reduce using rule 85 (BasicLit -> IntLiteral .)
    GG              reduce using rule 85 (BasicLit -> IntLiteral .)
    AMPCAR          reduce using rule 85 (BasicLit -> IntLiteral .)
    PLUSPLUS        reduce using rule 85 (BasicLit -> IntLiteral .)
    MINUSMIN        reduce using rule 85 (BasicLit -> IntLiteral .)
    COMMA           reduce using rule 85 (BasicLit -> IntLiteral .)
    LBRACE          reduce using rule 85 (BasicLit -> IntLiteral .)
    SEMICOL         reduce using rule 85 (BasicLit -> IntLiteral .)
    PLUSEQ          reduce using rule 85 (BasicLit -> IntLiteral .)
    MINUSEQ         reduce using rule 85 (BasicLit -> IntLiteral .)
    TIMESEQ         reduce using rule 85 (BasicLit -> IntLiteral .)
    DIVIDEEQ        reduce using rule 85 (BasicLit -> IntLiteral .)
    MODEQ           reduce using rule 85 (BasicLit -> IntLiteral .)
    AMPEQ           reduce using rule 85 (BasicLit -> IntLiteral .)
    OREQ            reduce using rule 85 (BasicLit -> IntLiteral .)
    CAREQ           reduce using rule 85 (BasicLit -> IntLiteral .)
    LLEQ            reduce using rule 85 (BasicLit -> IntLiteral .)
    GGEQ            reduce using rule 85 (BasicLit -> IntLiteral .)
    EQUAL           reduce using rule 85 (BasicLit -> IntLiteral .)
    RBRACK          reduce using rule 85 (BasicLit -> IntLiteral .)
    COLON           reduce using rule 85 (BasicLit -> IntLiteral .)


state 109

    (87) BasicLit -> ImgLiteral .

    DOT             reduce using rule 87 (BasicLit -> ImgLiteral .)
    LBRACK          reduce using rule 87 (BasicLit -> ImgLiteral .)
    LPAREN          reduce using rule 87 (BasicLit -> ImgLiteral .)
    RPAREN          reduce using rule 87 (BasicLit -> ImgLiteral .)
    OROR            reduce using rule 87 (BasicLit -> ImgLiteral .)
    AMPAMP          reduce using rule 87 (BasicLit -> ImgLiteral .)
    EQEQ            reduce using rule 87 (BasicLit -> ImgLiteral .)
    NOTEQ           reduce using rule 87 (BasicLit -> ImgLiteral .)
    LESS            reduce using rule 87 (BasicLit -> ImgLiteral .)
    GREAT           reduce using rule 87 (BasicLit -> ImgLiteral .)
    LEQ             reduce using rule 87 (BasicLit -> ImgLiteral .)
    GEQ             reduce using rule 87 (BasicLit -> ImgLiteral .)
    PLUS            reduce using rule 87 (BasicLit -> ImgLiteral .)
    MINUS           reduce using rule 87 (BasicLit -> ImgLiteral .)
    OR              reduce using rule 87 (BasicLit -> ImgLiteral .)
    CARET           reduce using rule 87 (BasicLit -> ImgLiteral .)
    TIMES           reduce using rule 87 (BasicLit -> ImgLiteral .)
    DIVIDE          reduce using rule 87 (BasicLit -> ImgLiteral .)
    MOD             reduce using rule 87 (BasicLit -> ImgLiteral .)
    AMPERS          reduce using rule 87 (BasicLit -> ImgLiteral .)
    LL              reduce using rule 87 (BasicLit -> ImgLiteral .)
    GG              reduce using rule 87 (BasicLit -> ImgLiteral .)
    AMPCAR          reduce using rule 87 (BasicLit -> ImgLiteral .)
    PLUSPLUS        reduce using rule 87 (BasicLit -> ImgLiteral .)
    MINUSMIN        reduce using rule 87 (BasicLit -> ImgLiteral .)
    COMMA           reduce using rule 87 (BasicLit -> ImgLiteral .)
    LBRACE          reduce using rule 87 (BasicLit -> ImgLiteral .)
    SEMICOL         reduce using rule 87 (BasicLit -> ImgLiteral .)
    PLUSEQ          reduce using rule 87 (BasicLit -> ImgLiteral .)
    MINUSEQ         reduce using rule 87 (BasicLit -> ImgLiteral .)
    TIMESEQ         reduce using rule 87 (BasicLit -> ImgLiteral .)
    DIVIDEEQ        reduce using rule 87 (BasicLit -> ImgLiteral .)
    MODEQ           reduce using rule 87 (BasicLit -> ImgLiteral .)
    AMPEQ           reduce using rule 87 (BasicLit -> ImgLiteral .)
    OREQ            reduce using rule 87 (BasicLit -> ImgLiteral .)
    CAREQ           reduce using rule 87 (BasicLit -> ImgLiteral .)
    LLEQ            reduce using rule 87 (BasicLit -> ImgLiteral .)
    GGEQ            reduce using rule 87 (BasicLit -> ImgLiteral .)
    EQUAL           reduce using rule 87 (BasicLit -> ImgLiteral .)
    RBRACK          reduce using rule 87 (BasicLit -> ImgLiteral .)
    COLON           reduce using rule 87 (BasicLit -> ImgLiteral .)


state 110

    (112) Expression -> UnaryExpr .

    PLUSPLUS        reduce using rule 112 (Expression -> UnaryExpr .)
    MINUSMIN        reduce using rule 112 (Expression -> UnaryExpr .)
    OROR            reduce using rule 112 (Expression -> UnaryExpr .)
    AMPAMP          reduce using rule 112 (Expression -> UnaryExpr .)
    EQEQ            reduce using rule 112 (Expression -> UnaryExpr .)
    NOTEQ           reduce using rule 112 (Expression -> UnaryExpr .)
    LESS            reduce using rule 112 (Expression -> UnaryExpr .)
    GREAT           reduce using rule 112 (Expression -> UnaryExpr .)
    LEQ             reduce using rule 112 (Expression -> UnaryExpr .)
    GEQ             reduce using rule 112 (Expression -> UnaryExpr .)
    PLUS            reduce using rule 112 (Expression -> UnaryExpr .)
    MINUS           reduce using rule 112 (Expression -> UnaryExpr .)
    OR              reduce using rule 112 (Expression -> UnaryExpr .)
    CARET           reduce using rule 112 (Expression -> UnaryExpr .)
    TIMES           reduce using rule 112 (Expression -> UnaryExpr .)
    DIVIDE          reduce using rule 112 (Expression -> UnaryExpr .)
    MOD             reduce using rule 112 (Expression -> UnaryExpr .)
    AMPERS          reduce using rule 112 (Expression -> UnaryExpr .)
    LL              reduce using rule 112 (Expression -> UnaryExpr .)
    GG              reduce using rule 112 (Expression -> UnaryExpr .)
    AMPCAR          reduce using rule 112 (Expression -> UnaryExpr .)
    COMMA           reduce using rule 112 (Expression -> UnaryExpr .)
    SEMICOL         reduce using rule 112 (Expression -> UnaryExpr .)
    PLUSEQ          reduce using rule 112 (Expression -> UnaryExpr .)
    MINUSEQ         reduce using rule 112 (Expression -> UnaryExpr .)
    TIMESEQ         reduce using rule 112 (Expression -> UnaryExpr .)
    DIVIDEEQ        reduce using rule 112 (Expression -> UnaryExpr .)
    MODEQ           reduce using rule 112 (Expression -> UnaryExpr .)
    AMPEQ           reduce using rule 112 (Expression -> UnaryExpr .)
    OREQ            reduce using rule 112 (Expression -> UnaryExpr .)
    CAREQ           reduce using rule 112 (Expression -> UnaryExpr .)
    LLEQ            reduce using rule 112 (Expression -> UnaryExpr .)
    GGEQ            reduce using rule 112 (Expression -> UnaryExpr .)
    EQUAL           reduce using rule 112 (Expression -> UnaryExpr .)
    RBRACK          reduce using rule 112 (Expression -> UnaryExpr .)
    RPAREN          reduce using rule 112 (Expression -> UnaryExpr .)
    COLON           reduce using rule 112 (Expression -> UnaryExpr .)
    LBRACE          reduce using rule 112 (Expression -> UnaryExpr .)


state 111

    (88) BasicLit -> RuneLiteral .

    DOT             reduce using rule 88 (BasicLit -> RuneLiteral .)
    LBRACK          reduce using rule 88 (BasicLit -> RuneLiteral .)
    LPAREN          reduce using rule 88 (BasicLit -> RuneLiteral .)
    RPAREN          reduce using rule 88 (BasicLit -> RuneLiteral .)
    OROR            reduce using rule 88 (BasicLit -> RuneLiteral .)
    AMPAMP          reduce using rule 88 (BasicLit -> RuneLiteral .)
    EQEQ            reduce using rule 88 (BasicLit -> RuneLiteral .)
    NOTEQ           reduce using rule 88 (BasicLit -> RuneLiteral .)
    LESS            reduce using rule 88 (BasicLit -> RuneLiteral .)
    GREAT           reduce using rule 88 (BasicLit -> RuneLiteral .)
    LEQ             reduce using rule 88 (BasicLit -> RuneLiteral .)
    GEQ             reduce using rule 88 (BasicLit -> RuneLiteral .)
    PLUS            reduce using rule 88 (BasicLit -> RuneLiteral .)
    MINUS           reduce using rule 88 (BasicLit -> RuneLiteral .)
    OR              reduce using rule 88 (BasicLit -> RuneLiteral .)
    CARET           reduce using rule 88 (BasicLit -> RuneLiteral .)
    TIMES           reduce using rule 88 (BasicLit -> RuneLiteral .)
    DIVIDE          reduce using rule 88 (BasicLit -> RuneLiteral .)
    MOD             reduce using rule 88 (BasicLit -> RuneLiteral .)
    AMPERS          reduce using rule 88 (BasicLit -> RuneLiteral .)
    LL              reduce using rule 88 (BasicLit -> RuneLiteral .)
    GG              reduce using rule 88 (BasicLit -> RuneLiteral .)
    AMPCAR          reduce using rule 88 (BasicLit -> RuneLiteral .)
    PLUSPLUS        reduce using rule 88 (BasicLit -> RuneLiteral .)
    MINUSMIN        reduce using rule 88 (BasicLit -> RuneLiteral .)
    COMMA           reduce using rule 88 (BasicLit -> RuneLiteral .)
    LBRACE          reduce using rule 88 (BasicLit -> RuneLiteral .)
    SEMICOL         reduce using rule 88 (BasicLit -> RuneLiteral .)
    PLUSEQ          reduce using rule 88 (BasicLit -> RuneLiteral .)
    MINUSEQ         reduce using rule 88 (BasicLit -> RuneLiteral .)
    TIMESEQ         reduce using rule 88 (BasicLit -> RuneLiteral .)
    DIVIDEEQ        reduce using rule 88 (BasicLit -> RuneLiteral .)
    MODEQ           reduce using rule 88 (BasicLit -> RuneLiteral .)
    AMPEQ           reduce using rule 88 (BasicLit -> RuneLiteral .)
    OREQ            reduce using rule 88 (BasicLit -> RuneLiteral .)
    CAREQ           reduce using rule 88 (BasicLit -> RuneLiteral .)
    LLEQ            reduce using rule 88 (BasicLit -> RuneLiteral .)
    GGEQ            reduce using rule 88 (BasicLit -> RuneLiteral .)
    EQUAL           reduce using rule 88 (BasicLit -> RuneLiteral .)
    RBRACK          reduce using rule 88 (BasicLit -> RuneLiteral .)
    COLON           reduce using rule 88 (BasicLit -> RuneLiteral .)


state 112

    (138) UnaryOp -> TIMES .
    (22) PointerType -> TIMES . BaseType
    (23) BaseType -> . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            reduce using rule 138 (UnaryOp -> TIMES .)
    MINUS           reduce using rule 138 (UnaryOp -> TIMES .)
    TIMES           reduce using rule 138 (UnaryOp -> TIMES .)
    AMPERS          reduce using rule 138 (UnaryOp -> TIMES .)
    NOT             reduce using rule 138 (UnaryOp -> TIMES .)
    LPAREN          reduce using rule 138 (UnaryOp -> TIMES .)
    IDENTIFIER      reduce using rule 138 (UnaryOp -> TIMES .)
    TYPEX           reduce using rule 138 (UnaryOp -> TIMES .)
    INTEGER         reduce using rule 138 (UnaryOp -> TIMES .)
    FLOAT           reduce using rule 138 (UnaryOp -> TIMES .)
    IMAGINARY       reduce using rule 138 (UnaryOp -> TIMES .)
    RUNE            reduce using rule 138 (UnaryOp -> TIMES .)
    STRING          reduce using rule 138 (UnaryOp -> TIMES .)
    LBRACK          reduce using rule 138 (UnaryOp -> TIMES .)
    STRUCT          reduce using rule 138 (UnaryOp -> TIMES .)
    FUNC            reduce using rule 138 (UnaryOp -> TIMES .)

  ! LPAREN          [ shift and go to state 61 ]
  ! TYPEX           [ shift and go to state 57 ]
  ! LBRACK          [ shift and go to state 64 ]
  ! STRUCT          [ shift and go to state 63 ]
  ! TIMES           [ shift and go to state 60 ]
  ! FUNC            [ shift and go to state 52 ]

    StructType                     shift and go to state 58
    BaseType                       shift and go to state 88
    Type                           shift and go to state 87
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    TypeLit                        shift and go to state 55

state 113

    (97) PrimaryExpr -> Operand .

    DOT             reduce using rule 97 (PrimaryExpr -> Operand .)
    LBRACK          reduce using rule 97 (PrimaryExpr -> Operand .)
    LPAREN          reduce using rule 97 (PrimaryExpr -> Operand .)
    RPAREN          reduce using rule 97 (PrimaryExpr -> Operand .)
    OROR            reduce using rule 97 (PrimaryExpr -> Operand .)
    AMPAMP          reduce using rule 97 (PrimaryExpr -> Operand .)
    EQEQ            reduce using rule 97 (PrimaryExpr -> Operand .)
    NOTEQ           reduce using rule 97 (PrimaryExpr -> Operand .)
    LESS            reduce using rule 97 (PrimaryExpr -> Operand .)
    GREAT           reduce using rule 97 (PrimaryExpr -> Operand .)
    LEQ             reduce using rule 97 (PrimaryExpr -> Operand .)
    GEQ             reduce using rule 97 (PrimaryExpr -> Operand .)
    PLUS            reduce using rule 97 (PrimaryExpr -> Operand .)
    MINUS           reduce using rule 97 (PrimaryExpr -> Operand .)
    OR              reduce using rule 97 (PrimaryExpr -> Operand .)
    CARET           reduce using rule 97 (PrimaryExpr -> Operand .)
    TIMES           reduce using rule 97 (PrimaryExpr -> Operand .)
    DIVIDE          reduce using rule 97 (PrimaryExpr -> Operand .)
    MOD             reduce using rule 97 (PrimaryExpr -> Operand .)
    AMPERS          reduce using rule 97 (PrimaryExpr -> Operand .)
    LL              reduce using rule 97 (PrimaryExpr -> Operand .)
    GG              reduce using rule 97 (PrimaryExpr -> Operand .)
    AMPCAR          reduce using rule 97 (PrimaryExpr -> Operand .)
    PLUSPLUS        reduce using rule 97 (PrimaryExpr -> Operand .)
    MINUSMIN        reduce using rule 97 (PrimaryExpr -> Operand .)
    COMMA           reduce using rule 97 (PrimaryExpr -> Operand .)
    SEMICOL         reduce using rule 97 (PrimaryExpr -> Operand .)
    PLUSEQ          reduce using rule 97 (PrimaryExpr -> Operand .)
    MINUSEQ         reduce using rule 97 (PrimaryExpr -> Operand .)
    TIMESEQ         reduce using rule 97 (PrimaryExpr -> Operand .)
    DIVIDEEQ        reduce using rule 97 (PrimaryExpr -> Operand .)
    MODEQ           reduce using rule 97 (PrimaryExpr -> Operand .)
    AMPEQ           reduce using rule 97 (PrimaryExpr -> Operand .)
    OREQ            reduce using rule 97 (PrimaryExpr -> Operand .)
    CAREQ           reduce using rule 97 (PrimaryExpr -> Operand .)
    LLEQ            reduce using rule 97 (PrimaryExpr -> Operand .)
    GGEQ            reduce using rule 97 (PrimaryExpr -> Operand .)
    EQUAL           reduce using rule 97 (PrimaryExpr -> Operand .)
    RBRACK          reduce using rule 97 (PrimaryExpr -> Operand .)
    COLON           reduce using rule 97 (PrimaryExpr -> Operand .)
    LBRACE          reduce using rule 97 (PrimaryExpr -> Operand .)


state 114

    (12) ArrayType -> LBRACK ArrayLength . RBRACK ElementType

    RBRACK          shift and go to state 155


state 115

    (83) Operand -> LPAREN . Expression RPAREN
    (4) Type -> LPAREN . Type RPAREN
    (112) Expression -> . UnaryExpr
    (113) Expression -> . Expression OROR Expression
    (114) Expression -> . Expression AMPAMP Expression
    (115) Expression -> . Expression EQEQ Expression
    (116) Expression -> . Expression NOTEQ Expression
    (117) Expression -> . Expression LESS Expression
    (118) Expression -> . Expression GREAT Expression
    (119) Expression -> . Expression LEQ Expression
    (120) Expression -> . Expression GEQ Expression
    (121) Expression -> . Expression PLUS Expression
    (122) Expression -> . Expression MINUS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression CARET Expression
    (125) Expression -> . Expression TIMES Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MOD Expression
    (128) Expression -> . Expression AMPERS Expression
    (129) Expression -> . Expression LL Expression
    (130) Expression -> . Expression GG Expression
    (131) Expression -> . Expression AMPCAR Expression
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (134) UnaryExpr -> . PrimaryExpr
    (135) UnaryExpr -> . UnaryOp UnaryExpr
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (97) PrimaryExpr -> . Operand
    (98) PrimaryExpr -> . Conversion
    (99) PrimaryExpr -> . PrimaryExpr Selector
    (100) PrimaryExpr -> . PrimaryExpr Index
    (101) PrimaryExpr -> . PrimaryExpr Slice
    (102) PrimaryExpr -> . PrimaryExpr Arguments
    (136) UnaryOp -> . PLUS
    (137) UnaryOp -> . MINUS
    (138) UnaryOp -> . TIMES
    (139) UnaryOp -> . AMPERS
    (140) UnaryOp -> . NOT
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (96) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (95) OperandName -> . IDENTIFIER
    (85) BasicLit -> . IntLiteral
    (86) BasicLit -> . FloatLiteral
    (87) BasicLit -> . ImgLiteral
    (88) BasicLit -> . RuneLiteral
    (89) BasicLit -> . StringLiteral
    (90) IntLiteral -> . INTEGER
    (91) FloatLiteral -> . FLOAT
    (92) ImgLiteral -> . IMAGINARY
    (93) RuneLiteral -> . RUNE
    (94) StringLiteral -> . STRING

    LPAREN          shift and go to state 157
    TYPEX           shift and go to state 57
    PLUS            shift and go to state 104
    MINUS           shift and go to state 98
    TIMES           shift and go to state 112
    AMPERS          shift and go to state 118
    NOT             shift and go to state 103
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52
    IDENTIFIER      shift and go to state 107
    INTEGER         shift and go to state 105
    FLOAT           shift and go to state 117
    IMAGINARY       shift and go to state 106
    RUNE            shift and go to state 92
    STRING          shift and go to state 99

    Conversion                     shift and go to state 93
    UnaryOp                        shift and go to state 102
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    FloatLiteral                   shift and go to state 96
    TypeLit                        shift and go to state 55
    OperandName                    shift and go to state 100
    Type                           shift and go to state 156
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    IntLiteral                     shift and go to state 108
    ImgLiteral                     shift and go to state 109
    UnaryExpr                      shift and go to state 110
    RuneLiteral                    shift and go to state 111
    PrimaryExpr                    shift and go to state 119
    Expression                     shift and go to state 158
    PointerType                    shift and go to state 66
    StringLiteral                  shift and go to state 94
    BasicLit                       shift and go to state 101
    Operand                        shift and go to state 113
    FunctionType                   shift and go to state 67

state 116

    (13) ArrayLength -> Expression .
    (113) Expression -> Expression . OROR Expression
    (114) Expression -> Expression . AMPAMP Expression
    (115) Expression -> Expression . EQEQ Expression
    (116) Expression -> Expression . NOTEQ Expression
    (117) Expression -> Expression . LESS Expression
    (118) Expression -> Expression . GREAT Expression
    (119) Expression -> Expression . LEQ Expression
    (120) Expression -> Expression . GEQ Expression
    (121) Expression -> Expression . PLUS Expression
    (122) Expression -> Expression . MINUS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . CARET Expression
    (125) Expression -> Expression . TIMES Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MOD Expression
    (128) Expression -> Expression . AMPERS Expression
    (129) Expression -> Expression . LL Expression
    (130) Expression -> Expression . GG Expression
    (131) Expression -> Expression . AMPCAR Expression

    RBRACK          reduce using rule 13 (ArrayLength -> Expression .)
    OROR            shift and go to state 159
    AMPAMP          shift and go to state 174
    EQEQ            shift and go to state 165
    NOTEQ           shift and go to state 171
    LESS            shift and go to state 164
    GREAT           shift and go to state 161
    LEQ             shift and go to state 177
    GEQ             shift and go to state 168
    PLUS            shift and go to state 172
    MINUS           shift and go to state 176
    OR              shift and go to state 169
    CARET           shift and go to state 160
    TIMES           shift and go to state 175
    DIVIDE          shift and go to state 162
    MOD             shift and go to state 173
    AMPERS          shift and go to state 167
    LL              shift and go to state 166
    GG              shift and go to state 170
    AMPCAR          shift and go to state 163


state 117

    (91) FloatLiteral -> FLOAT .

    DOT             reduce using rule 91 (FloatLiteral -> FLOAT .)
    LBRACK          reduce using rule 91 (FloatLiteral -> FLOAT .)
    LPAREN          reduce using rule 91 (FloatLiteral -> FLOAT .)
    OROR            reduce using rule 91 (FloatLiteral -> FLOAT .)
    AMPAMP          reduce using rule 91 (FloatLiteral -> FLOAT .)
    EQEQ            reduce using rule 91 (FloatLiteral -> FLOAT .)
    NOTEQ           reduce using rule 91 (FloatLiteral -> FLOAT .)
    LESS            reduce using rule 91 (FloatLiteral -> FLOAT .)
    GREAT           reduce using rule 91 (FloatLiteral -> FLOAT .)
    LEQ             reduce using rule 91 (FloatLiteral -> FLOAT .)
    GEQ             reduce using rule 91 (FloatLiteral -> FLOAT .)
    PLUS            reduce using rule 91 (FloatLiteral -> FLOAT .)
    MINUS           reduce using rule 91 (FloatLiteral -> FLOAT .)
    OR              reduce using rule 91 (FloatLiteral -> FLOAT .)
    CARET           reduce using rule 91 (FloatLiteral -> FLOAT .)
    TIMES           reduce using rule 91 (FloatLiteral -> FLOAT .)
    DIVIDE          reduce using rule 91 (FloatLiteral -> FLOAT .)
    MOD             reduce using rule 91 (FloatLiteral -> FLOAT .)
    AMPERS          reduce using rule 91 (FloatLiteral -> FLOAT .)
    LL              reduce using rule 91 (FloatLiteral -> FLOAT .)
    GG              reduce using rule 91 (FloatLiteral -> FLOAT .)
    AMPCAR          reduce using rule 91 (FloatLiteral -> FLOAT .)
    RBRACK          reduce using rule 91 (FloatLiteral -> FLOAT .)
    COMMA           reduce using rule 91 (FloatLiteral -> FLOAT .)
    SEMICOL         reduce using rule 91 (FloatLiteral -> FLOAT .)
    RPAREN          reduce using rule 91 (FloatLiteral -> FLOAT .)
    COLON           reduce using rule 91 (FloatLiteral -> FLOAT .)
    PLUSPLUS        reduce using rule 91 (FloatLiteral -> FLOAT .)
    MINUSMIN        reduce using rule 91 (FloatLiteral -> FLOAT .)
    PLUSEQ          reduce using rule 91 (FloatLiteral -> FLOAT .)
    MINUSEQ         reduce using rule 91 (FloatLiteral -> FLOAT .)
    TIMESEQ         reduce using rule 91 (FloatLiteral -> FLOAT .)
    DIVIDEEQ        reduce using rule 91 (FloatLiteral -> FLOAT .)
    MODEQ           reduce using rule 91 (FloatLiteral -> FLOAT .)
    AMPEQ           reduce using rule 91 (FloatLiteral -> FLOAT .)
    OREQ            reduce using rule 91 (FloatLiteral -> FLOAT .)
    CAREQ           reduce using rule 91 (FloatLiteral -> FLOAT .)
    LLEQ            reduce using rule 91 (FloatLiteral -> FLOAT .)
    GGEQ            reduce using rule 91 (FloatLiteral -> FLOAT .)
    EQUAL           reduce using rule 91 (FloatLiteral -> FLOAT .)
    LBRACE          reduce using rule 91 (FloatLiteral -> FLOAT .)


state 118

    (139) UnaryOp -> AMPERS .

    PLUS            reduce using rule 139 (UnaryOp -> AMPERS .)
    MINUS           reduce using rule 139 (UnaryOp -> AMPERS .)
    TIMES           reduce using rule 139 (UnaryOp -> AMPERS .)
    AMPERS          reduce using rule 139 (UnaryOp -> AMPERS .)
    NOT             reduce using rule 139 (UnaryOp -> AMPERS .)
    LPAREN          reduce using rule 139 (UnaryOp -> AMPERS .)
    IDENTIFIER      reduce using rule 139 (UnaryOp -> AMPERS .)
    TYPEX           reduce using rule 139 (UnaryOp -> AMPERS .)
    INTEGER         reduce using rule 139 (UnaryOp -> AMPERS .)
    FLOAT           reduce using rule 139 (UnaryOp -> AMPERS .)
    IMAGINARY       reduce using rule 139 (UnaryOp -> AMPERS .)
    RUNE            reduce using rule 139 (UnaryOp -> AMPERS .)
    STRING          reduce using rule 139 (UnaryOp -> AMPERS .)
    LBRACK          reduce using rule 139 (UnaryOp -> AMPERS .)
    STRUCT          reduce using rule 139 (UnaryOp -> AMPERS .)
    FUNC            reduce using rule 139 (UnaryOp -> AMPERS .)


state 119

    (134) UnaryExpr -> PrimaryExpr .
    (99) PrimaryExpr -> PrimaryExpr . Selector
    (100) PrimaryExpr -> PrimaryExpr . Index
    (101) PrimaryExpr -> PrimaryExpr . Slice
    (102) PrimaryExpr -> PrimaryExpr . Arguments
    (103) Selector -> . DOT IDENTIFIER
    (104) Index -> . LBRACK Expression RBRACK
    (105) Slice -> . LBRACK ExpressionOpt COLON ExpressionOpt RBRACK
    (106) Arguments -> . LPAREN ExpressionListTypeOpt RPAREN

    PLUSPLUS        reduce using rule 134 (UnaryExpr -> PrimaryExpr .)
    MINUSMIN        reduce using rule 134 (UnaryExpr -> PrimaryExpr .)
    OROR            reduce using rule 134 (UnaryExpr -> PrimaryExpr .)
    AMPAMP          reduce using rule 134 (UnaryExpr -> PrimaryExpr .)
    EQEQ            reduce using rule 134 (UnaryExpr -> PrimaryExpr .)
    NOTEQ           reduce using rule 134 (UnaryExpr -> PrimaryExpr .)
    LESS            reduce using rule 134 (UnaryExpr -> PrimaryExpr .)
    GREAT           reduce using rule 134 (UnaryExpr -> PrimaryExpr .)
    LEQ             reduce using rule 134 (UnaryExpr -> PrimaryExpr .)
    GEQ             reduce using rule 134 (UnaryExpr -> PrimaryExpr .)
    PLUS            reduce using rule 134 (UnaryExpr -> PrimaryExpr .)
    MINUS           reduce using rule 134 (UnaryExpr -> PrimaryExpr .)
    OR              reduce using rule 134 (UnaryExpr -> PrimaryExpr .)
    CARET           reduce using rule 134 (UnaryExpr -> PrimaryExpr .)
    TIMES           reduce using rule 134 (UnaryExpr -> PrimaryExpr .)
    DIVIDE          reduce using rule 134 (UnaryExpr -> PrimaryExpr .)
    MOD             reduce using rule 134 (UnaryExpr -> PrimaryExpr .)
    AMPERS          reduce using rule 134 (UnaryExpr -> PrimaryExpr .)
    LL              reduce using rule 134 (UnaryExpr -> PrimaryExpr .)
    GG              reduce using rule 134 (UnaryExpr -> PrimaryExpr .)
    AMPCAR          reduce using rule 134 (UnaryExpr -> PrimaryExpr .)
    COMMA           reduce using rule 134 (UnaryExpr -> PrimaryExpr .)
    LBRACE          reduce using rule 134 (UnaryExpr -> PrimaryExpr .)
    PLUSEQ          reduce using rule 134 (UnaryExpr -> PrimaryExpr .)
    MINUSEQ         reduce using rule 134 (UnaryExpr -> PrimaryExpr .)
    TIMESEQ         reduce using rule 134 (UnaryExpr -> PrimaryExpr .)
    DIVIDEEQ        reduce using rule 134 (UnaryExpr -> PrimaryExpr .)
    MODEQ           reduce using rule 134 (UnaryExpr -> PrimaryExpr .)
    AMPEQ           reduce using rule 134 (UnaryExpr -> PrimaryExpr .)
    OREQ            reduce using rule 134 (UnaryExpr -> PrimaryExpr .)
    CAREQ           reduce using rule 134 (UnaryExpr -> PrimaryExpr .)
    LLEQ            reduce using rule 134 (UnaryExpr -> PrimaryExpr .)
    GGEQ            reduce using rule 134 (UnaryExpr -> PrimaryExpr .)
    EQUAL           reduce using rule 134 (UnaryExpr -> PrimaryExpr .)
    RBRACK          reduce using rule 134 (UnaryExpr -> PrimaryExpr .)
    SEMICOL         reduce using rule 134 (UnaryExpr -> PrimaryExpr .)
    RPAREN          reduce using rule 134 (UnaryExpr -> PrimaryExpr .)
    COLON           reduce using rule 134 (UnaryExpr -> PrimaryExpr .)
    DOT             shift and go to state 184
    LBRACK          shift and go to state 180
    LPAREN          shift and go to state 183

    Index                          shift and go to state 178
    Slice                          shift and go to state 179
    Selector                       shift and go to state 181
    Arguments                      shift and go to state 182

state 120

    (57) IdentifierRep -> IdentifierRep COMMA . IDENTIFIER

    IDENTIFIER      shift and go to state 185


state 121

    (28) Result -> Parameters .

    EQUAL           reduce using rule 28 (Result -> Parameters .)
    SEMICOL         reduce using rule 28 (Result -> Parameters .)
    RPAREN          reduce using rule 28 (Result -> Parameters .)
    LBRACE          reduce using rule 28 (Result -> Parameters .)
    COMMA           reduce using rule 28 (Result -> Parameters .)
    LPAREN          reduce using rule 28 (Result -> Parameters .)
    STRING          reduce using rule 28 (Result -> Parameters .)


state 122

    (29) Result -> Type .

    EQUAL           reduce using rule 29 (Result -> Type .)
    SEMICOL         reduce using rule 29 (Result -> Type .)
    RPAREN          reduce using rule 29 (Result -> Type .)
    LBRACE          reduce using rule 29 (Result -> Type .)
    COMMA           reduce using rule 29 (Result -> Type .)
    LPAREN          reduce using rule 29 (Result -> Type .)
    STRING          reduce using rule 29 (Result -> Type .)


state 123

    (25) Signature -> Parameters ResultOpt .

    LBRACE          reduce using rule 25 (Signature -> Parameters ResultOpt .)
    SEMICOL         reduce using rule 25 (Signature -> Parameters ResultOpt .)
    EQUAL           reduce using rule 25 (Signature -> Parameters ResultOpt .)
    RPAREN          reduce using rule 25 (Signature -> Parameters ResultOpt .)
    COMMA           reduce using rule 25 (Signature -> Parameters ResultOpt .)
    LPAREN          reduce using rule 25 (Signature -> Parameters ResultOpt .)
    STRING          reduce using rule 25 (Signature -> Parameters ResultOpt .)


state 124

    (27) ResultOpt -> epsilon .

    EQUAL           reduce using rule 27 (ResultOpt -> epsilon .)
    SEMICOL         reduce using rule 27 (ResultOpt -> epsilon .)
    RPAREN          reduce using rule 27 (ResultOpt -> epsilon .)
    LBRACE          reduce using rule 27 (ResultOpt -> epsilon .)
    COMMA           reduce using rule 27 (ResultOpt -> epsilon .)
    LPAREN          reduce using rule 27 (ResultOpt -> epsilon .)
    STRING          reduce using rule 27 (ResultOpt -> epsilon .)


state 125

    (30) Parameters -> LPAREN . ParameterListOpt RPAREN
    (4) Type -> LPAREN . Type RPAREN
    (31) ParameterListOpt -> . ParametersList
    (32) ParameterListOpt -> . epsilon
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (33) ParametersList -> . Type
    (34) ParametersList -> . IdentifierList Type
    (35) ParametersList -> . ParameterDeclCommaRep
    (214) epsilon -> .
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (56) IdentifierList -> . IDENTIFIER IdentifierRep
    (36) ParameterDeclCommaRep -> . ParameterDeclCommaRep COMMA ParameterDecl
    (37) ParameterDeclCommaRep -> . ParameterDecl COMMA ParameterDecl
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature
    (38) ParameterDecl -> . IdentifierList Type
    (39) ParameterDecl -> . Type

    LPAREN          shift and go to state 61
    RPAREN          reduce using rule 214 (epsilon -> .)
    TYPEX           shift and go to state 57
    IDENTIFIER      shift and go to state 34
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    TypeLit                        shift and go to state 55
    IdentifierList                 shift and go to state 131
    ParameterListOpt               shift and go to state 130
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    epsilon                        shift and go to state 136
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    ParametersList                 shift and go to state 134
    Type                           shift and go to state 186
    ParameterDeclCommaRep          shift and go to state 132
    ParameterDecl                  shift and go to state 135

state 126

    (26) ResultOpt -> Result .

    EQUAL           reduce using rule 26 (ResultOpt -> Result .)
    SEMICOL         reduce using rule 26 (ResultOpt -> Result .)
    RPAREN          reduce using rule 26 (ResultOpt -> Result .)
    LBRACE          reduce using rule 26 (ResultOpt -> Result .)
    COMMA           reduce using rule 26 (ResultOpt -> Result .)
    LPAREN          reduce using rule 26 (ResultOpt -> Result .)
    STRING          reduce using rule 26 (ResultOpt -> Result .)


state 127

    (79) Function -> Signature FunctionBody .

    SEMICOL         reduce using rule 79 (Function -> Signature FunctionBody .)


state 128

    (40) Block -> LBRACE . StatementList RBRACE
    (41) StatementList -> . StatementRep
    (42) StatementRep -> . StatementRep Statement SEMICOL
    (43) StatementRep -> . epsilon
    (214) epsilon -> .

    RETURN          reduce using rule 214 (epsilon -> .)
    BREAK           reduce using rule 214 (epsilon -> .)
    CONTINUE        reduce using rule 214 (epsilon -> .)
    GOTO            reduce using rule 214 (epsilon -> .)
    LBRACE          reduce using rule 214 (epsilon -> .)
    IF              reduce using rule 214 (epsilon -> .)
    FOR             reduce using rule 214 (epsilon -> .)
    CONST           reduce using rule 214 (epsilon -> .)
    TYPE            reduce using rule 214 (epsilon -> .)
    VAR             reduce using rule 214 (epsilon -> .)
    IDENTIFIER      reduce using rule 214 (epsilon -> .)
    PLUS            reduce using rule 214 (epsilon -> .)
    MINUS           reduce using rule 214 (epsilon -> .)
    TIMES           reduce using rule 214 (epsilon -> .)
    AMPERS          reduce using rule 214 (epsilon -> .)
    NOT             reduce using rule 214 (epsilon -> .)
    LPAREN          reduce using rule 214 (epsilon -> .)
    TYPEX           reduce using rule 214 (epsilon -> .)
    INTEGER         reduce using rule 214 (epsilon -> .)
    FLOAT           reduce using rule 214 (epsilon -> .)
    IMAGINARY       reduce using rule 214 (epsilon -> .)
    RUNE            reduce using rule 214 (epsilon -> .)
    STRING          reduce using rule 214 (epsilon -> .)
    LBRACK          reduce using rule 214 (epsilon -> .)
    STRUCT          reduce using rule 214 (epsilon -> .)
    FUNC            reduce using rule 214 (epsilon -> .)
    SEMICOL         reduce using rule 214 (epsilon -> .)
    RBRACE          reduce using rule 214 (epsilon -> .)

    epsilon                        shift and go to state 188
    StatementRep                   shift and go to state 187
    StatementList                  shift and go to state 189

state 129

    (80) FunctionBody -> Block .

    SEMICOL         reduce using rule 80 (FunctionBody -> Block .)


state 130

    (30) Parameters -> LPAREN ParameterListOpt . RPAREN

    RPAREN          shift and go to state 190


state 131

    (34) ParametersList -> IdentifierList . Type
    (38) ParameterDecl -> IdentifierList . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 61
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    Type                           shift and go to state 191
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    TypeLit                        shift and go to state 55

state 132

    (35) ParametersList -> ParameterDeclCommaRep .
    (36) ParameterDeclCommaRep -> ParameterDeclCommaRep . COMMA ParameterDecl

    RPAREN          reduce using rule 35 (ParametersList -> ParameterDeclCommaRep .)
    COMMA           shift and go to state 192


state 133

    (33) ParametersList -> Type .
    (39) ParameterDecl -> Type .

    RPAREN          reduce using rule 33 (ParametersList -> Type .)
    COMMA           reduce using rule 39 (ParameterDecl -> Type .)


state 134

    (31) ParameterListOpt -> ParametersList .

    RPAREN          reduce using rule 31 (ParameterListOpt -> ParametersList .)


state 135

    (37) ParameterDeclCommaRep -> ParameterDecl . COMMA ParameterDecl

    COMMA           shift and go to state 193


state 136

    (32) ParameterListOpt -> epsilon .

    RPAREN          reduce using rule 32 (ParameterListOpt -> epsilon .)


state 137

    (68) VarDecl -> VAR LPAREN VarSpecRep RPAREN .

    SEMICOL         reduce using rule 68 (VarDecl -> VAR LPAREN VarSpecRep RPAREN .)


state 138

    (69) VarSpecRep -> VarSpecRep VarSpec . SEMICOL

    SEMICOL         shift and go to state 194


state 139

    (72) VarSpec -> IdentifierList EQUAL ExpressionList .

    SEMICOL         reduce using rule 72 (VarSpec -> IdentifierList EQUAL ExpressionList .)


state 140

    (109) ExpressionList -> Expression . ExpressionRep
    (113) Expression -> Expression . OROR Expression
    (114) Expression -> Expression . AMPAMP Expression
    (115) Expression -> Expression . EQEQ Expression
    (116) Expression -> Expression . NOTEQ Expression
    (117) Expression -> Expression . LESS Expression
    (118) Expression -> Expression . GREAT Expression
    (119) Expression -> Expression . LEQ Expression
    (120) Expression -> Expression . GEQ Expression
    (121) Expression -> Expression . PLUS Expression
    (122) Expression -> Expression . MINUS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . CARET Expression
    (125) Expression -> Expression . TIMES Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MOD Expression
    (128) Expression -> Expression . AMPERS Expression
    (129) Expression -> Expression . LL Expression
    (130) Expression -> Expression . GG Expression
    (131) Expression -> Expression . AMPCAR Expression
    (110) ExpressionRep -> . ExpressionRep COMMA Expression
    (111) ExpressionRep -> . epsilon
    (214) epsilon -> .

    OROR            shift and go to state 159
    AMPAMP          shift and go to state 174
    EQEQ            shift and go to state 165
    NOTEQ           shift and go to state 171
    LESS            shift and go to state 164
    GREAT           shift and go to state 161
    LEQ             shift and go to state 177
    GEQ             shift and go to state 168
    PLUS            shift and go to state 172
    MINUS           shift and go to state 176
    OR              shift and go to state 169
    CARET           shift and go to state 160
    TIMES           shift and go to state 175
    DIVIDE          shift and go to state 162
    MOD             shift and go to state 173
    AMPERS          shift and go to state 167
    LL              shift and go to state 166
    GG              shift and go to state 170
    AMPCAR          shift and go to state 163
    COMMA           reduce using rule 214 (epsilon -> .)
    SEMICOL         reduce using rule 214 (epsilon -> .)
    RPAREN          reduce using rule 214 (epsilon -> .)
    LBRACE          reduce using rule 214 (epsilon -> .)

    epsilon                        shift and go to state 196
    ExpressionRep                  shift and go to state 195

state 141

    (73) ExpressionListOpt -> EQUAL . ExpressionList
    (109) ExpressionList -> . Expression ExpressionRep
    (112) Expression -> . UnaryExpr
    (113) Expression -> . Expression OROR Expression
    (114) Expression -> . Expression AMPAMP Expression
    (115) Expression -> . Expression EQEQ Expression
    (116) Expression -> . Expression NOTEQ Expression
    (117) Expression -> . Expression LESS Expression
    (118) Expression -> . Expression GREAT Expression
    (119) Expression -> . Expression LEQ Expression
    (120) Expression -> . Expression GEQ Expression
    (121) Expression -> . Expression PLUS Expression
    (122) Expression -> . Expression MINUS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression CARET Expression
    (125) Expression -> . Expression TIMES Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MOD Expression
    (128) Expression -> . Expression AMPERS Expression
    (129) Expression -> . Expression LL Expression
    (130) Expression -> . Expression GG Expression
    (131) Expression -> . Expression AMPCAR Expression
    (134) UnaryExpr -> . PrimaryExpr
    (135) UnaryExpr -> . UnaryOp UnaryExpr
    (97) PrimaryExpr -> . Operand
    (98) PrimaryExpr -> . Conversion
    (99) PrimaryExpr -> . PrimaryExpr Selector
    (100) PrimaryExpr -> . PrimaryExpr Index
    (101) PrimaryExpr -> . PrimaryExpr Slice
    (102) PrimaryExpr -> . PrimaryExpr Arguments
    (136) UnaryOp -> . PLUS
    (137) UnaryOp -> . MINUS
    (138) UnaryOp -> . TIMES
    (139) UnaryOp -> . AMPERS
    (140) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (96) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (95) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . IntLiteral
    (86) BasicLit -> . FloatLiteral
    (87) BasicLit -> . ImgLiteral
    (88) BasicLit -> . RuneLiteral
    (89) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (90) IntLiteral -> . INTEGER
    (91) FloatLiteral -> . FLOAT
    (92) ImgLiteral -> . IMAGINARY
    (93) RuneLiteral -> . RUNE
    (94) StringLiteral -> . STRING
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 104
    MINUS           shift and go to state 98
    TIMES           shift and go to state 112
    AMPERS          shift and go to state 118
    NOT             shift and go to state 103
    LPAREN          shift and go to state 115
    IDENTIFIER      shift and go to state 107
    TYPEX           shift and go to state 57
    INTEGER         shift and go to state 105
    FLOAT           shift and go to state 117
    IMAGINARY       shift and go to state 106
    RUNE            shift and go to state 92
    STRING          shift and go to state 99
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    UnaryOp                        shift and go to state 102
    PrimaryExpr                    shift and go to state 119
    Conversion                     shift and go to state 93
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    FloatLiteral                   shift and go to state 96
    Type                           shift and go to state 97
    OperandName                    shift and go to state 100
    BasicLit                       shift and go to state 101
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    IntLiteral                     shift and go to state 108
    UnaryExpr                      shift and go to state 110
    RuneLiteral                    shift and go to state 111
    Operand                        shift and go to state 113
    ExpressionList                 shift and go to state 197
    Expression                     shift and go to state 140
    PointerType                    shift and go to state 66
    StringLiteral                  shift and go to state 94
    TypeLit                        shift and go to state 55
    ImgLiteral                     shift and go to state 109
    FunctionType                   shift and go to state 67

state 142

    (74) ExpressionListOpt -> epsilon .

    SEMICOL         reduce using rule 74 (ExpressionListOpt -> epsilon .)


state 143

    (71) VarSpec -> IdentifierList Type ExpressionListOpt .

    SEMICOL         reduce using rule 71 (VarSpec -> IdentifierList Type ExpressionListOpt .)


state 144

    (60) TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN .

    SEMICOL         reduce using rule 60 (TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN .)


state 145

    (61) TypeSpecRep -> TypeSpecRep TypeSpec . SEMICOL

    SEMICOL         shift and go to state 198


state 146

    (65) AliasDecl -> IDENTIFIER EQUAL Type .

    SEMICOL         reduce using rule 65 (AliasDecl -> IDENTIFIER EQUAL Type .)


state 147

    (207) ImportSpecRep -> ImportSpecRep ImportSpec SEMICOL .

    RPAREN          reduce using rule 207 (ImportSpecRep -> ImportSpecRep ImportSpec SEMICOL .)
    DOT             reduce using rule 207 (ImportSpecRep -> ImportSpecRep ImportSpec SEMICOL .)
    IDENTIFIER      reduce using rule 207 (ImportSpecRep -> ImportSpecRep ImportSpec SEMICOL .)
    STRING          reduce using rule 207 (ImportSpecRep -> ImportSpecRep ImportSpec SEMICOL .)


state 148

    (51) ConstSpecRep -> ConstSpecRep ConstSpec SEMICOL .

    RPAREN          reduce using rule 51 (ConstSpecRep -> ConstSpecRep ConstSpec SEMICOL .)
    IDENTIFIER      reduce using rule 51 (ConstSpecRep -> ConstSpecRep ConstSpec SEMICOL .)


state 149

    (4) Type -> LPAREN Type RPAREN .

    LPAREN          reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    RPAREN          reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    EQUAL           reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    SEMICOL         reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    LBRACE          reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    COMMA           reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    STRING          reduce using rule 4 (Type -> LPAREN Type RPAREN .)


state 150

    (54) TypeExprListOpt -> TypeOpt EQUAL ExpressionList .

    SEMICOL         reduce using rule 54 (TypeExprListOpt -> TypeOpt EQUAL ExpressionList .)


state 151

    (15) StructType -> STRUCT LBRACE FieldDeclRep . RBRACE
    (16) FieldDeclRep -> FieldDeclRep . FieldDecl SEMICOL
    (18) FieldDecl -> . IdentifierList Type TagOpt
    (56) IdentifierList -> . IDENTIFIER IdentifierRep

    RBRACE          shift and go to state 201
    IDENTIFIER      shift and go to state 34

    FieldDecl                      shift and go to state 199
    IdentifierList                 shift and go to state 200

state 152

    (17) FieldDeclRep -> epsilon .

    RBRACE          reduce using rule 17 (FieldDeclRep -> epsilon .)
    IDENTIFIER      reduce using rule 17 (FieldDeclRep -> epsilon .)


state 153

    (96) Conversion -> Type LPAREN . Expression RPAREN
    (112) Expression -> . UnaryExpr
    (113) Expression -> . Expression OROR Expression
    (114) Expression -> . Expression AMPAMP Expression
    (115) Expression -> . Expression EQEQ Expression
    (116) Expression -> . Expression NOTEQ Expression
    (117) Expression -> . Expression LESS Expression
    (118) Expression -> . Expression GREAT Expression
    (119) Expression -> . Expression LEQ Expression
    (120) Expression -> . Expression GEQ Expression
    (121) Expression -> . Expression PLUS Expression
    (122) Expression -> . Expression MINUS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression CARET Expression
    (125) Expression -> . Expression TIMES Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MOD Expression
    (128) Expression -> . Expression AMPERS Expression
    (129) Expression -> . Expression LL Expression
    (130) Expression -> . Expression GG Expression
    (131) Expression -> . Expression AMPCAR Expression
    (134) UnaryExpr -> . PrimaryExpr
    (135) UnaryExpr -> . UnaryOp UnaryExpr
    (97) PrimaryExpr -> . Operand
    (98) PrimaryExpr -> . Conversion
    (99) PrimaryExpr -> . PrimaryExpr Selector
    (100) PrimaryExpr -> . PrimaryExpr Index
    (101) PrimaryExpr -> . PrimaryExpr Slice
    (102) PrimaryExpr -> . PrimaryExpr Arguments
    (136) UnaryOp -> . PLUS
    (137) UnaryOp -> . MINUS
    (138) UnaryOp -> . TIMES
    (139) UnaryOp -> . AMPERS
    (140) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (96) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (95) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . IntLiteral
    (86) BasicLit -> . FloatLiteral
    (87) BasicLit -> . ImgLiteral
    (88) BasicLit -> . RuneLiteral
    (89) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (90) IntLiteral -> . INTEGER
    (91) FloatLiteral -> . FLOAT
    (92) ImgLiteral -> . IMAGINARY
    (93) RuneLiteral -> . RUNE
    (94) StringLiteral -> . STRING
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 104
    MINUS           shift and go to state 98
    TIMES           shift and go to state 112
    AMPERS          shift and go to state 118
    NOT             shift and go to state 103
    LPAREN          shift and go to state 115
    IDENTIFIER      shift and go to state 107
    TYPEX           shift and go to state 57
    INTEGER         shift and go to state 105
    FLOAT           shift and go to state 117
    IMAGINARY       shift and go to state 106
    RUNE            shift and go to state 92
    STRING          shift and go to state 99
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 93
    UnaryOp                        shift and go to state 102
    PrimaryExpr                    shift and go to state 119
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    FloatLiteral                   shift and go to state 96
    Type                           shift and go to state 97
    OperandName                    shift and go to state 100
    BasicLit                       shift and go to state 101
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    IntLiteral                     shift and go to state 108
    UnaryExpr                      shift and go to state 110
    RuneLiteral                    shift and go to state 111
    Operand                        shift and go to state 113
    Expression                     shift and go to state 202
    PointerType                    shift and go to state 66
    StringLiteral                  shift and go to state 94
    TypeLit                        shift and go to state 55
    ImgLiteral                     shift and go to state 109
    FunctionType                   shift and go to state 67

state 154

    (135) UnaryExpr -> UnaryOp UnaryExpr .

    PLUSPLUS        reduce using rule 135 (UnaryExpr -> UnaryOp UnaryExpr .)
    MINUSMIN        reduce using rule 135 (UnaryExpr -> UnaryOp UnaryExpr .)
    OROR            reduce using rule 135 (UnaryExpr -> UnaryOp UnaryExpr .)
    AMPAMP          reduce using rule 135 (UnaryExpr -> UnaryOp UnaryExpr .)
    EQEQ            reduce using rule 135 (UnaryExpr -> UnaryOp UnaryExpr .)
    NOTEQ           reduce using rule 135 (UnaryExpr -> UnaryOp UnaryExpr .)
    LESS            reduce using rule 135 (UnaryExpr -> UnaryOp UnaryExpr .)
    GREAT           reduce using rule 135 (UnaryExpr -> UnaryOp UnaryExpr .)
    LEQ             reduce using rule 135 (UnaryExpr -> UnaryOp UnaryExpr .)
    GEQ             reduce using rule 135 (UnaryExpr -> UnaryOp UnaryExpr .)
    PLUS            reduce using rule 135 (UnaryExpr -> UnaryOp UnaryExpr .)
    MINUS           reduce using rule 135 (UnaryExpr -> UnaryOp UnaryExpr .)
    OR              reduce using rule 135 (UnaryExpr -> UnaryOp UnaryExpr .)
    CARET           reduce using rule 135 (UnaryExpr -> UnaryOp UnaryExpr .)
    TIMES           reduce using rule 135 (UnaryExpr -> UnaryOp UnaryExpr .)
    DIVIDE          reduce using rule 135 (UnaryExpr -> UnaryOp UnaryExpr .)
    MOD             reduce using rule 135 (UnaryExpr -> UnaryOp UnaryExpr .)
    AMPERS          reduce using rule 135 (UnaryExpr -> UnaryOp UnaryExpr .)
    LL              reduce using rule 135 (UnaryExpr -> UnaryOp UnaryExpr .)
    GG              reduce using rule 135 (UnaryExpr -> UnaryOp UnaryExpr .)
    AMPCAR          reduce using rule 135 (UnaryExpr -> UnaryOp UnaryExpr .)
    COMMA           reduce using rule 135 (UnaryExpr -> UnaryOp UnaryExpr .)
    LBRACE          reduce using rule 135 (UnaryExpr -> UnaryOp UnaryExpr .)
    PLUSEQ          reduce using rule 135 (UnaryExpr -> UnaryOp UnaryExpr .)
    MINUSEQ         reduce using rule 135 (UnaryExpr -> UnaryOp UnaryExpr .)
    TIMESEQ         reduce using rule 135 (UnaryExpr -> UnaryOp UnaryExpr .)
    DIVIDEEQ        reduce using rule 135 (UnaryExpr -> UnaryOp UnaryExpr .)
    MODEQ           reduce using rule 135 (UnaryExpr -> UnaryOp UnaryExpr .)
    AMPEQ           reduce using rule 135 (UnaryExpr -> UnaryOp UnaryExpr .)
    OREQ            reduce using rule 135 (UnaryExpr -> UnaryOp UnaryExpr .)
    CAREQ           reduce using rule 135 (UnaryExpr -> UnaryOp UnaryExpr .)
    LLEQ            reduce using rule 135 (UnaryExpr -> UnaryOp UnaryExpr .)
    GGEQ            reduce using rule 135 (UnaryExpr -> UnaryOp UnaryExpr .)
    EQUAL           reduce using rule 135 (UnaryExpr -> UnaryOp UnaryExpr .)
    RBRACK          reduce using rule 135 (UnaryExpr -> UnaryOp UnaryExpr .)
    SEMICOL         reduce using rule 135 (UnaryExpr -> UnaryOp UnaryExpr .)
    RPAREN          reduce using rule 135 (UnaryExpr -> UnaryOp UnaryExpr .)
    COLON           reduce using rule 135 (UnaryExpr -> UnaryOp UnaryExpr .)


state 155

    (12) ArrayType -> LBRACK ArrayLength RBRACK . ElementType
    (14) ElementType -> . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 61
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    TypeLit                        shift and go to state 55
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    ElementType                    shift and go to state 204
    Type                           shift and go to state 203

state 156

    (4) Type -> LPAREN Type . RPAREN
    (96) Conversion -> Type . LPAREN Expression RPAREN

    RPAREN          shift and go to state 149
    LPAREN          shift and go to state 153


state 157

    (4) Type -> LPAREN . Type RPAREN
    (83) Operand -> LPAREN . Expression RPAREN
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (112) Expression -> . UnaryExpr
    (113) Expression -> . Expression OROR Expression
    (114) Expression -> . Expression AMPAMP Expression
    (115) Expression -> . Expression EQEQ Expression
    (116) Expression -> . Expression NOTEQ Expression
    (117) Expression -> . Expression LESS Expression
    (118) Expression -> . Expression GREAT Expression
    (119) Expression -> . Expression LEQ Expression
    (120) Expression -> . Expression GEQ Expression
    (121) Expression -> . Expression PLUS Expression
    (122) Expression -> . Expression MINUS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression CARET Expression
    (125) Expression -> . Expression TIMES Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MOD Expression
    (128) Expression -> . Expression AMPERS Expression
    (129) Expression -> . Expression LL Expression
    (130) Expression -> . Expression GG Expression
    (131) Expression -> . Expression AMPCAR Expression
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (134) UnaryExpr -> . PrimaryExpr
    (135) UnaryExpr -> . UnaryOp UnaryExpr
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature
    (97) PrimaryExpr -> . Operand
    (98) PrimaryExpr -> . Conversion
    (99) PrimaryExpr -> . PrimaryExpr Selector
    (100) PrimaryExpr -> . PrimaryExpr Index
    (101) PrimaryExpr -> . PrimaryExpr Slice
    (102) PrimaryExpr -> . PrimaryExpr Arguments
    (136) UnaryOp -> . PLUS
    (137) UnaryOp -> . MINUS
    (138) UnaryOp -> . TIMES
    (139) UnaryOp -> . AMPERS
    (140) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (96) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (95) OperandName -> . IDENTIFIER
    (85) BasicLit -> . IntLiteral
    (86) BasicLit -> . FloatLiteral
    (87) BasicLit -> . ImgLiteral
    (88) BasicLit -> . RuneLiteral
    (89) BasicLit -> . StringLiteral
    (90) IntLiteral -> . INTEGER
    (91) FloatLiteral -> . FLOAT
    (92) ImgLiteral -> . IMAGINARY
    (93) RuneLiteral -> . RUNE
    (94) StringLiteral -> . STRING

    LPAREN          shift and go to state 157
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 205
    FUNC            shift and go to state 52
    PLUS            shift and go to state 104
    MINUS           shift and go to state 98
    AMPERS          shift and go to state 118
    NOT             shift and go to state 103
    IDENTIFIER      shift and go to state 107
    INTEGER         shift and go to state 105
    FLOAT           shift and go to state 117
    IMAGINARY       shift and go to state 106
    RUNE            shift and go to state 92
    STRING          shift and go to state 99

    Conversion                     shift and go to state 93
    UnaryOp                        shift and go to state 102
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    FloatLiteral                   shift and go to state 96
    Type                           shift and go to state 156
    OperandName                    shift and go to state 100
    TypeLit                        shift and go to state 55
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    IntLiteral                     shift and go to state 108
    ImgLiteral                     shift and go to state 109
    UnaryExpr                      shift and go to state 110
    RuneLiteral                    shift and go to state 111
    Operand                        shift and go to state 113
    Expression                     shift and go to state 158
    PointerType                    shift and go to state 66
    StringLiteral                  shift and go to state 94
    BasicLit                       shift and go to state 101
    PrimaryExpr                    shift and go to state 119
    FunctionType                   shift and go to state 67

state 158

    (83) Operand -> LPAREN Expression . RPAREN
    (113) Expression -> Expression . OROR Expression
    (114) Expression -> Expression . AMPAMP Expression
    (115) Expression -> Expression . EQEQ Expression
    (116) Expression -> Expression . NOTEQ Expression
    (117) Expression -> Expression . LESS Expression
    (118) Expression -> Expression . GREAT Expression
    (119) Expression -> Expression . LEQ Expression
    (120) Expression -> Expression . GEQ Expression
    (121) Expression -> Expression . PLUS Expression
    (122) Expression -> Expression . MINUS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . CARET Expression
    (125) Expression -> Expression . TIMES Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MOD Expression
    (128) Expression -> Expression . AMPERS Expression
    (129) Expression -> Expression . LL Expression
    (130) Expression -> Expression . GG Expression
    (131) Expression -> Expression . AMPCAR Expression

    RPAREN          shift and go to state 206
    OROR            shift and go to state 159
    AMPAMP          shift and go to state 174
    EQEQ            shift and go to state 165
    NOTEQ           shift and go to state 171
    LESS            shift and go to state 164
    GREAT           shift and go to state 161
    LEQ             shift and go to state 177
    GEQ             shift and go to state 168
    PLUS            shift and go to state 172
    MINUS           shift and go to state 176
    OR              shift and go to state 169
    CARET           shift and go to state 160
    TIMES           shift and go to state 175
    DIVIDE          shift and go to state 162
    MOD             shift and go to state 173
    AMPERS          shift and go to state 167
    LL              shift and go to state 166
    GG              shift and go to state 170
    AMPCAR          shift and go to state 163


state 159

    (113) Expression -> Expression OROR . Expression
    (112) Expression -> . UnaryExpr
    (113) Expression -> . Expression OROR Expression
    (114) Expression -> . Expression AMPAMP Expression
    (115) Expression -> . Expression EQEQ Expression
    (116) Expression -> . Expression NOTEQ Expression
    (117) Expression -> . Expression LESS Expression
    (118) Expression -> . Expression GREAT Expression
    (119) Expression -> . Expression LEQ Expression
    (120) Expression -> . Expression GEQ Expression
    (121) Expression -> . Expression PLUS Expression
    (122) Expression -> . Expression MINUS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression CARET Expression
    (125) Expression -> . Expression TIMES Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MOD Expression
    (128) Expression -> . Expression AMPERS Expression
    (129) Expression -> . Expression LL Expression
    (130) Expression -> . Expression GG Expression
    (131) Expression -> . Expression AMPCAR Expression
    (134) UnaryExpr -> . PrimaryExpr
    (135) UnaryExpr -> . UnaryOp UnaryExpr
    (97) PrimaryExpr -> . Operand
    (98) PrimaryExpr -> . Conversion
    (99) PrimaryExpr -> . PrimaryExpr Selector
    (100) PrimaryExpr -> . PrimaryExpr Index
    (101) PrimaryExpr -> . PrimaryExpr Slice
    (102) PrimaryExpr -> . PrimaryExpr Arguments
    (136) UnaryOp -> . PLUS
    (137) UnaryOp -> . MINUS
    (138) UnaryOp -> . TIMES
    (139) UnaryOp -> . AMPERS
    (140) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (96) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (95) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . IntLiteral
    (86) BasicLit -> . FloatLiteral
    (87) BasicLit -> . ImgLiteral
    (88) BasicLit -> . RuneLiteral
    (89) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (90) IntLiteral -> . INTEGER
    (91) FloatLiteral -> . FLOAT
    (92) ImgLiteral -> . IMAGINARY
    (93) RuneLiteral -> . RUNE
    (94) StringLiteral -> . STRING
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 104
    MINUS           shift and go to state 98
    TIMES           shift and go to state 112
    AMPERS          shift and go to state 118
    NOT             shift and go to state 103
    LPAREN          shift and go to state 115
    IDENTIFIER      shift and go to state 107
    TYPEX           shift and go to state 57
    INTEGER         shift and go to state 105
    FLOAT           shift and go to state 117
    IMAGINARY       shift and go to state 106
    RUNE            shift and go to state 92
    STRING          shift and go to state 99
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 93
    UnaryOp                        shift and go to state 102
    PrimaryExpr                    shift and go to state 119
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    FloatLiteral                   shift and go to state 96
    Type                           shift and go to state 97
    OperandName                    shift and go to state 100
    BasicLit                       shift and go to state 101
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    IntLiteral                     shift and go to state 108
    UnaryExpr                      shift and go to state 110
    RuneLiteral                    shift and go to state 111
    Operand                        shift and go to state 113
    Expression                     shift and go to state 207
    PointerType                    shift and go to state 66
    StringLiteral                  shift and go to state 94
    TypeLit                        shift and go to state 55
    ImgLiteral                     shift and go to state 109
    FunctionType                   shift and go to state 67

state 160

    (124) Expression -> Expression CARET . Expression
    (112) Expression -> . UnaryExpr
    (113) Expression -> . Expression OROR Expression
    (114) Expression -> . Expression AMPAMP Expression
    (115) Expression -> . Expression EQEQ Expression
    (116) Expression -> . Expression NOTEQ Expression
    (117) Expression -> . Expression LESS Expression
    (118) Expression -> . Expression GREAT Expression
    (119) Expression -> . Expression LEQ Expression
    (120) Expression -> . Expression GEQ Expression
    (121) Expression -> . Expression PLUS Expression
    (122) Expression -> . Expression MINUS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression CARET Expression
    (125) Expression -> . Expression TIMES Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MOD Expression
    (128) Expression -> . Expression AMPERS Expression
    (129) Expression -> . Expression LL Expression
    (130) Expression -> . Expression GG Expression
    (131) Expression -> . Expression AMPCAR Expression
    (134) UnaryExpr -> . PrimaryExpr
    (135) UnaryExpr -> . UnaryOp UnaryExpr
    (97) PrimaryExpr -> . Operand
    (98) PrimaryExpr -> . Conversion
    (99) PrimaryExpr -> . PrimaryExpr Selector
    (100) PrimaryExpr -> . PrimaryExpr Index
    (101) PrimaryExpr -> . PrimaryExpr Slice
    (102) PrimaryExpr -> . PrimaryExpr Arguments
    (136) UnaryOp -> . PLUS
    (137) UnaryOp -> . MINUS
    (138) UnaryOp -> . TIMES
    (139) UnaryOp -> . AMPERS
    (140) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (96) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (95) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . IntLiteral
    (86) BasicLit -> . FloatLiteral
    (87) BasicLit -> . ImgLiteral
    (88) BasicLit -> . RuneLiteral
    (89) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (90) IntLiteral -> . INTEGER
    (91) FloatLiteral -> . FLOAT
    (92) ImgLiteral -> . IMAGINARY
    (93) RuneLiteral -> . RUNE
    (94) StringLiteral -> . STRING
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 104
    MINUS           shift and go to state 98
    TIMES           shift and go to state 112
    AMPERS          shift and go to state 118
    NOT             shift and go to state 103
    LPAREN          shift and go to state 115
    IDENTIFIER      shift and go to state 107
    TYPEX           shift and go to state 57
    INTEGER         shift and go to state 105
    FLOAT           shift and go to state 117
    IMAGINARY       shift and go to state 106
    RUNE            shift and go to state 92
    STRING          shift and go to state 99
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 93
    UnaryOp                        shift and go to state 102
    PrimaryExpr                    shift and go to state 119
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    FloatLiteral                   shift and go to state 96
    Type                           shift and go to state 97
    OperandName                    shift and go to state 100
    BasicLit                       shift and go to state 101
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    IntLiteral                     shift and go to state 108
    UnaryExpr                      shift and go to state 110
    RuneLiteral                    shift and go to state 111
    Operand                        shift and go to state 113
    Expression                     shift and go to state 208
    PointerType                    shift and go to state 66
    StringLiteral                  shift and go to state 94
    TypeLit                        shift and go to state 55
    ImgLiteral                     shift and go to state 109
    FunctionType                   shift and go to state 67

state 161

    (118) Expression -> Expression GREAT . Expression
    (112) Expression -> . UnaryExpr
    (113) Expression -> . Expression OROR Expression
    (114) Expression -> . Expression AMPAMP Expression
    (115) Expression -> . Expression EQEQ Expression
    (116) Expression -> . Expression NOTEQ Expression
    (117) Expression -> . Expression LESS Expression
    (118) Expression -> . Expression GREAT Expression
    (119) Expression -> . Expression LEQ Expression
    (120) Expression -> . Expression GEQ Expression
    (121) Expression -> . Expression PLUS Expression
    (122) Expression -> . Expression MINUS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression CARET Expression
    (125) Expression -> . Expression TIMES Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MOD Expression
    (128) Expression -> . Expression AMPERS Expression
    (129) Expression -> . Expression LL Expression
    (130) Expression -> . Expression GG Expression
    (131) Expression -> . Expression AMPCAR Expression
    (134) UnaryExpr -> . PrimaryExpr
    (135) UnaryExpr -> . UnaryOp UnaryExpr
    (97) PrimaryExpr -> . Operand
    (98) PrimaryExpr -> . Conversion
    (99) PrimaryExpr -> . PrimaryExpr Selector
    (100) PrimaryExpr -> . PrimaryExpr Index
    (101) PrimaryExpr -> . PrimaryExpr Slice
    (102) PrimaryExpr -> . PrimaryExpr Arguments
    (136) UnaryOp -> . PLUS
    (137) UnaryOp -> . MINUS
    (138) UnaryOp -> . TIMES
    (139) UnaryOp -> . AMPERS
    (140) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (96) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (95) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . IntLiteral
    (86) BasicLit -> . FloatLiteral
    (87) BasicLit -> . ImgLiteral
    (88) BasicLit -> . RuneLiteral
    (89) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (90) IntLiteral -> . INTEGER
    (91) FloatLiteral -> . FLOAT
    (92) ImgLiteral -> . IMAGINARY
    (93) RuneLiteral -> . RUNE
    (94) StringLiteral -> . STRING
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 104
    MINUS           shift and go to state 98
    TIMES           shift and go to state 112
    AMPERS          shift and go to state 118
    NOT             shift and go to state 103
    LPAREN          shift and go to state 115
    IDENTIFIER      shift and go to state 107
    TYPEX           shift and go to state 57
    INTEGER         shift and go to state 105
    FLOAT           shift and go to state 117
    IMAGINARY       shift and go to state 106
    RUNE            shift and go to state 92
    STRING          shift and go to state 99
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 93
    UnaryOp                        shift and go to state 102
    PrimaryExpr                    shift and go to state 119
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    FloatLiteral                   shift and go to state 96
    Type                           shift and go to state 97
    OperandName                    shift and go to state 100
    BasicLit                       shift and go to state 101
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    IntLiteral                     shift and go to state 108
    UnaryExpr                      shift and go to state 110
    RuneLiteral                    shift and go to state 111
    Operand                        shift and go to state 113
    Expression                     shift and go to state 209
    PointerType                    shift and go to state 66
    StringLiteral                  shift and go to state 94
    TypeLit                        shift and go to state 55
    ImgLiteral                     shift and go to state 109
    FunctionType                   shift and go to state 67

state 162

    (126) Expression -> Expression DIVIDE . Expression
    (112) Expression -> . UnaryExpr
    (113) Expression -> . Expression OROR Expression
    (114) Expression -> . Expression AMPAMP Expression
    (115) Expression -> . Expression EQEQ Expression
    (116) Expression -> . Expression NOTEQ Expression
    (117) Expression -> . Expression LESS Expression
    (118) Expression -> . Expression GREAT Expression
    (119) Expression -> . Expression LEQ Expression
    (120) Expression -> . Expression GEQ Expression
    (121) Expression -> . Expression PLUS Expression
    (122) Expression -> . Expression MINUS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression CARET Expression
    (125) Expression -> . Expression TIMES Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MOD Expression
    (128) Expression -> . Expression AMPERS Expression
    (129) Expression -> . Expression LL Expression
    (130) Expression -> . Expression GG Expression
    (131) Expression -> . Expression AMPCAR Expression
    (134) UnaryExpr -> . PrimaryExpr
    (135) UnaryExpr -> . UnaryOp UnaryExpr
    (97) PrimaryExpr -> . Operand
    (98) PrimaryExpr -> . Conversion
    (99) PrimaryExpr -> . PrimaryExpr Selector
    (100) PrimaryExpr -> . PrimaryExpr Index
    (101) PrimaryExpr -> . PrimaryExpr Slice
    (102) PrimaryExpr -> . PrimaryExpr Arguments
    (136) UnaryOp -> . PLUS
    (137) UnaryOp -> . MINUS
    (138) UnaryOp -> . TIMES
    (139) UnaryOp -> . AMPERS
    (140) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (96) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (95) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . IntLiteral
    (86) BasicLit -> . FloatLiteral
    (87) BasicLit -> . ImgLiteral
    (88) BasicLit -> . RuneLiteral
    (89) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (90) IntLiteral -> . INTEGER
    (91) FloatLiteral -> . FLOAT
    (92) ImgLiteral -> . IMAGINARY
    (93) RuneLiteral -> . RUNE
    (94) StringLiteral -> . STRING
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 104
    MINUS           shift and go to state 98
    TIMES           shift and go to state 112
    AMPERS          shift and go to state 118
    NOT             shift and go to state 103
    LPAREN          shift and go to state 115
    IDENTIFIER      shift and go to state 107
    TYPEX           shift and go to state 57
    INTEGER         shift and go to state 105
    FLOAT           shift and go to state 117
    IMAGINARY       shift and go to state 106
    RUNE            shift and go to state 92
    STRING          shift and go to state 99
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 93
    UnaryOp                        shift and go to state 102
    PrimaryExpr                    shift and go to state 119
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    FloatLiteral                   shift and go to state 96
    Type                           shift and go to state 97
    OperandName                    shift and go to state 100
    BasicLit                       shift and go to state 101
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    IntLiteral                     shift and go to state 108
    UnaryExpr                      shift and go to state 110
    RuneLiteral                    shift and go to state 111
    Operand                        shift and go to state 113
    Expression                     shift and go to state 210
    PointerType                    shift and go to state 66
    StringLiteral                  shift and go to state 94
    TypeLit                        shift and go to state 55
    ImgLiteral                     shift and go to state 109
    FunctionType                   shift and go to state 67

state 163

    (131) Expression -> Expression AMPCAR . Expression
    (112) Expression -> . UnaryExpr
    (113) Expression -> . Expression OROR Expression
    (114) Expression -> . Expression AMPAMP Expression
    (115) Expression -> . Expression EQEQ Expression
    (116) Expression -> . Expression NOTEQ Expression
    (117) Expression -> . Expression LESS Expression
    (118) Expression -> . Expression GREAT Expression
    (119) Expression -> . Expression LEQ Expression
    (120) Expression -> . Expression GEQ Expression
    (121) Expression -> . Expression PLUS Expression
    (122) Expression -> . Expression MINUS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression CARET Expression
    (125) Expression -> . Expression TIMES Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MOD Expression
    (128) Expression -> . Expression AMPERS Expression
    (129) Expression -> . Expression LL Expression
    (130) Expression -> . Expression GG Expression
    (131) Expression -> . Expression AMPCAR Expression
    (134) UnaryExpr -> . PrimaryExpr
    (135) UnaryExpr -> . UnaryOp UnaryExpr
    (97) PrimaryExpr -> . Operand
    (98) PrimaryExpr -> . Conversion
    (99) PrimaryExpr -> . PrimaryExpr Selector
    (100) PrimaryExpr -> . PrimaryExpr Index
    (101) PrimaryExpr -> . PrimaryExpr Slice
    (102) PrimaryExpr -> . PrimaryExpr Arguments
    (136) UnaryOp -> . PLUS
    (137) UnaryOp -> . MINUS
    (138) UnaryOp -> . TIMES
    (139) UnaryOp -> . AMPERS
    (140) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (96) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (95) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . IntLiteral
    (86) BasicLit -> . FloatLiteral
    (87) BasicLit -> . ImgLiteral
    (88) BasicLit -> . RuneLiteral
    (89) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (90) IntLiteral -> . INTEGER
    (91) FloatLiteral -> . FLOAT
    (92) ImgLiteral -> . IMAGINARY
    (93) RuneLiteral -> . RUNE
    (94) StringLiteral -> . STRING
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 104
    MINUS           shift and go to state 98
    TIMES           shift and go to state 112
    AMPERS          shift and go to state 118
    NOT             shift and go to state 103
    LPAREN          shift and go to state 115
    IDENTIFIER      shift and go to state 107
    TYPEX           shift and go to state 57
    INTEGER         shift and go to state 105
    FLOAT           shift and go to state 117
    IMAGINARY       shift and go to state 106
    RUNE            shift and go to state 92
    STRING          shift and go to state 99
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 93
    UnaryOp                        shift and go to state 102
    PrimaryExpr                    shift and go to state 119
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    FloatLiteral                   shift and go to state 96
    Type                           shift and go to state 97
    OperandName                    shift and go to state 100
    BasicLit                       shift and go to state 101
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    IntLiteral                     shift and go to state 108
    UnaryExpr                      shift and go to state 110
    RuneLiteral                    shift and go to state 111
    Operand                        shift and go to state 113
    Expression                     shift and go to state 211
    PointerType                    shift and go to state 66
    StringLiteral                  shift and go to state 94
    TypeLit                        shift and go to state 55
    ImgLiteral                     shift and go to state 109
    FunctionType                   shift and go to state 67

state 164

    (117) Expression -> Expression LESS . Expression
    (112) Expression -> . UnaryExpr
    (113) Expression -> . Expression OROR Expression
    (114) Expression -> . Expression AMPAMP Expression
    (115) Expression -> . Expression EQEQ Expression
    (116) Expression -> . Expression NOTEQ Expression
    (117) Expression -> . Expression LESS Expression
    (118) Expression -> . Expression GREAT Expression
    (119) Expression -> . Expression LEQ Expression
    (120) Expression -> . Expression GEQ Expression
    (121) Expression -> . Expression PLUS Expression
    (122) Expression -> . Expression MINUS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression CARET Expression
    (125) Expression -> . Expression TIMES Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MOD Expression
    (128) Expression -> . Expression AMPERS Expression
    (129) Expression -> . Expression LL Expression
    (130) Expression -> . Expression GG Expression
    (131) Expression -> . Expression AMPCAR Expression
    (134) UnaryExpr -> . PrimaryExpr
    (135) UnaryExpr -> . UnaryOp UnaryExpr
    (97) PrimaryExpr -> . Operand
    (98) PrimaryExpr -> . Conversion
    (99) PrimaryExpr -> . PrimaryExpr Selector
    (100) PrimaryExpr -> . PrimaryExpr Index
    (101) PrimaryExpr -> . PrimaryExpr Slice
    (102) PrimaryExpr -> . PrimaryExpr Arguments
    (136) UnaryOp -> . PLUS
    (137) UnaryOp -> . MINUS
    (138) UnaryOp -> . TIMES
    (139) UnaryOp -> . AMPERS
    (140) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (96) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (95) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . IntLiteral
    (86) BasicLit -> . FloatLiteral
    (87) BasicLit -> . ImgLiteral
    (88) BasicLit -> . RuneLiteral
    (89) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (90) IntLiteral -> . INTEGER
    (91) FloatLiteral -> . FLOAT
    (92) ImgLiteral -> . IMAGINARY
    (93) RuneLiteral -> . RUNE
    (94) StringLiteral -> . STRING
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 104
    MINUS           shift and go to state 98
    TIMES           shift and go to state 112
    AMPERS          shift and go to state 118
    NOT             shift and go to state 103
    LPAREN          shift and go to state 115
    IDENTIFIER      shift and go to state 107
    TYPEX           shift and go to state 57
    INTEGER         shift and go to state 105
    FLOAT           shift and go to state 117
    IMAGINARY       shift and go to state 106
    RUNE            shift and go to state 92
    STRING          shift and go to state 99
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 93
    UnaryOp                        shift and go to state 102
    PrimaryExpr                    shift and go to state 119
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    FloatLiteral                   shift and go to state 96
    Type                           shift and go to state 97
    OperandName                    shift and go to state 100
    BasicLit                       shift and go to state 101
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    IntLiteral                     shift and go to state 108
    UnaryExpr                      shift and go to state 110
    RuneLiteral                    shift and go to state 111
    Operand                        shift and go to state 113
    Expression                     shift and go to state 212
    PointerType                    shift and go to state 66
    StringLiteral                  shift and go to state 94
    TypeLit                        shift and go to state 55
    ImgLiteral                     shift and go to state 109
    FunctionType                   shift and go to state 67

state 165

    (115) Expression -> Expression EQEQ . Expression
    (112) Expression -> . UnaryExpr
    (113) Expression -> . Expression OROR Expression
    (114) Expression -> . Expression AMPAMP Expression
    (115) Expression -> . Expression EQEQ Expression
    (116) Expression -> . Expression NOTEQ Expression
    (117) Expression -> . Expression LESS Expression
    (118) Expression -> . Expression GREAT Expression
    (119) Expression -> . Expression LEQ Expression
    (120) Expression -> . Expression GEQ Expression
    (121) Expression -> . Expression PLUS Expression
    (122) Expression -> . Expression MINUS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression CARET Expression
    (125) Expression -> . Expression TIMES Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MOD Expression
    (128) Expression -> . Expression AMPERS Expression
    (129) Expression -> . Expression LL Expression
    (130) Expression -> . Expression GG Expression
    (131) Expression -> . Expression AMPCAR Expression
    (134) UnaryExpr -> . PrimaryExpr
    (135) UnaryExpr -> . UnaryOp UnaryExpr
    (97) PrimaryExpr -> . Operand
    (98) PrimaryExpr -> . Conversion
    (99) PrimaryExpr -> . PrimaryExpr Selector
    (100) PrimaryExpr -> . PrimaryExpr Index
    (101) PrimaryExpr -> . PrimaryExpr Slice
    (102) PrimaryExpr -> . PrimaryExpr Arguments
    (136) UnaryOp -> . PLUS
    (137) UnaryOp -> . MINUS
    (138) UnaryOp -> . TIMES
    (139) UnaryOp -> . AMPERS
    (140) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (96) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (95) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . IntLiteral
    (86) BasicLit -> . FloatLiteral
    (87) BasicLit -> . ImgLiteral
    (88) BasicLit -> . RuneLiteral
    (89) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (90) IntLiteral -> . INTEGER
    (91) FloatLiteral -> . FLOAT
    (92) ImgLiteral -> . IMAGINARY
    (93) RuneLiteral -> . RUNE
    (94) StringLiteral -> . STRING
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 104
    MINUS           shift and go to state 98
    TIMES           shift and go to state 112
    AMPERS          shift and go to state 118
    NOT             shift and go to state 103
    LPAREN          shift and go to state 115
    IDENTIFIER      shift and go to state 107
    TYPEX           shift and go to state 57
    INTEGER         shift and go to state 105
    FLOAT           shift and go to state 117
    IMAGINARY       shift and go to state 106
    RUNE            shift and go to state 92
    STRING          shift and go to state 99
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 93
    UnaryOp                        shift and go to state 102
    PrimaryExpr                    shift and go to state 119
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    FloatLiteral                   shift and go to state 96
    Type                           shift and go to state 97
    OperandName                    shift and go to state 100
    BasicLit                       shift and go to state 101
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    IntLiteral                     shift and go to state 108
    UnaryExpr                      shift and go to state 110
    RuneLiteral                    shift and go to state 111
    Operand                        shift and go to state 113
    Expression                     shift and go to state 213
    PointerType                    shift and go to state 66
    StringLiteral                  shift and go to state 94
    TypeLit                        shift and go to state 55
    ImgLiteral                     shift and go to state 109
    FunctionType                   shift and go to state 67

state 166

    (129) Expression -> Expression LL . Expression
    (112) Expression -> . UnaryExpr
    (113) Expression -> . Expression OROR Expression
    (114) Expression -> . Expression AMPAMP Expression
    (115) Expression -> . Expression EQEQ Expression
    (116) Expression -> . Expression NOTEQ Expression
    (117) Expression -> . Expression LESS Expression
    (118) Expression -> . Expression GREAT Expression
    (119) Expression -> . Expression LEQ Expression
    (120) Expression -> . Expression GEQ Expression
    (121) Expression -> . Expression PLUS Expression
    (122) Expression -> . Expression MINUS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression CARET Expression
    (125) Expression -> . Expression TIMES Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MOD Expression
    (128) Expression -> . Expression AMPERS Expression
    (129) Expression -> . Expression LL Expression
    (130) Expression -> . Expression GG Expression
    (131) Expression -> . Expression AMPCAR Expression
    (134) UnaryExpr -> . PrimaryExpr
    (135) UnaryExpr -> . UnaryOp UnaryExpr
    (97) PrimaryExpr -> . Operand
    (98) PrimaryExpr -> . Conversion
    (99) PrimaryExpr -> . PrimaryExpr Selector
    (100) PrimaryExpr -> . PrimaryExpr Index
    (101) PrimaryExpr -> . PrimaryExpr Slice
    (102) PrimaryExpr -> . PrimaryExpr Arguments
    (136) UnaryOp -> . PLUS
    (137) UnaryOp -> . MINUS
    (138) UnaryOp -> . TIMES
    (139) UnaryOp -> . AMPERS
    (140) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (96) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (95) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . IntLiteral
    (86) BasicLit -> . FloatLiteral
    (87) BasicLit -> . ImgLiteral
    (88) BasicLit -> . RuneLiteral
    (89) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (90) IntLiteral -> . INTEGER
    (91) FloatLiteral -> . FLOAT
    (92) ImgLiteral -> . IMAGINARY
    (93) RuneLiteral -> . RUNE
    (94) StringLiteral -> . STRING
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 104
    MINUS           shift and go to state 98
    TIMES           shift and go to state 112
    AMPERS          shift and go to state 118
    NOT             shift and go to state 103
    LPAREN          shift and go to state 115
    IDENTIFIER      shift and go to state 107
    TYPEX           shift and go to state 57
    INTEGER         shift and go to state 105
    FLOAT           shift and go to state 117
    IMAGINARY       shift and go to state 106
    RUNE            shift and go to state 92
    STRING          shift and go to state 99
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 93
    UnaryOp                        shift and go to state 102
    PrimaryExpr                    shift and go to state 119
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    FloatLiteral                   shift and go to state 96
    Type                           shift and go to state 97
    OperandName                    shift and go to state 100
    BasicLit                       shift and go to state 101
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    IntLiteral                     shift and go to state 108
    UnaryExpr                      shift and go to state 110
    RuneLiteral                    shift and go to state 111
    Operand                        shift and go to state 113
    Expression                     shift and go to state 214
    PointerType                    shift and go to state 66
    StringLiteral                  shift and go to state 94
    TypeLit                        shift and go to state 55
    ImgLiteral                     shift and go to state 109
    FunctionType                   shift and go to state 67

state 167

    (128) Expression -> Expression AMPERS . Expression
    (112) Expression -> . UnaryExpr
    (113) Expression -> . Expression OROR Expression
    (114) Expression -> . Expression AMPAMP Expression
    (115) Expression -> . Expression EQEQ Expression
    (116) Expression -> . Expression NOTEQ Expression
    (117) Expression -> . Expression LESS Expression
    (118) Expression -> . Expression GREAT Expression
    (119) Expression -> . Expression LEQ Expression
    (120) Expression -> . Expression GEQ Expression
    (121) Expression -> . Expression PLUS Expression
    (122) Expression -> . Expression MINUS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression CARET Expression
    (125) Expression -> . Expression TIMES Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MOD Expression
    (128) Expression -> . Expression AMPERS Expression
    (129) Expression -> . Expression LL Expression
    (130) Expression -> . Expression GG Expression
    (131) Expression -> . Expression AMPCAR Expression
    (134) UnaryExpr -> . PrimaryExpr
    (135) UnaryExpr -> . UnaryOp UnaryExpr
    (97) PrimaryExpr -> . Operand
    (98) PrimaryExpr -> . Conversion
    (99) PrimaryExpr -> . PrimaryExpr Selector
    (100) PrimaryExpr -> . PrimaryExpr Index
    (101) PrimaryExpr -> . PrimaryExpr Slice
    (102) PrimaryExpr -> . PrimaryExpr Arguments
    (136) UnaryOp -> . PLUS
    (137) UnaryOp -> . MINUS
    (138) UnaryOp -> . TIMES
    (139) UnaryOp -> . AMPERS
    (140) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (96) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (95) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . IntLiteral
    (86) BasicLit -> . FloatLiteral
    (87) BasicLit -> . ImgLiteral
    (88) BasicLit -> . RuneLiteral
    (89) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (90) IntLiteral -> . INTEGER
    (91) FloatLiteral -> . FLOAT
    (92) ImgLiteral -> . IMAGINARY
    (93) RuneLiteral -> . RUNE
    (94) StringLiteral -> . STRING
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 104
    MINUS           shift and go to state 98
    TIMES           shift and go to state 112
    AMPERS          shift and go to state 118
    NOT             shift and go to state 103
    LPAREN          shift and go to state 115
    IDENTIFIER      shift and go to state 107
    TYPEX           shift and go to state 57
    INTEGER         shift and go to state 105
    FLOAT           shift and go to state 117
    IMAGINARY       shift and go to state 106
    RUNE            shift and go to state 92
    STRING          shift and go to state 99
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 93
    UnaryOp                        shift and go to state 102
    PrimaryExpr                    shift and go to state 119
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    FloatLiteral                   shift and go to state 96
    Type                           shift and go to state 97
    OperandName                    shift and go to state 100
    BasicLit                       shift and go to state 101
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    IntLiteral                     shift and go to state 108
    UnaryExpr                      shift and go to state 110
    RuneLiteral                    shift and go to state 111
    Operand                        shift and go to state 113
    Expression                     shift and go to state 215
    PointerType                    shift and go to state 66
    StringLiteral                  shift and go to state 94
    TypeLit                        shift and go to state 55
    ImgLiteral                     shift and go to state 109
    FunctionType                   shift and go to state 67

state 168

    (120) Expression -> Expression GEQ . Expression
    (112) Expression -> . UnaryExpr
    (113) Expression -> . Expression OROR Expression
    (114) Expression -> . Expression AMPAMP Expression
    (115) Expression -> . Expression EQEQ Expression
    (116) Expression -> . Expression NOTEQ Expression
    (117) Expression -> . Expression LESS Expression
    (118) Expression -> . Expression GREAT Expression
    (119) Expression -> . Expression LEQ Expression
    (120) Expression -> . Expression GEQ Expression
    (121) Expression -> . Expression PLUS Expression
    (122) Expression -> . Expression MINUS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression CARET Expression
    (125) Expression -> . Expression TIMES Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MOD Expression
    (128) Expression -> . Expression AMPERS Expression
    (129) Expression -> . Expression LL Expression
    (130) Expression -> . Expression GG Expression
    (131) Expression -> . Expression AMPCAR Expression
    (134) UnaryExpr -> . PrimaryExpr
    (135) UnaryExpr -> . UnaryOp UnaryExpr
    (97) PrimaryExpr -> . Operand
    (98) PrimaryExpr -> . Conversion
    (99) PrimaryExpr -> . PrimaryExpr Selector
    (100) PrimaryExpr -> . PrimaryExpr Index
    (101) PrimaryExpr -> . PrimaryExpr Slice
    (102) PrimaryExpr -> . PrimaryExpr Arguments
    (136) UnaryOp -> . PLUS
    (137) UnaryOp -> . MINUS
    (138) UnaryOp -> . TIMES
    (139) UnaryOp -> . AMPERS
    (140) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (96) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (95) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . IntLiteral
    (86) BasicLit -> . FloatLiteral
    (87) BasicLit -> . ImgLiteral
    (88) BasicLit -> . RuneLiteral
    (89) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (90) IntLiteral -> . INTEGER
    (91) FloatLiteral -> . FLOAT
    (92) ImgLiteral -> . IMAGINARY
    (93) RuneLiteral -> . RUNE
    (94) StringLiteral -> . STRING
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 104
    MINUS           shift and go to state 98
    TIMES           shift and go to state 112
    AMPERS          shift and go to state 118
    NOT             shift and go to state 103
    LPAREN          shift and go to state 115
    IDENTIFIER      shift and go to state 107
    TYPEX           shift and go to state 57
    INTEGER         shift and go to state 105
    FLOAT           shift and go to state 117
    IMAGINARY       shift and go to state 106
    RUNE            shift and go to state 92
    STRING          shift and go to state 99
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 93
    UnaryOp                        shift and go to state 102
    PrimaryExpr                    shift and go to state 119
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    FloatLiteral                   shift and go to state 96
    Type                           shift and go to state 97
    OperandName                    shift and go to state 100
    BasicLit                       shift and go to state 101
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    IntLiteral                     shift and go to state 108
    UnaryExpr                      shift and go to state 110
    RuneLiteral                    shift and go to state 111
    Operand                        shift and go to state 113
    Expression                     shift and go to state 216
    PointerType                    shift and go to state 66
    StringLiteral                  shift and go to state 94
    TypeLit                        shift and go to state 55
    ImgLiteral                     shift and go to state 109
    FunctionType                   shift and go to state 67

state 169

    (123) Expression -> Expression OR . Expression
    (112) Expression -> . UnaryExpr
    (113) Expression -> . Expression OROR Expression
    (114) Expression -> . Expression AMPAMP Expression
    (115) Expression -> . Expression EQEQ Expression
    (116) Expression -> . Expression NOTEQ Expression
    (117) Expression -> . Expression LESS Expression
    (118) Expression -> . Expression GREAT Expression
    (119) Expression -> . Expression LEQ Expression
    (120) Expression -> . Expression GEQ Expression
    (121) Expression -> . Expression PLUS Expression
    (122) Expression -> . Expression MINUS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression CARET Expression
    (125) Expression -> . Expression TIMES Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MOD Expression
    (128) Expression -> . Expression AMPERS Expression
    (129) Expression -> . Expression LL Expression
    (130) Expression -> . Expression GG Expression
    (131) Expression -> . Expression AMPCAR Expression
    (134) UnaryExpr -> . PrimaryExpr
    (135) UnaryExpr -> . UnaryOp UnaryExpr
    (97) PrimaryExpr -> . Operand
    (98) PrimaryExpr -> . Conversion
    (99) PrimaryExpr -> . PrimaryExpr Selector
    (100) PrimaryExpr -> . PrimaryExpr Index
    (101) PrimaryExpr -> . PrimaryExpr Slice
    (102) PrimaryExpr -> . PrimaryExpr Arguments
    (136) UnaryOp -> . PLUS
    (137) UnaryOp -> . MINUS
    (138) UnaryOp -> . TIMES
    (139) UnaryOp -> . AMPERS
    (140) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (96) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (95) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . IntLiteral
    (86) BasicLit -> . FloatLiteral
    (87) BasicLit -> . ImgLiteral
    (88) BasicLit -> . RuneLiteral
    (89) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (90) IntLiteral -> . INTEGER
    (91) FloatLiteral -> . FLOAT
    (92) ImgLiteral -> . IMAGINARY
    (93) RuneLiteral -> . RUNE
    (94) StringLiteral -> . STRING
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 104
    MINUS           shift and go to state 98
    TIMES           shift and go to state 112
    AMPERS          shift and go to state 118
    NOT             shift and go to state 103
    LPAREN          shift and go to state 115
    IDENTIFIER      shift and go to state 107
    TYPEX           shift and go to state 57
    INTEGER         shift and go to state 105
    FLOAT           shift and go to state 117
    IMAGINARY       shift and go to state 106
    RUNE            shift and go to state 92
    STRING          shift and go to state 99
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 93
    UnaryOp                        shift and go to state 102
    PrimaryExpr                    shift and go to state 119
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    FloatLiteral                   shift and go to state 96
    Type                           shift and go to state 97
    OperandName                    shift and go to state 100
    BasicLit                       shift and go to state 101
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    IntLiteral                     shift and go to state 108
    UnaryExpr                      shift and go to state 110
    RuneLiteral                    shift and go to state 111
    Operand                        shift and go to state 113
    Expression                     shift and go to state 217
    PointerType                    shift and go to state 66
    StringLiteral                  shift and go to state 94
    TypeLit                        shift and go to state 55
    ImgLiteral                     shift and go to state 109
    FunctionType                   shift and go to state 67

state 170

    (130) Expression -> Expression GG . Expression
    (112) Expression -> . UnaryExpr
    (113) Expression -> . Expression OROR Expression
    (114) Expression -> . Expression AMPAMP Expression
    (115) Expression -> . Expression EQEQ Expression
    (116) Expression -> . Expression NOTEQ Expression
    (117) Expression -> . Expression LESS Expression
    (118) Expression -> . Expression GREAT Expression
    (119) Expression -> . Expression LEQ Expression
    (120) Expression -> . Expression GEQ Expression
    (121) Expression -> . Expression PLUS Expression
    (122) Expression -> . Expression MINUS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression CARET Expression
    (125) Expression -> . Expression TIMES Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MOD Expression
    (128) Expression -> . Expression AMPERS Expression
    (129) Expression -> . Expression LL Expression
    (130) Expression -> . Expression GG Expression
    (131) Expression -> . Expression AMPCAR Expression
    (134) UnaryExpr -> . PrimaryExpr
    (135) UnaryExpr -> . UnaryOp UnaryExpr
    (97) PrimaryExpr -> . Operand
    (98) PrimaryExpr -> . Conversion
    (99) PrimaryExpr -> . PrimaryExpr Selector
    (100) PrimaryExpr -> . PrimaryExpr Index
    (101) PrimaryExpr -> . PrimaryExpr Slice
    (102) PrimaryExpr -> . PrimaryExpr Arguments
    (136) UnaryOp -> . PLUS
    (137) UnaryOp -> . MINUS
    (138) UnaryOp -> . TIMES
    (139) UnaryOp -> . AMPERS
    (140) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (96) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (95) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . IntLiteral
    (86) BasicLit -> . FloatLiteral
    (87) BasicLit -> . ImgLiteral
    (88) BasicLit -> . RuneLiteral
    (89) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (90) IntLiteral -> . INTEGER
    (91) FloatLiteral -> . FLOAT
    (92) ImgLiteral -> . IMAGINARY
    (93) RuneLiteral -> . RUNE
    (94) StringLiteral -> . STRING
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 104
    MINUS           shift and go to state 98
    TIMES           shift and go to state 112
    AMPERS          shift and go to state 118
    NOT             shift and go to state 103
    LPAREN          shift and go to state 115
    IDENTIFIER      shift and go to state 107
    TYPEX           shift and go to state 57
    INTEGER         shift and go to state 105
    FLOAT           shift and go to state 117
    IMAGINARY       shift and go to state 106
    RUNE            shift and go to state 92
    STRING          shift and go to state 99
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 93
    UnaryOp                        shift and go to state 102
    PrimaryExpr                    shift and go to state 119
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    FloatLiteral                   shift and go to state 96
    Type                           shift and go to state 97
    OperandName                    shift and go to state 100
    BasicLit                       shift and go to state 101
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    IntLiteral                     shift and go to state 108
    UnaryExpr                      shift and go to state 110
    RuneLiteral                    shift and go to state 111
    Operand                        shift and go to state 113
    Expression                     shift and go to state 218
    PointerType                    shift and go to state 66
    StringLiteral                  shift and go to state 94
    TypeLit                        shift and go to state 55
    ImgLiteral                     shift and go to state 109
    FunctionType                   shift and go to state 67

state 171

    (116) Expression -> Expression NOTEQ . Expression
    (112) Expression -> . UnaryExpr
    (113) Expression -> . Expression OROR Expression
    (114) Expression -> . Expression AMPAMP Expression
    (115) Expression -> . Expression EQEQ Expression
    (116) Expression -> . Expression NOTEQ Expression
    (117) Expression -> . Expression LESS Expression
    (118) Expression -> . Expression GREAT Expression
    (119) Expression -> . Expression LEQ Expression
    (120) Expression -> . Expression GEQ Expression
    (121) Expression -> . Expression PLUS Expression
    (122) Expression -> . Expression MINUS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression CARET Expression
    (125) Expression -> . Expression TIMES Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MOD Expression
    (128) Expression -> . Expression AMPERS Expression
    (129) Expression -> . Expression LL Expression
    (130) Expression -> . Expression GG Expression
    (131) Expression -> . Expression AMPCAR Expression
    (134) UnaryExpr -> . PrimaryExpr
    (135) UnaryExpr -> . UnaryOp UnaryExpr
    (97) PrimaryExpr -> . Operand
    (98) PrimaryExpr -> . Conversion
    (99) PrimaryExpr -> . PrimaryExpr Selector
    (100) PrimaryExpr -> . PrimaryExpr Index
    (101) PrimaryExpr -> . PrimaryExpr Slice
    (102) PrimaryExpr -> . PrimaryExpr Arguments
    (136) UnaryOp -> . PLUS
    (137) UnaryOp -> . MINUS
    (138) UnaryOp -> . TIMES
    (139) UnaryOp -> . AMPERS
    (140) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (96) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (95) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . IntLiteral
    (86) BasicLit -> . FloatLiteral
    (87) BasicLit -> . ImgLiteral
    (88) BasicLit -> . RuneLiteral
    (89) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (90) IntLiteral -> . INTEGER
    (91) FloatLiteral -> . FLOAT
    (92) ImgLiteral -> . IMAGINARY
    (93) RuneLiteral -> . RUNE
    (94) StringLiteral -> . STRING
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 104
    MINUS           shift and go to state 98
    TIMES           shift and go to state 112
    AMPERS          shift and go to state 118
    NOT             shift and go to state 103
    LPAREN          shift and go to state 115
    IDENTIFIER      shift and go to state 107
    TYPEX           shift and go to state 57
    INTEGER         shift and go to state 105
    FLOAT           shift and go to state 117
    IMAGINARY       shift and go to state 106
    RUNE            shift and go to state 92
    STRING          shift and go to state 99
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 93
    UnaryOp                        shift and go to state 102
    PrimaryExpr                    shift and go to state 119
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    FloatLiteral                   shift and go to state 96
    Type                           shift and go to state 97
    OperandName                    shift and go to state 100
    BasicLit                       shift and go to state 101
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    IntLiteral                     shift and go to state 108
    UnaryExpr                      shift and go to state 110
    RuneLiteral                    shift and go to state 111
    Operand                        shift and go to state 113
    Expression                     shift and go to state 219
    PointerType                    shift and go to state 66
    StringLiteral                  shift and go to state 94
    TypeLit                        shift and go to state 55
    ImgLiteral                     shift and go to state 109
    FunctionType                   shift and go to state 67

state 172

    (121) Expression -> Expression PLUS . Expression
    (112) Expression -> . UnaryExpr
    (113) Expression -> . Expression OROR Expression
    (114) Expression -> . Expression AMPAMP Expression
    (115) Expression -> . Expression EQEQ Expression
    (116) Expression -> . Expression NOTEQ Expression
    (117) Expression -> . Expression LESS Expression
    (118) Expression -> . Expression GREAT Expression
    (119) Expression -> . Expression LEQ Expression
    (120) Expression -> . Expression GEQ Expression
    (121) Expression -> . Expression PLUS Expression
    (122) Expression -> . Expression MINUS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression CARET Expression
    (125) Expression -> . Expression TIMES Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MOD Expression
    (128) Expression -> . Expression AMPERS Expression
    (129) Expression -> . Expression LL Expression
    (130) Expression -> . Expression GG Expression
    (131) Expression -> . Expression AMPCAR Expression
    (134) UnaryExpr -> . PrimaryExpr
    (135) UnaryExpr -> . UnaryOp UnaryExpr
    (97) PrimaryExpr -> . Operand
    (98) PrimaryExpr -> . Conversion
    (99) PrimaryExpr -> . PrimaryExpr Selector
    (100) PrimaryExpr -> . PrimaryExpr Index
    (101) PrimaryExpr -> . PrimaryExpr Slice
    (102) PrimaryExpr -> . PrimaryExpr Arguments
    (136) UnaryOp -> . PLUS
    (137) UnaryOp -> . MINUS
    (138) UnaryOp -> . TIMES
    (139) UnaryOp -> . AMPERS
    (140) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (96) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (95) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . IntLiteral
    (86) BasicLit -> . FloatLiteral
    (87) BasicLit -> . ImgLiteral
    (88) BasicLit -> . RuneLiteral
    (89) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (90) IntLiteral -> . INTEGER
    (91) FloatLiteral -> . FLOAT
    (92) ImgLiteral -> . IMAGINARY
    (93) RuneLiteral -> . RUNE
    (94) StringLiteral -> . STRING
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 104
    MINUS           shift and go to state 98
    TIMES           shift and go to state 112
    AMPERS          shift and go to state 118
    NOT             shift and go to state 103
    LPAREN          shift and go to state 115
    IDENTIFIER      shift and go to state 107
    TYPEX           shift and go to state 57
    INTEGER         shift and go to state 105
    FLOAT           shift and go to state 117
    IMAGINARY       shift and go to state 106
    RUNE            shift and go to state 92
    STRING          shift and go to state 99
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 93
    UnaryOp                        shift and go to state 102
    PrimaryExpr                    shift and go to state 119
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    FloatLiteral                   shift and go to state 96
    Type                           shift and go to state 97
    OperandName                    shift and go to state 100
    BasicLit                       shift and go to state 101
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    IntLiteral                     shift and go to state 108
    UnaryExpr                      shift and go to state 110
    RuneLiteral                    shift and go to state 111
    Operand                        shift and go to state 113
    Expression                     shift and go to state 220
    PointerType                    shift and go to state 66
    StringLiteral                  shift and go to state 94
    TypeLit                        shift and go to state 55
    ImgLiteral                     shift and go to state 109
    FunctionType                   shift and go to state 67

state 173

    (127) Expression -> Expression MOD . Expression
    (112) Expression -> . UnaryExpr
    (113) Expression -> . Expression OROR Expression
    (114) Expression -> . Expression AMPAMP Expression
    (115) Expression -> . Expression EQEQ Expression
    (116) Expression -> . Expression NOTEQ Expression
    (117) Expression -> . Expression LESS Expression
    (118) Expression -> . Expression GREAT Expression
    (119) Expression -> . Expression LEQ Expression
    (120) Expression -> . Expression GEQ Expression
    (121) Expression -> . Expression PLUS Expression
    (122) Expression -> . Expression MINUS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression CARET Expression
    (125) Expression -> . Expression TIMES Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MOD Expression
    (128) Expression -> . Expression AMPERS Expression
    (129) Expression -> . Expression LL Expression
    (130) Expression -> . Expression GG Expression
    (131) Expression -> . Expression AMPCAR Expression
    (134) UnaryExpr -> . PrimaryExpr
    (135) UnaryExpr -> . UnaryOp UnaryExpr
    (97) PrimaryExpr -> . Operand
    (98) PrimaryExpr -> . Conversion
    (99) PrimaryExpr -> . PrimaryExpr Selector
    (100) PrimaryExpr -> . PrimaryExpr Index
    (101) PrimaryExpr -> . PrimaryExpr Slice
    (102) PrimaryExpr -> . PrimaryExpr Arguments
    (136) UnaryOp -> . PLUS
    (137) UnaryOp -> . MINUS
    (138) UnaryOp -> . TIMES
    (139) UnaryOp -> . AMPERS
    (140) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (96) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (95) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . IntLiteral
    (86) BasicLit -> . FloatLiteral
    (87) BasicLit -> . ImgLiteral
    (88) BasicLit -> . RuneLiteral
    (89) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (90) IntLiteral -> . INTEGER
    (91) FloatLiteral -> . FLOAT
    (92) ImgLiteral -> . IMAGINARY
    (93) RuneLiteral -> . RUNE
    (94) StringLiteral -> . STRING
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 104
    MINUS           shift and go to state 98
    TIMES           shift and go to state 112
    AMPERS          shift and go to state 118
    NOT             shift and go to state 103
    LPAREN          shift and go to state 115
    IDENTIFIER      shift and go to state 107
    TYPEX           shift and go to state 57
    INTEGER         shift and go to state 105
    FLOAT           shift and go to state 117
    IMAGINARY       shift and go to state 106
    RUNE            shift and go to state 92
    STRING          shift and go to state 99
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 93
    UnaryOp                        shift and go to state 102
    PrimaryExpr                    shift and go to state 119
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    FloatLiteral                   shift and go to state 96
    Type                           shift and go to state 97
    OperandName                    shift and go to state 100
    BasicLit                       shift and go to state 101
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    IntLiteral                     shift and go to state 108
    UnaryExpr                      shift and go to state 110
    RuneLiteral                    shift and go to state 111
    Operand                        shift and go to state 113
    Expression                     shift and go to state 221
    PointerType                    shift and go to state 66
    StringLiteral                  shift and go to state 94
    TypeLit                        shift and go to state 55
    ImgLiteral                     shift and go to state 109
    FunctionType                   shift and go to state 67

state 174

    (114) Expression -> Expression AMPAMP . Expression
    (112) Expression -> . UnaryExpr
    (113) Expression -> . Expression OROR Expression
    (114) Expression -> . Expression AMPAMP Expression
    (115) Expression -> . Expression EQEQ Expression
    (116) Expression -> . Expression NOTEQ Expression
    (117) Expression -> . Expression LESS Expression
    (118) Expression -> . Expression GREAT Expression
    (119) Expression -> . Expression LEQ Expression
    (120) Expression -> . Expression GEQ Expression
    (121) Expression -> . Expression PLUS Expression
    (122) Expression -> . Expression MINUS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression CARET Expression
    (125) Expression -> . Expression TIMES Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MOD Expression
    (128) Expression -> . Expression AMPERS Expression
    (129) Expression -> . Expression LL Expression
    (130) Expression -> . Expression GG Expression
    (131) Expression -> . Expression AMPCAR Expression
    (134) UnaryExpr -> . PrimaryExpr
    (135) UnaryExpr -> . UnaryOp UnaryExpr
    (97) PrimaryExpr -> . Operand
    (98) PrimaryExpr -> . Conversion
    (99) PrimaryExpr -> . PrimaryExpr Selector
    (100) PrimaryExpr -> . PrimaryExpr Index
    (101) PrimaryExpr -> . PrimaryExpr Slice
    (102) PrimaryExpr -> . PrimaryExpr Arguments
    (136) UnaryOp -> . PLUS
    (137) UnaryOp -> . MINUS
    (138) UnaryOp -> . TIMES
    (139) UnaryOp -> . AMPERS
    (140) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (96) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (95) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . IntLiteral
    (86) BasicLit -> . FloatLiteral
    (87) BasicLit -> . ImgLiteral
    (88) BasicLit -> . RuneLiteral
    (89) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (90) IntLiteral -> . INTEGER
    (91) FloatLiteral -> . FLOAT
    (92) ImgLiteral -> . IMAGINARY
    (93) RuneLiteral -> . RUNE
    (94) StringLiteral -> . STRING
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 104
    MINUS           shift and go to state 98
    TIMES           shift and go to state 112
    AMPERS          shift and go to state 118
    NOT             shift and go to state 103
    LPAREN          shift and go to state 115
    IDENTIFIER      shift and go to state 107
    TYPEX           shift and go to state 57
    INTEGER         shift and go to state 105
    FLOAT           shift and go to state 117
    IMAGINARY       shift and go to state 106
    RUNE            shift and go to state 92
    STRING          shift and go to state 99
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 93
    UnaryOp                        shift and go to state 102
    PrimaryExpr                    shift and go to state 119
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    FloatLiteral                   shift and go to state 96
    Type                           shift and go to state 97
    OperandName                    shift and go to state 100
    BasicLit                       shift and go to state 101
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    IntLiteral                     shift and go to state 108
    UnaryExpr                      shift and go to state 110
    RuneLiteral                    shift and go to state 111
    Operand                        shift and go to state 113
    Expression                     shift and go to state 222
    PointerType                    shift and go to state 66
    StringLiteral                  shift and go to state 94
    TypeLit                        shift and go to state 55
    ImgLiteral                     shift and go to state 109
    FunctionType                   shift and go to state 67

state 175

    (125) Expression -> Expression TIMES . Expression
    (112) Expression -> . UnaryExpr
    (113) Expression -> . Expression OROR Expression
    (114) Expression -> . Expression AMPAMP Expression
    (115) Expression -> . Expression EQEQ Expression
    (116) Expression -> . Expression NOTEQ Expression
    (117) Expression -> . Expression LESS Expression
    (118) Expression -> . Expression GREAT Expression
    (119) Expression -> . Expression LEQ Expression
    (120) Expression -> . Expression GEQ Expression
    (121) Expression -> . Expression PLUS Expression
    (122) Expression -> . Expression MINUS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression CARET Expression
    (125) Expression -> . Expression TIMES Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MOD Expression
    (128) Expression -> . Expression AMPERS Expression
    (129) Expression -> . Expression LL Expression
    (130) Expression -> . Expression GG Expression
    (131) Expression -> . Expression AMPCAR Expression
    (134) UnaryExpr -> . PrimaryExpr
    (135) UnaryExpr -> . UnaryOp UnaryExpr
    (97) PrimaryExpr -> . Operand
    (98) PrimaryExpr -> . Conversion
    (99) PrimaryExpr -> . PrimaryExpr Selector
    (100) PrimaryExpr -> . PrimaryExpr Index
    (101) PrimaryExpr -> . PrimaryExpr Slice
    (102) PrimaryExpr -> . PrimaryExpr Arguments
    (136) UnaryOp -> . PLUS
    (137) UnaryOp -> . MINUS
    (138) UnaryOp -> . TIMES
    (139) UnaryOp -> . AMPERS
    (140) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (96) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (95) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . IntLiteral
    (86) BasicLit -> . FloatLiteral
    (87) BasicLit -> . ImgLiteral
    (88) BasicLit -> . RuneLiteral
    (89) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (90) IntLiteral -> . INTEGER
    (91) FloatLiteral -> . FLOAT
    (92) ImgLiteral -> . IMAGINARY
    (93) RuneLiteral -> . RUNE
    (94) StringLiteral -> . STRING
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 104
    MINUS           shift and go to state 98
    TIMES           shift and go to state 112
    AMPERS          shift and go to state 118
    NOT             shift and go to state 103
    LPAREN          shift and go to state 115
    IDENTIFIER      shift and go to state 107
    TYPEX           shift and go to state 57
    INTEGER         shift and go to state 105
    FLOAT           shift and go to state 117
    IMAGINARY       shift and go to state 106
    RUNE            shift and go to state 92
    STRING          shift and go to state 99
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 93
    UnaryOp                        shift and go to state 102
    PrimaryExpr                    shift and go to state 119
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    FloatLiteral                   shift and go to state 96
    Type                           shift and go to state 97
    OperandName                    shift and go to state 100
    BasicLit                       shift and go to state 101
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    IntLiteral                     shift and go to state 108
    UnaryExpr                      shift and go to state 110
    RuneLiteral                    shift and go to state 111
    Operand                        shift and go to state 113
    Expression                     shift and go to state 223
    PointerType                    shift and go to state 66
    StringLiteral                  shift and go to state 94
    TypeLit                        shift and go to state 55
    ImgLiteral                     shift and go to state 109
    FunctionType                   shift and go to state 67

state 176

    (122) Expression -> Expression MINUS . Expression
    (112) Expression -> . UnaryExpr
    (113) Expression -> . Expression OROR Expression
    (114) Expression -> . Expression AMPAMP Expression
    (115) Expression -> . Expression EQEQ Expression
    (116) Expression -> . Expression NOTEQ Expression
    (117) Expression -> . Expression LESS Expression
    (118) Expression -> . Expression GREAT Expression
    (119) Expression -> . Expression LEQ Expression
    (120) Expression -> . Expression GEQ Expression
    (121) Expression -> . Expression PLUS Expression
    (122) Expression -> . Expression MINUS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression CARET Expression
    (125) Expression -> . Expression TIMES Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MOD Expression
    (128) Expression -> . Expression AMPERS Expression
    (129) Expression -> . Expression LL Expression
    (130) Expression -> . Expression GG Expression
    (131) Expression -> . Expression AMPCAR Expression
    (134) UnaryExpr -> . PrimaryExpr
    (135) UnaryExpr -> . UnaryOp UnaryExpr
    (97) PrimaryExpr -> . Operand
    (98) PrimaryExpr -> . Conversion
    (99) PrimaryExpr -> . PrimaryExpr Selector
    (100) PrimaryExpr -> . PrimaryExpr Index
    (101) PrimaryExpr -> . PrimaryExpr Slice
    (102) PrimaryExpr -> . PrimaryExpr Arguments
    (136) UnaryOp -> . PLUS
    (137) UnaryOp -> . MINUS
    (138) UnaryOp -> . TIMES
    (139) UnaryOp -> . AMPERS
    (140) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (96) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (95) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . IntLiteral
    (86) BasicLit -> . FloatLiteral
    (87) BasicLit -> . ImgLiteral
    (88) BasicLit -> . RuneLiteral
    (89) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (90) IntLiteral -> . INTEGER
    (91) FloatLiteral -> . FLOAT
    (92) ImgLiteral -> . IMAGINARY
    (93) RuneLiteral -> . RUNE
    (94) StringLiteral -> . STRING
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 104
    MINUS           shift and go to state 98
    TIMES           shift and go to state 112
    AMPERS          shift and go to state 118
    NOT             shift and go to state 103
    LPAREN          shift and go to state 115
    IDENTIFIER      shift and go to state 107
    TYPEX           shift and go to state 57
    INTEGER         shift and go to state 105
    FLOAT           shift and go to state 117
    IMAGINARY       shift and go to state 106
    RUNE            shift and go to state 92
    STRING          shift and go to state 99
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 93
    UnaryOp                        shift and go to state 102
    PrimaryExpr                    shift and go to state 119
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    FloatLiteral                   shift and go to state 96
    Type                           shift and go to state 97
    OperandName                    shift and go to state 100
    BasicLit                       shift and go to state 101
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    IntLiteral                     shift and go to state 108
    UnaryExpr                      shift and go to state 110
    RuneLiteral                    shift and go to state 111
    Operand                        shift and go to state 113
    Expression                     shift and go to state 224
    PointerType                    shift and go to state 66
    StringLiteral                  shift and go to state 94
    TypeLit                        shift and go to state 55
    ImgLiteral                     shift and go to state 109
    FunctionType                   shift and go to state 67

state 177

    (119) Expression -> Expression LEQ . Expression
    (112) Expression -> . UnaryExpr
    (113) Expression -> . Expression OROR Expression
    (114) Expression -> . Expression AMPAMP Expression
    (115) Expression -> . Expression EQEQ Expression
    (116) Expression -> . Expression NOTEQ Expression
    (117) Expression -> . Expression LESS Expression
    (118) Expression -> . Expression GREAT Expression
    (119) Expression -> . Expression LEQ Expression
    (120) Expression -> . Expression GEQ Expression
    (121) Expression -> . Expression PLUS Expression
    (122) Expression -> . Expression MINUS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression CARET Expression
    (125) Expression -> . Expression TIMES Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MOD Expression
    (128) Expression -> . Expression AMPERS Expression
    (129) Expression -> . Expression LL Expression
    (130) Expression -> . Expression GG Expression
    (131) Expression -> . Expression AMPCAR Expression
    (134) UnaryExpr -> . PrimaryExpr
    (135) UnaryExpr -> . UnaryOp UnaryExpr
    (97) PrimaryExpr -> . Operand
    (98) PrimaryExpr -> . Conversion
    (99) PrimaryExpr -> . PrimaryExpr Selector
    (100) PrimaryExpr -> . PrimaryExpr Index
    (101) PrimaryExpr -> . PrimaryExpr Slice
    (102) PrimaryExpr -> . PrimaryExpr Arguments
    (136) UnaryOp -> . PLUS
    (137) UnaryOp -> . MINUS
    (138) UnaryOp -> . TIMES
    (139) UnaryOp -> . AMPERS
    (140) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (96) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (95) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . IntLiteral
    (86) BasicLit -> . FloatLiteral
    (87) BasicLit -> . ImgLiteral
    (88) BasicLit -> . RuneLiteral
    (89) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (90) IntLiteral -> . INTEGER
    (91) FloatLiteral -> . FLOAT
    (92) ImgLiteral -> . IMAGINARY
    (93) RuneLiteral -> . RUNE
    (94) StringLiteral -> . STRING
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 104
    MINUS           shift and go to state 98
    TIMES           shift and go to state 112
    AMPERS          shift and go to state 118
    NOT             shift and go to state 103
    LPAREN          shift and go to state 115
    IDENTIFIER      shift and go to state 107
    TYPEX           shift and go to state 57
    INTEGER         shift and go to state 105
    FLOAT           shift and go to state 117
    IMAGINARY       shift and go to state 106
    RUNE            shift and go to state 92
    STRING          shift and go to state 99
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 93
    UnaryOp                        shift and go to state 102
    PrimaryExpr                    shift and go to state 119
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    FloatLiteral                   shift and go to state 96
    Type                           shift and go to state 97
    OperandName                    shift and go to state 100
    BasicLit                       shift and go to state 101
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    IntLiteral                     shift and go to state 108
    UnaryExpr                      shift and go to state 110
    RuneLiteral                    shift and go to state 111
    Operand                        shift and go to state 113
    Expression                     shift and go to state 225
    PointerType                    shift and go to state 66
    StringLiteral                  shift and go to state 94
    TypeLit                        shift and go to state 55
    ImgLiteral                     shift and go to state 109
    FunctionType                   shift and go to state 67

state 178

    (100) PrimaryExpr -> PrimaryExpr Index .

    DOT             reduce using rule 100 (PrimaryExpr -> PrimaryExpr Index .)
    LBRACK          reduce using rule 100 (PrimaryExpr -> PrimaryExpr Index .)
    LPAREN          reduce using rule 100 (PrimaryExpr -> PrimaryExpr Index .)
    RPAREN          reduce using rule 100 (PrimaryExpr -> PrimaryExpr Index .)
    OROR            reduce using rule 100 (PrimaryExpr -> PrimaryExpr Index .)
    AMPAMP          reduce using rule 100 (PrimaryExpr -> PrimaryExpr Index .)
    EQEQ            reduce using rule 100 (PrimaryExpr -> PrimaryExpr Index .)
    NOTEQ           reduce using rule 100 (PrimaryExpr -> PrimaryExpr Index .)
    LESS            reduce using rule 100 (PrimaryExpr -> PrimaryExpr Index .)
    GREAT           reduce using rule 100 (PrimaryExpr -> PrimaryExpr Index .)
    LEQ             reduce using rule 100 (PrimaryExpr -> PrimaryExpr Index .)
    GEQ             reduce using rule 100 (PrimaryExpr -> PrimaryExpr Index .)
    PLUS            reduce using rule 100 (PrimaryExpr -> PrimaryExpr Index .)
    MINUS           reduce using rule 100 (PrimaryExpr -> PrimaryExpr Index .)
    OR              reduce using rule 100 (PrimaryExpr -> PrimaryExpr Index .)
    CARET           reduce using rule 100 (PrimaryExpr -> PrimaryExpr Index .)
    TIMES           reduce using rule 100 (PrimaryExpr -> PrimaryExpr Index .)
    DIVIDE          reduce using rule 100 (PrimaryExpr -> PrimaryExpr Index .)
    MOD             reduce using rule 100 (PrimaryExpr -> PrimaryExpr Index .)
    AMPERS          reduce using rule 100 (PrimaryExpr -> PrimaryExpr Index .)
    LL              reduce using rule 100 (PrimaryExpr -> PrimaryExpr Index .)
    GG              reduce using rule 100 (PrimaryExpr -> PrimaryExpr Index .)
    AMPCAR          reduce using rule 100 (PrimaryExpr -> PrimaryExpr Index .)
    PLUSPLUS        reduce using rule 100 (PrimaryExpr -> PrimaryExpr Index .)
    MINUSMIN        reduce using rule 100 (PrimaryExpr -> PrimaryExpr Index .)
    COMMA           reduce using rule 100 (PrimaryExpr -> PrimaryExpr Index .)
    SEMICOL         reduce using rule 100 (PrimaryExpr -> PrimaryExpr Index .)
    PLUSEQ          reduce using rule 100 (PrimaryExpr -> PrimaryExpr Index .)
    MINUSEQ         reduce using rule 100 (PrimaryExpr -> PrimaryExpr Index .)
    TIMESEQ         reduce using rule 100 (PrimaryExpr -> PrimaryExpr Index .)
    DIVIDEEQ        reduce using rule 100 (PrimaryExpr -> PrimaryExpr Index .)
    MODEQ           reduce using rule 100 (PrimaryExpr -> PrimaryExpr Index .)
    AMPEQ           reduce using rule 100 (PrimaryExpr -> PrimaryExpr Index .)
    OREQ            reduce using rule 100 (PrimaryExpr -> PrimaryExpr Index .)
    CAREQ           reduce using rule 100 (PrimaryExpr -> PrimaryExpr Index .)
    LLEQ            reduce using rule 100 (PrimaryExpr -> PrimaryExpr Index .)
    GGEQ            reduce using rule 100 (PrimaryExpr -> PrimaryExpr Index .)
    EQUAL           reduce using rule 100 (PrimaryExpr -> PrimaryExpr Index .)
    RBRACK          reduce using rule 100 (PrimaryExpr -> PrimaryExpr Index .)
    COLON           reduce using rule 100 (PrimaryExpr -> PrimaryExpr Index .)
    LBRACE          reduce using rule 100 (PrimaryExpr -> PrimaryExpr Index .)


state 179

    (101) PrimaryExpr -> PrimaryExpr Slice .

    DOT             reduce using rule 101 (PrimaryExpr -> PrimaryExpr Slice .)
    LBRACK          reduce using rule 101 (PrimaryExpr -> PrimaryExpr Slice .)
    LPAREN          reduce using rule 101 (PrimaryExpr -> PrimaryExpr Slice .)
    RPAREN          reduce using rule 101 (PrimaryExpr -> PrimaryExpr Slice .)
    OROR            reduce using rule 101 (PrimaryExpr -> PrimaryExpr Slice .)
    AMPAMP          reduce using rule 101 (PrimaryExpr -> PrimaryExpr Slice .)
    EQEQ            reduce using rule 101 (PrimaryExpr -> PrimaryExpr Slice .)
    NOTEQ           reduce using rule 101 (PrimaryExpr -> PrimaryExpr Slice .)
    LESS            reduce using rule 101 (PrimaryExpr -> PrimaryExpr Slice .)
    GREAT           reduce using rule 101 (PrimaryExpr -> PrimaryExpr Slice .)
    LEQ             reduce using rule 101 (PrimaryExpr -> PrimaryExpr Slice .)
    GEQ             reduce using rule 101 (PrimaryExpr -> PrimaryExpr Slice .)
    PLUS            reduce using rule 101 (PrimaryExpr -> PrimaryExpr Slice .)
    MINUS           reduce using rule 101 (PrimaryExpr -> PrimaryExpr Slice .)
    OR              reduce using rule 101 (PrimaryExpr -> PrimaryExpr Slice .)
    CARET           reduce using rule 101 (PrimaryExpr -> PrimaryExpr Slice .)
    TIMES           reduce using rule 101 (PrimaryExpr -> PrimaryExpr Slice .)
    DIVIDE          reduce using rule 101 (PrimaryExpr -> PrimaryExpr Slice .)
    MOD             reduce using rule 101 (PrimaryExpr -> PrimaryExpr Slice .)
    AMPERS          reduce using rule 101 (PrimaryExpr -> PrimaryExpr Slice .)
    LL              reduce using rule 101 (PrimaryExpr -> PrimaryExpr Slice .)
    GG              reduce using rule 101 (PrimaryExpr -> PrimaryExpr Slice .)
    AMPCAR          reduce using rule 101 (PrimaryExpr -> PrimaryExpr Slice .)
    PLUSPLUS        reduce using rule 101 (PrimaryExpr -> PrimaryExpr Slice .)
    MINUSMIN        reduce using rule 101 (PrimaryExpr -> PrimaryExpr Slice .)
    COMMA           reduce using rule 101 (PrimaryExpr -> PrimaryExpr Slice .)
    SEMICOL         reduce using rule 101 (PrimaryExpr -> PrimaryExpr Slice .)
    PLUSEQ          reduce using rule 101 (PrimaryExpr -> PrimaryExpr Slice .)
    MINUSEQ         reduce using rule 101 (PrimaryExpr -> PrimaryExpr Slice .)
    TIMESEQ         reduce using rule 101 (PrimaryExpr -> PrimaryExpr Slice .)
    DIVIDEEQ        reduce using rule 101 (PrimaryExpr -> PrimaryExpr Slice .)
    MODEQ           reduce using rule 101 (PrimaryExpr -> PrimaryExpr Slice .)
    AMPEQ           reduce using rule 101 (PrimaryExpr -> PrimaryExpr Slice .)
    OREQ            reduce using rule 101 (PrimaryExpr -> PrimaryExpr Slice .)
    CAREQ           reduce using rule 101 (PrimaryExpr -> PrimaryExpr Slice .)
    LLEQ            reduce using rule 101 (PrimaryExpr -> PrimaryExpr Slice .)
    GGEQ            reduce using rule 101 (PrimaryExpr -> PrimaryExpr Slice .)
    EQUAL           reduce using rule 101 (PrimaryExpr -> PrimaryExpr Slice .)
    RBRACK          reduce using rule 101 (PrimaryExpr -> PrimaryExpr Slice .)
    COLON           reduce using rule 101 (PrimaryExpr -> PrimaryExpr Slice .)
    LBRACE          reduce using rule 101 (PrimaryExpr -> PrimaryExpr Slice .)


state 180

    (104) Index -> LBRACK . Expression RBRACK
    (105) Slice -> LBRACK . ExpressionOpt COLON ExpressionOpt RBRACK
    (112) Expression -> . UnaryExpr
    (113) Expression -> . Expression OROR Expression
    (114) Expression -> . Expression AMPAMP Expression
    (115) Expression -> . Expression EQEQ Expression
    (116) Expression -> . Expression NOTEQ Expression
    (117) Expression -> . Expression LESS Expression
    (118) Expression -> . Expression GREAT Expression
    (119) Expression -> . Expression LEQ Expression
    (120) Expression -> . Expression GEQ Expression
    (121) Expression -> . Expression PLUS Expression
    (122) Expression -> . Expression MINUS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression CARET Expression
    (125) Expression -> . Expression TIMES Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MOD Expression
    (128) Expression -> . Expression AMPERS Expression
    (129) Expression -> . Expression LL Expression
    (130) Expression -> . Expression GG Expression
    (131) Expression -> . Expression AMPCAR Expression
    (132) ExpressionOpt -> . Expression
    (133) ExpressionOpt -> . epsilon
    (134) UnaryExpr -> . PrimaryExpr
    (135) UnaryExpr -> . UnaryOp UnaryExpr
    (214) epsilon -> .
    (97) PrimaryExpr -> . Operand
    (98) PrimaryExpr -> . Conversion
    (99) PrimaryExpr -> . PrimaryExpr Selector
    (100) PrimaryExpr -> . PrimaryExpr Index
    (101) PrimaryExpr -> . PrimaryExpr Slice
    (102) PrimaryExpr -> . PrimaryExpr Arguments
    (136) UnaryOp -> . PLUS
    (137) UnaryOp -> . MINUS
    (138) UnaryOp -> . TIMES
    (139) UnaryOp -> . AMPERS
    (140) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (96) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (95) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . IntLiteral
    (86) BasicLit -> . FloatLiteral
    (87) BasicLit -> . ImgLiteral
    (88) BasicLit -> . RuneLiteral
    (89) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (90) IntLiteral -> . INTEGER
    (91) FloatLiteral -> . FLOAT
    (92) ImgLiteral -> . IMAGINARY
    (93) RuneLiteral -> . RUNE
    (94) StringLiteral -> . STRING
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    COLON           reduce using rule 214 (epsilon -> .)
    PLUS            shift and go to state 104
    MINUS           shift and go to state 98
    TIMES           shift and go to state 112
    AMPERS          shift and go to state 118
    NOT             shift and go to state 103
    LPAREN          shift and go to state 115
    IDENTIFIER      shift and go to state 107
    TYPEX           shift and go to state 57
    INTEGER         shift and go to state 105
    FLOAT           shift and go to state 117
    IMAGINARY       shift and go to state 106
    RUNE            shift and go to state 92
    STRING          shift and go to state 99
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 93
    UnaryOp                        shift and go to state 102
    PrimaryExpr                    shift and go to state 119
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    FloatLiteral                   shift and go to state 96
    Type                           shift and go to state 97
    OperandName                    shift and go to state 100
    BasicLit                       shift and go to state 101
    TypeName                       shift and go to state 56
    ExpressionOpt                  shift and go to state 226
    StructType                     shift and go to state 58
    IntLiteral                     shift and go to state 108
    epsilon                        shift and go to state 227
    UnaryExpr                      shift and go to state 110
    RuneLiteral                    shift and go to state 111
    Operand                        shift and go to state 113
    Expression                     shift and go to state 228
    PointerType                    shift and go to state 66
    StringLiteral                  shift and go to state 94
    TypeLit                        shift and go to state 55
    ImgLiteral                     shift and go to state 109
    FunctionType                   shift and go to state 67

state 181

    (99) PrimaryExpr -> PrimaryExpr Selector .

    DOT             reduce using rule 99 (PrimaryExpr -> PrimaryExpr Selector .)
    LBRACK          reduce using rule 99 (PrimaryExpr -> PrimaryExpr Selector .)
    LPAREN          reduce using rule 99 (PrimaryExpr -> PrimaryExpr Selector .)
    RPAREN          reduce using rule 99 (PrimaryExpr -> PrimaryExpr Selector .)
    OROR            reduce using rule 99 (PrimaryExpr -> PrimaryExpr Selector .)
    AMPAMP          reduce using rule 99 (PrimaryExpr -> PrimaryExpr Selector .)
    EQEQ            reduce using rule 99 (PrimaryExpr -> PrimaryExpr Selector .)
    NOTEQ           reduce using rule 99 (PrimaryExpr -> PrimaryExpr Selector .)
    LESS            reduce using rule 99 (PrimaryExpr -> PrimaryExpr Selector .)
    GREAT           reduce using rule 99 (PrimaryExpr -> PrimaryExpr Selector .)
    LEQ             reduce using rule 99 (PrimaryExpr -> PrimaryExpr Selector .)
    GEQ             reduce using rule 99 (PrimaryExpr -> PrimaryExpr Selector .)
    PLUS            reduce using rule 99 (PrimaryExpr -> PrimaryExpr Selector .)
    MINUS           reduce using rule 99 (PrimaryExpr -> PrimaryExpr Selector .)
    OR              reduce using rule 99 (PrimaryExpr -> PrimaryExpr Selector .)
    CARET           reduce using rule 99 (PrimaryExpr -> PrimaryExpr Selector .)
    TIMES           reduce using rule 99 (PrimaryExpr -> PrimaryExpr Selector .)
    DIVIDE          reduce using rule 99 (PrimaryExpr -> PrimaryExpr Selector .)
    MOD             reduce using rule 99 (PrimaryExpr -> PrimaryExpr Selector .)
    AMPERS          reduce using rule 99 (PrimaryExpr -> PrimaryExpr Selector .)
    LL              reduce using rule 99 (PrimaryExpr -> PrimaryExpr Selector .)
    GG              reduce using rule 99 (PrimaryExpr -> PrimaryExpr Selector .)
    AMPCAR          reduce using rule 99 (PrimaryExpr -> PrimaryExpr Selector .)
    PLUSPLUS        reduce using rule 99 (PrimaryExpr -> PrimaryExpr Selector .)
    MINUSMIN        reduce using rule 99 (PrimaryExpr -> PrimaryExpr Selector .)
    COMMA           reduce using rule 99 (PrimaryExpr -> PrimaryExpr Selector .)
    SEMICOL         reduce using rule 99 (PrimaryExpr -> PrimaryExpr Selector .)
    PLUSEQ          reduce using rule 99 (PrimaryExpr -> PrimaryExpr Selector .)
    MINUSEQ         reduce using rule 99 (PrimaryExpr -> PrimaryExpr Selector .)
    TIMESEQ         reduce using rule 99 (PrimaryExpr -> PrimaryExpr Selector .)
    DIVIDEEQ        reduce using rule 99 (PrimaryExpr -> PrimaryExpr Selector .)
    MODEQ           reduce using rule 99 (PrimaryExpr -> PrimaryExpr Selector .)
    AMPEQ           reduce using rule 99 (PrimaryExpr -> PrimaryExpr Selector .)
    OREQ            reduce using rule 99 (PrimaryExpr -> PrimaryExpr Selector .)
    CAREQ           reduce using rule 99 (PrimaryExpr -> PrimaryExpr Selector .)
    LLEQ            reduce using rule 99 (PrimaryExpr -> PrimaryExpr Selector .)
    GGEQ            reduce using rule 99 (PrimaryExpr -> PrimaryExpr Selector .)
    EQUAL           reduce using rule 99 (PrimaryExpr -> PrimaryExpr Selector .)
    RBRACK          reduce using rule 99 (PrimaryExpr -> PrimaryExpr Selector .)
    COLON           reduce using rule 99 (PrimaryExpr -> PrimaryExpr Selector .)
    LBRACE          reduce using rule 99 (PrimaryExpr -> PrimaryExpr Selector .)


state 182

    (102) PrimaryExpr -> PrimaryExpr Arguments .

    DOT             reduce using rule 102 (PrimaryExpr -> PrimaryExpr Arguments .)
    LBRACK          reduce using rule 102 (PrimaryExpr -> PrimaryExpr Arguments .)
    LPAREN          reduce using rule 102 (PrimaryExpr -> PrimaryExpr Arguments .)
    RPAREN          reduce using rule 102 (PrimaryExpr -> PrimaryExpr Arguments .)
    OROR            reduce using rule 102 (PrimaryExpr -> PrimaryExpr Arguments .)
    AMPAMP          reduce using rule 102 (PrimaryExpr -> PrimaryExpr Arguments .)
    EQEQ            reduce using rule 102 (PrimaryExpr -> PrimaryExpr Arguments .)
    NOTEQ           reduce using rule 102 (PrimaryExpr -> PrimaryExpr Arguments .)
    LESS            reduce using rule 102 (PrimaryExpr -> PrimaryExpr Arguments .)
    GREAT           reduce using rule 102 (PrimaryExpr -> PrimaryExpr Arguments .)
    LEQ             reduce using rule 102 (PrimaryExpr -> PrimaryExpr Arguments .)
    GEQ             reduce using rule 102 (PrimaryExpr -> PrimaryExpr Arguments .)
    PLUS            reduce using rule 102 (PrimaryExpr -> PrimaryExpr Arguments .)
    MINUS           reduce using rule 102 (PrimaryExpr -> PrimaryExpr Arguments .)
    OR              reduce using rule 102 (PrimaryExpr -> PrimaryExpr Arguments .)
    CARET           reduce using rule 102 (PrimaryExpr -> PrimaryExpr Arguments .)
    TIMES           reduce using rule 102 (PrimaryExpr -> PrimaryExpr Arguments .)
    DIVIDE          reduce using rule 102 (PrimaryExpr -> PrimaryExpr Arguments .)
    MOD             reduce using rule 102 (PrimaryExpr -> PrimaryExpr Arguments .)
    AMPERS          reduce using rule 102 (PrimaryExpr -> PrimaryExpr Arguments .)
    LL              reduce using rule 102 (PrimaryExpr -> PrimaryExpr Arguments .)
    GG              reduce using rule 102 (PrimaryExpr -> PrimaryExpr Arguments .)
    AMPCAR          reduce using rule 102 (PrimaryExpr -> PrimaryExpr Arguments .)
    PLUSPLUS        reduce using rule 102 (PrimaryExpr -> PrimaryExpr Arguments .)
    MINUSMIN        reduce using rule 102 (PrimaryExpr -> PrimaryExpr Arguments .)
    COMMA           reduce using rule 102 (PrimaryExpr -> PrimaryExpr Arguments .)
    SEMICOL         reduce using rule 102 (PrimaryExpr -> PrimaryExpr Arguments .)
    PLUSEQ          reduce using rule 102 (PrimaryExpr -> PrimaryExpr Arguments .)
    MINUSEQ         reduce using rule 102 (PrimaryExpr -> PrimaryExpr Arguments .)
    TIMESEQ         reduce using rule 102 (PrimaryExpr -> PrimaryExpr Arguments .)
    DIVIDEEQ        reduce using rule 102 (PrimaryExpr -> PrimaryExpr Arguments .)
    MODEQ           reduce using rule 102 (PrimaryExpr -> PrimaryExpr Arguments .)
    AMPEQ           reduce using rule 102 (PrimaryExpr -> PrimaryExpr Arguments .)
    OREQ            reduce using rule 102 (PrimaryExpr -> PrimaryExpr Arguments .)
    CAREQ           reduce using rule 102 (PrimaryExpr -> PrimaryExpr Arguments .)
    LLEQ            reduce using rule 102 (PrimaryExpr -> PrimaryExpr Arguments .)
    GGEQ            reduce using rule 102 (PrimaryExpr -> PrimaryExpr Arguments .)
    EQUAL           reduce using rule 102 (PrimaryExpr -> PrimaryExpr Arguments .)
    RBRACK          reduce using rule 102 (PrimaryExpr -> PrimaryExpr Arguments .)
    COLON           reduce using rule 102 (PrimaryExpr -> PrimaryExpr Arguments .)
    LBRACE          reduce using rule 102 (PrimaryExpr -> PrimaryExpr Arguments .)


state 183

    (106) Arguments -> LPAREN . ExpressionListTypeOpt RPAREN
    (107) ExpressionListTypeOpt -> . ExpressionList
    (108) ExpressionListTypeOpt -> . epsilon
    (109) ExpressionList -> . Expression ExpressionRep
    (214) epsilon -> .
    (112) Expression -> . UnaryExpr
    (113) Expression -> . Expression OROR Expression
    (114) Expression -> . Expression AMPAMP Expression
    (115) Expression -> . Expression EQEQ Expression
    (116) Expression -> . Expression NOTEQ Expression
    (117) Expression -> . Expression LESS Expression
    (118) Expression -> . Expression GREAT Expression
    (119) Expression -> . Expression LEQ Expression
    (120) Expression -> . Expression GEQ Expression
    (121) Expression -> . Expression PLUS Expression
    (122) Expression -> . Expression MINUS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression CARET Expression
    (125) Expression -> . Expression TIMES Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MOD Expression
    (128) Expression -> . Expression AMPERS Expression
    (129) Expression -> . Expression LL Expression
    (130) Expression -> . Expression GG Expression
    (131) Expression -> . Expression AMPCAR Expression
    (134) UnaryExpr -> . PrimaryExpr
    (135) UnaryExpr -> . UnaryOp UnaryExpr
    (97) PrimaryExpr -> . Operand
    (98) PrimaryExpr -> . Conversion
    (99) PrimaryExpr -> . PrimaryExpr Selector
    (100) PrimaryExpr -> . PrimaryExpr Index
    (101) PrimaryExpr -> . PrimaryExpr Slice
    (102) PrimaryExpr -> . PrimaryExpr Arguments
    (136) UnaryOp -> . PLUS
    (137) UnaryOp -> . MINUS
    (138) UnaryOp -> . TIMES
    (139) UnaryOp -> . AMPERS
    (140) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (96) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (95) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . IntLiteral
    (86) BasicLit -> . FloatLiteral
    (87) BasicLit -> . ImgLiteral
    (88) BasicLit -> . RuneLiteral
    (89) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (90) IntLiteral -> . INTEGER
    (91) FloatLiteral -> . FLOAT
    (92) ImgLiteral -> . IMAGINARY
    (93) RuneLiteral -> . RUNE
    (94) StringLiteral -> . STRING
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    RPAREN          reduce using rule 214 (epsilon -> .)
    PLUS            shift and go to state 104
    MINUS           shift and go to state 98
    TIMES           shift and go to state 112
    AMPERS          shift and go to state 118
    NOT             shift and go to state 103
    LPAREN          shift and go to state 115
    IDENTIFIER      shift and go to state 107
    TYPEX           shift and go to state 57
    INTEGER         shift and go to state 105
    FLOAT           shift and go to state 117
    IMAGINARY       shift and go to state 106
    RUNE            shift and go to state 92
    STRING          shift and go to state 99
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    UnaryOp                        shift and go to state 102
    Conversion                     shift and go to state 93
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    Operand                        shift and go to state 113
    FloatLiteral                   shift and go to state 96
    Type                           shift and go to state 97
    OperandName                    shift and go to state 100
    BasicLit                       shift and go to state 101
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    IntLiteral                     shift and go to state 108
    ImgLiteral                     shift and go to state 109
    epsilon                        shift and go to state 229
    UnaryExpr                      shift and go to state 110
    RuneLiteral                    shift and go to state 111
    ExpressionListTypeOpt          shift and go to state 231
    ExpressionList                 shift and go to state 230
    Expression                     shift and go to state 140
    PointerType                    shift and go to state 66
    StringLiteral                  shift and go to state 94
    TypeLit                        shift and go to state 55
    PrimaryExpr                    shift and go to state 119
    FunctionType                   shift and go to state 67

state 184

    (103) Selector -> DOT . IDENTIFIER

    IDENTIFIER      shift and go to state 232


state 185

    (57) IdentifierRep -> IdentifierRep COMMA IDENTIFIER .

    COMMA           reduce using rule 57 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    LPAREN          reduce using rule 57 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    TYPEX           reduce using rule 57 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    LBRACK          reduce using rule 57 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    STRUCT          reduce using rule 57 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    TIMES           reduce using rule 57 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    FUNC            reduce using rule 57 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    EQUAL           reduce using rule 57 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    SEMICOL         reduce using rule 57 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)


state 186

    (4) Type -> LPAREN Type . RPAREN
    (33) ParametersList -> Type .
    (39) ParameterDecl -> Type .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 149
    COMMA           reduce using rule 39 (ParameterDecl -> Type .)

  ! RPAREN          [ reduce using rule 33 (ParametersList -> Type .) ]


state 187

    (41) StatementList -> StatementRep .
    (42) StatementRep -> StatementRep . Statement SEMICOL
    (141) Statement -> . Declaration
    (142) Statement -> . LabeledStmt
    (143) Statement -> . SimpleStmt
    (144) Statement -> . ReturnStmt
    (145) Statement -> . BreakStmt
    (146) Statement -> . ContinueStmt
    (147) Statement -> . GotoStmt
    (148) Statement -> . Block
    (149) Statement -> . IfStmt
    (150) Statement -> . ForStmt
    (44) Declaration -> . ConstDecl
    (45) Declaration -> . TypeDecl
    (46) Declaration -> . VarDecl
    (156) LabeledStmt -> . Label COLON Statement
    (151) SimpleStmt -> . epsilon
    (152) SimpleStmt -> . ExpressionStmt
    (153) SimpleStmt -> . IncDecStmt
    (154) SimpleStmt -> . Assignment
    (155) SimpleStmt -> . ShortVarDecl
    (190) ReturnStmt -> . RETURN ExpressionListPureOpt
    (193) BreakStmt -> . BREAK LabelOpt
    (194) ContinueStmt -> . CONTINUE LabelOpt
    (197) GotoStmt -> . GOTO Label
    (40) Block -> . LBRACE StatementList RBRACE
    (174) IfStmt -> . IF Expression Block ElseOpt
    (178) ForStmt -> . FOR ConditionBlockOpt Block
    (49) ConstDecl -> . CONST ConstSpec
    (50) ConstDecl -> . CONST LPAREN ConstSpecRep RPAREN
    (59) TypeDecl -> . TYPE TypeSpec
    (60) TypeDecl -> . TYPE LPAREN TypeSpecRep RPAREN
    (67) VarDecl -> . VAR VarSpec
    (68) VarDecl -> . VAR LPAREN VarSpecRep RPAREN
    (157) Label -> . IDENTIFIER
    (214) epsilon -> .
    (158) ExpressionStmt -> . Expression
    (159) IncDecStmt -> . Expression PLUSPLUS
    (160) IncDecStmt -> . Expression MINUSMIN
    (161) Assignment -> . ExpressionList assign_op ExpressionList
    (75) ShortVarDecl -> . IDENTIFIER COLONEQ Expression
    (112) Expression -> . UnaryExpr
    (113) Expression -> . Expression OROR Expression
    (114) Expression -> . Expression AMPAMP Expression
    (115) Expression -> . Expression EQEQ Expression
    (116) Expression -> . Expression NOTEQ Expression
    (117) Expression -> . Expression LESS Expression
    (118) Expression -> . Expression GREAT Expression
    (119) Expression -> . Expression LEQ Expression
    (120) Expression -> . Expression GEQ Expression
    (121) Expression -> . Expression PLUS Expression
    (122) Expression -> . Expression MINUS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression CARET Expression
    (125) Expression -> . Expression TIMES Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MOD Expression
    (128) Expression -> . Expression AMPERS Expression
    (129) Expression -> . Expression LL Expression
    (130) Expression -> . Expression GG Expression
    (131) Expression -> . Expression AMPCAR Expression
    (109) ExpressionList -> . Expression ExpressionRep
    (134) UnaryExpr -> . PrimaryExpr
    (135) UnaryExpr -> . UnaryOp UnaryExpr
    (97) PrimaryExpr -> . Operand
    (98) PrimaryExpr -> . Conversion
    (99) PrimaryExpr -> . PrimaryExpr Selector
    (100) PrimaryExpr -> . PrimaryExpr Index
    (101) PrimaryExpr -> . PrimaryExpr Slice
    (102) PrimaryExpr -> . PrimaryExpr Arguments
    (136) UnaryOp -> . PLUS
    (137) UnaryOp -> . MINUS
    (138) UnaryOp -> . TIMES
    (139) UnaryOp -> . AMPERS
    (140) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (96) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (95) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . IntLiteral
    (86) BasicLit -> . FloatLiteral
    (87) BasicLit -> . ImgLiteral
    (88) BasicLit -> . RuneLiteral
    (89) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (90) IntLiteral -> . INTEGER
    (91) FloatLiteral -> . FLOAT
    (92) ImgLiteral -> . IMAGINARY
    (93) RuneLiteral -> . RUNE
    (94) StringLiteral -> . STRING
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    RBRACE          reduce using rule 41 (StatementList -> StatementRep .)
    RETURN          shift and go to state 238
    BREAK           shift and go to state 251
    CONTINUE        shift and go to state 244
    GOTO            shift and go to state 255
    LBRACE          shift and go to state 128
    IF              shift and go to state 257
    FOR             shift and go to state 242
    CONST           shift and go to state 14
    TYPE            shift and go to state 23
    VAR             shift and go to state 21
    IDENTIFIER      shift and go to state 246
    SEMICOL         reduce using rule 214 (epsilon -> .)
    PLUS            shift and go to state 104
    MINUS           shift and go to state 98
    TIMES           shift and go to state 112
    AMPERS          shift and go to state 118
    NOT             shift and go to state 103
    LPAREN          shift and go to state 115
    TYPEX           shift and go to state 57
    INTEGER         shift and go to state 105
    FLOAT           shift and go to state 117
    IMAGINARY       shift and go to state 106
    RUNE            shift and go to state 92
    STRING          shift and go to state 99
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    UnaryOp                        shift and go to state 102
    ContinueStmt                   shift and go to state 233
    Conversion                     shift and go to state 93
    SimpleStmt                     shift and go to state 253
    Label                          shift and go to state 239
    ExpressionStmt                 shift and go to state 234
    PointerType                    shift and go to state 66
    ForStmt                        shift and go to state 254
    Statement                      shift and go to state 235
    RuneLiteral                    shift and go to state 111
    ImgLiteral                     shift and go to state 109
    FloatLiteral                   shift and go to state 96
    Type                           shift and go to state 97
    IfStmt                         shift and go to state 248
    OperandName                    shift and go to state 100
    ArrayType                      shift and go to state 53
    Assignment                     shift and go to state 236
    TypeName                       shift and go to state 56
    IncDecStmt                     shift and go to state 240
    Declaration                    shift and go to state 245
    FunctionType                   shift and go to state 67
    StringLiteral                  shift and go to state 94
    GotoStmt                       shift and go to state 241
    StructType                     shift and go to state 58
    IntLiteral                     shift and go to state 108
    TypeDecl                       shift and go to state 19
    LabeledStmt                    shift and go to state 237
    epsilon                        shift and go to state 247
    UnaryExpr                      shift and go to state 110
    Operand                        shift and go to state 113
    ExpressionList                 shift and go to state 249
    Expression                     shift and go to state 250
    ShortVarDecl                   shift and go to state 256
    Block                          shift and go to state 243
    BreakStmt                      shift and go to state 258
    VarDecl                        shift and go to state 22
    Literal                        shift and go to state 95
    TypeLit                        shift and go to state 55
    BasicLit                       shift and go to state 101
    PrimaryExpr                    shift and go to state 119
    ReturnStmt                     shift and go to state 252
    ConstDecl                      shift and go to state 18

state 188

    (43) StatementRep -> epsilon .

    RETURN          reduce using rule 43 (StatementRep -> epsilon .)
    BREAK           reduce using rule 43 (StatementRep -> epsilon .)
    CONTINUE        reduce using rule 43 (StatementRep -> epsilon .)
    GOTO            reduce using rule 43 (StatementRep -> epsilon .)
    LBRACE          reduce using rule 43 (StatementRep -> epsilon .)
    IF              reduce using rule 43 (StatementRep -> epsilon .)
    FOR             reduce using rule 43 (StatementRep -> epsilon .)
    CONST           reduce using rule 43 (StatementRep -> epsilon .)
    TYPE            reduce using rule 43 (StatementRep -> epsilon .)
    VAR             reduce using rule 43 (StatementRep -> epsilon .)
    IDENTIFIER      reduce using rule 43 (StatementRep -> epsilon .)
    PLUS            reduce using rule 43 (StatementRep -> epsilon .)
    MINUS           reduce using rule 43 (StatementRep -> epsilon .)
    TIMES           reduce using rule 43 (StatementRep -> epsilon .)
    AMPERS          reduce using rule 43 (StatementRep -> epsilon .)
    NOT             reduce using rule 43 (StatementRep -> epsilon .)
    LPAREN          reduce using rule 43 (StatementRep -> epsilon .)
    TYPEX           reduce using rule 43 (StatementRep -> epsilon .)
    INTEGER         reduce using rule 43 (StatementRep -> epsilon .)
    FLOAT           reduce using rule 43 (StatementRep -> epsilon .)
    IMAGINARY       reduce using rule 43 (StatementRep -> epsilon .)
    RUNE            reduce using rule 43 (StatementRep -> epsilon .)
    STRING          reduce using rule 43 (StatementRep -> epsilon .)
    LBRACK          reduce using rule 43 (StatementRep -> epsilon .)
    STRUCT          reduce using rule 43 (StatementRep -> epsilon .)
    FUNC            reduce using rule 43 (StatementRep -> epsilon .)
    SEMICOL         reduce using rule 43 (StatementRep -> epsilon .)
    RBRACE          reduce using rule 43 (StatementRep -> epsilon .)


state 189

    (40) Block -> LBRACE StatementList . RBRACE

    RBRACE          shift and go to state 259


state 190

    (30) Parameters -> LPAREN ParameterListOpt RPAREN .

    LPAREN          reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    TYPEX           reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    LBRACK          reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    STRUCT          reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    TIMES           reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    FUNC            reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    EQUAL           reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    SEMICOL         reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    RPAREN          reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    LBRACE          reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    COMMA           reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    STRING          reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)


state 191

    (34) ParametersList -> IdentifierList Type .
    (38) ParameterDecl -> IdentifierList Type .

    RPAREN          reduce using rule 34 (ParametersList -> IdentifierList Type .)
    COMMA           reduce using rule 38 (ParameterDecl -> IdentifierList Type .)


state 192

    (36) ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA . ParameterDecl
    (38) ParameterDecl -> . IdentifierList Type
    (39) ParameterDecl -> . Type
    (56) IdentifierList -> . IDENTIFIER IdentifierRep
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    IDENTIFIER      shift and go to state 34
    LPAREN          shift and go to state 61
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    ParameterDecl                  shift and go to state 262
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    TypeLit                        shift and go to state 55
    IdentifierList                 shift and go to state 260
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    Type                           shift and go to state 261

state 193

    (37) ParameterDeclCommaRep -> ParameterDecl COMMA . ParameterDecl
    (38) ParameterDecl -> . IdentifierList Type
    (39) ParameterDecl -> . Type
    (56) IdentifierList -> . IDENTIFIER IdentifierRep
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    IDENTIFIER      shift and go to state 34
    LPAREN          shift and go to state 61
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    TypeLit                        shift and go to state 55
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    IdentifierList                 shift and go to state 260
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    Type                           shift and go to state 261
    ParameterDecl                  shift and go to state 263

state 194

    (69) VarSpecRep -> VarSpecRep VarSpec SEMICOL .

    RPAREN          reduce using rule 69 (VarSpecRep -> VarSpecRep VarSpec SEMICOL .)
    IDENTIFIER      reduce using rule 69 (VarSpecRep -> VarSpecRep VarSpec SEMICOL .)


state 195

    (109) ExpressionList -> Expression ExpressionRep .
    (110) ExpressionRep -> ExpressionRep . COMMA Expression

    SEMICOL         reduce using rule 109 (ExpressionList -> Expression ExpressionRep .)
    LBRACE          reduce using rule 109 (ExpressionList -> Expression ExpressionRep .)
    PLUSEQ          reduce using rule 109 (ExpressionList -> Expression ExpressionRep .)
    MINUSEQ         reduce using rule 109 (ExpressionList -> Expression ExpressionRep .)
    TIMESEQ         reduce using rule 109 (ExpressionList -> Expression ExpressionRep .)
    DIVIDEEQ        reduce using rule 109 (ExpressionList -> Expression ExpressionRep .)
    MODEQ           reduce using rule 109 (ExpressionList -> Expression ExpressionRep .)
    AMPEQ           reduce using rule 109 (ExpressionList -> Expression ExpressionRep .)
    OREQ            reduce using rule 109 (ExpressionList -> Expression ExpressionRep .)
    CAREQ           reduce using rule 109 (ExpressionList -> Expression ExpressionRep .)
    LLEQ            reduce using rule 109 (ExpressionList -> Expression ExpressionRep .)
    GGEQ            reduce using rule 109 (ExpressionList -> Expression ExpressionRep .)
    EQUAL           reduce using rule 109 (ExpressionList -> Expression ExpressionRep .)
    RPAREN          reduce using rule 109 (ExpressionList -> Expression ExpressionRep .)
    COMMA           shift and go to state 264


state 196

    (111) ExpressionRep -> epsilon .

    COMMA           reduce using rule 111 (ExpressionRep -> epsilon .)
    SEMICOL         reduce using rule 111 (ExpressionRep -> epsilon .)
    RPAREN          reduce using rule 111 (ExpressionRep -> epsilon .)
    LBRACE          reduce using rule 111 (ExpressionRep -> epsilon .)
    PLUSEQ          reduce using rule 111 (ExpressionRep -> epsilon .)
    MINUSEQ         reduce using rule 111 (ExpressionRep -> epsilon .)
    TIMESEQ         reduce using rule 111 (ExpressionRep -> epsilon .)
    DIVIDEEQ        reduce using rule 111 (ExpressionRep -> epsilon .)
    MODEQ           reduce using rule 111 (ExpressionRep -> epsilon .)
    AMPEQ           reduce using rule 111 (ExpressionRep -> epsilon .)
    OREQ            reduce using rule 111 (ExpressionRep -> epsilon .)
    CAREQ           reduce using rule 111 (ExpressionRep -> epsilon .)
    LLEQ            reduce using rule 111 (ExpressionRep -> epsilon .)
    GGEQ            reduce using rule 111 (ExpressionRep -> epsilon .)
    EQUAL           reduce using rule 111 (ExpressionRep -> epsilon .)


state 197

    (73) ExpressionListOpt -> EQUAL ExpressionList .

    SEMICOL         reduce using rule 73 (ExpressionListOpt -> EQUAL ExpressionList .)


state 198

    (61) TypeSpecRep -> TypeSpecRep TypeSpec SEMICOL .

    RPAREN          reduce using rule 61 (TypeSpecRep -> TypeSpecRep TypeSpec SEMICOL .)
    IDENTIFIER      reduce using rule 61 (TypeSpecRep -> TypeSpecRep TypeSpec SEMICOL .)


state 199

    (16) FieldDeclRep -> FieldDeclRep FieldDecl . SEMICOL

    SEMICOL         shift and go to state 265


state 200

    (18) FieldDecl -> IdentifierList . Type TagOpt
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 61
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    Type                           shift and go to state 266
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    TypeLit                        shift and go to state 55

state 201

    (15) StructType -> STRUCT LBRACE FieldDeclRep RBRACE .

    LPAREN          reduce using rule 15 (StructType -> STRUCT LBRACE FieldDeclRep RBRACE .)
    EQUAL           reduce using rule 15 (StructType -> STRUCT LBRACE FieldDeclRep RBRACE .)
    SEMICOL         reduce using rule 15 (StructType -> STRUCT LBRACE FieldDeclRep RBRACE .)
    RPAREN          reduce using rule 15 (StructType -> STRUCT LBRACE FieldDeclRep RBRACE .)
    LBRACE          reduce using rule 15 (StructType -> STRUCT LBRACE FieldDeclRep RBRACE .)
    COMMA           reduce using rule 15 (StructType -> STRUCT LBRACE FieldDeclRep RBRACE .)
    STRING          reduce using rule 15 (StructType -> STRUCT LBRACE FieldDeclRep RBRACE .)


state 202

    (96) Conversion -> Type LPAREN Expression . RPAREN
    (113) Expression -> Expression . OROR Expression
    (114) Expression -> Expression . AMPAMP Expression
    (115) Expression -> Expression . EQEQ Expression
    (116) Expression -> Expression . NOTEQ Expression
    (117) Expression -> Expression . LESS Expression
    (118) Expression -> Expression . GREAT Expression
    (119) Expression -> Expression . LEQ Expression
    (120) Expression -> Expression . GEQ Expression
    (121) Expression -> Expression . PLUS Expression
    (122) Expression -> Expression . MINUS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . CARET Expression
    (125) Expression -> Expression . TIMES Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MOD Expression
    (128) Expression -> Expression . AMPERS Expression
    (129) Expression -> Expression . LL Expression
    (130) Expression -> Expression . GG Expression
    (131) Expression -> Expression . AMPCAR Expression

    RPAREN          shift and go to state 267
    OROR            shift and go to state 159
    AMPAMP          shift and go to state 174
    EQEQ            shift and go to state 165
    NOTEQ           shift and go to state 171
    LESS            shift and go to state 164
    GREAT           shift and go to state 161
    LEQ             shift and go to state 177
    GEQ             shift and go to state 168
    PLUS            shift and go to state 172
    MINUS           shift and go to state 176
    OR              shift and go to state 169
    CARET           shift and go to state 160
    TIMES           shift and go to state 175
    DIVIDE          shift and go to state 162
    MOD             shift and go to state 173
    AMPERS          shift and go to state 167
    LL              shift and go to state 166
    GG              shift and go to state 170
    AMPCAR          shift and go to state 163


state 203

    (14) ElementType -> Type .

    EQUAL           reduce using rule 14 (ElementType -> Type .)
    SEMICOL         reduce using rule 14 (ElementType -> Type .)
    RPAREN          reduce using rule 14 (ElementType -> Type .)
    LBRACE          reduce using rule 14 (ElementType -> Type .)
    COMMA           reduce using rule 14 (ElementType -> Type .)
    LPAREN          reduce using rule 14 (ElementType -> Type .)
    STRING          reduce using rule 14 (ElementType -> Type .)


state 204

    (12) ArrayType -> LBRACK ArrayLength RBRACK ElementType .

    RPAREN          reduce using rule 12 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    LPAREN          reduce using rule 12 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    SEMICOL         reduce using rule 12 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    EQUAL           reduce using rule 12 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    LBRACE          reduce using rule 12 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    COMMA           reduce using rule 12 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    STRING          reduce using rule 12 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)


state 205

    (22) PointerType -> TIMES . BaseType
    (138) UnaryOp -> TIMES .
    (23) BaseType -> . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            reduce using rule 138 (UnaryOp -> TIMES .)
    MINUS           reduce using rule 138 (UnaryOp -> TIMES .)
    TIMES           reduce using rule 138 (UnaryOp -> TIMES .)
    AMPERS          reduce using rule 138 (UnaryOp -> TIMES .)
    NOT             reduce using rule 138 (UnaryOp -> TIMES .)
    LPAREN          reduce using rule 138 (UnaryOp -> TIMES .)
    IDENTIFIER      reduce using rule 138 (UnaryOp -> TIMES .)
    TYPEX           reduce using rule 138 (UnaryOp -> TIMES .)
    INTEGER         reduce using rule 138 (UnaryOp -> TIMES .)
    FLOAT           reduce using rule 138 (UnaryOp -> TIMES .)
    IMAGINARY       reduce using rule 138 (UnaryOp -> TIMES .)
    RUNE            reduce using rule 138 (UnaryOp -> TIMES .)
    STRING          reduce using rule 138 (UnaryOp -> TIMES .)
    LBRACK          reduce using rule 138 (UnaryOp -> TIMES .)
    STRUCT          reduce using rule 138 (UnaryOp -> TIMES .)
    FUNC            reduce using rule 138 (UnaryOp -> TIMES .)

  ! LPAREN          [ shift and go to state 61 ]
  ! TYPEX           [ shift and go to state 57 ]
  ! LBRACK          [ shift and go to state 64 ]
  ! STRUCT          [ shift and go to state 63 ]
  ! TIMES           [ shift and go to state 60 ]
  ! FUNC            [ shift and go to state 52 ]

    StructType                     shift and go to state 58
    BaseType                       shift and go to state 88
    Type                           shift and go to state 87
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    TypeLit                        shift and go to state 55

state 206

    (83) Operand -> LPAREN Expression RPAREN .

    DOT             reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    LBRACK          reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    LPAREN          reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    OROR            reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    AMPAMP          reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    EQEQ            reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    NOTEQ           reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    LESS            reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    GREAT           reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    LEQ             reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    GEQ             reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    PLUS            reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    MINUS           reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    OR              reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    CARET           reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    TIMES           reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    DIVIDE          reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    MOD             reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    AMPERS          reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    LL              reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    GG              reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    AMPCAR          reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    RBRACK          reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    COMMA           reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    SEMICOL         reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    RPAREN          reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    COLON           reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    PLUSPLUS        reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    MINUSMIN        reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    PLUSEQ          reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    MINUSEQ         reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    TIMESEQ         reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    DIVIDEEQ        reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    MODEQ           reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    AMPEQ           reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    OREQ            reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    CAREQ           reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    LLEQ            reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    GGEQ            reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    EQUAL           reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    LBRACE          reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)


state 207

    (113) Expression -> Expression OROR Expression .
    (113) Expression -> Expression . OROR Expression
    (114) Expression -> Expression . AMPAMP Expression
    (115) Expression -> Expression . EQEQ Expression
    (116) Expression -> Expression . NOTEQ Expression
    (117) Expression -> Expression . LESS Expression
    (118) Expression -> Expression . GREAT Expression
    (119) Expression -> Expression . LEQ Expression
    (120) Expression -> Expression . GEQ Expression
    (121) Expression -> Expression . PLUS Expression
    (122) Expression -> Expression . MINUS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . CARET Expression
    (125) Expression -> Expression . TIMES Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MOD Expression
    (128) Expression -> Expression . AMPERS Expression
    (129) Expression -> Expression . LL Expression
    (130) Expression -> Expression . GG Expression
    (131) Expression -> Expression . AMPCAR Expression

    PLUSPLUS        reduce using rule 113 (Expression -> Expression OROR Expression .)
    MINUSMIN        reduce using rule 113 (Expression -> Expression OROR Expression .)
    OROR            reduce using rule 113 (Expression -> Expression OROR Expression .)
    COMMA           reduce using rule 113 (Expression -> Expression OROR Expression .)
    SEMICOL         reduce using rule 113 (Expression -> Expression OROR Expression .)
    PLUSEQ          reduce using rule 113 (Expression -> Expression OROR Expression .)
    MINUSEQ         reduce using rule 113 (Expression -> Expression OROR Expression .)
    TIMESEQ         reduce using rule 113 (Expression -> Expression OROR Expression .)
    DIVIDEEQ        reduce using rule 113 (Expression -> Expression OROR Expression .)
    MODEQ           reduce using rule 113 (Expression -> Expression OROR Expression .)
    AMPEQ           reduce using rule 113 (Expression -> Expression OROR Expression .)
    OREQ            reduce using rule 113 (Expression -> Expression OROR Expression .)
    CAREQ           reduce using rule 113 (Expression -> Expression OROR Expression .)
    LLEQ            reduce using rule 113 (Expression -> Expression OROR Expression .)
    GGEQ            reduce using rule 113 (Expression -> Expression OROR Expression .)
    EQUAL           reduce using rule 113 (Expression -> Expression OROR Expression .)
    RBRACK          reduce using rule 113 (Expression -> Expression OROR Expression .)
    RPAREN          reduce using rule 113 (Expression -> Expression OROR Expression .)
    COLON           reduce using rule 113 (Expression -> Expression OROR Expression .)
    LBRACE          reduce using rule 113 (Expression -> Expression OROR Expression .)
    AMPAMP          shift and go to state 174
    EQEQ            shift and go to state 165
    NOTEQ           shift and go to state 171
    LESS            shift and go to state 164
    GREAT           shift and go to state 161
    LEQ             shift and go to state 177
    GEQ             shift and go to state 168
    PLUS            shift and go to state 172
    MINUS           shift and go to state 176
    OR              shift and go to state 169
    CARET           shift and go to state 160
    TIMES           shift and go to state 175
    DIVIDE          shift and go to state 162
    MOD             shift and go to state 173
    AMPERS          shift and go to state 167
    LL              shift and go to state 166
    GG              shift and go to state 170
    AMPCAR          shift and go to state 163

  ! AMPAMP          [ reduce using rule 113 (Expression -> Expression OROR Expression .) ]
  ! EQEQ            [ reduce using rule 113 (Expression -> Expression OROR Expression .) ]
  ! NOTEQ           [ reduce using rule 113 (Expression -> Expression OROR Expression .) ]
  ! LESS            [ reduce using rule 113 (Expression -> Expression OROR Expression .) ]
  ! GREAT           [ reduce using rule 113 (Expression -> Expression OROR Expression .) ]
  ! LEQ             [ reduce using rule 113 (Expression -> Expression OROR Expression .) ]
  ! GEQ             [ reduce using rule 113 (Expression -> Expression OROR Expression .) ]
  ! PLUS            [ reduce using rule 113 (Expression -> Expression OROR Expression .) ]
  ! MINUS           [ reduce using rule 113 (Expression -> Expression OROR Expression .) ]
  ! OR              [ reduce using rule 113 (Expression -> Expression OROR Expression .) ]
  ! CARET           [ reduce using rule 113 (Expression -> Expression OROR Expression .) ]
  ! TIMES           [ reduce using rule 113 (Expression -> Expression OROR Expression .) ]
  ! DIVIDE          [ reduce using rule 113 (Expression -> Expression OROR Expression .) ]
  ! MOD             [ reduce using rule 113 (Expression -> Expression OROR Expression .) ]
  ! AMPERS          [ reduce using rule 113 (Expression -> Expression OROR Expression .) ]
  ! LL              [ reduce using rule 113 (Expression -> Expression OROR Expression .) ]
  ! GG              [ reduce using rule 113 (Expression -> Expression OROR Expression .) ]
  ! AMPCAR          [ reduce using rule 113 (Expression -> Expression OROR Expression .) ]
  ! OROR            [ shift and go to state 159 ]


state 208

    (124) Expression -> Expression CARET Expression .
    (113) Expression -> Expression . OROR Expression
    (114) Expression -> Expression . AMPAMP Expression
    (115) Expression -> Expression . EQEQ Expression
    (116) Expression -> Expression . NOTEQ Expression
    (117) Expression -> Expression . LESS Expression
    (118) Expression -> Expression . GREAT Expression
    (119) Expression -> Expression . LEQ Expression
    (120) Expression -> Expression . GEQ Expression
    (121) Expression -> Expression . PLUS Expression
    (122) Expression -> Expression . MINUS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . CARET Expression
    (125) Expression -> Expression . TIMES Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MOD Expression
    (128) Expression -> Expression . AMPERS Expression
    (129) Expression -> Expression . LL Expression
    (130) Expression -> Expression . GG Expression
    (131) Expression -> Expression . AMPCAR Expression

    PLUSPLUS        reduce using rule 124 (Expression -> Expression CARET Expression .)
    MINUSMIN        reduce using rule 124 (Expression -> Expression CARET Expression .)
    OROR            reduce using rule 124 (Expression -> Expression CARET Expression .)
    AMPAMP          reduce using rule 124 (Expression -> Expression CARET Expression .)
    EQEQ            reduce using rule 124 (Expression -> Expression CARET Expression .)
    NOTEQ           reduce using rule 124 (Expression -> Expression CARET Expression .)
    LESS            reduce using rule 124 (Expression -> Expression CARET Expression .)
    GREAT           reduce using rule 124 (Expression -> Expression CARET Expression .)
    LEQ             reduce using rule 124 (Expression -> Expression CARET Expression .)
    GEQ             reduce using rule 124 (Expression -> Expression CARET Expression .)
    PLUS            reduce using rule 124 (Expression -> Expression CARET Expression .)
    MINUS           reduce using rule 124 (Expression -> Expression CARET Expression .)
    OR              reduce using rule 124 (Expression -> Expression CARET Expression .)
    CARET           reduce using rule 124 (Expression -> Expression CARET Expression .)
    COMMA           reduce using rule 124 (Expression -> Expression CARET Expression .)
    SEMICOL         reduce using rule 124 (Expression -> Expression CARET Expression .)
    PLUSEQ          reduce using rule 124 (Expression -> Expression CARET Expression .)
    MINUSEQ         reduce using rule 124 (Expression -> Expression CARET Expression .)
    TIMESEQ         reduce using rule 124 (Expression -> Expression CARET Expression .)
    DIVIDEEQ        reduce using rule 124 (Expression -> Expression CARET Expression .)
    MODEQ           reduce using rule 124 (Expression -> Expression CARET Expression .)
    AMPEQ           reduce using rule 124 (Expression -> Expression CARET Expression .)
    OREQ            reduce using rule 124 (Expression -> Expression CARET Expression .)
    CAREQ           reduce using rule 124 (Expression -> Expression CARET Expression .)
    LLEQ            reduce using rule 124 (Expression -> Expression CARET Expression .)
    GGEQ            reduce using rule 124 (Expression -> Expression CARET Expression .)
    EQUAL           reduce using rule 124 (Expression -> Expression CARET Expression .)
    RBRACK          reduce using rule 124 (Expression -> Expression CARET Expression .)
    RPAREN          reduce using rule 124 (Expression -> Expression CARET Expression .)
    COLON           reduce using rule 124 (Expression -> Expression CARET Expression .)
    LBRACE          reduce using rule 124 (Expression -> Expression CARET Expression .)
    TIMES           shift and go to state 175
    DIVIDE          shift and go to state 162
    MOD             shift and go to state 173
    AMPERS          shift and go to state 167
    LL              shift and go to state 166
    GG              shift and go to state 170
    AMPCAR          shift and go to state 163

  ! TIMES           [ reduce using rule 124 (Expression -> Expression CARET Expression .) ]
  ! DIVIDE          [ reduce using rule 124 (Expression -> Expression CARET Expression .) ]
  ! MOD             [ reduce using rule 124 (Expression -> Expression CARET Expression .) ]
  ! AMPERS          [ reduce using rule 124 (Expression -> Expression CARET Expression .) ]
  ! LL              [ reduce using rule 124 (Expression -> Expression CARET Expression .) ]
  ! GG              [ reduce using rule 124 (Expression -> Expression CARET Expression .) ]
  ! AMPCAR          [ reduce using rule 124 (Expression -> Expression CARET Expression .) ]
  ! OROR            [ shift and go to state 159 ]
  ! AMPAMP          [ shift and go to state 174 ]
  ! EQEQ            [ shift and go to state 165 ]
  ! NOTEQ           [ shift and go to state 171 ]
  ! LESS            [ shift and go to state 164 ]
  ! GREAT           [ shift and go to state 161 ]
  ! LEQ             [ shift and go to state 177 ]
  ! GEQ             [ shift and go to state 168 ]
  ! PLUS            [ shift and go to state 172 ]
  ! MINUS           [ shift and go to state 176 ]
  ! OR              [ shift and go to state 169 ]
  ! CARET           [ shift and go to state 160 ]


state 209

    (118) Expression -> Expression GREAT Expression .
    (113) Expression -> Expression . OROR Expression
    (114) Expression -> Expression . AMPAMP Expression
    (115) Expression -> Expression . EQEQ Expression
    (116) Expression -> Expression . NOTEQ Expression
    (117) Expression -> Expression . LESS Expression
    (118) Expression -> Expression . GREAT Expression
    (119) Expression -> Expression . LEQ Expression
    (120) Expression -> Expression . GEQ Expression
    (121) Expression -> Expression . PLUS Expression
    (122) Expression -> Expression . MINUS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . CARET Expression
    (125) Expression -> Expression . TIMES Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MOD Expression
    (128) Expression -> Expression . AMPERS Expression
    (129) Expression -> Expression . LL Expression
    (130) Expression -> Expression . GG Expression
    (131) Expression -> Expression . AMPCAR Expression

    PLUSPLUS        reduce using rule 118 (Expression -> Expression GREAT Expression .)
    MINUSMIN        reduce using rule 118 (Expression -> Expression GREAT Expression .)
    OROR            reduce using rule 118 (Expression -> Expression GREAT Expression .)
    AMPAMP          reduce using rule 118 (Expression -> Expression GREAT Expression .)
    EQEQ            reduce using rule 118 (Expression -> Expression GREAT Expression .)
    NOTEQ           reduce using rule 118 (Expression -> Expression GREAT Expression .)
    LESS            reduce using rule 118 (Expression -> Expression GREAT Expression .)
    GREAT           reduce using rule 118 (Expression -> Expression GREAT Expression .)
    LEQ             reduce using rule 118 (Expression -> Expression GREAT Expression .)
    GEQ             reduce using rule 118 (Expression -> Expression GREAT Expression .)
    COMMA           reduce using rule 118 (Expression -> Expression GREAT Expression .)
    SEMICOL         reduce using rule 118 (Expression -> Expression GREAT Expression .)
    PLUSEQ          reduce using rule 118 (Expression -> Expression GREAT Expression .)
    MINUSEQ         reduce using rule 118 (Expression -> Expression GREAT Expression .)
    TIMESEQ         reduce using rule 118 (Expression -> Expression GREAT Expression .)
    DIVIDEEQ        reduce using rule 118 (Expression -> Expression GREAT Expression .)
    MODEQ           reduce using rule 118 (Expression -> Expression GREAT Expression .)
    AMPEQ           reduce using rule 118 (Expression -> Expression GREAT Expression .)
    OREQ            reduce using rule 118 (Expression -> Expression GREAT Expression .)
    CAREQ           reduce using rule 118 (Expression -> Expression GREAT Expression .)
    LLEQ            reduce using rule 118 (Expression -> Expression GREAT Expression .)
    GGEQ            reduce using rule 118 (Expression -> Expression GREAT Expression .)
    EQUAL           reduce using rule 118 (Expression -> Expression GREAT Expression .)
    RBRACK          reduce using rule 118 (Expression -> Expression GREAT Expression .)
    RPAREN          reduce using rule 118 (Expression -> Expression GREAT Expression .)
    COLON           reduce using rule 118 (Expression -> Expression GREAT Expression .)
    LBRACE          reduce using rule 118 (Expression -> Expression GREAT Expression .)
    PLUS            shift and go to state 172
    MINUS           shift and go to state 176
    OR              shift and go to state 169
    CARET           shift and go to state 160
    TIMES           shift and go to state 175
    DIVIDE          shift and go to state 162
    MOD             shift and go to state 173
    AMPERS          shift and go to state 167
    LL              shift and go to state 166
    GG              shift and go to state 170
    AMPCAR          shift and go to state 163

  ! PLUS            [ reduce using rule 118 (Expression -> Expression GREAT Expression .) ]
  ! MINUS           [ reduce using rule 118 (Expression -> Expression GREAT Expression .) ]
  ! OR              [ reduce using rule 118 (Expression -> Expression GREAT Expression .) ]
  ! CARET           [ reduce using rule 118 (Expression -> Expression GREAT Expression .) ]
  ! TIMES           [ reduce using rule 118 (Expression -> Expression GREAT Expression .) ]
  ! DIVIDE          [ reduce using rule 118 (Expression -> Expression GREAT Expression .) ]
  ! MOD             [ reduce using rule 118 (Expression -> Expression GREAT Expression .) ]
  ! AMPERS          [ reduce using rule 118 (Expression -> Expression GREAT Expression .) ]
  ! LL              [ reduce using rule 118 (Expression -> Expression GREAT Expression .) ]
  ! GG              [ reduce using rule 118 (Expression -> Expression GREAT Expression .) ]
  ! AMPCAR          [ reduce using rule 118 (Expression -> Expression GREAT Expression .) ]
  ! OROR            [ shift and go to state 159 ]
  ! AMPAMP          [ shift and go to state 174 ]
  ! EQEQ            [ shift and go to state 165 ]
  ! NOTEQ           [ shift and go to state 171 ]
  ! LESS            [ shift and go to state 164 ]
  ! GREAT           [ shift and go to state 161 ]
  ! LEQ             [ shift and go to state 177 ]
  ! GEQ             [ shift and go to state 168 ]


state 210

    (126) Expression -> Expression DIVIDE Expression .
    (113) Expression -> Expression . OROR Expression
    (114) Expression -> Expression . AMPAMP Expression
    (115) Expression -> Expression . EQEQ Expression
    (116) Expression -> Expression . NOTEQ Expression
    (117) Expression -> Expression . LESS Expression
    (118) Expression -> Expression . GREAT Expression
    (119) Expression -> Expression . LEQ Expression
    (120) Expression -> Expression . GEQ Expression
    (121) Expression -> Expression . PLUS Expression
    (122) Expression -> Expression . MINUS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . CARET Expression
    (125) Expression -> Expression . TIMES Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MOD Expression
    (128) Expression -> Expression . AMPERS Expression
    (129) Expression -> Expression . LL Expression
    (130) Expression -> Expression . GG Expression
    (131) Expression -> Expression . AMPCAR Expression

    PLUSPLUS        reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    MINUSMIN        reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    OROR            reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    AMPAMP          reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    EQEQ            reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    NOTEQ           reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    LESS            reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    GREAT           reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    LEQ             reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    GEQ             reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    PLUS            reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    MINUS           reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    OR              reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    CARET           reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    TIMES           reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    DIVIDE          reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    MOD             reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    AMPERS          reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    LL              reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    GG              reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    AMPCAR          reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    COMMA           reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    SEMICOL         reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    PLUSEQ          reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    MINUSEQ         reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    TIMESEQ         reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    DIVIDEEQ        reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    MODEQ           reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    AMPEQ           reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    OREQ            reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    CAREQ           reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    LLEQ            reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    GGEQ            reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    EQUAL           reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    RBRACK          reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    RPAREN          reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    COLON           reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    LBRACE          reduce using rule 126 (Expression -> Expression DIVIDE Expression .)

  ! OROR            [ shift and go to state 159 ]
  ! AMPAMP          [ shift and go to state 174 ]
  ! EQEQ            [ shift and go to state 165 ]
  ! NOTEQ           [ shift and go to state 171 ]
  ! LESS            [ shift and go to state 164 ]
  ! GREAT           [ shift and go to state 161 ]
  ! LEQ             [ shift and go to state 177 ]
  ! GEQ             [ shift and go to state 168 ]
  ! PLUS            [ shift and go to state 172 ]
  ! MINUS           [ shift and go to state 176 ]
  ! OR              [ shift and go to state 169 ]
  ! CARET           [ shift and go to state 160 ]
  ! TIMES           [ shift and go to state 175 ]
  ! DIVIDE          [ shift and go to state 162 ]
  ! MOD             [ shift and go to state 173 ]
  ! AMPERS          [ shift and go to state 167 ]
  ! LL              [ shift and go to state 166 ]
  ! GG              [ shift and go to state 170 ]
  ! AMPCAR          [ shift and go to state 163 ]


state 211

    (131) Expression -> Expression AMPCAR Expression .
    (113) Expression -> Expression . OROR Expression
    (114) Expression -> Expression . AMPAMP Expression
    (115) Expression -> Expression . EQEQ Expression
    (116) Expression -> Expression . NOTEQ Expression
    (117) Expression -> Expression . LESS Expression
    (118) Expression -> Expression . GREAT Expression
    (119) Expression -> Expression . LEQ Expression
    (120) Expression -> Expression . GEQ Expression
    (121) Expression -> Expression . PLUS Expression
    (122) Expression -> Expression . MINUS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . CARET Expression
    (125) Expression -> Expression . TIMES Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MOD Expression
    (128) Expression -> Expression . AMPERS Expression
    (129) Expression -> Expression . LL Expression
    (130) Expression -> Expression . GG Expression
    (131) Expression -> Expression . AMPCAR Expression

    PLUSPLUS        reduce using rule 131 (Expression -> Expression AMPCAR Expression .)
    MINUSMIN        reduce using rule 131 (Expression -> Expression AMPCAR Expression .)
    OROR            reduce using rule 131 (Expression -> Expression AMPCAR Expression .)
    AMPAMP          reduce using rule 131 (Expression -> Expression AMPCAR Expression .)
    EQEQ            reduce using rule 131 (Expression -> Expression AMPCAR Expression .)
    NOTEQ           reduce using rule 131 (Expression -> Expression AMPCAR Expression .)
    LESS            reduce using rule 131 (Expression -> Expression AMPCAR Expression .)
    GREAT           reduce using rule 131 (Expression -> Expression AMPCAR Expression .)
    LEQ             reduce using rule 131 (Expression -> Expression AMPCAR Expression .)
    GEQ             reduce using rule 131 (Expression -> Expression AMPCAR Expression .)
    PLUS            reduce using rule 131 (Expression -> Expression AMPCAR Expression .)
    MINUS           reduce using rule 131 (Expression -> Expression AMPCAR Expression .)
    OR              reduce using rule 131 (Expression -> Expression AMPCAR Expression .)
    CARET           reduce using rule 131 (Expression -> Expression AMPCAR Expression .)
    TIMES           reduce using rule 131 (Expression -> Expression AMPCAR Expression .)
    DIVIDE          reduce using rule 131 (Expression -> Expression AMPCAR Expression .)
    MOD             reduce using rule 131 (Expression -> Expression AMPCAR Expression .)
    AMPERS          reduce using rule 131 (Expression -> Expression AMPCAR Expression .)
    LL              reduce using rule 131 (Expression -> Expression AMPCAR Expression .)
    GG              reduce using rule 131 (Expression -> Expression AMPCAR Expression .)
    AMPCAR          reduce using rule 131 (Expression -> Expression AMPCAR Expression .)
    COMMA           reduce using rule 131 (Expression -> Expression AMPCAR Expression .)
    SEMICOL         reduce using rule 131 (Expression -> Expression AMPCAR Expression .)
    PLUSEQ          reduce using rule 131 (Expression -> Expression AMPCAR Expression .)
    MINUSEQ         reduce using rule 131 (Expression -> Expression AMPCAR Expression .)
    TIMESEQ         reduce using rule 131 (Expression -> Expression AMPCAR Expression .)
    DIVIDEEQ        reduce using rule 131 (Expression -> Expression AMPCAR Expression .)
    MODEQ           reduce using rule 131 (Expression -> Expression AMPCAR Expression .)
    AMPEQ           reduce using rule 131 (Expression -> Expression AMPCAR Expression .)
    OREQ            reduce using rule 131 (Expression -> Expression AMPCAR Expression .)
    CAREQ           reduce using rule 131 (Expression -> Expression AMPCAR Expression .)
    LLEQ            reduce using rule 131 (Expression -> Expression AMPCAR Expression .)
    GGEQ            reduce using rule 131 (Expression -> Expression AMPCAR Expression .)
    EQUAL           reduce using rule 131 (Expression -> Expression AMPCAR Expression .)
    RBRACK          reduce using rule 131 (Expression -> Expression AMPCAR Expression .)
    RPAREN          reduce using rule 131 (Expression -> Expression AMPCAR Expression .)
    COLON           reduce using rule 131 (Expression -> Expression AMPCAR Expression .)
    LBRACE          reduce using rule 131 (Expression -> Expression AMPCAR Expression .)

  ! OROR            [ shift and go to state 159 ]
  ! AMPAMP          [ shift and go to state 174 ]
  ! EQEQ            [ shift and go to state 165 ]
  ! NOTEQ           [ shift and go to state 171 ]
  ! LESS            [ shift and go to state 164 ]
  ! GREAT           [ shift and go to state 161 ]
  ! LEQ             [ shift and go to state 177 ]
  ! GEQ             [ shift and go to state 168 ]
  ! PLUS            [ shift and go to state 172 ]
  ! MINUS           [ shift and go to state 176 ]
  ! OR              [ shift and go to state 169 ]
  ! CARET           [ shift and go to state 160 ]
  ! TIMES           [ shift and go to state 175 ]
  ! DIVIDE          [ shift and go to state 162 ]
  ! MOD             [ shift and go to state 173 ]
  ! AMPERS          [ shift and go to state 167 ]
  ! LL              [ shift and go to state 166 ]
  ! GG              [ shift and go to state 170 ]
  ! AMPCAR          [ shift and go to state 163 ]


state 212

    (117) Expression -> Expression LESS Expression .
    (113) Expression -> Expression . OROR Expression
    (114) Expression -> Expression . AMPAMP Expression
    (115) Expression -> Expression . EQEQ Expression
    (116) Expression -> Expression . NOTEQ Expression
    (117) Expression -> Expression . LESS Expression
    (118) Expression -> Expression . GREAT Expression
    (119) Expression -> Expression . LEQ Expression
    (120) Expression -> Expression . GEQ Expression
    (121) Expression -> Expression . PLUS Expression
    (122) Expression -> Expression . MINUS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . CARET Expression
    (125) Expression -> Expression . TIMES Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MOD Expression
    (128) Expression -> Expression . AMPERS Expression
    (129) Expression -> Expression . LL Expression
    (130) Expression -> Expression . GG Expression
    (131) Expression -> Expression . AMPCAR Expression

    PLUSPLUS        reduce using rule 117 (Expression -> Expression LESS Expression .)
    MINUSMIN        reduce using rule 117 (Expression -> Expression LESS Expression .)
    OROR            reduce using rule 117 (Expression -> Expression LESS Expression .)
    AMPAMP          reduce using rule 117 (Expression -> Expression LESS Expression .)
    EQEQ            reduce using rule 117 (Expression -> Expression LESS Expression .)
    NOTEQ           reduce using rule 117 (Expression -> Expression LESS Expression .)
    LESS            reduce using rule 117 (Expression -> Expression LESS Expression .)
    GREAT           reduce using rule 117 (Expression -> Expression LESS Expression .)
    LEQ             reduce using rule 117 (Expression -> Expression LESS Expression .)
    GEQ             reduce using rule 117 (Expression -> Expression LESS Expression .)
    COMMA           reduce using rule 117 (Expression -> Expression LESS Expression .)
    SEMICOL         reduce using rule 117 (Expression -> Expression LESS Expression .)
    PLUSEQ          reduce using rule 117 (Expression -> Expression LESS Expression .)
    MINUSEQ         reduce using rule 117 (Expression -> Expression LESS Expression .)
    TIMESEQ         reduce using rule 117 (Expression -> Expression LESS Expression .)
    DIVIDEEQ        reduce using rule 117 (Expression -> Expression LESS Expression .)
    MODEQ           reduce using rule 117 (Expression -> Expression LESS Expression .)
    AMPEQ           reduce using rule 117 (Expression -> Expression LESS Expression .)
    OREQ            reduce using rule 117 (Expression -> Expression LESS Expression .)
    CAREQ           reduce using rule 117 (Expression -> Expression LESS Expression .)
    LLEQ            reduce using rule 117 (Expression -> Expression LESS Expression .)
    GGEQ            reduce using rule 117 (Expression -> Expression LESS Expression .)
    EQUAL           reduce using rule 117 (Expression -> Expression LESS Expression .)
    RBRACK          reduce using rule 117 (Expression -> Expression LESS Expression .)
    RPAREN          reduce using rule 117 (Expression -> Expression LESS Expression .)
    COLON           reduce using rule 117 (Expression -> Expression LESS Expression .)
    LBRACE          reduce using rule 117 (Expression -> Expression LESS Expression .)
    PLUS            shift and go to state 172
    MINUS           shift and go to state 176
    OR              shift and go to state 169
    CARET           shift and go to state 160
    TIMES           shift and go to state 175
    DIVIDE          shift and go to state 162
    MOD             shift and go to state 173
    AMPERS          shift and go to state 167
    LL              shift and go to state 166
    GG              shift and go to state 170
    AMPCAR          shift and go to state 163

  ! PLUS            [ reduce using rule 117 (Expression -> Expression LESS Expression .) ]
  ! MINUS           [ reduce using rule 117 (Expression -> Expression LESS Expression .) ]
  ! OR              [ reduce using rule 117 (Expression -> Expression LESS Expression .) ]
  ! CARET           [ reduce using rule 117 (Expression -> Expression LESS Expression .) ]
  ! TIMES           [ reduce using rule 117 (Expression -> Expression LESS Expression .) ]
  ! DIVIDE          [ reduce using rule 117 (Expression -> Expression LESS Expression .) ]
  ! MOD             [ reduce using rule 117 (Expression -> Expression LESS Expression .) ]
  ! AMPERS          [ reduce using rule 117 (Expression -> Expression LESS Expression .) ]
  ! LL              [ reduce using rule 117 (Expression -> Expression LESS Expression .) ]
  ! GG              [ reduce using rule 117 (Expression -> Expression LESS Expression .) ]
  ! AMPCAR          [ reduce using rule 117 (Expression -> Expression LESS Expression .) ]
  ! OROR            [ shift and go to state 159 ]
  ! AMPAMP          [ shift and go to state 174 ]
  ! EQEQ            [ shift and go to state 165 ]
  ! NOTEQ           [ shift and go to state 171 ]
  ! LESS            [ shift and go to state 164 ]
  ! GREAT           [ shift and go to state 161 ]
  ! LEQ             [ shift and go to state 177 ]
  ! GEQ             [ shift and go to state 168 ]


state 213

    (115) Expression -> Expression EQEQ Expression .
    (113) Expression -> Expression . OROR Expression
    (114) Expression -> Expression . AMPAMP Expression
    (115) Expression -> Expression . EQEQ Expression
    (116) Expression -> Expression . NOTEQ Expression
    (117) Expression -> Expression . LESS Expression
    (118) Expression -> Expression . GREAT Expression
    (119) Expression -> Expression . LEQ Expression
    (120) Expression -> Expression . GEQ Expression
    (121) Expression -> Expression . PLUS Expression
    (122) Expression -> Expression . MINUS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . CARET Expression
    (125) Expression -> Expression . TIMES Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MOD Expression
    (128) Expression -> Expression . AMPERS Expression
    (129) Expression -> Expression . LL Expression
    (130) Expression -> Expression . GG Expression
    (131) Expression -> Expression . AMPCAR Expression

    PLUSPLUS        reduce using rule 115 (Expression -> Expression EQEQ Expression .)
    MINUSMIN        reduce using rule 115 (Expression -> Expression EQEQ Expression .)
    OROR            reduce using rule 115 (Expression -> Expression EQEQ Expression .)
    AMPAMP          reduce using rule 115 (Expression -> Expression EQEQ Expression .)
    EQEQ            reduce using rule 115 (Expression -> Expression EQEQ Expression .)
    NOTEQ           reduce using rule 115 (Expression -> Expression EQEQ Expression .)
    LESS            reduce using rule 115 (Expression -> Expression EQEQ Expression .)
    GREAT           reduce using rule 115 (Expression -> Expression EQEQ Expression .)
    LEQ             reduce using rule 115 (Expression -> Expression EQEQ Expression .)
    GEQ             reduce using rule 115 (Expression -> Expression EQEQ Expression .)
    COMMA           reduce using rule 115 (Expression -> Expression EQEQ Expression .)
    SEMICOL         reduce using rule 115 (Expression -> Expression EQEQ Expression .)
    PLUSEQ          reduce using rule 115 (Expression -> Expression EQEQ Expression .)
    MINUSEQ         reduce using rule 115 (Expression -> Expression EQEQ Expression .)
    TIMESEQ         reduce using rule 115 (Expression -> Expression EQEQ Expression .)
    DIVIDEEQ        reduce using rule 115 (Expression -> Expression EQEQ Expression .)
    MODEQ           reduce using rule 115 (Expression -> Expression EQEQ Expression .)
    AMPEQ           reduce using rule 115 (Expression -> Expression EQEQ Expression .)
    OREQ            reduce using rule 115 (Expression -> Expression EQEQ Expression .)
    CAREQ           reduce using rule 115 (Expression -> Expression EQEQ Expression .)
    LLEQ            reduce using rule 115 (Expression -> Expression EQEQ Expression .)
    GGEQ            reduce using rule 115 (Expression -> Expression EQEQ Expression .)
    EQUAL           reduce using rule 115 (Expression -> Expression EQEQ Expression .)
    RBRACK          reduce using rule 115 (Expression -> Expression EQEQ Expression .)
    RPAREN          reduce using rule 115 (Expression -> Expression EQEQ Expression .)
    COLON           reduce using rule 115 (Expression -> Expression EQEQ Expression .)
    LBRACE          reduce using rule 115 (Expression -> Expression EQEQ Expression .)
    PLUS            shift and go to state 172
    MINUS           shift and go to state 176
    OR              shift and go to state 169
    CARET           shift and go to state 160
    TIMES           shift and go to state 175
    DIVIDE          shift and go to state 162
    MOD             shift and go to state 173
    AMPERS          shift and go to state 167
    LL              shift and go to state 166
    GG              shift and go to state 170
    AMPCAR          shift and go to state 163

  ! PLUS            [ reduce using rule 115 (Expression -> Expression EQEQ Expression .) ]
  ! MINUS           [ reduce using rule 115 (Expression -> Expression EQEQ Expression .) ]
  ! OR              [ reduce using rule 115 (Expression -> Expression EQEQ Expression .) ]
  ! CARET           [ reduce using rule 115 (Expression -> Expression EQEQ Expression .) ]
  ! TIMES           [ reduce using rule 115 (Expression -> Expression EQEQ Expression .) ]
  ! DIVIDE          [ reduce using rule 115 (Expression -> Expression EQEQ Expression .) ]
  ! MOD             [ reduce using rule 115 (Expression -> Expression EQEQ Expression .) ]
  ! AMPERS          [ reduce using rule 115 (Expression -> Expression EQEQ Expression .) ]
  ! LL              [ reduce using rule 115 (Expression -> Expression EQEQ Expression .) ]
  ! GG              [ reduce using rule 115 (Expression -> Expression EQEQ Expression .) ]
  ! AMPCAR          [ reduce using rule 115 (Expression -> Expression EQEQ Expression .) ]
  ! OROR            [ shift and go to state 159 ]
  ! AMPAMP          [ shift and go to state 174 ]
  ! EQEQ            [ shift and go to state 165 ]
  ! NOTEQ           [ shift and go to state 171 ]
  ! LESS            [ shift and go to state 164 ]
  ! GREAT           [ shift and go to state 161 ]
  ! LEQ             [ shift and go to state 177 ]
  ! GEQ             [ shift and go to state 168 ]


state 214

    (129) Expression -> Expression LL Expression .
    (113) Expression -> Expression . OROR Expression
    (114) Expression -> Expression . AMPAMP Expression
    (115) Expression -> Expression . EQEQ Expression
    (116) Expression -> Expression . NOTEQ Expression
    (117) Expression -> Expression . LESS Expression
    (118) Expression -> Expression . GREAT Expression
    (119) Expression -> Expression . LEQ Expression
    (120) Expression -> Expression . GEQ Expression
    (121) Expression -> Expression . PLUS Expression
    (122) Expression -> Expression . MINUS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . CARET Expression
    (125) Expression -> Expression . TIMES Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MOD Expression
    (128) Expression -> Expression . AMPERS Expression
    (129) Expression -> Expression . LL Expression
    (130) Expression -> Expression . GG Expression
    (131) Expression -> Expression . AMPCAR Expression

    PLUSPLUS        reduce using rule 129 (Expression -> Expression LL Expression .)
    MINUSMIN        reduce using rule 129 (Expression -> Expression LL Expression .)
    OROR            reduce using rule 129 (Expression -> Expression LL Expression .)
    AMPAMP          reduce using rule 129 (Expression -> Expression LL Expression .)
    EQEQ            reduce using rule 129 (Expression -> Expression LL Expression .)
    NOTEQ           reduce using rule 129 (Expression -> Expression LL Expression .)
    LESS            reduce using rule 129 (Expression -> Expression LL Expression .)
    GREAT           reduce using rule 129 (Expression -> Expression LL Expression .)
    LEQ             reduce using rule 129 (Expression -> Expression LL Expression .)
    GEQ             reduce using rule 129 (Expression -> Expression LL Expression .)
    PLUS            reduce using rule 129 (Expression -> Expression LL Expression .)
    MINUS           reduce using rule 129 (Expression -> Expression LL Expression .)
    OR              reduce using rule 129 (Expression -> Expression LL Expression .)
    CARET           reduce using rule 129 (Expression -> Expression LL Expression .)
    TIMES           reduce using rule 129 (Expression -> Expression LL Expression .)
    DIVIDE          reduce using rule 129 (Expression -> Expression LL Expression .)
    MOD             reduce using rule 129 (Expression -> Expression LL Expression .)
    AMPERS          reduce using rule 129 (Expression -> Expression LL Expression .)
    LL              reduce using rule 129 (Expression -> Expression LL Expression .)
    GG              reduce using rule 129 (Expression -> Expression LL Expression .)
    AMPCAR          reduce using rule 129 (Expression -> Expression LL Expression .)
    COMMA           reduce using rule 129 (Expression -> Expression LL Expression .)
    SEMICOL         reduce using rule 129 (Expression -> Expression LL Expression .)
    PLUSEQ          reduce using rule 129 (Expression -> Expression LL Expression .)
    MINUSEQ         reduce using rule 129 (Expression -> Expression LL Expression .)
    TIMESEQ         reduce using rule 129 (Expression -> Expression LL Expression .)
    DIVIDEEQ        reduce using rule 129 (Expression -> Expression LL Expression .)
    MODEQ           reduce using rule 129 (Expression -> Expression LL Expression .)
    AMPEQ           reduce using rule 129 (Expression -> Expression LL Expression .)
    OREQ            reduce using rule 129 (Expression -> Expression LL Expression .)
    CAREQ           reduce using rule 129 (Expression -> Expression LL Expression .)
    LLEQ            reduce using rule 129 (Expression -> Expression LL Expression .)
    GGEQ            reduce using rule 129 (Expression -> Expression LL Expression .)
    EQUAL           reduce using rule 129 (Expression -> Expression LL Expression .)
    RBRACK          reduce using rule 129 (Expression -> Expression LL Expression .)
    RPAREN          reduce using rule 129 (Expression -> Expression LL Expression .)
    COLON           reduce using rule 129 (Expression -> Expression LL Expression .)
    LBRACE          reduce using rule 129 (Expression -> Expression LL Expression .)

  ! OROR            [ shift and go to state 159 ]
  ! AMPAMP          [ shift and go to state 174 ]
  ! EQEQ            [ shift and go to state 165 ]
  ! NOTEQ           [ shift and go to state 171 ]
  ! LESS            [ shift and go to state 164 ]
  ! GREAT           [ shift and go to state 161 ]
  ! LEQ             [ shift and go to state 177 ]
  ! GEQ             [ shift and go to state 168 ]
  ! PLUS            [ shift and go to state 172 ]
  ! MINUS           [ shift and go to state 176 ]
  ! OR              [ shift and go to state 169 ]
  ! CARET           [ shift and go to state 160 ]
  ! TIMES           [ shift and go to state 175 ]
  ! DIVIDE          [ shift and go to state 162 ]
  ! MOD             [ shift and go to state 173 ]
  ! AMPERS          [ shift and go to state 167 ]
  ! LL              [ shift and go to state 166 ]
  ! GG              [ shift and go to state 170 ]
  ! AMPCAR          [ shift and go to state 163 ]


state 215

    (128) Expression -> Expression AMPERS Expression .
    (113) Expression -> Expression . OROR Expression
    (114) Expression -> Expression . AMPAMP Expression
    (115) Expression -> Expression . EQEQ Expression
    (116) Expression -> Expression . NOTEQ Expression
    (117) Expression -> Expression . LESS Expression
    (118) Expression -> Expression . GREAT Expression
    (119) Expression -> Expression . LEQ Expression
    (120) Expression -> Expression . GEQ Expression
    (121) Expression -> Expression . PLUS Expression
    (122) Expression -> Expression . MINUS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . CARET Expression
    (125) Expression -> Expression . TIMES Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MOD Expression
    (128) Expression -> Expression . AMPERS Expression
    (129) Expression -> Expression . LL Expression
    (130) Expression -> Expression . GG Expression
    (131) Expression -> Expression . AMPCAR Expression

    PLUSPLUS        reduce using rule 128 (Expression -> Expression AMPERS Expression .)
    MINUSMIN        reduce using rule 128 (Expression -> Expression AMPERS Expression .)
    OROR            reduce using rule 128 (Expression -> Expression AMPERS Expression .)
    AMPAMP          reduce using rule 128 (Expression -> Expression AMPERS Expression .)
    EQEQ            reduce using rule 128 (Expression -> Expression AMPERS Expression .)
    NOTEQ           reduce using rule 128 (Expression -> Expression AMPERS Expression .)
    LESS            reduce using rule 128 (Expression -> Expression AMPERS Expression .)
    GREAT           reduce using rule 128 (Expression -> Expression AMPERS Expression .)
    LEQ             reduce using rule 128 (Expression -> Expression AMPERS Expression .)
    GEQ             reduce using rule 128 (Expression -> Expression AMPERS Expression .)
    PLUS            reduce using rule 128 (Expression -> Expression AMPERS Expression .)
    MINUS           reduce using rule 128 (Expression -> Expression AMPERS Expression .)
    OR              reduce using rule 128 (Expression -> Expression AMPERS Expression .)
    CARET           reduce using rule 128 (Expression -> Expression AMPERS Expression .)
    TIMES           reduce using rule 128 (Expression -> Expression AMPERS Expression .)
    DIVIDE          reduce using rule 128 (Expression -> Expression AMPERS Expression .)
    MOD             reduce using rule 128 (Expression -> Expression AMPERS Expression .)
    AMPERS          reduce using rule 128 (Expression -> Expression AMPERS Expression .)
    LL              reduce using rule 128 (Expression -> Expression AMPERS Expression .)
    GG              reduce using rule 128 (Expression -> Expression AMPERS Expression .)
    AMPCAR          reduce using rule 128 (Expression -> Expression AMPERS Expression .)
    COMMA           reduce using rule 128 (Expression -> Expression AMPERS Expression .)
    SEMICOL         reduce using rule 128 (Expression -> Expression AMPERS Expression .)
    PLUSEQ          reduce using rule 128 (Expression -> Expression AMPERS Expression .)
    MINUSEQ         reduce using rule 128 (Expression -> Expression AMPERS Expression .)
    TIMESEQ         reduce using rule 128 (Expression -> Expression AMPERS Expression .)
    DIVIDEEQ        reduce using rule 128 (Expression -> Expression AMPERS Expression .)
    MODEQ           reduce using rule 128 (Expression -> Expression AMPERS Expression .)
    AMPEQ           reduce using rule 128 (Expression -> Expression AMPERS Expression .)
    OREQ            reduce using rule 128 (Expression -> Expression AMPERS Expression .)
    CAREQ           reduce using rule 128 (Expression -> Expression AMPERS Expression .)
    LLEQ            reduce using rule 128 (Expression -> Expression AMPERS Expression .)
    GGEQ            reduce using rule 128 (Expression -> Expression AMPERS Expression .)
    EQUAL           reduce using rule 128 (Expression -> Expression AMPERS Expression .)
    RBRACK          reduce using rule 128 (Expression -> Expression AMPERS Expression .)
    RPAREN          reduce using rule 128 (Expression -> Expression AMPERS Expression .)
    COLON           reduce using rule 128 (Expression -> Expression AMPERS Expression .)
    LBRACE          reduce using rule 128 (Expression -> Expression AMPERS Expression .)

  ! OROR            [ shift and go to state 159 ]
  ! AMPAMP          [ shift and go to state 174 ]
  ! EQEQ            [ shift and go to state 165 ]
  ! NOTEQ           [ shift and go to state 171 ]
  ! LESS            [ shift and go to state 164 ]
  ! GREAT           [ shift and go to state 161 ]
  ! LEQ             [ shift and go to state 177 ]
  ! GEQ             [ shift and go to state 168 ]
  ! PLUS            [ shift and go to state 172 ]
  ! MINUS           [ shift and go to state 176 ]
  ! OR              [ shift and go to state 169 ]
  ! CARET           [ shift and go to state 160 ]
  ! TIMES           [ shift and go to state 175 ]
  ! DIVIDE          [ shift and go to state 162 ]
  ! MOD             [ shift and go to state 173 ]
  ! AMPERS          [ shift and go to state 167 ]
  ! LL              [ shift and go to state 166 ]
  ! GG              [ shift and go to state 170 ]
  ! AMPCAR          [ shift and go to state 163 ]


state 216

    (120) Expression -> Expression GEQ Expression .
    (113) Expression -> Expression . OROR Expression
    (114) Expression -> Expression . AMPAMP Expression
    (115) Expression -> Expression . EQEQ Expression
    (116) Expression -> Expression . NOTEQ Expression
    (117) Expression -> Expression . LESS Expression
    (118) Expression -> Expression . GREAT Expression
    (119) Expression -> Expression . LEQ Expression
    (120) Expression -> Expression . GEQ Expression
    (121) Expression -> Expression . PLUS Expression
    (122) Expression -> Expression . MINUS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . CARET Expression
    (125) Expression -> Expression . TIMES Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MOD Expression
    (128) Expression -> Expression . AMPERS Expression
    (129) Expression -> Expression . LL Expression
    (130) Expression -> Expression . GG Expression
    (131) Expression -> Expression . AMPCAR Expression

    PLUSPLUS        reduce using rule 120 (Expression -> Expression GEQ Expression .)
    MINUSMIN        reduce using rule 120 (Expression -> Expression GEQ Expression .)
    OROR            reduce using rule 120 (Expression -> Expression GEQ Expression .)
    AMPAMP          reduce using rule 120 (Expression -> Expression GEQ Expression .)
    EQEQ            reduce using rule 120 (Expression -> Expression GEQ Expression .)
    NOTEQ           reduce using rule 120 (Expression -> Expression GEQ Expression .)
    LESS            reduce using rule 120 (Expression -> Expression GEQ Expression .)
    GREAT           reduce using rule 120 (Expression -> Expression GEQ Expression .)
    LEQ             reduce using rule 120 (Expression -> Expression GEQ Expression .)
    GEQ             reduce using rule 120 (Expression -> Expression GEQ Expression .)
    COMMA           reduce using rule 120 (Expression -> Expression GEQ Expression .)
    SEMICOL         reduce using rule 120 (Expression -> Expression GEQ Expression .)
    PLUSEQ          reduce using rule 120 (Expression -> Expression GEQ Expression .)
    MINUSEQ         reduce using rule 120 (Expression -> Expression GEQ Expression .)
    TIMESEQ         reduce using rule 120 (Expression -> Expression GEQ Expression .)
    DIVIDEEQ        reduce using rule 120 (Expression -> Expression GEQ Expression .)
    MODEQ           reduce using rule 120 (Expression -> Expression GEQ Expression .)
    AMPEQ           reduce using rule 120 (Expression -> Expression GEQ Expression .)
    OREQ            reduce using rule 120 (Expression -> Expression GEQ Expression .)
    CAREQ           reduce using rule 120 (Expression -> Expression GEQ Expression .)
    LLEQ            reduce using rule 120 (Expression -> Expression GEQ Expression .)
    GGEQ            reduce using rule 120 (Expression -> Expression GEQ Expression .)
    EQUAL           reduce using rule 120 (Expression -> Expression GEQ Expression .)
    RBRACK          reduce using rule 120 (Expression -> Expression GEQ Expression .)
    RPAREN          reduce using rule 120 (Expression -> Expression GEQ Expression .)
    COLON           reduce using rule 120 (Expression -> Expression GEQ Expression .)
    LBRACE          reduce using rule 120 (Expression -> Expression GEQ Expression .)
    PLUS            shift and go to state 172
    MINUS           shift and go to state 176
    OR              shift and go to state 169
    CARET           shift and go to state 160
    TIMES           shift and go to state 175
    DIVIDE          shift and go to state 162
    MOD             shift and go to state 173
    AMPERS          shift and go to state 167
    LL              shift and go to state 166
    GG              shift and go to state 170
    AMPCAR          shift and go to state 163

  ! PLUS            [ reduce using rule 120 (Expression -> Expression GEQ Expression .) ]
  ! MINUS           [ reduce using rule 120 (Expression -> Expression GEQ Expression .) ]
  ! OR              [ reduce using rule 120 (Expression -> Expression GEQ Expression .) ]
  ! CARET           [ reduce using rule 120 (Expression -> Expression GEQ Expression .) ]
  ! TIMES           [ reduce using rule 120 (Expression -> Expression GEQ Expression .) ]
  ! DIVIDE          [ reduce using rule 120 (Expression -> Expression GEQ Expression .) ]
  ! MOD             [ reduce using rule 120 (Expression -> Expression GEQ Expression .) ]
  ! AMPERS          [ reduce using rule 120 (Expression -> Expression GEQ Expression .) ]
  ! LL              [ reduce using rule 120 (Expression -> Expression GEQ Expression .) ]
  ! GG              [ reduce using rule 120 (Expression -> Expression GEQ Expression .) ]
  ! AMPCAR          [ reduce using rule 120 (Expression -> Expression GEQ Expression .) ]
  ! OROR            [ shift and go to state 159 ]
  ! AMPAMP          [ shift and go to state 174 ]
  ! EQEQ            [ shift and go to state 165 ]
  ! NOTEQ           [ shift and go to state 171 ]
  ! LESS            [ shift and go to state 164 ]
  ! GREAT           [ shift and go to state 161 ]
  ! LEQ             [ shift and go to state 177 ]
  ! GEQ             [ shift and go to state 168 ]


state 217

    (123) Expression -> Expression OR Expression .
    (113) Expression -> Expression . OROR Expression
    (114) Expression -> Expression . AMPAMP Expression
    (115) Expression -> Expression . EQEQ Expression
    (116) Expression -> Expression . NOTEQ Expression
    (117) Expression -> Expression . LESS Expression
    (118) Expression -> Expression . GREAT Expression
    (119) Expression -> Expression . LEQ Expression
    (120) Expression -> Expression . GEQ Expression
    (121) Expression -> Expression . PLUS Expression
    (122) Expression -> Expression . MINUS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . CARET Expression
    (125) Expression -> Expression . TIMES Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MOD Expression
    (128) Expression -> Expression . AMPERS Expression
    (129) Expression -> Expression . LL Expression
    (130) Expression -> Expression . GG Expression
    (131) Expression -> Expression . AMPCAR Expression

    PLUSPLUS        reduce using rule 123 (Expression -> Expression OR Expression .)
    MINUSMIN        reduce using rule 123 (Expression -> Expression OR Expression .)
    OROR            reduce using rule 123 (Expression -> Expression OR Expression .)
    AMPAMP          reduce using rule 123 (Expression -> Expression OR Expression .)
    EQEQ            reduce using rule 123 (Expression -> Expression OR Expression .)
    NOTEQ           reduce using rule 123 (Expression -> Expression OR Expression .)
    LESS            reduce using rule 123 (Expression -> Expression OR Expression .)
    GREAT           reduce using rule 123 (Expression -> Expression OR Expression .)
    LEQ             reduce using rule 123 (Expression -> Expression OR Expression .)
    GEQ             reduce using rule 123 (Expression -> Expression OR Expression .)
    PLUS            reduce using rule 123 (Expression -> Expression OR Expression .)
    MINUS           reduce using rule 123 (Expression -> Expression OR Expression .)
    OR              reduce using rule 123 (Expression -> Expression OR Expression .)
    CARET           reduce using rule 123 (Expression -> Expression OR Expression .)
    COMMA           reduce using rule 123 (Expression -> Expression OR Expression .)
    SEMICOL         reduce using rule 123 (Expression -> Expression OR Expression .)
    PLUSEQ          reduce using rule 123 (Expression -> Expression OR Expression .)
    MINUSEQ         reduce using rule 123 (Expression -> Expression OR Expression .)
    TIMESEQ         reduce using rule 123 (Expression -> Expression OR Expression .)
    DIVIDEEQ        reduce using rule 123 (Expression -> Expression OR Expression .)
    MODEQ           reduce using rule 123 (Expression -> Expression OR Expression .)
    AMPEQ           reduce using rule 123 (Expression -> Expression OR Expression .)
    OREQ            reduce using rule 123 (Expression -> Expression OR Expression .)
    CAREQ           reduce using rule 123 (Expression -> Expression OR Expression .)
    LLEQ            reduce using rule 123 (Expression -> Expression OR Expression .)
    GGEQ            reduce using rule 123 (Expression -> Expression OR Expression .)
    EQUAL           reduce using rule 123 (Expression -> Expression OR Expression .)
    RBRACK          reduce using rule 123 (Expression -> Expression OR Expression .)
    RPAREN          reduce using rule 123 (Expression -> Expression OR Expression .)
    COLON           reduce using rule 123 (Expression -> Expression OR Expression .)
    LBRACE          reduce using rule 123 (Expression -> Expression OR Expression .)
    TIMES           shift and go to state 175
    DIVIDE          shift and go to state 162
    MOD             shift and go to state 173
    AMPERS          shift and go to state 167
    LL              shift and go to state 166
    GG              shift and go to state 170
    AMPCAR          shift and go to state 163

  ! TIMES           [ reduce using rule 123 (Expression -> Expression OR Expression .) ]
  ! DIVIDE          [ reduce using rule 123 (Expression -> Expression OR Expression .) ]
  ! MOD             [ reduce using rule 123 (Expression -> Expression OR Expression .) ]
  ! AMPERS          [ reduce using rule 123 (Expression -> Expression OR Expression .) ]
  ! LL              [ reduce using rule 123 (Expression -> Expression OR Expression .) ]
  ! GG              [ reduce using rule 123 (Expression -> Expression OR Expression .) ]
  ! AMPCAR          [ reduce using rule 123 (Expression -> Expression OR Expression .) ]
  ! OROR            [ shift and go to state 159 ]
  ! AMPAMP          [ shift and go to state 174 ]
  ! EQEQ            [ shift and go to state 165 ]
  ! NOTEQ           [ shift and go to state 171 ]
  ! LESS            [ shift and go to state 164 ]
  ! GREAT           [ shift and go to state 161 ]
  ! LEQ             [ shift and go to state 177 ]
  ! GEQ             [ shift and go to state 168 ]
  ! PLUS            [ shift and go to state 172 ]
  ! MINUS           [ shift and go to state 176 ]
  ! OR              [ shift and go to state 169 ]
  ! CARET           [ shift and go to state 160 ]


state 218

    (130) Expression -> Expression GG Expression .
    (113) Expression -> Expression . OROR Expression
    (114) Expression -> Expression . AMPAMP Expression
    (115) Expression -> Expression . EQEQ Expression
    (116) Expression -> Expression . NOTEQ Expression
    (117) Expression -> Expression . LESS Expression
    (118) Expression -> Expression . GREAT Expression
    (119) Expression -> Expression . LEQ Expression
    (120) Expression -> Expression . GEQ Expression
    (121) Expression -> Expression . PLUS Expression
    (122) Expression -> Expression . MINUS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . CARET Expression
    (125) Expression -> Expression . TIMES Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MOD Expression
    (128) Expression -> Expression . AMPERS Expression
    (129) Expression -> Expression . LL Expression
    (130) Expression -> Expression . GG Expression
    (131) Expression -> Expression . AMPCAR Expression

    PLUSPLUS        reduce using rule 130 (Expression -> Expression GG Expression .)
    MINUSMIN        reduce using rule 130 (Expression -> Expression GG Expression .)
    OROR            reduce using rule 130 (Expression -> Expression GG Expression .)
    AMPAMP          reduce using rule 130 (Expression -> Expression GG Expression .)
    EQEQ            reduce using rule 130 (Expression -> Expression GG Expression .)
    NOTEQ           reduce using rule 130 (Expression -> Expression GG Expression .)
    LESS            reduce using rule 130 (Expression -> Expression GG Expression .)
    GREAT           reduce using rule 130 (Expression -> Expression GG Expression .)
    LEQ             reduce using rule 130 (Expression -> Expression GG Expression .)
    GEQ             reduce using rule 130 (Expression -> Expression GG Expression .)
    PLUS            reduce using rule 130 (Expression -> Expression GG Expression .)
    MINUS           reduce using rule 130 (Expression -> Expression GG Expression .)
    OR              reduce using rule 130 (Expression -> Expression GG Expression .)
    CARET           reduce using rule 130 (Expression -> Expression GG Expression .)
    TIMES           reduce using rule 130 (Expression -> Expression GG Expression .)
    DIVIDE          reduce using rule 130 (Expression -> Expression GG Expression .)
    MOD             reduce using rule 130 (Expression -> Expression GG Expression .)
    AMPERS          reduce using rule 130 (Expression -> Expression GG Expression .)
    LL              reduce using rule 130 (Expression -> Expression GG Expression .)
    GG              reduce using rule 130 (Expression -> Expression GG Expression .)
    AMPCAR          reduce using rule 130 (Expression -> Expression GG Expression .)
    COMMA           reduce using rule 130 (Expression -> Expression GG Expression .)
    SEMICOL         reduce using rule 130 (Expression -> Expression GG Expression .)
    PLUSEQ          reduce using rule 130 (Expression -> Expression GG Expression .)
    MINUSEQ         reduce using rule 130 (Expression -> Expression GG Expression .)
    TIMESEQ         reduce using rule 130 (Expression -> Expression GG Expression .)
    DIVIDEEQ        reduce using rule 130 (Expression -> Expression GG Expression .)
    MODEQ           reduce using rule 130 (Expression -> Expression GG Expression .)
    AMPEQ           reduce using rule 130 (Expression -> Expression GG Expression .)
    OREQ            reduce using rule 130 (Expression -> Expression GG Expression .)
    CAREQ           reduce using rule 130 (Expression -> Expression GG Expression .)
    LLEQ            reduce using rule 130 (Expression -> Expression GG Expression .)
    GGEQ            reduce using rule 130 (Expression -> Expression GG Expression .)
    EQUAL           reduce using rule 130 (Expression -> Expression GG Expression .)
    RBRACK          reduce using rule 130 (Expression -> Expression GG Expression .)
    RPAREN          reduce using rule 130 (Expression -> Expression GG Expression .)
    COLON           reduce using rule 130 (Expression -> Expression GG Expression .)
    LBRACE          reduce using rule 130 (Expression -> Expression GG Expression .)

  ! OROR            [ shift and go to state 159 ]
  ! AMPAMP          [ shift and go to state 174 ]
  ! EQEQ            [ shift and go to state 165 ]
  ! NOTEQ           [ shift and go to state 171 ]
  ! LESS            [ shift and go to state 164 ]
  ! GREAT           [ shift and go to state 161 ]
  ! LEQ             [ shift and go to state 177 ]
  ! GEQ             [ shift and go to state 168 ]
  ! PLUS            [ shift and go to state 172 ]
  ! MINUS           [ shift and go to state 176 ]
  ! OR              [ shift and go to state 169 ]
  ! CARET           [ shift and go to state 160 ]
  ! TIMES           [ shift and go to state 175 ]
  ! DIVIDE          [ shift and go to state 162 ]
  ! MOD             [ shift and go to state 173 ]
  ! AMPERS          [ shift and go to state 167 ]
  ! LL              [ shift and go to state 166 ]
  ! GG              [ shift and go to state 170 ]
  ! AMPCAR          [ shift and go to state 163 ]


state 219

    (116) Expression -> Expression NOTEQ Expression .
    (113) Expression -> Expression . OROR Expression
    (114) Expression -> Expression . AMPAMP Expression
    (115) Expression -> Expression . EQEQ Expression
    (116) Expression -> Expression . NOTEQ Expression
    (117) Expression -> Expression . LESS Expression
    (118) Expression -> Expression . GREAT Expression
    (119) Expression -> Expression . LEQ Expression
    (120) Expression -> Expression . GEQ Expression
    (121) Expression -> Expression . PLUS Expression
    (122) Expression -> Expression . MINUS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . CARET Expression
    (125) Expression -> Expression . TIMES Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MOD Expression
    (128) Expression -> Expression . AMPERS Expression
    (129) Expression -> Expression . LL Expression
    (130) Expression -> Expression . GG Expression
    (131) Expression -> Expression . AMPCAR Expression

    PLUSPLUS        reduce using rule 116 (Expression -> Expression NOTEQ Expression .)
    MINUSMIN        reduce using rule 116 (Expression -> Expression NOTEQ Expression .)
    OROR            reduce using rule 116 (Expression -> Expression NOTEQ Expression .)
    AMPAMP          reduce using rule 116 (Expression -> Expression NOTEQ Expression .)
    EQEQ            reduce using rule 116 (Expression -> Expression NOTEQ Expression .)
    NOTEQ           reduce using rule 116 (Expression -> Expression NOTEQ Expression .)
    LESS            reduce using rule 116 (Expression -> Expression NOTEQ Expression .)
    GREAT           reduce using rule 116 (Expression -> Expression NOTEQ Expression .)
    LEQ             reduce using rule 116 (Expression -> Expression NOTEQ Expression .)
    GEQ             reduce using rule 116 (Expression -> Expression NOTEQ Expression .)
    COMMA           reduce using rule 116 (Expression -> Expression NOTEQ Expression .)
    SEMICOL         reduce using rule 116 (Expression -> Expression NOTEQ Expression .)
    PLUSEQ          reduce using rule 116 (Expression -> Expression NOTEQ Expression .)
    MINUSEQ         reduce using rule 116 (Expression -> Expression NOTEQ Expression .)
    TIMESEQ         reduce using rule 116 (Expression -> Expression NOTEQ Expression .)
    DIVIDEEQ        reduce using rule 116 (Expression -> Expression NOTEQ Expression .)
    MODEQ           reduce using rule 116 (Expression -> Expression NOTEQ Expression .)
    AMPEQ           reduce using rule 116 (Expression -> Expression NOTEQ Expression .)
    OREQ            reduce using rule 116 (Expression -> Expression NOTEQ Expression .)
    CAREQ           reduce using rule 116 (Expression -> Expression NOTEQ Expression .)
    LLEQ            reduce using rule 116 (Expression -> Expression NOTEQ Expression .)
    GGEQ            reduce using rule 116 (Expression -> Expression NOTEQ Expression .)
    EQUAL           reduce using rule 116 (Expression -> Expression NOTEQ Expression .)
    RBRACK          reduce using rule 116 (Expression -> Expression NOTEQ Expression .)
    RPAREN          reduce using rule 116 (Expression -> Expression NOTEQ Expression .)
    COLON           reduce using rule 116 (Expression -> Expression NOTEQ Expression .)
    LBRACE          reduce using rule 116 (Expression -> Expression NOTEQ Expression .)
    PLUS            shift and go to state 172
    MINUS           shift and go to state 176
    OR              shift and go to state 169
    CARET           shift and go to state 160
    TIMES           shift and go to state 175
    DIVIDE          shift and go to state 162
    MOD             shift and go to state 173
    AMPERS          shift and go to state 167
    LL              shift and go to state 166
    GG              shift and go to state 170
    AMPCAR          shift and go to state 163

  ! PLUS            [ reduce using rule 116 (Expression -> Expression NOTEQ Expression .) ]
  ! MINUS           [ reduce using rule 116 (Expression -> Expression NOTEQ Expression .) ]
  ! OR              [ reduce using rule 116 (Expression -> Expression NOTEQ Expression .) ]
  ! CARET           [ reduce using rule 116 (Expression -> Expression NOTEQ Expression .) ]
  ! TIMES           [ reduce using rule 116 (Expression -> Expression NOTEQ Expression .) ]
  ! DIVIDE          [ reduce using rule 116 (Expression -> Expression NOTEQ Expression .) ]
  ! MOD             [ reduce using rule 116 (Expression -> Expression NOTEQ Expression .) ]
  ! AMPERS          [ reduce using rule 116 (Expression -> Expression NOTEQ Expression .) ]
  ! LL              [ reduce using rule 116 (Expression -> Expression NOTEQ Expression .) ]
  ! GG              [ reduce using rule 116 (Expression -> Expression NOTEQ Expression .) ]
  ! AMPCAR          [ reduce using rule 116 (Expression -> Expression NOTEQ Expression .) ]
  ! OROR            [ shift and go to state 159 ]
  ! AMPAMP          [ shift and go to state 174 ]
  ! EQEQ            [ shift and go to state 165 ]
  ! NOTEQ           [ shift and go to state 171 ]
  ! LESS            [ shift and go to state 164 ]
  ! GREAT           [ shift and go to state 161 ]
  ! LEQ             [ shift and go to state 177 ]
  ! GEQ             [ shift and go to state 168 ]


state 220

    (121) Expression -> Expression PLUS Expression .
    (113) Expression -> Expression . OROR Expression
    (114) Expression -> Expression . AMPAMP Expression
    (115) Expression -> Expression . EQEQ Expression
    (116) Expression -> Expression . NOTEQ Expression
    (117) Expression -> Expression . LESS Expression
    (118) Expression -> Expression . GREAT Expression
    (119) Expression -> Expression . LEQ Expression
    (120) Expression -> Expression . GEQ Expression
    (121) Expression -> Expression . PLUS Expression
    (122) Expression -> Expression . MINUS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . CARET Expression
    (125) Expression -> Expression . TIMES Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MOD Expression
    (128) Expression -> Expression . AMPERS Expression
    (129) Expression -> Expression . LL Expression
    (130) Expression -> Expression . GG Expression
    (131) Expression -> Expression . AMPCAR Expression

    PLUSPLUS        reduce using rule 121 (Expression -> Expression PLUS Expression .)
    MINUSMIN        reduce using rule 121 (Expression -> Expression PLUS Expression .)
    OROR            reduce using rule 121 (Expression -> Expression PLUS Expression .)
    AMPAMP          reduce using rule 121 (Expression -> Expression PLUS Expression .)
    EQEQ            reduce using rule 121 (Expression -> Expression PLUS Expression .)
    NOTEQ           reduce using rule 121 (Expression -> Expression PLUS Expression .)
    LESS            reduce using rule 121 (Expression -> Expression PLUS Expression .)
    GREAT           reduce using rule 121 (Expression -> Expression PLUS Expression .)
    LEQ             reduce using rule 121 (Expression -> Expression PLUS Expression .)
    GEQ             reduce using rule 121 (Expression -> Expression PLUS Expression .)
    PLUS            reduce using rule 121 (Expression -> Expression PLUS Expression .)
    MINUS           reduce using rule 121 (Expression -> Expression PLUS Expression .)
    OR              reduce using rule 121 (Expression -> Expression PLUS Expression .)
    CARET           reduce using rule 121 (Expression -> Expression PLUS Expression .)
    COMMA           reduce using rule 121 (Expression -> Expression PLUS Expression .)
    SEMICOL         reduce using rule 121 (Expression -> Expression PLUS Expression .)
    PLUSEQ          reduce using rule 121 (Expression -> Expression PLUS Expression .)
    MINUSEQ         reduce using rule 121 (Expression -> Expression PLUS Expression .)
    TIMESEQ         reduce using rule 121 (Expression -> Expression PLUS Expression .)
    DIVIDEEQ        reduce using rule 121 (Expression -> Expression PLUS Expression .)
    MODEQ           reduce using rule 121 (Expression -> Expression PLUS Expression .)
    AMPEQ           reduce using rule 121 (Expression -> Expression PLUS Expression .)
    OREQ            reduce using rule 121 (Expression -> Expression PLUS Expression .)
    CAREQ           reduce using rule 121 (Expression -> Expression PLUS Expression .)
    LLEQ            reduce using rule 121 (Expression -> Expression PLUS Expression .)
    GGEQ            reduce using rule 121 (Expression -> Expression PLUS Expression .)
    EQUAL           reduce using rule 121 (Expression -> Expression PLUS Expression .)
    RBRACK          reduce using rule 121 (Expression -> Expression PLUS Expression .)
    RPAREN          reduce using rule 121 (Expression -> Expression PLUS Expression .)
    COLON           reduce using rule 121 (Expression -> Expression PLUS Expression .)
    LBRACE          reduce using rule 121 (Expression -> Expression PLUS Expression .)
    TIMES           shift and go to state 175
    DIVIDE          shift and go to state 162
    MOD             shift and go to state 173
    AMPERS          shift and go to state 167
    LL              shift and go to state 166
    GG              shift and go to state 170
    AMPCAR          shift and go to state 163

  ! TIMES           [ reduce using rule 121 (Expression -> Expression PLUS Expression .) ]
  ! DIVIDE          [ reduce using rule 121 (Expression -> Expression PLUS Expression .) ]
  ! MOD             [ reduce using rule 121 (Expression -> Expression PLUS Expression .) ]
  ! AMPERS          [ reduce using rule 121 (Expression -> Expression PLUS Expression .) ]
  ! LL              [ reduce using rule 121 (Expression -> Expression PLUS Expression .) ]
  ! GG              [ reduce using rule 121 (Expression -> Expression PLUS Expression .) ]
  ! AMPCAR          [ reduce using rule 121 (Expression -> Expression PLUS Expression .) ]
  ! OROR            [ shift and go to state 159 ]
  ! AMPAMP          [ shift and go to state 174 ]
  ! EQEQ            [ shift and go to state 165 ]
  ! NOTEQ           [ shift and go to state 171 ]
  ! LESS            [ shift and go to state 164 ]
  ! GREAT           [ shift and go to state 161 ]
  ! LEQ             [ shift and go to state 177 ]
  ! GEQ             [ shift and go to state 168 ]
  ! PLUS            [ shift and go to state 172 ]
  ! MINUS           [ shift and go to state 176 ]
  ! OR              [ shift and go to state 169 ]
  ! CARET           [ shift and go to state 160 ]


state 221

    (127) Expression -> Expression MOD Expression .
    (113) Expression -> Expression . OROR Expression
    (114) Expression -> Expression . AMPAMP Expression
    (115) Expression -> Expression . EQEQ Expression
    (116) Expression -> Expression . NOTEQ Expression
    (117) Expression -> Expression . LESS Expression
    (118) Expression -> Expression . GREAT Expression
    (119) Expression -> Expression . LEQ Expression
    (120) Expression -> Expression . GEQ Expression
    (121) Expression -> Expression . PLUS Expression
    (122) Expression -> Expression . MINUS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . CARET Expression
    (125) Expression -> Expression . TIMES Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MOD Expression
    (128) Expression -> Expression . AMPERS Expression
    (129) Expression -> Expression . LL Expression
    (130) Expression -> Expression . GG Expression
    (131) Expression -> Expression . AMPCAR Expression

    PLUSPLUS        reduce using rule 127 (Expression -> Expression MOD Expression .)
    MINUSMIN        reduce using rule 127 (Expression -> Expression MOD Expression .)
    OROR            reduce using rule 127 (Expression -> Expression MOD Expression .)
    AMPAMP          reduce using rule 127 (Expression -> Expression MOD Expression .)
    EQEQ            reduce using rule 127 (Expression -> Expression MOD Expression .)
    NOTEQ           reduce using rule 127 (Expression -> Expression MOD Expression .)
    LESS            reduce using rule 127 (Expression -> Expression MOD Expression .)
    GREAT           reduce using rule 127 (Expression -> Expression MOD Expression .)
    LEQ             reduce using rule 127 (Expression -> Expression MOD Expression .)
    GEQ             reduce using rule 127 (Expression -> Expression MOD Expression .)
    PLUS            reduce using rule 127 (Expression -> Expression MOD Expression .)
    MINUS           reduce using rule 127 (Expression -> Expression MOD Expression .)
    OR              reduce using rule 127 (Expression -> Expression MOD Expression .)
    CARET           reduce using rule 127 (Expression -> Expression MOD Expression .)
    TIMES           reduce using rule 127 (Expression -> Expression MOD Expression .)
    DIVIDE          reduce using rule 127 (Expression -> Expression MOD Expression .)
    MOD             reduce using rule 127 (Expression -> Expression MOD Expression .)
    AMPERS          reduce using rule 127 (Expression -> Expression MOD Expression .)
    LL              reduce using rule 127 (Expression -> Expression MOD Expression .)
    GG              reduce using rule 127 (Expression -> Expression MOD Expression .)
    AMPCAR          reduce using rule 127 (Expression -> Expression MOD Expression .)
    COMMA           reduce using rule 127 (Expression -> Expression MOD Expression .)
    SEMICOL         reduce using rule 127 (Expression -> Expression MOD Expression .)
    PLUSEQ          reduce using rule 127 (Expression -> Expression MOD Expression .)
    MINUSEQ         reduce using rule 127 (Expression -> Expression MOD Expression .)
    TIMESEQ         reduce using rule 127 (Expression -> Expression MOD Expression .)
    DIVIDEEQ        reduce using rule 127 (Expression -> Expression MOD Expression .)
    MODEQ           reduce using rule 127 (Expression -> Expression MOD Expression .)
    AMPEQ           reduce using rule 127 (Expression -> Expression MOD Expression .)
    OREQ            reduce using rule 127 (Expression -> Expression MOD Expression .)
    CAREQ           reduce using rule 127 (Expression -> Expression MOD Expression .)
    LLEQ            reduce using rule 127 (Expression -> Expression MOD Expression .)
    GGEQ            reduce using rule 127 (Expression -> Expression MOD Expression .)
    EQUAL           reduce using rule 127 (Expression -> Expression MOD Expression .)
    RBRACK          reduce using rule 127 (Expression -> Expression MOD Expression .)
    RPAREN          reduce using rule 127 (Expression -> Expression MOD Expression .)
    COLON           reduce using rule 127 (Expression -> Expression MOD Expression .)
    LBRACE          reduce using rule 127 (Expression -> Expression MOD Expression .)

  ! OROR            [ shift and go to state 159 ]
  ! AMPAMP          [ shift and go to state 174 ]
  ! EQEQ            [ shift and go to state 165 ]
  ! NOTEQ           [ shift and go to state 171 ]
  ! LESS            [ shift and go to state 164 ]
  ! GREAT           [ shift and go to state 161 ]
  ! LEQ             [ shift and go to state 177 ]
  ! GEQ             [ shift and go to state 168 ]
  ! PLUS            [ shift and go to state 172 ]
  ! MINUS           [ shift and go to state 176 ]
  ! OR              [ shift and go to state 169 ]
  ! CARET           [ shift and go to state 160 ]
  ! TIMES           [ shift and go to state 175 ]
  ! DIVIDE          [ shift and go to state 162 ]
  ! MOD             [ shift and go to state 173 ]
  ! AMPERS          [ shift and go to state 167 ]
  ! LL              [ shift and go to state 166 ]
  ! GG              [ shift and go to state 170 ]
  ! AMPCAR          [ shift and go to state 163 ]


state 222

    (114) Expression -> Expression AMPAMP Expression .
    (113) Expression -> Expression . OROR Expression
    (114) Expression -> Expression . AMPAMP Expression
    (115) Expression -> Expression . EQEQ Expression
    (116) Expression -> Expression . NOTEQ Expression
    (117) Expression -> Expression . LESS Expression
    (118) Expression -> Expression . GREAT Expression
    (119) Expression -> Expression . LEQ Expression
    (120) Expression -> Expression . GEQ Expression
    (121) Expression -> Expression . PLUS Expression
    (122) Expression -> Expression . MINUS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . CARET Expression
    (125) Expression -> Expression . TIMES Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MOD Expression
    (128) Expression -> Expression . AMPERS Expression
    (129) Expression -> Expression . LL Expression
    (130) Expression -> Expression . GG Expression
    (131) Expression -> Expression . AMPCAR Expression

    PLUSPLUS        reduce using rule 114 (Expression -> Expression AMPAMP Expression .)
    MINUSMIN        reduce using rule 114 (Expression -> Expression AMPAMP Expression .)
    OROR            reduce using rule 114 (Expression -> Expression AMPAMP Expression .)
    AMPAMP          reduce using rule 114 (Expression -> Expression AMPAMP Expression .)
    COMMA           reduce using rule 114 (Expression -> Expression AMPAMP Expression .)
    SEMICOL         reduce using rule 114 (Expression -> Expression AMPAMP Expression .)
    PLUSEQ          reduce using rule 114 (Expression -> Expression AMPAMP Expression .)
    MINUSEQ         reduce using rule 114 (Expression -> Expression AMPAMP Expression .)
    TIMESEQ         reduce using rule 114 (Expression -> Expression AMPAMP Expression .)
    DIVIDEEQ        reduce using rule 114 (Expression -> Expression AMPAMP Expression .)
    MODEQ           reduce using rule 114 (Expression -> Expression AMPAMP Expression .)
    AMPEQ           reduce using rule 114 (Expression -> Expression AMPAMP Expression .)
    OREQ            reduce using rule 114 (Expression -> Expression AMPAMP Expression .)
    CAREQ           reduce using rule 114 (Expression -> Expression AMPAMP Expression .)
    LLEQ            reduce using rule 114 (Expression -> Expression AMPAMP Expression .)
    GGEQ            reduce using rule 114 (Expression -> Expression AMPAMP Expression .)
    EQUAL           reduce using rule 114 (Expression -> Expression AMPAMP Expression .)
    RBRACK          reduce using rule 114 (Expression -> Expression AMPAMP Expression .)
    RPAREN          reduce using rule 114 (Expression -> Expression AMPAMP Expression .)
    COLON           reduce using rule 114 (Expression -> Expression AMPAMP Expression .)
    LBRACE          reduce using rule 114 (Expression -> Expression AMPAMP Expression .)
    EQEQ            shift and go to state 165
    NOTEQ           shift and go to state 171
    LESS            shift and go to state 164
    GREAT           shift and go to state 161
    LEQ             shift and go to state 177
    GEQ             shift and go to state 168
    PLUS            shift and go to state 172
    MINUS           shift and go to state 176
    OR              shift and go to state 169
    CARET           shift and go to state 160
    TIMES           shift and go to state 175
    DIVIDE          shift and go to state 162
    MOD             shift and go to state 173
    AMPERS          shift and go to state 167
    LL              shift and go to state 166
    GG              shift and go to state 170
    AMPCAR          shift and go to state 163

  ! EQEQ            [ reduce using rule 114 (Expression -> Expression AMPAMP Expression .) ]
  ! NOTEQ           [ reduce using rule 114 (Expression -> Expression AMPAMP Expression .) ]
  ! LESS            [ reduce using rule 114 (Expression -> Expression AMPAMP Expression .) ]
  ! GREAT           [ reduce using rule 114 (Expression -> Expression AMPAMP Expression .) ]
  ! LEQ             [ reduce using rule 114 (Expression -> Expression AMPAMP Expression .) ]
  ! GEQ             [ reduce using rule 114 (Expression -> Expression AMPAMP Expression .) ]
  ! PLUS            [ reduce using rule 114 (Expression -> Expression AMPAMP Expression .) ]
  ! MINUS           [ reduce using rule 114 (Expression -> Expression AMPAMP Expression .) ]
  ! OR              [ reduce using rule 114 (Expression -> Expression AMPAMP Expression .) ]
  ! CARET           [ reduce using rule 114 (Expression -> Expression AMPAMP Expression .) ]
  ! TIMES           [ reduce using rule 114 (Expression -> Expression AMPAMP Expression .) ]
  ! DIVIDE          [ reduce using rule 114 (Expression -> Expression AMPAMP Expression .) ]
  ! MOD             [ reduce using rule 114 (Expression -> Expression AMPAMP Expression .) ]
  ! AMPERS          [ reduce using rule 114 (Expression -> Expression AMPAMP Expression .) ]
  ! LL              [ reduce using rule 114 (Expression -> Expression AMPAMP Expression .) ]
  ! GG              [ reduce using rule 114 (Expression -> Expression AMPAMP Expression .) ]
  ! AMPCAR          [ reduce using rule 114 (Expression -> Expression AMPAMP Expression .) ]
  ! OROR            [ shift and go to state 159 ]
  ! AMPAMP          [ shift and go to state 174 ]


state 223

    (125) Expression -> Expression TIMES Expression .
    (113) Expression -> Expression . OROR Expression
    (114) Expression -> Expression . AMPAMP Expression
    (115) Expression -> Expression . EQEQ Expression
    (116) Expression -> Expression . NOTEQ Expression
    (117) Expression -> Expression . LESS Expression
    (118) Expression -> Expression . GREAT Expression
    (119) Expression -> Expression . LEQ Expression
    (120) Expression -> Expression . GEQ Expression
    (121) Expression -> Expression . PLUS Expression
    (122) Expression -> Expression . MINUS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . CARET Expression
    (125) Expression -> Expression . TIMES Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MOD Expression
    (128) Expression -> Expression . AMPERS Expression
    (129) Expression -> Expression . LL Expression
    (130) Expression -> Expression . GG Expression
    (131) Expression -> Expression . AMPCAR Expression

    PLUSPLUS        reduce using rule 125 (Expression -> Expression TIMES Expression .)
    MINUSMIN        reduce using rule 125 (Expression -> Expression TIMES Expression .)
    OROR            reduce using rule 125 (Expression -> Expression TIMES Expression .)
    AMPAMP          reduce using rule 125 (Expression -> Expression TIMES Expression .)
    EQEQ            reduce using rule 125 (Expression -> Expression TIMES Expression .)
    NOTEQ           reduce using rule 125 (Expression -> Expression TIMES Expression .)
    LESS            reduce using rule 125 (Expression -> Expression TIMES Expression .)
    GREAT           reduce using rule 125 (Expression -> Expression TIMES Expression .)
    LEQ             reduce using rule 125 (Expression -> Expression TIMES Expression .)
    GEQ             reduce using rule 125 (Expression -> Expression TIMES Expression .)
    PLUS            reduce using rule 125 (Expression -> Expression TIMES Expression .)
    MINUS           reduce using rule 125 (Expression -> Expression TIMES Expression .)
    OR              reduce using rule 125 (Expression -> Expression TIMES Expression .)
    CARET           reduce using rule 125 (Expression -> Expression TIMES Expression .)
    TIMES           reduce using rule 125 (Expression -> Expression TIMES Expression .)
    DIVIDE          reduce using rule 125 (Expression -> Expression TIMES Expression .)
    MOD             reduce using rule 125 (Expression -> Expression TIMES Expression .)
    AMPERS          reduce using rule 125 (Expression -> Expression TIMES Expression .)
    LL              reduce using rule 125 (Expression -> Expression TIMES Expression .)
    GG              reduce using rule 125 (Expression -> Expression TIMES Expression .)
    AMPCAR          reduce using rule 125 (Expression -> Expression TIMES Expression .)
    COMMA           reduce using rule 125 (Expression -> Expression TIMES Expression .)
    SEMICOL         reduce using rule 125 (Expression -> Expression TIMES Expression .)
    PLUSEQ          reduce using rule 125 (Expression -> Expression TIMES Expression .)
    MINUSEQ         reduce using rule 125 (Expression -> Expression TIMES Expression .)
    TIMESEQ         reduce using rule 125 (Expression -> Expression TIMES Expression .)
    DIVIDEEQ        reduce using rule 125 (Expression -> Expression TIMES Expression .)
    MODEQ           reduce using rule 125 (Expression -> Expression TIMES Expression .)
    AMPEQ           reduce using rule 125 (Expression -> Expression TIMES Expression .)
    OREQ            reduce using rule 125 (Expression -> Expression TIMES Expression .)
    CAREQ           reduce using rule 125 (Expression -> Expression TIMES Expression .)
    LLEQ            reduce using rule 125 (Expression -> Expression TIMES Expression .)
    GGEQ            reduce using rule 125 (Expression -> Expression TIMES Expression .)
    EQUAL           reduce using rule 125 (Expression -> Expression TIMES Expression .)
    RBRACK          reduce using rule 125 (Expression -> Expression TIMES Expression .)
    RPAREN          reduce using rule 125 (Expression -> Expression TIMES Expression .)
    COLON           reduce using rule 125 (Expression -> Expression TIMES Expression .)
    LBRACE          reduce using rule 125 (Expression -> Expression TIMES Expression .)

  ! OROR            [ shift and go to state 159 ]
  ! AMPAMP          [ shift and go to state 174 ]
  ! EQEQ            [ shift and go to state 165 ]
  ! NOTEQ           [ shift and go to state 171 ]
  ! LESS            [ shift and go to state 164 ]
  ! GREAT           [ shift and go to state 161 ]
  ! LEQ             [ shift and go to state 177 ]
  ! GEQ             [ shift and go to state 168 ]
  ! PLUS            [ shift and go to state 172 ]
  ! MINUS           [ shift and go to state 176 ]
  ! OR              [ shift and go to state 169 ]
  ! CARET           [ shift and go to state 160 ]
  ! TIMES           [ shift and go to state 175 ]
  ! DIVIDE          [ shift and go to state 162 ]
  ! MOD             [ shift and go to state 173 ]
  ! AMPERS          [ shift and go to state 167 ]
  ! LL              [ shift and go to state 166 ]
  ! GG              [ shift and go to state 170 ]
  ! AMPCAR          [ shift and go to state 163 ]


state 224

    (122) Expression -> Expression MINUS Expression .
    (113) Expression -> Expression . OROR Expression
    (114) Expression -> Expression . AMPAMP Expression
    (115) Expression -> Expression . EQEQ Expression
    (116) Expression -> Expression . NOTEQ Expression
    (117) Expression -> Expression . LESS Expression
    (118) Expression -> Expression . GREAT Expression
    (119) Expression -> Expression . LEQ Expression
    (120) Expression -> Expression . GEQ Expression
    (121) Expression -> Expression . PLUS Expression
    (122) Expression -> Expression . MINUS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . CARET Expression
    (125) Expression -> Expression . TIMES Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MOD Expression
    (128) Expression -> Expression . AMPERS Expression
    (129) Expression -> Expression . LL Expression
    (130) Expression -> Expression . GG Expression
    (131) Expression -> Expression . AMPCAR Expression

    PLUSPLUS        reduce using rule 122 (Expression -> Expression MINUS Expression .)
    MINUSMIN        reduce using rule 122 (Expression -> Expression MINUS Expression .)
    OROR            reduce using rule 122 (Expression -> Expression MINUS Expression .)
    AMPAMP          reduce using rule 122 (Expression -> Expression MINUS Expression .)
    EQEQ            reduce using rule 122 (Expression -> Expression MINUS Expression .)
    NOTEQ           reduce using rule 122 (Expression -> Expression MINUS Expression .)
    LESS            reduce using rule 122 (Expression -> Expression MINUS Expression .)
    GREAT           reduce using rule 122 (Expression -> Expression MINUS Expression .)
    LEQ             reduce using rule 122 (Expression -> Expression MINUS Expression .)
    GEQ             reduce using rule 122 (Expression -> Expression MINUS Expression .)
    PLUS            reduce using rule 122 (Expression -> Expression MINUS Expression .)
    MINUS           reduce using rule 122 (Expression -> Expression MINUS Expression .)
    OR              reduce using rule 122 (Expression -> Expression MINUS Expression .)
    CARET           reduce using rule 122 (Expression -> Expression MINUS Expression .)
    COMMA           reduce using rule 122 (Expression -> Expression MINUS Expression .)
    SEMICOL         reduce using rule 122 (Expression -> Expression MINUS Expression .)
    PLUSEQ          reduce using rule 122 (Expression -> Expression MINUS Expression .)
    MINUSEQ         reduce using rule 122 (Expression -> Expression MINUS Expression .)
    TIMESEQ         reduce using rule 122 (Expression -> Expression MINUS Expression .)
    DIVIDEEQ        reduce using rule 122 (Expression -> Expression MINUS Expression .)
    MODEQ           reduce using rule 122 (Expression -> Expression MINUS Expression .)
    AMPEQ           reduce using rule 122 (Expression -> Expression MINUS Expression .)
    OREQ            reduce using rule 122 (Expression -> Expression MINUS Expression .)
    CAREQ           reduce using rule 122 (Expression -> Expression MINUS Expression .)
    LLEQ            reduce using rule 122 (Expression -> Expression MINUS Expression .)
    GGEQ            reduce using rule 122 (Expression -> Expression MINUS Expression .)
    EQUAL           reduce using rule 122 (Expression -> Expression MINUS Expression .)
    RBRACK          reduce using rule 122 (Expression -> Expression MINUS Expression .)
    RPAREN          reduce using rule 122 (Expression -> Expression MINUS Expression .)
    COLON           reduce using rule 122 (Expression -> Expression MINUS Expression .)
    LBRACE          reduce using rule 122 (Expression -> Expression MINUS Expression .)
    TIMES           shift and go to state 175
    DIVIDE          shift and go to state 162
    MOD             shift and go to state 173
    AMPERS          shift and go to state 167
    LL              shift and go to state 166
    GG              shift and go to state 170
    AMPCAR          shift and go to state 163

  ! TIMES           [ reduce using rule 122 (Expression -> Expression MINUS Expression .) ]
  ! DIVIDE          [ reduce using rule 122 (Expression -> Expression MINUS Expression .) ]
  ! MOD             [ reduce using rule 122 (Expression -> Expression MINUS Expression .) ]
  ! AMPERS          [ reduce using rule 122 (Expression -> Expression MINUS Expression .) ]
  ! LL              [ reduce using rule 122 (Expression -> Expression MINUS Expression .) ]
  ! GG              [ reduce using rule 122 (Expression -> Expression MINUS Expression .) ]
  ! AMPCAR          [ reduce using rule 122 (Expression -> Expression MINUS Expression .) ]
  ! OROR            [ shift and go to state 159 ]
  ! AMPAMP          [ shift and go to state 174 ]
  ! EQEQ            [ shift and go to state 165 ]
  ! NOTEQ           [ shift and go to state 171 ]
  ! LESS            [ shift and go to state 164 ]
  ! GREAT           [ shift and go to state 161 ]
  ! LEQ             [ shift and go to state 177 ]
  ! GEQ             [ shift and go to state 168 ]
  ! PLUS            [ shift and go to state 172 ]
  ! MINUS           [ shift and go to state 176 ]
  ! OR              [ shift and go to state 169 ]
  ! CARET           [ shift and go to state 160 ]


state 225

    (119) Expression -> Expression LEQ Expression .
    (113) Expression -> Expression . OROR Expression
    (114) Expression -> Expression . AMPAMP Expression
    (115) Expression -> Expression . EQEQ Expression
    (116) Expression -> Expression . NOTEQ Expression
    (117) Expression -> Expression . LESS Expression
    (118) Expression -> Expression . GREAT Expression
    (119) Expression -> Expression . LEQ Expression
    (120) Expression -> Expression . GEQ Expression
    (121) Expression -> Expression . PLUS Expression
    (122) Expression -> Expression . MINUS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . CARET Expression
    (125) Expression -> Expression . TIMES Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MOD Expression
    (128) Expression -> Expression . AMPERS Expression
    (129) Expression -> Expression . LL Expression
    (130) Expression -> Expression . GG Expression
    (131) Expression -> Expression . AMPCAR Expression

    PLUSPLUS        reduce using rule 119 (Expression -> Expression LEQ Expression .)
    MINUSMIN        reduce using rule 119 (Expression -> Expression LEQ Expression .)
    OROR            reduce using rule 119 (Expression -> Expression LEQ Expression .)
    AMPAMP          reduce using rule 119 (Expression -> Expression LEQ Expression .)
    EQEQ            reduce using rule 119 (Expression -> Expression LEQ Expression .)
    NOTEQ           reduce using rule 119 (Expression -> Expression LEQ Expression .)
    LESS            reduce using rule 119 (Expression -> Expression LEQ Expression .)
    GREAT           reduce using rule 119 (Expression -> Expression LEQ Expression .)
    LEQ             reduce using rule 119 (Expression -> Expression LEQ Expression .)
    GEQ             reduce using rule 119 (Expression -> Expression LEQ Expression .)
    COMMA           reduce using rule 119 (Expression -> Expression LEQ Expression .)
    SEMICOL         reduce using rule 119 (Expression -> Expression LEQ Expression .)
    PLUSEQ          reduce using rule 119 (Expression -> Expression LEQ Expression .)
    MINUSEQ         reduce using rule 119 (Expression -> Expression LEQ Expression .)
    TIMESEQ         reduce using rule 119 (Expression -> Expression LEQ Expression .)
    DIVIDEEQ        reduce using rule 119 (Expression -> Expression LEQ Expression .)
    MODEQ           reduce using rule 119 (Expression -> Expression LEQ Expression .)
    AMPEQ           reduce using rule 119 (Expression -> Expression LEQ Expression .)
    OREQ            reduce using rule 119 (Expression -> Expression LEQ Expression .)
    CAREQ           reduce using rule 119 (Expression -> Expression LEQ Expression .)
    LLEQ            reduce using rule 119 (Expression -> Expression LEQ Expression .)
    GGEQ            reduce using rule 119 (Expression -> Expression LEQ Expression .)
    EQUAL           reduce using rule 119 (Expression -> Expression LEQ Expression .)
    RBRACK          reduce using rule 119 (Expression -> Expression LEQ Expression .)
    RPAREN          reduce using rule 119 (Expression -> Expression LEQ Expression .)
    COLON           reduce using rule 119 (Expression -> Expression LEQ Expression .)
    LBRACE          reduce using rule 119 (Expression -> Expression LEQ Expression .)
    PLUS            shift and go to state 172
    MINUS           shift and go to state 176
    OR              shift and go to state 169
    CARET           shift and go to state 160
    TIMES           shift and go to state 175
    DIVIDE          shift and go to state 162
    MOD             shift and go to state 173
    AMPERS          shift and go to state 167
    LL              shift and go to state 166
    GG              shift and go to state 170
    AMPCAR          shift and go to state 163

  ! PLUS            [ reduce using rule 119 (Expression -> Expression LEQ Expression .) ]
  ! MINUS           [ reduce using rule 119 (Expression -> Expression LEQ Expression .) ]
  ! OR              [ reduce using rule 119 (Expression -> Expression LEQ Expression .) ]
  ! CARET           [ reduce using rule 119 (Expression -> Expression LEQ Expression .) ]
  ! TIMES           [ reduce using rule 119 (Expression -> Expression LEQ Expression .) ]
  ! DIVIDE          [ reduce using rule 119 (Expression -> Expression LEQ Expression .) ]
  ! MOD             [ reduce using rule 119 (Expression -> Expression LEQ Expression .) ]
  ! AMPERS          [ reduce using rule 119 (Expression -> Expression LEQ Expression .) ]
  ! LL              [ reduce using rule 119 (Expression -> Expression LEQ Expression .) ]
  ! GG              [ reduce using rule 119 (Expression -> Expression LEQ Expression .) ]
  ! AMPCAR          [ reduce using rule 119 (Expression -> Expression LEQ Expression .) ]
  ! OROR            [ shift and go to state 159 ]
  ! AMPAMP          [ shift and go to state 174 ]
  ! EQEQ            [ shift and go to state 165 ]
  ! NOTEQ           [ shift and go to state 171 ]
  ! LESS            [ shift and go to state 164 ]
  ! GREAT           [ shift and go to state 161 ]
  ! LEQ             [ shift and go to state 177 ]
  ! GEQ             [ shift and go to state 168 ]


state 226

    (105) Slice -> LBRACK ExpressionOpt . COLON ExpressionOpt RBRACK

    COLON           shift and go to state 268


state 227

    (133) ExpressionOpt -> epsilon .

    COLON           reduce using rule 133 (ExpressionOpt -> epsilon .)
    RBRACK          reduce using rule 133 (ExpressionOpt -> epsilon .)


state 228

    (104) Index -> LBRACK Expression . RBRACK
    (113) Expression -> Expression . OROR Expression
    (114) Expression -> Expression . AMPAMP Expression
    (115) Expression -> Expression . EQEQ Expression
    (116) Expression -> Expression . NOTEQ Expression
    (117) Expression -> Expression . LESS Expression
    (118) Expression -> Expression . GREAT Expression
    (119) Expression -> Expression . LEQ Expression
    (120) Expression -> Expression . GEQ Expression
    (121) Expression -> Expression . PLUS Expression
    (122) Expression -> Expression . MINUS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . CARET Expression
    (125) Expression -> Expression . TIMES Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MOD Expression
    (128) Expression -> Expression . AMPERS Expression
    (129) Expression -> Expression . LL Expression
    (130) Expression -> Expression . GG Expression
    (131) Expression -> Expression . AMPCAR Expression
    (132) ExpressionOpt -> Expression .

    RBRACK          shift and go to state 269
    OROR            shift and go to state 159
    AMPAMP          shift and go to state 174
    EQEQ            shift and go to state 165
    NOTEQ           shift and go to state 171
    LESS            shift and go to state 164
    GREAT           shift and go to state 161
    LEQ             shift and go to state 177
    GEQ             shift and go to state 168
    PLUS            shift and go to state 172
    MINUS           shift and go to state 176
    OR              shift and go to state 169
    CARET           shift and go to state 160
    TIMES           shift and go to state 175
    DIVIDE          shift and go to state 162
    MOD             shift and go to state 173
    AMPERS          shift and go to state 167
    LL              shift and go to state 166
    GG              shift and go to state 170
    AMPCAR          shift and go to state 163
    COLON           reduce using rule 132 (ExpressionOpt -> Expression .)


state 229

    (108) ExpressionListTypeOpt -> epsilon .

    RPAREN          reduce using rule 108 (ExpressionListTypeOpt -> epsilon .)


state 230

    (107) ExpressionListTypeOpt -> ExpressionList .

    RPAREN          reduce using rule 107 (ExpressionListTypeOpt -> ExpressionList .)


state 231

    (106) Arguments -> LPAREN ExpressionListTypeOpt . RPAREN

    RPAREN          shift and go to state 270


state 232

    (103) Selector -> DOT IDENTIFIER .

    DOT             reduce using rule 103 (Selector -> DOT IDENTIFIER .)
    LBRACK          reduce using rule 103 (Selector -> DOT IDENTIFIER .)
    LPAREN          reduce using rule 103 (Selector -> DOT IDENTIFIER .)
    OROR            reduce using rule 103 (Selector -> DOT IDENTIFIER .)
    AMPAMP          reduce using rule 103 (Selector -> DOT IDENTIFIER .)
    EQEQ            reduce using rule 103 (Selector -> DOT IDENTIFIER .)
    NOTEQ           reduce using rule 103 (Selector -> DOT IDENTIFIER .)
    LESS            reduce using rule 103 (Selector -> DOT IDENTIFIER .)
    GREAT           reduce using rule 103 (Selector -> DOT IDENTIFIER .)
    LEQ             reduce using rule 103 (Selector -> DOT IDENTIFIER .)
    GEQ             reduce using rule 103 (Selector -> DOT IDENTIFIER .)
    PLUS            reduce using rule 103 (Selector -> DOT IDENTIFIER .)
    MINUS           reduce using rule 103 (Selector -> DOT IDENTIFIER .)
    OR              reduce using rule 103 (Selector -> DOT IDENTIFIER .)
    CARET           reduce using rule 103 (Selector -> DOT IDENTIFIER .)
    TIMES           reduce using rule 103 (Selector -> DOT IDENTIFIER .)
    DIVIDE          reduce using rule 103 (Selector -> DOT IDENTIFIER .)
    MOD             reduce using rule 103 (Selector -> DOT IDENTIFIER .)
    AMPERS          reduce using rule 103 (Selector -> DOT IDENTIFIER .)
    LL              reduce using rule 103 (Selector -> DOT IDENTIFIER .)
    GG              reduce using rule 103 (Selector -> DOT IDENTIFIER .)
    AMPCAR          reduce using rule 103 (Selector -> DOT IDENTIFIER .)
    RBRACK          reduce using rule 103 (Selector -> DOT IDENTIFIER .)
    COMMA           reduce using rule 103 (Selector -> DOT IDENTIFIER .)
    SEMICOL         reduce using rule 103 (Selector -> DOT IDENTIFIER .)
    RPAREN          reduce using rule 103 (Selector -> DOT IDENTIFIER .)
    COLON           reduce using rule 103 (Selector -> DOT IDENTIFIER .)
    PLUSPLUS        reduce using rule 103 (Selector -> DOT IDENTIFIER .)
    MINUSMIN        reduce using rule 103 (Selector -> DOT IDENTIFIER .)
    PLUSEQ          reduce using rule 103 (Selector -> DOT IDENTIFIER .)
    MINUSEQ         reduce using rule 103 (Selector -> DOT IDENTIFIER .)
    TIMESEQ         reduce using rule 103 (Selector -> DOT IDENTIFIER .)
    DIVIDEEQ        reduce using rule 103 (Selector -> DOT IDENTIFIER .)
    MODEQ           reduce using rule 103 (Selector -> DOT IDENTIFIER .)
    AMPEQ           reduce using rule 103 (Selector -> DOT IDENTIFIER .)
    OREQ            reduce using rule 103 (Selector -> DOT IDENTIFIER .)
    CAREQ           reduce using rule 103 (Selector -> DOT IDENTIFIER .)
    LLEQ            reduce using rule 103 (Selector -> DOT IDENTIFIER .)
    GGEQ            reduce using rule 103 (Selector -> DOT IDENTIFIER .)
    EQUAL           reduce using rule 103 (Selector -> DOT IDENTIFIER .)
    LBRACE          reduce using rule 103 (Selector -> DOT IDENTIFIER .)


state 233

    (146) Statement -> ContinueStmt .

    SEMICOL         reduce using rule 146 (Statement -> ContinueStmt .)


state 234

    (152) SimpleStmt -> ExpressionStmt .

    SEMICOL         reduce using rule 152 (SimpleStmt -> ExpressionStmt .)
    LBRACE          reduce using rule 152 (SimpleStmt -> ExpressionStmt .)


state 235

    (42) StatementRep -> StatementRep Statement . SEMICOL

    SEMICOL         shift and go to state 271


state 236

    (154) SimpleStmt -> Assignment .

    SEMICOL         reduce using rule 154 (SimpleStmt -> Assignment .)
    LBRACE          reduce using rule 154 (SimpleStmt -> Assignment .)


state 237

    (142) Statement -> LabeledStmt .

    SEMICOL         reduce using rule 142 (Statement -> LabeledStmt .)


state 238

    (190) ReturnStmt -> RETURN . ExpressionListPureOpt
    (191) ExpressionListPureOpt -> . ExpressionList
    (192) ExpressionListPureOpt -> . epsilon
    (109) ExpressionList -> . Expression ExpressionRep
    (214) epsilon -> .
    (112) Expression -> . UnaryExpr
    (113) Expression -> . Expression OROR Expression
    (114) Expression -> . Expression AMPAMP Expression
    (115) Expression -> . Expression EQEQ Expression
    (116) Expression -> . Expression NOTEQ Expression
    (117) Expression -> . Expression LESS Expression
    (118) Expression -> . Expression GREAT Expression
    (119) Expression -> . Expression LEQ Expression
    (120) Expression -> . Expression GEQ Expression
    (121) Expression -> . Expression PLUS Expression
    (122) Expression -> . Expression MINUS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression CARET Expression
    (125) Expression -> . Expression TIMES Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MOD Expression
    (128) Expression -> . Expression AMPERS Expression
    (129) Expression -> . Expression LL Expression
    (130) Expression -> . Expression GG Expression
    (131) Expression -> . Expression AMPCAR Expression
    (134) UnaryExpr -> . PrimaryExpr
    (135) UnaryExpr -> . UnaryOp UnaryExpr
    (97) PrimaryExpr -> . Operand
    (98) PrimaryExpr -> . Conversion
    (99) PrimaryExpr -> . PrimaryExpr Selector
    (100) PrimaryExpr -> . PrimaryExpr Index
    (101) PrimaryExpr -> . PrimaryExpr Slice
    (102) PrimaryExpr -> . PrimaryExpr Arguments
    (136) UnaryOp -> . PLUS
    (137) UnaryOp -> . MINUS
    (138) UnaryOp -> . TIMES
    (139) UnaryOp -> . AMPERS
    (140) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (96) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (95) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . IntLiteral
    (86) BasicLit -> . FloatLiteral
    (87) BasicLit -> . ImgLiteral
    (88) BasicLit -> . RuneLiteral
    (89) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (90) IntLiteral -> . INTEGER
    (91) FloatLiteral -> . FLOAT
    (92) ImgLiteral -> . IMAGINARY
    (93) RuneLiteral -> . RUNE
    (94) StringLiteral -> . STRING
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    SEMICOL         reduce using rule 214 (epsilon -> .)
    PLUS            shift and go to state 104
    MINUS           shift and go to state 98
    TIMES           shift and go to state 112
    AMPERS          shift and go to state 118
    NOT             shift and go to state 103
    LPAREN          shift and go to state 115
    IDENTIFIER      shift and go to state 107
    TYPEX           shift and go to state 57
    INTEGER         shift and go to state 105
    FLOAT           shift and go to state 117
    IMAGINARY       shift and go to state 106
    RUNE            shift and go to state 92
    STRING          shift and go to state 99
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    UnaryOp                        shift and go to state 102
    Conversion                     shift and go to state 93
    ExpressionListPureOpt          shift and go to state 272
    Literal                        shift and go to state 95
    FloatLiteral                   shift and go to state 96
    Type                           shift and go to state 97
    OperandName                    shift and go to state 100
    BasicLit                       shift and go to state 101
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    IntLiteral                     shift and go to state 108
    ImgLiteral                     shift and go to state 109
    epsilon                        shift and go to state 273
    UnaryExpr                      shift and go to state 110
    RuneLiteral                    shift and go to state 111
    PrimaryExpr                    shift and go to state 119
    ExpressionList                 shift and go to state 274
    ArrayType                      shift and go to state 53
    Expression                     shift and go to state 140
    PointerType                    shift and go to state 66
    StringLiteral                  shift and go to state 94
    TypeLit                        shift and go to state 55
    Operand                        shift and go to state 113
    FunctionType                   shift and go to state 67

state 239

    (156) LabeledStmt -> Label . COLON Statement

    COLON           shift and go to state 275


state 240

    (153) SimpleStmt -> IncDecStmt .

    SEMICOL         reduce using rule 153 (SimpleStmt -> IncDecStmt .)
    LBRACE          reduce using rule 153 (SimpleStmt -> IncDecStmt .)


state 241

    (147) Statement -> GotoStmt .

    SEMICOL         reduce using rule 147 (Statement -> GotoStmt .)


state 242

    (178) ForStmt -> FOR . ConditionBlockOpt Block
    (179) ConditionBlockOpt -> . epsilon
    (180) ConditionBlockOpt -> . Condition
    (181) ConditionBlockOpt -> . ForClause
    (214) epsilon -> .
    (182) Condition -> . Expression
    (183) ForClause -> . SimpleStmt SEMICOL ConditionOpt SEMICOL SimpleStmt
    (112) Expression -> . UnaryExpr
    (113) Expression -> . Expression OROR Expression
    (114) Expression -> . Expression AMPAMP Expression
    (115) Expression -> . Expression EQEQ Expression
    (116) Expression -> . Expression NOTEQ Expression
    (117) Expression -> . Expression LESS Expression
    (118) Expression -> . Expression GREAT Expression
    (119) Expression -> . Expression LEQ Expression
    (120) Expression -> . Expression GEQ Expression
    (121) Expression -> . Expression PLUS Expression
    (122) Expression -> . Expression MINUS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression CARET Expression
    (125) Expression -> . Expression TIMES Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MOD Expression
    (128) Expression -> . Expression AMPERS Expression
    (129) Expression -> . Expression LL Expression
    (130) Expression -> . Expression GG Expression
    (131) Expression -> . Expression AMPCAR Expression
    (151) SimpleStmt -> . epsilon
    (152) SimpleStmt -> . ExpressionStmt
    (153) SimpleStmt -> . IncDecStmt
    (154) SimpleStmt -> . Assignment
    (155) SimpleStmt -> . ShortVarDecl
    (134) UnaryExpr -> . PrimaryExpr
    (135) UnaryExpr -> . UnaryOp UnaryExpr
    (158) ExpressionStmt -> . Expression
    (159) IncDecStmt -> . Expression PLUSPLUS
    (160) IncDecStmt -> . Expression MINUSMIN
    (161) Assignment -> . ExpressionList assign_op ExpressionList
    (75) ShortVarDecl -> . IDENTIFIER COLONEQ Expression
    (97) PrimaryExpr -> . Operand
    (98) PrimaryExpr -> . Conversion
    (99) PrimaryExpr -> . PrimaryExpr Selector
    (100) PrimaryExpr -> . PrimaryExpr Index
    (101) PrimaryExpr -> . PrimaryExpr Slice
    (102) PrimaryExpr -> . PrimaryExpr Arguments
    (136) UnaryOp -> . PLUS
    (137) UnaryOp -> . MINUS
    (138) UnaryOp -> . TIMES
    (139) UnaryOp -> . AMPERS
    (140) UnaryOp -> . NOT
    (109) ExpressionList -> . Expression ExpressionRep
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (96) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (95) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . IntLiteral
    (86) BasicLit -> . FloatLiteral
    (87) BasicLit -> . ImgLiteral
    (88) BasicLit -> . RuneLiteral
    (89) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (90) IntLiteral -> . INTEGER
    (91) FloatLiteral -> . FLOAT
    (92) ImgLiteral -> . IMAGINARY
    (93) RuneLiteral -> . RUNE
    (94) StringLiteral -> . STRING
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    LBRACE          reduce using rule 214 (epsilon -> .)
    SEMICOL         reduce using rule 214 (epsilon -> .)
    IDENTIFIER      shift and go to state 277
    PLUS            shift and go to state 104
    MINUS           shift and go to state 98
    TIMES           shift and go to state 112
    AMPERS          shift and go to state 118
    NOT             shift and go to state 103
    LPAREN          shift and go to state 115
    TYPEX           shift and go to state 57
    INTEGER         shift and go to state 105
    FLOAT           shift and go to state 117
    IMAGINARY       shift and go to state 106
    RUNE            shift and go to state 92
    STRING          shift and go to state 99
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 93
    UnaryOp                        shift and go to state 102
    SimpleStmt                     shift and go to state 276
    StringLiteral                  shift and go to state 94
    ExpressionStmt                 shift and go to state 234
    PointerType                    shift and go to state 66
    FloatLiteral                   shift and go to state 96
    Type                           shift and go to state 97
    OperandName                    shift and go to state 100
    Assignment                     shift and go to state 236
    TypeName                       shift and go to state 56
    IncDecStmt                     shift and go to state 240
    Condition                      shift and go to state 278
    StructType                     shift and go to state 58
    IntLiteral                     shift and go to state 108
    ImgLiteral                     shift and go to state 109
    epsilon                        shift and go to state 279
    UnaryExpr                      shift and go to state 110
    RuneLiteral                    shift and go to state 111
    ConditionBlockOpt              shift and go to state 280
    PrimaryExpr                    shift and go to state 119
    ExpressionList                 shift and go to state 249
    ArrayType                      shift and go to state 53
    ForClause                      shift and go to state 281
    Expression                     shift and go to state 282
    ShortVarDecl                   shift and go to state 256
    Literal                        shift and go to state 95
    TypeLit                        shift and go to state 55
    BasicLit                       shift and go to state 101
    Operand                        shift and go to state 113
    FunctionType                   shift and go to state 67

state 243

    (148) Statement -> Block .

    SEMICOL         reduce using rule 148 (Statement -> Block .)


state 244

    (194) ContinueStmt -> CONTINUE . LabelOpt
    (195) LabelOpt -> . Label
    (196) LabelOpt -> . epsilon
    (157) Label -> . IDENTIFIER
    (214) epsilon -> .

    IDENTIFIER      shift and go to state 284
    SEMICOL         reduce using rule 214 (epsilon -> .)

    epsilon                        shift and go to state 283
    LabelOpt                       shift and go to state 285
    Label                          shift and go to state 286

state 245

    (141) Statement -> Declaration .

    SEMICOL         reduce using rule 141 (Statement -> Declaration .)


state 246

    (157) Label -> IDENTIFIER .
    (75) ShortVarDecl -> IDENTIFIER . COLONEQ Expression
    (95) OperandName -> IDENTIFIER .

    COLON           reduce using rule 157 (Label -> IDENTIFIER .)
    COLONEQ         shift and go to state 287
    DOT             reduce using rule 95 (OperandName -> IDENTIFIER .)
    LBRACK          reduce using rule 95 (OperandName -> IDENTIFIER .)
    LPAREN          reduce using rule 95 (OperandName -> IDENTIFIER .)
    PLUSPLUS        reduce using rule 95 (OperandName -> IDENTIFIER .)
    MINUSMIN        reduce using rule 95 (OperandName -> IDENTIFIER .)
    OROR            reduce using rule 95 (OperandName -> IDENTIFIER .)
    AMPAMP          reduce using rule 95 (OperandName -> IDENTIFIER .)
    EQEQ            reduce using rule 95 (OperandName -> IDENTIFIER .)
    NOTEQ           reduce using rule 95 (OperandName -> IDENTIFIER .)
    LESS            reduce using rule 95 (OperandName -> IDENTIFIER .)
    GREAT           reduce using rule 95 (OperandName -> IDENTIFIER .)
    LEQ             reduce using rule 95 (OperandName -> IDENTIFIER .)
    GEQ             reduce using rule 95 (OperandName -> IDENTIFIER .)
    PLUS            reduce using rule 95 (OperandName -> IDENTIFIER .)
    MINUS           reduce using rule 95 (OperandName -> IDENTIFIER .)
    OR              reduce using rule 95 (OperandName -> IDENTIFIER .)
    CARET           reduce using rule 95 (OperandName -> IDENTIFIER .)
    TIMES           reduce using rule 95 (OperandName -> IDENTIFIER .)
    DIVIDE          reduce using rule 95 (OperandName -> IDENTIFIER .)
    MOD             reduce using rule 95 (OperandName -> IDENTIFIER .)
    AMPERS          reduce using rule 95 (OperandName -> IDENTIFIER .)
    LL              reduce using rule 95 (OperandName -> IDENTIFIER .)
    GG              reduce using rule 95 (OperandName -> IDENTIFIER .)
    AMPCAR          reduce using rule 95 (OperandName -> IDENTIFIER .)
    COMMA           reduce using rule 95 (OperandName -> IDENTIFIER .)
    SEMICOL         reduce using rule 95 (OperandName -> IDENTIFIER .)
    PLUSEQ          reduce using rule 95 (OperandName -> IDENTIFIER .)
    MINUSEQ         reduce using rule 95 (OperandName -> IDENTIFIER .)
    TIMESEQ         reduce using rule 95 (OperandName -> IDENTIFIER .)
    DIVIDEEQ        reduce using rule 95 (OperandName -> IDENTIFIER .)
    MODEQ           reduce using rule 95 (OperandName -> IDENTIFIER .)
    AMPEQ           reduce using rule 95 (OperandName -> IDENTIFIER .)
    OREQ            reduce using rule 95 (OperandName -> IDENTIFIER .)
    CAREQ           reduce using rule 95 (OperandName -> IDENTIFIER .)
    LLEQ            reduce using rule 95 (OperandName -> IDENTIFIER .)
    GGEQ            reduce using rule 95 (OperandName -> IDENTIFIER .)
    EQUAL           reduce using rule 95 (OperandName -> IDENTIFIER .)


state 247

    (151) SimpleStmt -> epsilon .

    SEMICOL         reduce using rule 151 (SimpleStmt -> epsilon .)
    LBRACE          reduce using rule 151 (SimpleStmt -> epsilon .)


state 248

    (149) Statement -> IfStmt .

    SEMICOL         reduce using rule 149 (Statement -> IfStmt .)


state 249

    (161) Assignment -> ExpressionList . assign_op ExpressionList
    (162) assign_op -> . AssignOp
    (163) AssignOp -> . PLUSEQ
    (164) AssignOp -> . MINUSEQ
    (165) AssignOp -> . TIMESEQ
    (166) AssignOp -> . DIVIDEEQ
    (167) AssignOp -> . MODEQ
    (168) AssignOp -> . AMPEQ
    (169) AssignOp -> . OREQ
    (170) AssignOp -> . CAREQ
    (171) AssignOp -> . LLEQ
    (172) AssignOp -> . GGEQ
    (173) AssignOp -> . EQUAL

    PLUSEQ          shift and go to state 292
    MINUSEQ         shift and go to state 297
    TIMESEQ         shift and go to state 291
    DIVIDEEQ        shift and go to state 300
    MODEQ           shift and go to state 293
    AMPEQ           shift and go to state 298
    OREQ            shift and go to state 296
    CAREQ           shift and go to state 290
    LLEQ            shift and go to state 295
    GGEQ            shift and go to state 294
    EQUAL           shift and go to state 289

    AssignOp                       shift and go to state 288
    assign_op                      shift and go to state 299

state 250

    (158) ExpressionStmt -> Expression .
    (159) IncDecStmt -> Expression . PLUSPLUS
    (160) IncDecStmt -> Expression . MINUSMIN
    (113) Expression -> Expression . OROR Expression
    (114) Expression -> Expression . AMPAMP Expression
    (115) Expression -> Expression . EQEQ Expression
    (116) Expression -> Expression . NOTEQ Expression
    (117) Expression -> Expression . LESS Expression
    (118) Expression -> Expression . GREAT Expression
    (119) Expression -> Expression . LEQ Expression
    (120) Expression -> Expression . GEQ Expression
    (121) Expression -> Expression . PLUS Expression
    (122) Expression -> Expression . MINUS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . CARET Expression
    (125) Expression -> Expression . TIMES Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MOD Expression
    (128) Expression -> Expression . AMPERS Expression
    (129) Expression -> Expression . LL Expression
    (130) Expression -> Expression . GG Expression
    (131) Expression -> Expression . AMPCAR Expression
    (109) ExpressionList -> Expression . ExpressionRep
    (110) ExpressionRep -> . ExpressionRep COMMA Expression
    (111) ExpressionRep -> . epsilon
    (214) epsilon -> .

    SEMICOL         reduce using rule 158 (ExpressionStmt -> Expression .)
    LBRACE          reduce using rule 158 (ExpressionStmt -> Expression .)
    PLUSPLUS        shift and go to state 301
    MINUSMIN        shift and go to state 302
    OROR            shift and go to state 159
    AMPAMP          shift and go to state 174
    EQEQ            shift and go to state 165
    NOTEQ           shift and go to state 171
    LESS            shift and go to state 164
    GREAT           shift and go to state 161
    LEQ             shift and go to state 177
    GEQ             shift and go to state 168
    PLUS            shift and go to state 172
    MINUS           shift and go to state 176
    OR              shift and go to state 169
    CARET           shift and go to state 160
    TIMES           shift and go to state 175
    DIVIDE          shift and go to state 162
    MOD             shift and go to state 173
    AMPERS          shift and go to state 167
    LL              shift and go to state 166
    GG              shift and go to state 170
    AMPCAR          shift and go to state 163
    COMMA           reduce using rule 214 (epsilon -> .)
    PLUSEQ          reduce using rule 214 (epsilon -> .)
    MINUSEQ         reduce using rule 214 (epsilon -> .)
    TIMESEQ         reduce using rule 214 (epsilon -> .)
    DIVIDEEQ        reduce using rule 214 (epsilon -> .)
    MODEQ           reduce using rule 214 (epsilon -> .)
    AMPEQ           reduce using rule 214 (epsilon -> .)
    OREQ            reduce using rule 214 (epsilon -> .)
    CAREQ           reduce using rule 214 (epsilon -> .)
    LLEQ            reduce using rule 214 (epsilon -> .)
    GGEQ            reduce using rule 214 (epsilon -> .)
    EQUAL           reduce using rule 214 (epsilon -> .)

    epsilon                        shift and go to state 196
    ExpressionRep                  shift and go to state 195

state 251

    (193) BreakStmt -> BREAK . LabelOpt
    (195) LabelOpt -> . Label
    (196) LabelOpt -> . epsilon
    (157) Label -> . IDENTIFIER
    (214) epsilon -> .

    IDENTIFIER      shift and go to state 284
    SEMICOL         reduce using rule 214 (epsilon -> .)

    epsilon                        shift and go to state 283
    LabelOpt                       shift and go to state 303
    Label                          shift and go to state 286

state 252

    (144) Statement -> ReturnStmt .

    SEMICOL         reduce using rule 144 (Statement -> ReturnStmt .)


state 253

    (143) Statement -> SimpleStmt .

    SEMICOL         reduce using rule 143 (Statement -> SimpleStmt .)


state 254

    (150) Statement -> ForStmt .

    SEMICOL         reduce using rule 150 (Statement -> ForStmt .)


state 255

    (197) GotoStmt -> GOTO . Label
    (157) Label -> . IDENTIFIER

    IDENTIFIER      shift and go to state 284

    Label                          shift and go to state 304

state 256

    (155) SimpleStmt -> ShortVarDecl .

    SEMICOL         reduce using rule 155 (SimpleStmt -> ShortVarDecl .)
    LBRACE          reduce using rule 155 (SimpleStmt -> ShortVarDecl .)


state 257

    (174) IfStmt -> IF . Expression Block ElseOpt
    (112) Expression -> . UnaryExpr
    (113) Expression -> . Expression OROR Expression
    (114) Expression -> . Expression AMPAMP Expression
    (115) Expression -> . Expression EQEQ Expression
    (116) Expression -> . Expression NOTEQ Expression
    (117) Expression -> . Expression LESS Expression
    (118) Expression -> . Expression GREAT Expression
    (119) Expression -> . Expression LEQ Expression
    (120) Expression -> . Expression GEQ Expression
    (121) Expression -> . Expression PLUS Expression
    (122) Expression -> . Expression MINUS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression CARET Expression
    (125) Expression -> . Expression TIMES Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MOD Expression
    (128) Expression -> . Expression AMPERS Expression
    (129) Expression -> . Expression LL Expression
    (130) Expression -> . Expression GG Expression
    (131) Expression -> . Expression AMPCAR Expression
    (134) UnaryExpr -> . PrimaryExpr
    (135) UnaryExpr -> . UnaryOp UnaryExpr
    (97) PrimaryExpr -> . Operand
    (98) PrimaryExpr -> . Conversion
    (99) PrimaryExpr -> . PrimaryExpr Selector
    (100) PrimaryExpr -> . PrimaryExpr Index
    (101) PrimaryExpr -> . PrimaryExpr Slice
    (102) PrimaryExpr -> . PrimaryExpr Arguments
    (136) UnaryOp -> . PLUS
    (137) UnaryOp -> . MINUS
    (138) UnaryOp -> . TIMES
    (139) UnaryOp -> . AMPERS
    (140) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (96) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (95) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . IntLiteral
    (86) BasicLit -> . FloatLiteral
    (87) BasicLit -> . ImgLiteral
    (88) BasicLit -> . RuneLiteral
    (89) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (90) IntLiteral -> . INTEGER
    (91) FloatLiteral -> . FLOAT
    (92) ImgLiteral -> . IMAGINARY
    (93) RuneLiteral -> . RUNE
    (94) StringLiteral -> . STRING
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 104
    MINUS           shift and go to state 98
    TIMES           shift and go to state 112
    AMPERS          shift and go to state 118
    NOT             shift and go to state 103
    LPAREN          shift and go to state 115
    IDENTIFIER      shift and go to state 107
    TYPEX           shift and go to state 57
    INTEGER         shift and go to state 105
    FLOAT           shift and go to state 117
    IMAGINARY       shift and go to state 106
    RUNE            shift and go to state 92
    STRING          shift and go to state 99
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 93
    UnaryOp                        shift and go to state 102
    PrimaryExpr                    shift and go to state 119
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    PointerType                    shift and go to state 66
    FloatLiteral                   shift and go to state 96
    Type                           shift and go to state 97
    OperandName                    shift and go to state 100
    BasicLit                       shift and go to state 101
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    IntLiteral                     shift and go to state 108
    UnaryExpr                      shift and go to state 110
    RuneLiteral                    shift and go to state 111
    Operand                        shift and go to state 113
    Expression                     shift and go to state 305
    StringLiteral                  shift and go to state 94
    TypeLit                        shift and go to state 55
    ImgLiteral                     shift and go to state 109
    FunctionType                   shift and go to state 67

state 258

    (145) Statement -> BreakStmt .

    SEMICOL         reduce using rule 145 (Statement -> BreakStmt .)


state 259

    (40) Block -> LBRACE StatementList RBRACE .

    SEMICOL         reduce using rule 40 (Block -> LBRACE StatementList RBRACE .)
    ELSE            reduce using rule 40 (Block -> LBRACE StatementList RBRACE .)


state 260

    (38) ParameterDecl -> IdentifierList . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 61
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    Type                           shift and go to state 306
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    TypeLit                        shift and go to state 55

state 261

    (39) ParameterDecl -> Type .

    COMMA           reduce using rule 39 (ParameterDecl -> Type .)
    RPAREN          reduce using rule 39 (ParameterDecl -> Type .)


state 262

    (36) ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA ParameterDecl .

    COMMA           reduce using rule 36 (ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA ParameterDecl .)
    RPAREN          reduce using rule 36 (ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA ParameterDecl .)


state 263

    (37) ParameterDeclCommaRep -> ParameterDecl COMMA ParameterDecl .

    COMMA           reduce using rule 37 (ParameterDeclCommaRep -> ParameterDecl COMMA ParameterDecl .)
    RPAREN          reduce using rule 37 (ParameterDeclCommaRep -> ParameterDecl COMMA ParameterDecl .)


state 264

    (110) ExpressionRep -> ExpressionRep COMMA . Expression
    (112) Expression -> . UnaryExpr
    (113) Expression -> . Expression OROR Expression
    (114) Expression -> . Expression AMPAMP Expression
    (115) Expression -> . Expression EQEQ Expression
    (116) Expression -> . Expression NOTEQ Expression
    (117) Expression -> . Expression LESS Expression
    (118) Expression -> . Expression GREAT Expression
    (119) Expression -> . Expression LEQ Expression
    (120) Expression -> . Expression GEQ Expression
    (121) Expression -> . Expression PLUS Expression
    (122) Expression -> . Expression MINUS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression CARET Expression
    (125) Expression -> . Expression TIMES Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MOD Expression
    (128) Expression -> . Expression AMPERS Expression
    (129) Expression -> . Expression LL Expression
    (130) Expression -> . Expression GG Expression
    (131) Expression -> . Expression AMPCAR Expression
    (134) UnaryExpr -> . PrimaryExpr
    (135) UnaryExpr -> . UnaryOp UnaryExpr
    (97) PrimaryExpr -> . Operand
    (98) PrimaryExpr -> . Conversion
    (99) PrimaryExpr -> . PrimaryExpr Selector
    (100) PrimaryExpr -> . PrimaryExpr Index
    (101) PrimaryExpr -> . PrimaryExpr Slice
    (102) PrimaryExpr -> . PrimaryExpr Arguments
    (136) UnaryOp -> . PLUS
    (137) UnaryOp -> . MINUS
    (138) UnaryOp -> . TIMES
    (139) UnaryOp -> . AMPERS
    (140) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (96) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (95) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . IntLiteral
    (86) BasicLit -> . FloatLiteral
    (87) BasicLit -> . ImgLiteral
    (88) BasicLit -> . RuneLiteral
    (89) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (90) IntLiteral -> . INTEGER
    (91) FloatLiteral -> . FLOAT
    (92) ImgLiteral -> . IMAGINARY
    (93) RuneLiteral -> . RUNE
    (94) StringLiteral -> . STRING
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 104
    MINUS           shift and go to state 98
    TIMES           shift and go to state 112
    AMPERS          shift and go to state 118
    NOT             shift and go to state 103
    LPAREN          shift and go to state 115
    IDENTIFIER      shift and go to state 107
    TYPEX           shift and go to state 57
    INTEGER         shift and go to state 105
    FLOAT           shift and go to state 117
    IMAGINARY       shift and go to state 106
    RUNE            shift and go to state 92
    STRING          shift and go to state 99
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    UnaryOp                        shift and go to state 102
    PrimaryExpr                    shift and go to state 119
    Conversion                     shift and go to state 93
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    FloatLiteral                   shift and go to state 96
    Type                           shift and go to state 97
    OperandName                    shift and go to state 100
    BasicLit                       shift and go to state 101
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    IntLiteral                     shift and go to state 108
    UnaryExpr                      shift and go to state 110
    RuneLiteral                    shift and go to state 111
    Operand                        shift and go to state 113
    Expression                     shift and go to state 307
    PointerType                    shift and go to state 66
    StringLiteral                  shift and go to state 94
    TypeLit                        shift and go to state 55
    ImgLiteral                     shift and go to state 109
    FunctionType                   shift and go to state 67

state 265

    (16) FieldDeclRep -> FieldDeclRep FieldDecl SEMICOL .

    RBRACE          reduce using rule 16 (FieldDeclRep -> FieldDeclRep FieldDecl SEMICOL .)
    IDENTIFIER      reduce using rule 16 (FieldDeclRep -> FieldDeclRep FieldDecl SEMICOL .)


state 266

    (18) FieldDecl -> IdentifierList Type . TagOpt
    (19) TagOpt -> . Tag
    (20) TagOpt -> . epsilon
    (21) Tag -> . STRING
    (214) epsilon -> .

    STRING          shift and go to state 308
    SEMICOL         reduce using rule 214 (epsilon -> .)

    epsilon                        shift and go to state 309
    Tag                            shift and go to state 310
    TagOpt                         shift and go to state 311

state 267

    (96) Conversion -> Type LPAREN Expression RPAREN .

    DOT             reduce using rule 96 (Conversion -> Type LPAREN Expression RPAREN .)
    LBRACK          reduce using rule 96 (Conversion -> Type LPAREN Expression RPAREN .)
    LPAREN          reduce using rule 96 (Conversion -> Type LPAREN Expression RPAREN .)
    RPAREN          reduce using rule 96 (Conversion -> Type LPAREN Expression RPAREN .)
    OROR            reduce using rule 96 (Conversion -> Type LPAREN Expression RPAREN .)
    AMPAMP          reduce using rule 96 (Conversion -> Type LPAREN Expression RPAREN .)
    EQEQ            reduce using rule 96 (Conversion -> Type LPAREN Expression RPAREN .)
    NOTEQ           reduce using rule 96 (Conversion -> Type LPAREN Expression RPAREN .)
    LESS            reduce using rule 96 (Conversion -> Type LPAREN Expression RPAREN .)
    GREAT           reduce using rule 96 (Conversion -> Type LPAREN Expression RPAREN .)
    LEQ             reduce using rule 96 (Conversion -> Type LPAREN Expression RPAREN .)
    GEQ             reduce using rule 96 (Conversion -> Type LPAREN Expression RPAREN .)
    PLUS            reduce using rule 96 (Conversion -> Type LPAREN Expression RPAREN .)
    MINUS           reduce using rule 96 (Conversion -> Type LPAREN Expression RPAREN .)
    OR              reduce using rule 96 (Conversion -> Type LPAREN Expression RPAREN .)
    CARET           reduce using rule 96 (Conversion -> Type LPAREN Expression RPAREN .)
    TIMES           reduce using rule 96 (Conversion -> Type LPAREN Expression RPAREN .)
    DIVIDE          reduce using rule 96 (Conversion -> Type LPAREN Expression RPAREN .)
    MOD             reduce using rule 96 (Conversion -> Type LPAREN Expression RPAREN .)
    AMPERS          reduce using rule 96 (Conversion -> Type LPAREN Expression RPAREN .)
    LL              reduce using rule 96 (Conversion -> Type LPAREN Expression RPAREN .)
    GG              reduce using rule 96 (Conversion -> Type LPAREN Expression RPAREN .)
    AMPCAR          reduce using rule 96 (Conversion -> Type LPAREN Expression RPAREN .)
    SEMICOL         reduce using rule 96 (Conversion -> Type LPAREN Expression RPAREN .)
    RBRACK          reduce using rule 96 (Conversion -> Type LPAREN Expression RPAREN .)
    COMMA           reduce using rule 96 (Conversion -> Type LPAREN Expression RPAREN .)
    COLON           reduce using rule 96 (Conversion -> Type LPAREN Expression RPAREN .)
    PLUSPLUS        reduce using rule 96 (Conversion -> Type LPAREN Expression RPAREN .)
    MINUSMIN        reduce using rule 96 (Conversion -> Type LPAREN Expression RPAREN .)
    PLUSEQ          reduce using rule 96 (Conversion -> Type LPAREN Expression RPAREN .)
    MINUSEQ         reduce using rule 96 (Conversion -> Type LPAREN Expression RPAREN .)
    TIMESEQ         reduce using rule 96 (Conversion -> Type LPAREN Expression RPAREN .)
    DIVIDEEQ        reduce using rule 96 (Conversion -> Type LPAREN Expression RPAREN .)
    MODEQ           reduce using rule 96 (Conversion -> Type LPAREN Expression RPAREN .)
    AMPEQ           reduce using rule 96 (Conversion -> Type LPAREN Expression RPAREN .)
    OREQ            reduce using rule 96 (Conversion -> Type LPAREN Expression RPAREN .)
    CAREQ           reduce using rule 96 (Conversion -> Type LPAREN Expression RPAREN .)
    LLEQ            reduce using rule 96 (Conversion -> Type LPAREN Expression RPAREN .)
    GGEQ            reduce using rule 96 (Conversion -> Type LPAREN Expression RPAREN .)
    EQUAL           reduce using rule 96 (Conversion -> Type LPAREN Expression RPAREN .)
    LBRACE          reduce using rule 96 (Conversion -> Type LPAREN Expression RPAREN .)


state 268

    (105) Slice -> LBRACK ExpressionOpt COLON . ExpressionOpt RBRACK
    (132) ExpressionOpt -> . Expression
    (133) ExpressionOpt -> . epsilon
    (112) Expression -> . UnaryExpr
    (113) Expression -> . Expression OROR Expression
    (114) Expression -> . Expression AMPAMP Expression
    (115) Expression -> . Expression EQEQ Expression
    (116) Expression -> . Expression NOTEQ Expression
    (117) Expression -> . Expression LESS Expression
    (118) Expression -> . Expression GREAT Expression
    (119) Expression -> . Expression LEQ Expression
    (120) Expression -> . Expression GEQ Expression
    (121) Expression -> . Expression PLUS Expression
    (122) Expression -> . Expression MINUS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression CARET Expression
    (125) Expression -> . Expression TIMES Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MOD Expression
    (128) Expression -> . Expression AMPERS Expression
    (129) Expression -> . Expression LL Expression
    (130) Expression -> . Expression GG Expression
    (131) Expression -> . Expression AMPCAR Expression
    (214) epsilon -> .
    (134) UnaryExpr -> . PrimaryExpr
    (135) UnaryExpr -> . UnaryOp UnaryExpr
    (97) PrimaryExpr -> . Operand
    (98) PrimaryExpr -> . Conversion
    (99) PrimaryExpr -> . PrimaryExpr Selector
    (100) PrimaryExpr -> . PrimaryExpr Index
    (101) PrimaryExpr -> . PrimaryExpr Slice
    (102) PrimaryExpr -> . PrimaryExpr Arguments
    (136) UnaryOp -> . PLUS
    (137) UnaryOp -> . MINUS
    (138) UnaryOp -> . TIMES
    (139) UnaryOp -> . AMPERS
    (140) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (96) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (95) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . IntLiteral
    (86) BasicLit -> . FloatLiteral
    (87) BasicLit -> . ImgLiteral
    (88) BasicLit -> . RuneLiteral
    (89) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (90) IntLiteral -> . INTEGER
    (91) FloatLiteral -> . FLOAT
    (92) ImgLiteral -> . IMAGINARY
    (93) RuneLiteral -> . RUNE
    (94) StringLiteral -> . STRING
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    RBRACK          reduce using rule 214 (epsilon -> .)
    PLUS            shift and go to state 104
    MINUS           shift and go to state 98
    TIMES           shift and go to state 112
    AMPERS          shift and go to state 118
    NOT             shift and go to state 103
    LPAREN          shift and go to state 115
    IDENTIFIER      shift and go to state 107
    TYPEX           shift and go to state 57
    INTEGER         shift and go to state 105
    FLOAT           shift and go to state 117
    IMAGINARY       shift and go to state 106
    RUNE            shift and go to state 92
    STRING          shift and go to state 99
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 93
    UnaryOp                        shift and go to state 102
    PrimaryExpr                    shift and go to state 119
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    FloatLiteral                   shift and go to state 96
    Type                           shift and go to state 97
    OperandName                    shift and go to state 100
    BasicLit                       shift and go to state 101
    TypeName                       shift and go to state 56
    ExpressionOpt                  shift and go to state 312
    StructType                     shift and go to state 58
    IntLiteral                     shift and go to state 108
    epsilon                        shift and go to state 227
    UnaryExpr                      shift and go to state 110
    RuneLiteral                    shift and go to state 111
    Operand                        shift and go to state 113
    Expression                     shift and go to state 313
    PointerType                    shift and go to state 66
    StringLiteral                  shift and go to state 94
    TypeLit                        shift and go to state 55
    ImgLiteral                     shift and go to state 109
    FunctionType                   shift and go to state 67

state 269

    (104) Index -> LBRACK Expression RBRACK .

    DOT             reduce using rule 104 (Index -> LBRACK Expression RBRACK .)
    LBRACK          reduce using rule 104 (Index -> LBRACK Expression RBRACK .)
    LPAREN          reduce using rule 104 (Index -> LBRACK Expression RBRACK .)
    OROR            reduce using rule 104 (Index -> LBRACK Expression RBRACK .)
    AMPAMP          reduce using rule 104 (Index -> LBRACK Expression RBRACK .)
    EQEQ            reduce using rule 104 (Index -> LBRACK Expression RBRACK .)
    NOTEQ           reduce using rule 104 (Index -> LBRACK Expression RBRACK .)
    LESS            reduce using rule 104 (Index -> LBRACK Expression RBRACK .)
    GREAT           reduce using rule 104 (Index -> LBRACK Expression RBRACK .)
    LEQ             reduce using rule 104 (Index -> LBRACK Expression RBRACK .)
    GEQ             reduce using rule 104 (Index -> LBRACK Expression RBRACK .)
    PLUS            reduce using rule 104 (Index -> LBRACK Expression RBRACK .)
    MINUS           reduce using rule 104 (Index -> LBRACK Expression RBRACK .)
    OR              reduce using rule 104 (Index -> LBRACK Expression RBRACK .)
    CARET           reduce using rule 104 (Index -> LBRACK Expression RBRACK .)
    TIMES           reduce using rule 104 (Index -> LBRACK Expression RBRACK .)
    DIVIDE          reduce using rule 104 (Index -> LBRACK Expression RBRACK .)
    MOD             reduce using rule 104 (Index -> LBRACK Expression RBRACK .)
    AMPERS          reduce using rule 104 (Index -> LBRACK Expression RBRACK .)
    LL              reduce using rule 104 (Index -> LBRACK Expression RBRACK .)
    GG              reduce using rule 104 (Index -> LBRACK Expression RBRACK .)
    AMPCAR          reduce using rule 104 (Index -> LBRACK Expression RBRACK .)
    RBRACK          reduce using rule 104 (Index -> LBRACK Expression RBRACK .)
    COMMA           reduce using rule 104 (Index -> LBRACK Expression RBRACK .)
    SEMICOL         reduce using rule 104 (Index -> LBRACK Expression RBRACK .)
    RPAREN          reduce using rule 104 (Index -> LBRACK Expression RBRACK .)
    COLON           reduce using rule 104 (Index -> LBRACK Expression RBRACK .)
    PLUSPLUS        reduce using rule 104 (Index -> LBRACK Expression RBRACK .)
    MINUSMIN        reduce using rule 104 (Index -> LBRACK Expression RBRACK .)
    PLUSEQ          reduce using rule 104 (Index -> LBRACK Expression RBRACK .)
    MINUSEQ         reduce using rule 104 (Index -> LBRACK Expression RBRACK .)
    TIMESEQ         reduce using rule 104 (Index -> LBRACK Expression RBRACK .)
    DIVIDEEQ        reduce using rule 104 (Index -> LBRACK Expression RBRACK .)
    MODEQ           reduce using rule 104 (Index -> LBRACK Expression RBRACK .)
    AMPEQ           reduce using rule 104 (Index -> LBRACK Expression RBRACK .)
    OREQ            reduce using rule 104 (Index -> LBRACK Expression RBRACK .)
    CAREQ           reduce using rule 104 (Index -> LBRACK Expression RBRACK .)
    LLEQ            reduce using rule 104 (Index -> LBRACK Expression RBRACK .)
    GGEQ            reduce using rule 104 (Index -> LBRACK Expression RBRACK .)
    EQUAL           reduce using rule 104 (Index -> LBRACK Expression RBRACK .)
    LBRACE          reduce using rule 104 (Index -> LBRACK Expression RBRACK .)


state 270

    (106) Arguments -> LPAREN ExpressionListTypeOpt RPAREN .

    DOT             reduce using rule 106 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LBRACK          reduce using rule 106 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LPAREN          reduce using rule 106 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    OROR            reduce using rule 106 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    AMPAMP          reduce using rule 106 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    EQEQ            reduce using rule 106 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    NOTEQ           reduce using rule 106 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LESS            reduce using rule 106 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    GREAT           reduce using rule 106 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LEQ             reduce using rule 106 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    GEQ             reduce using rule 106 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    PLUS            reduce using rule 106 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    MINUS           reduce using rule 106 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    OR              reduce using rule 106 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    CARET           reduce using rule 106 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    TIMES           reduce using rule 106 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    DIVIDE          reduce using rule 106 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    MOD             reduce using rule 106 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    AMPERS          reduce using rule 106 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LL              reduce using rule 106 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    GG              reduce using rule 106 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    AMPCAR          reduce using rule 106 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    RBRACK          reduce using rule 106 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    COMMA           reduce using rule 106 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    SEMICOL         reduce using rule 106 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    RPAREN          reduce using rule 106 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    COLON           reduce using rule 106 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    PLUSPLUS        reduce using rule 106 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    MINUSMIN        reduce using rule 106 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    PLUSEQ          reduce using rule 106 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    MINUSEQ         reduce using rule 106 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    TIMESEQ         reduce using rule 106 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    DIVIDEEQ        reduce using rule 106 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    MODEQ           reduce using rule 106 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    AMPEQ           reduce using rule 106 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    OREQ            reduce using rule 106 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    CAREQ           reduce using rule 106 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LLEQ            reduce using rule 106 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    GGEQ            reduce using rule 106 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    EQUAL           reduce using rule 106 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LBRACE          reduce using rule 106 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)


state 271

    (42) StatementRep -> StatementRep Statement SEMICOL .

    RETURN          reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    BREAK           reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    CONTINUE        reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    GOTO            reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    LBRACE          reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    IF              reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    FOR             reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    CONST           reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    TYPE            reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    VAR             reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    IDENTIFIER      reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    PLUS            reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    MINUS           reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    TIMES           reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    AMPERS          reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    NOT             reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    LPAREN          reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    TYPEX           reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    INTEGER         reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    FLOAT           reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    IMAGINARY       reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    RUNE            reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    STRING          reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    LBRACK          reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    STRUCT          reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    FUNC            reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    SEMICOL         reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    RBRACE          reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)


state 272

    (190) ReturnStmt -> RETURN ExpressionListPureOpt .

    SEMICOL         reduce using rule 190 (ReturnStmt -> RETURN ExpressionListPureOpt .)


state 273

    (192) ExpressionListPureOpt -> epsilon .

    SEMICOL         reduce using rule 192 (ExpressionListPureOpt -> epsilon .)


state 274

    (191) ExpressionListPureOpt -> ExpressionList .

    SEMICOL         reduce using rule 191 (ExpressionListPureOpt -> ExpressionList .)


state 275

    (156) LabeledStmt -> Label COLON . Statement
    (141) Statement -> . Declaration
    (142) Statement -> . LabeledStmt
    (143) Statement -> . SimpleStmt
    (144) Statement -> . ReturnStmt
    (145) Statement -> . BreakStmt
    (146) Statement -> . ContinueStmt
    (147) Statement -> . GotoStmt
    (148) Statement -> . Block
    (149) Statement -> . IfStmt
    (150) Statement -> . ForStmt
    (44) Declaration -> . ConstDecl
    (45) Declaration -> . TypeDecl
    (46) Declaration -> . VarDecl
    (156) LabeledStmt -> . Label COLON Statement
    (151) SimpleStmt -> . epsilon
    (152) SimpleStmt -> . ExpressionStmt
    (153) SimpleStmt -> . IncDecStmt
    (154) SimpleStmt -> . Assignment
    (155) SimpleStmt -> . ShortVarDecl
    (190) ReturnStmt -> . RETURN ExpressionListPureOpt
    (193) BreakStmt -> . BREAK LabelOpt
    (194) ContinueStmt -> . CONTINUE LabelOpt
    (197) GotoStmt -> . GOTO Label
    (40) Block -> . LBRACE StatementList RBRACE
    (174) IfStmt -> . IF Expression Block ElseOpt
    (178) ForStmt -> . FOR ConditionBlockOpt Block
    (49) ConstDecl -> . CONST ConstSpec
    (50) ConstDecl -> . CONST LPAREN ConstSpecRep RPAREN
    (59) TypeDecl -> . TYPE TypeSpec
    (60) TypeDecl -> . TYPE LPAREN TypeSpecRep RPAREN
    (67) VarDecl -> . VAR VarSpec
    (68) VarDecl -> . VAR LPAREN VarSpecRep RPAREN
    (157) Label -> . IDENTIFIER
    (214) epsilon -> .
    (158) ExpressionStmt -> . Expression
    (159) IncDecStmt -> . Expression PLUSPLUS
    (160) IncDecStmt -> . Expression MINUSMIN
    (161) Assignment -> . ExpressionList assign_op ExpressionList
    (75) ShortVarDecl -> . IDENTIFIER COLONEQ Expression
    (112) Expression -> . UnaryExpr
    (113) Expression -> . Expression OROR Expression
    (114) Expression -> . Expression AMPAMP Expression
    (115) Expression -> . Expression EQEQ Expression
    (116) Expression -> . Expression NOTEQ Expression
    (117) Expression -> . Expression LESS Expression
    (118) Expression -> . Expression GREAT Expression
    (119) Expression -> . Expression LEQ Expression
    (120) Expression -> . Expression GEQ Expression
    (121) Expression -> . Expression PLUS Expression
    (122) Expression -> . Expression MINUS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression CARET Expression
    (125) Expression -> . Expression TIMES Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MOD Expression
    (128) Expression -> . Expression AMPERS Expression
    (129) Expression -> . Expression LL Expression
    (130) Expression -> . Expression GG Expression
    (131) Expression -> . Expression AMPCAR Expression
    (109) ExpressionList -> . Expression ExpressionRep
    (134) UnaryExpr -> . PrimaryExpr
    (135) UnaryExpr -> . UnaryOp UnaryExpr
    (97) PrimaryExpr -> . Operand
    (98) PrimaryExpr -> . Conversion
    (99) PrimaryExpr -> . PrimaryExpr Selector
    (100) PrimaryExpr -> . PrimaryExpr Index
    (101) PrimaryExpr -> . PrimaryExpr Slice
    (102) PrimaryExpr -> . PrimaryExpr Arguments
    (136) UnaryOp -> . PLUS
    (137) UnaryOp -> . MINUS
    (138) UnaryOp -> . TIMES
    (139) UnaryOp -> . AMPERS
    (140) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (96) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (95) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . IntLiteral
    (86) BasicLit -> . FloatLiteral
    (87) BasicLit -> . ImgLiteral
    (88) BasicLit -> . RuneLiteral
    (89) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (90) IntLiteral -> . INTEGER
    (91) FloatLiteral -> . FLOAT
    (92) ImgLiteral -> . IMAGINARY
    (93) RuneLiteral -> . RUNE
    (94) StringLiteral -> . STRING
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    RETURN          shift and go to state 238
    BREAK           shift and go to state 251
    CONTINUE        shift and go to state 244
    GOTO            shift and go to state 255
    LBRACE          shift and go to state 128
    IF              shift and go to state 257
    FOR             shift and go to state 242
    CONST           shift and go to state 14
    TYPE            shift and go to state 23
    VAR             shift and go to state 21
    IDENTIFIER      shift and go to state 246
    SEMICOL         reduce using rule 214 (epsilon -> .)
    PLUS            shift and go to state 104
    MINUS           shift and go to state 98
    TIMES           shift and go to state 112
    AMPERS          shift and go to state 118
    NOT             shift and go to state 103
    LPAREN          shift and go to state 115
    TYPEX           shift and go to state 57
    INTEGER         shift and go to state 105
    FLOAT           shift and go to state 117
    IMAGINARY       shift and go to state 106
    RUNE            shift and go to state 92
    STRING          shift and go to state 99
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    UnaryOp                        shift and go to state 102
    ContinueStmt                   shift and go to state 233
    Conversion                     shift and go to state 93
    SimpleStmt                     shift and go to state 253
    Label                          shift and go to state 239
    ExpressionStmt                 shift and go to state 234
    PointerType                    shift and go to state 66
    ForStmt                        shift and go to state 254
    Statement                      shift and go to state 314
    RuneLiteral                    shift and go to state 111
    ImgLiteral                     shift and go to state 109
    FloatLiteral                   shift and go to state 96
    Type                           shift and go to state 97
    IfStmt                         shift and go to state 248
    OperandName                    shift and go to state 100
    ArrayType                      shift and go to state 53
    Assignment                     shift and go to state 236
    TypeName                       shift and go to state 56
    IncDecStmt                     shift and go to state 240
    Declaration                    shift and go to state 245
    FunctionType                   shift and go to state 67
    StringLiteral                  shift and go to state 94
    GotoStmt                       shift and go to state 241
    StructType                     shift and go to state 58
    IntLiteral                     shift and go to state 108
    TypeDecl                       shift and go to state 19
    LabeledStmt                    shift and go to state 237
    epsilon                        shift and go to state 247
    UnaryExpr                      shift and go to state 110
    Operand                        shift and go to state 113
    ExpressionList                 shift and go to state 249
    Expression                     shift and go to state 250
    ShortVarDecl                   shift and go to state 256
    Block                          shift and go to state 243
    BreakStmt                      shift and go to state 258
    VarDecl                        shift and go to state 22
    Literal                        shift and go to state 95
    TypeLit                        shift and go to state 55
    BasicLit                       shift and go to state 101
    PrimaryExpr                    shift and go to state 119
    ReturnStmt                     shift and go to state 252
    ConstDecl                      shift and go to state 18

state 276

    (183) ForClause -> SimpleStmt . SEMICOL ConditionOpt SEMICOL SimpleStmt

    SEMICOL         shift and go to state 315


state 277

    (75) ShortVarDecl -> IDENTIFIER . COLONEQ Expression
    (95) OperandName -> IDENTIFIER .

    COLONEQ         shift and go to state 287
    DOT             reduce using rule 95 (OperandName -> IDENTIFIER .)
    LBRACK          reduce using rule 95 (OperandName -> IDENTIFIER .)
    LPAREN          reduce using rule 95 (OperandName -> IDENTIFIER .)
    PLUSPLUS        reduce using rule 95 (OperandName -> IDENTIFIER .)
    MINUSMIN        reduce using rule 95 (OperandName -> IDENTIFIER .)
    OROR            reduce using rule 95 (OperandName -> IDENTIFIER .)
    AMPAMP          reduce using rule 95 (OperandName -> IDENTIFIER .)
    EQEQ            reduce using rule 95 (OperandName -> IDENTIFIER .)
    NOTEQ           reduce using rule 95 (OperandName -> IDENTIFIER .)
    LESS            reduce using rule 95 (OperandName -> IDENTIFIER .)
    GREAT           reduce using rule 95 (OperandName -> IDENTIFIER .)
    LEQ             reduce using rule 95 (OperandName -> IDENTIFIER .)
    GEQ             reduce using rule 95 (OperandName -> IDENTIFIER .)
    PLUS            reduce using rule 95 (OperandName -> IDENTIFIER .)
    MINUS           reduce using rule 95 (OperandName -> IDENTIFIER .)
    OR              reduce using rule 95 (OperandName -> IDENTIFIER .)
    CARET           reduce using rule 95 (OperandName -> IDENTIFIER .)
    TIMES           reduce using rule 95 (OperandName -> IDENTIFIER .)
    DIVIDE          reduce using rule 95 (OperandName -> IDENTIFIER .)
    MOD             reduce using rule 95 (OperandName -> IDENTIFIER .)
    AMPERS          reduce using rule 95 (OperandName -> IDENTIFIER .)
    LL              reduce using rule 95 (OperandName -> IDENTIFIER .)
    GG              reduce using rule 95 (OperandName -> IDENTIFIER .)
    AMPCAR          reduce using rule 95 (OperandName -> IDENTIFIER .)
    COMMA           reduce using rule 95 (OperandName -> IDENTIFIER .)
    LBRACE          reduce using rule 95 (OperandName -> IDENTIFIER .)
    PLUSEQ          reduce using rule 95 (OperandName -> IDENTIFIER .)
    MINUSEQ         reduce using rule 95 (OperandName -> IDENTIFIER .)
    TIMESEQ         reduce using rule 95 (OperandName -> IDENTIFIER .)
    DIVIDEEQ        reduce using rule 95 (OperandName -> IDENTIFIER .)
    MODEQ           reduce using rule 95 (OperandName -> IDENTIFIER .)
    AMPEQ           reduce using rule 95 (OperandName -> IDENTIFIER .)
    OREQ            reduce using rule 95 (OperandName -> IDENTIFIER .)
    CAREQ           reduce using rule 95 (OperandName -> IDENTIFIER .)
    LLEQ            reduce using rule 95 (OperandName -> IDENTIFIER .)
    GGEQ            reduce using rule 95 (OperandName -> IDENTIFIER .)
    EQUAL           reduce using rule 95 (OperandName -> IDENTIFIER .)
    SEMICOL         reduce using rule 95 (OperandName -> IDENTIFIER .)


state 278

    (180) ConditionBlockOpt -> Condition .

    LBRACE          reduce using rule 180 (ConditionBlockOpt -> Condition .)


state 279

    (179) ConditionBlockOpt -> epsilon .
    (151) SimpleStmt -> epsilon .

    LBRACE          reduce using rule 179 (ConditionBlockOpt -> epsilon .)
    SEMICOL         reduce using rule 151 (SimpleStmt -> epsilon .)


state 280

    (178) ForStmt -> FOR ConditionBlockOpt . Block
    (40) Block -> . LBRACE StatementList RBRACE

    LBRACE          shift and go to state 128

    Block                          shift and go to state 316

state 281

    (181) ConditionBlockOpt -> ForClause .

    LBRACE          reduce using rule 181 (ConditionBlockOpt -> ForClause .)


state 282

    (182) Condition -> Expression .
    (113) Expression -> Expression . OROR Expression
    (114) Expression -> Expression . AMPAMP Expression
    (115) Expression -> Expression . EQEQ Expression
    (116) Expression -> Expression . NOTEQ Expression
    (117) Expression -> Expression . LESS Expression
    (118) Expression -> Expression . GREAT Expression
    (119) Expression -> Expression . LEQ Expression
    (120) Expression -> Expression . GEQ Expression
    (121) Expression -> Expression . PLUS Expression
    (122) Expression -> Expression . MINUS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . CARET Expression
    (125) Expression -> Expression . TIMES Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MOD Expression
    (128) Expression -> Expression . AMPERS Expression
    (129) Expression -> Expression . LL Expression
    (130) Expression -> Expression . GG Expression
    (131) Expression -> Expression . AMPCAR Expression
    (158) ExpressionStmt -> Expression .
    (159) IncDecStmt -> Expression . PLUSPLUS
    (160) IncDecStmt -> Expression . MINUSMIN
    (109) ExpressionList -> Expression . ExpressionRep
    (110) ExpressionRep -> . ExpressionRep COMMA Expression
    (111) ExpressionRep -> . epsilon
    (214) epsilon -> .

    LBRACE          reduce using rule 182 (Condition -> Expression .)
    OROR            shift and go to state 159
    AMPAMP          shift and go to state 174
    EQEQ            shift and go to state 165
    NOTEQ           shift and go to state 171
    LESS            shift and go to state 164
    GREAT           shift and go to state 161
    LEQ             shift and go to state 177
    GEQ             shift and go to state 168
    PLUS            shift and go to state 172
    MINUS           shift and go to state 176
    OR              shift and go to state 169
    CARET           shift and go to state 160
    TIMES           shift and go to state 175
    DIVIDE          shift and go to state 162
    MOD             shift and go to state 173
    AMPERS          shift and go to state 167
    LL              shift and go to state 166
    GG              shift and go to state 170
    AMPCAR          shift and go to state 163
    SEMICOL         reduce using rule 158 (ExpressionStmt -> Expression .)
    PLUSPLUS        shift and go to state 301
    MINUSMIN        shift and go to state 302
    COMMA           reduce using rule 214 (epsilon -> .)
    PLUSEQ          reduce using rule 214 (epsilon -> .)
    MINUSEQ         reduce using rule 214 (epsilon -> .)
    TIMESEQ         reduce using rule 214 (epsilon -> .)
    DIVIDEEQ        reduce using rule 214 (epsilon -> .)
    MODEQ           reduce using rule 214 (epsilon -> .)
    AMPEQ           reduce using rule 214 (epsilon -> .)
    OREQ            reduce using rule 214 (epsilon -> .)
    CAREQ           reduce using rule 214 (epsilon -> .)
    LLEQ            reduce using rule 214 (epsilon -> .)
    GGEQ            reduce using rule 214 (epsilon -> .)
    EQUAL           reduce using rule 214 (epsilon -> .)

    epsilon                        shift and go to state 196
    ExpressionRep                  shift and go to state 195

state 283

    (196) LabelOpt -> epsilon .

    SEMICOL         reduce using rule 196 (LabelOpt -> epsilon .)


state 284

    (157) Label -> IDENTIFIER .

    SEMICOL         reduce using rule 157 (Label -> IDENTIFIER .)


state 285

    (194) ContinueStmt -> CONTINUE LabelOpt .

    SEMICOL         reduce using rule 194 (ContinueStmt -> CONTINUE LabelOpt .)


state 286

    (195) LabelOpt -> Label .

    SEMICOL         reduce using rule 195 (LabelOpt -> Label .)


state 287

    (75) ShortVarDecl -> IDENTIFIER COLONEQ . Expression
    (112) Expression -> . UnaryExpr
    (113) Expression -> . Expression OROR Expression
    (114) Expression -> . Expression AMPAMP Expression
    (115) Expression -> . Expression EQEQ Expression
    (116) Expression -> . Expression NOTEQ Expression
    (117) Expression -> . Expression LESS Expression
    (118) Expression -> . Expression GREAT Expression
    (119) Expression -> . Expression LEQ Expression
    (120) Expression -> . Expression GEQ Expression
    (121) Expression -> . Expression PLUS Expression
    (122) Expression -> . Expression MINUS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression CARET Expression
    (125) Expression -> . Expression TIMES Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MOD Expression
    (128) Expression -> . Expression AMPERS Expression
    (129) Expression -> . Expression LL Expression
    (130) Expression -> . Expression GG Expression
    (131) Expression -> . Expression AMPCAR Expression
    (134) UnaryExpr -> . PrimaryExpr
    (135) UnaryExpr -> . UnaryOp UnaryExpr
    (97) PrimaryExpr -> . Operand
    (98) PrimaryExpr -> . Conversion
    (99) PrimaryExpr -> . PrimaryExpr Selector
    (100) PrimaryExpr -> . PrimaryExpr Index
    (101) PrimaryExpr -> . PrimaryExpr Slice
    (102) PrimaryExpr -> . PrimaryExpr Arguments
    (136) UnaryOp -> . PLUS
    (137) UnaryOp -> . MINUS
    (138) UnaryOp -> . TIMES
    (139) UnaryOp -> . AMPERS
    (140) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (96) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (95) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . IntLiteral
    (86) BasicLit -> . FloatLiteral
    (87) BasicLit -> . ImgLiteral
    (88) BasicLit -> . RuneLiteral
    (89) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (90) IntLiteral -> . INTEGER
    (91) FloatLiteral -> . FLOAT
    (92) ImgLiteral -> . IMAGINARY
    (93) RuneLiteral -> . RUNE
    (94) StringLiteral -> . STRING
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 104
    MINUS           shift and go to state 98
    TIMES           shift and go to state 112
    AMPERS          shift and go to state 118
    NOT             shift and go to state 103
    LPAREN          shift and go to state 115
    IDENTIFIER      shift and go to state 107
    TYPEX           shift and go to state 57
    INTEGER         shift and go to state 105
    FLOAT           shift and go to state 117
    IMAGINARY       shift and go to state 106
    RUNE            shift and go to state 92
    STRING          shift and go to state 99
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 93
    UnaryOp                        shift and go to state 102
    PrimaryExpr                    shift and go to state 119
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    FloatLiteral                   shift and go to state 96
    Type                           shift and go to state 97
    OperandName                    shift and go to state 100
    BasicLit                       shift and go to state 101
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    IntLiteral                     shift and go to state 108
    UnaryExpr                      shift and go to state 110
    RuneLiteral                    shift and go to state 111
    Operand                        shift and go to state 113
    Expression                     shift and go to state 317
    PointerType                    shift and go to state 66
    StringLiteral                  shift and go to state 94
    TypeLit                        shift and go to state 55
    ImgLiteral                     shift and go to state 109
    FunctionType                   shift and go to state 67

state 288

    (162) assign_op -> AssignOp .

    PLUS            reduce using rule 162 (assign_op -> AssignOp .)
    MINUS           reduce using rule 162 (assign_op -> AssignOp .)
    TIMES           reduce using rule 162 (assign_op -> AssignOp .)
    AMPERS          reduce using rule 162 (assign_op -> AssignOp .)
    NOT             reduce using rule 162 (assign_op -> AssignOp .)
    LPAREN          reduce using rule 162 (assign_op -> AssignOp .)
    IDENTIFIER      reduce using rule 162 (assign_op -> AssignOp .)
    TYPEX           reduce using rule 162 (assign_op -> AssignOp .)
    INTEGER         reduce using rule 162 (assign_op -> AssignOp .)
    FLOAT           reduce using rule 162 (assign_op -> AssignOp .)
    IMAGINARY       reduce using rule 162 (assign_op -> AssignOp .)
    RUNE            reduce using rule 162 (assign_op -> AssignOp .)
    STRING          reduce using rule 162 (assign_op -> AssignOp .)
    LBRACK          reduce using rule 162 (assign_op -> AssignOp .)
    STRUCT          reduce using rule 162 (assign_op -> AssignOp .)
    FUNC            reduce using rule 162 (assign_op -> AssignOp .)


state 289

    (173) AssignOp -> EQUAL .

    PLUS            reduce using rule 173 (AssignOp -> EQUAL .)
    MINUS           reduce using rule 173 (AssignOp -> EQUAL .)
    TIMES           reduce using rule 173 (AssignOp -> EQUAL .)
    AMPERS          reduce using rule 173 (AssignOp -> EQUAL .)
    NOT             reduce using rule 173 (AssignOp -> EQUAL .)
    LPAREN          reduce using rule 173 (AssignOp -> EQUAL .)
    IDENTIFIER      reduce using rule 173 (AssignOp -> EQUAL .)
    TYPEX           reduce using rule 173 (AssignOp -> EQUAL .)
    INTEGER         reduce using rule 173 (AssignOp -> EQUAL .)
    FLOAT           reduce using rule 173 (AssignOp -> EQUAL .)
    IMAGINARY       reduce using rule 173 (AssignOp -> EQUAL .)
    RUNE            reduce using rule 173 (AssignOp -> EQUAL .)
    STRING          reduce using rule 173 (AssignOp -> EQUAL .)
    LBRACK          reduce using rule 173 (AssignOp -> EQUAL .)
    STRUCT          reduce using rule 173 (AssignOp -> EQUAL .)
    FUNC            reduce using rule 173 (AssignOp -> EQUAL .)


state 290

    (170) AssignOp -> CAREQ .

    PLUS            reduce using rule 170 (AssignOp -> CAREQ .)
    MINUS           reduce using rule 170 (AssignOp -> CAREQ .)
    TIMES           reduce using rule 170 (AssignOp -> CAREQ .)
    AMPERS          reduce using rule 170 (AssignOp -> CAREQ .)
    NOT             reduce using rule 170 (AssignOp -> CAREQ .)
    LPAREN          reduce using rule 170 (AssignOp -> CAREQ .)
    IDENTIFIER      reduce using rule 170 (AssignOp -> CAREQ .)
    TYPEX           reduce using rule 170 (AssignOp -> CAREQ .)
    INTEGER         reduce using rule 170 (AssignOp -> CAREQ .)
    FLOAT           reduce using rule 170 (AssignOp -> CAREQ .)
    IMAGINARY       reduce using rule 170 (AssignOp -> CAREQ .)
    RUNE            reduce using rule 170 (AssignOp -> CAREQ .)
    STRING          reduce using rule 170 (AssignOp -> CAREQ .)
    LBRACK          reduce using rule 170 (AssignOp -> CAREQ .)
    STRUCT          reduce using rule 170 (AssignOp -> CAREQ .)
    FUNC            reduce using rule 170 (AssignOp -> CAREQ .)


state 291

    (165) AssignOp -> TIMESEQ .

    PLUS            reduce using rule 165 (AssignOp -> TIMESEQ .)
    MINUS           reduce using rule 165 (AssignOp -> TIMESEQ .)
    TIMES           reduce using rule 165 (AssignOp -> TIMESEQ .)
    AMPERS          reduce using rule 165 (AssignOp -> TIMESEQ .)
    NOT             reduce using rule 165 (AssignOp -> TIMESEQ .)
    LPAREN          reduce using rule 165 (AssignOp -> TIMESEQ .)
    IDENTIFIER      reduce using rule 165 (AssignOp -> TIMESEQ .)
    TYPEX           reduce using rule 165 (AssignOp -> TIMESEQ .)
    INTEGER         reduce using rule 165 (AssignOp -> TIMESEQ .)
    FLOAT           reduce using rule 165 (AssignOp -> TIMESEQ .)
    IMAGINARY       reduce using rule 165 (AssignOp -> TIMESEQ .)
    RUNE            reduce using rule 165 (AssignOp -> TIMESEQ .)
    STRING          reduce using rule 165 (AssignOp -> TIMESEQ .)
    LBRACK          reduce using rule 165 (AssignOp -> TIMESEQ .)
    STRUCT          reduce using rule 165 (AssignOp -> TIMESEQ .)
    FUNC            reduce using rule 165 (AssignOp -> TIMESEQ .)


state 292

    (163) AssignOp -> PLUSEQ .

    PLUS            reduce using rule 163 (AssignOp -> PLUSEQ .)
    MINUS           reduce using rule 163 (AssignOp -> PLUSEQ .)
    TIMES           reduce using rule 163 (AssignOp -> PLUSEQ .)
    AMPERS          reduce using rule 163 (AssignOp -> PLUSEQ .)
    NOT             reduce using rule 163 (AssignOp -> PLUSEQ .)
    LPAREN          reduce using rule 163 (AssignOp -> PLUSEQ .)
    IDENTIFIER      reduce using rule 163 (AssignOp -> PLUSEQ .)
    TYPEX           reduce using rule 163 (AssignOp -> PLUSEQ .)
    INTEGER         reduce using rule 163 (AssignOp -> PLUSEQ .)
    FLOAT           reduce using rule 163 (AssignOp -> PLUSEQ .)
    IMAGINARY       reduce using rule 163 (AssignOp -> PLUSEQ .)
    RUNE            reduce using rule 163 (AssignOp -> PLUSEQ .)
    STRING          reduce using rule 163 (AssignOp -> PLUSEQ .)
    LBRACK          reduce using rule 163 (AssignOp -> PLUSEQ .)
    STRUCT          reduce using rule 163 (AssignOp -> PLUSEQ .)
    FUNC            reduce using rule 163 (AssignOp -> PLUSEQ .)


state 293

    (167) AssignOp -> MODEQ .

    PLUS            reduce using rule 167 (AssignOp -> MODEQ .)
    MINUS           reduce using rule 167 (AssignOp -> MODEQ .)
    TIMES           reduce using rule 167 (AssignOp -> MODEQ .)
    AMPERS          reduce using rule 167 (AssignOp -> MODEQ .)
    NOT             reduce using rule 167 (AssignOp -> MODEQ .)
    LPAREN          reduce using rule 167 (AssignOp -> MODEQ .)
    IDENTIFIER      reduce using rule 167 (AssignOp -> MODEQ .)
    TYPEX           reduce using rule 167 (AssignOp -> MODEQ .)
    INTEGER         reduce using rule 167 (AssignOp -> MODEQ .)
    FLOAT           reduce using rule 167 (AssignOp -> MODEQ .)
    IMAGINARY       reduce using rule 167 (AssignOp -> MODEQ .)
    RUNE            reduce using rule 167 (AssignOp -> MODEQ .)
    STRING          reduce using rule 167 (AssignOp -> MODEQ .)
    LBRACK          reduce using rule 167 (AssignOp -> MODEQ .)
    STRUCT          reduce using rule 167 (AssignOp -> MODEQ .)
    FUNC            reduce using rule 167 (AssignOp -> MODEQ .)


state 294

    (172) AssignOp -> GGEQ .

    PLUS            reduce using rule 172 (AssignOp -> GGEQ .)
    MINUS           reduce using rule 172 (AssignOp -> GGEQ .)
    TIMES           reduce using rule 172 (AssignOp -> GGEQ .)
    AMPERS          reduce using rule 172 (AssignOp -> GGEQ .)
    NOT             reduce using rule 172 (AssignOp -> GGEQ .)
    LPAREN          reduce using rule 172 (AssignOp -> GGEQ .)
    IDENTIFIER      reduce using rule 172 (AssignOp -> GGEQ .)
    TYPEX           reduce using rule 172 (AssignOp -> GGEQ .)
    INTEGER         reduce using rule 172 (AssignOp -> GGEQ .)
    FLOAT           reduce using rule 172 (AssignOp -> GGEQ .)
    IMAGINARY       reduce using rule 172 (AssignOp -> GGEQ .)
    RUNE            reduce using rule 172 (AssignOp -> GGEQ .)
    STRING          reduce using rule 172 (AssignOp -> GGEQ .)
    LBRACK          reduce using rule 172 (AssignOp -> GGEQ .)
    STRUCT          reduce using rule 172 (AssignOp -> GGEQ .)
    FUNC            reduce using rule 172 (AssignOp -> GGEQ .)


state 295

    (171) AssignOp -> LLEQ .

    PLUS            reduce using rule 171 (AssignOp -> LLEQ .)
    MINUS           reduce using rule 171 (AssignOp -> LLEQ .)
    TIMES           reduce using rule 171 (AssignOp -> LLEQ .)
    AMPERS          reduce using rule 171 (AssignOp -> LLEQ .)
    NOT             reduce using rule 171 (AssignOp -> LLEQ .)
    LPAREN          reduce using rule 171 (AssignOp -> LLEQ .)
    IDENTIFIER      reduce using rule 171 (AssignOp -> LLEQ .)
    TYPEX           reduce using rule 171 (AssignOp -> LLEQ .)
    INTEGER         reduce using rule 171 (AssignOp -> LLEQ .)
    FLOAT           reduce using rule 171 (AssignOp -> LLEQ .)
    IMAGINARY       reduce using rule 171 (AssignOp -> LLEQ .)
    RUNE            reduce using rule 171 (AssignOp -> LLEQ .)
    STRING          reduce using rule 171 (AssignOp -> LLEQ .)
    LBRACK          reduce using rule 171 (AssignOp -> LLEQ .)
    STRUCT          reduce using rule 171 (AssignOp -> LLEQ .)
    FUNC            reduce using rule 171 (AssignOp -> LLEQ .)


state 296

    (169) AssignOp -> OREQ .

    PLUS            reduce using rule 169 (AssignOp -> OREQ .)
    MINUS           reduce using rule 169 (AssignOp -> OREQ .)
    TIMES           reduce using rule 169 (AssignOp -> OREQ .)
    AMPERS          reduce using rule 169 (AssignOp -> OREQ .)
    NOT             reduce using rule 169 (AssignOp -> OREQ .)
    LPAREN          reduce using rule 169 (AssignOp -> OREQ .)
    IDENTIFIER      reduce using rule 169 (AssignOp -> OREQ .)
    TYPEX           reduce using rule 169 (AssignOp -> OREQ .)
    INTEGER         reduce using rule 169 (AssignOp -> OREQ .)
    FLOAT           reduce using rule 169 (AssignOp -> OREQ .)
    IMAGINARY       reduce using rule 169 (AssignOp -> OREQ .)
    RUNE            reduce using rule 169 (AssignOp -> OREQ .)
    STRING          reduce using rule 169 (AssignOp -> OREQ .)
    LBRACK          reduce using rule 169 (AssignOp -> OREQ .)
    STRUCT          reduce using rule 169 (AssignOp -> OREQ .)
    FUNC            reduce using rule 169 (AssignOp -> OREQ .)


state 297

    (164) AssignOp -> MINUSEQ .

    PLUS            reduce using rule 164 (AssignOp -> MINUSEQ .)
    MINUS           reduce using rule 164 (AssignOp -> MINUSEQ .)
    TIMES           reduce using rule 164 (AssignOp -> MINUSEQ .)
    AMPERS          reduce using rule 164 (AssignOp -> MINUSEQ .)
    NOT             reduce using rule 164 (AssignOp -> MINUSEQ .)
    LPAREN          reduce using rule 164 (AssignOp -> MINUSEQ .)
    IDENTIFIER      reduce using rule 164 (AssignOp -> MINUSEQ .)
    TYPEX           reduce using rule 164 (AssignOp -> MINUSEQ .)
    INTEGER         reduce using rule 164 (AssignOp -> MINUSEQ .)
    FLOAT           reduce using rule 164 (AssignOp -> MINUSEQ .)
    IMAGINARY       reduce using rule 164 (AssignOp -> MINUSEQ .)
    RUNE            reduce using rule 164 (AssignOp -> MINUSEQ .)
    STRING          reduce using rule 164 (AssignOp -> MINUSEQ .)
    LBRACK          reduce using rule 164 (AssignOp -> MINUSEQ .)
    STRUCT          reduce using rule 164 (AssignOp -> MINUSEQ .)
    FUNC            reduce using rule 164 (AssignOp -> MINUSEQ .)


state 298

    (168) AssignOp -> AMPEQ .

    PLUS            reduce using rule 168 (AssignOp -> AMPEQ .)
    MINUS           reduce using rule 168 (AssignOp -> AMPEQ .)
    TIMES           reduce using rule 168 (AssignOp -> AMPEQ .)
    AMPERS          reduce using rule 168 (AssignOp -> AMPEQ .)
    NOT             reduce using rule 168 (AssignOp -> AMPEQ .)
    LPAREN          reduce using rule 168 (AssignOp -> AMPEQ .)
    IDENTIFIER      reduce using rule 168 (AssignOp -> AMPEQ .)
    TYPEX           reduce using rule 168 (AssignOp -> AMPEQ .)
    INTEGER         reduce using rule 168 (AssignOp -> AMPEQ .)
    FLOAT           reduce using rule 168 (AssignOp -> AMPEQ .)
    IMAGINARY       reduce using rule 168 (AssignOp -> AMPEQ .)
    RUNE            reduce using rule 168 (AssignOp -> AMPEQ .)
    STRING          reduce using rule 168 (AssignOp -> AMPEQ .)
    LBRACK          reduce using rule 168 (AssignOp -> AMPEQ .)
    STRUCT          reduce using rule 168 (AssignOp -> AMPEQ .)
    FUNC            reduce using rule 168 (AssignOp -> AMPEQ .)


state 299

    (161) Assignment -> ExpressionList assign_op . ExpressionList
    (109) ExpressionList -> . Expression ExpressionRep
    (112) Expression -> . UnaryExpr
    (113) Expression -> . Expression OROR Expression
    (114) Expression -> . Expression AMPAMP Expression
    (115) Expression -> . Expression EQEQ Expression
    (116) Expression -> . Expression NOTEQ Expression
    (117) Expression -> . Expression LESS Expression
    (118) Expression -> . Expression GREAT Expression
    (119) Expression -> . Expression LEQ Expression
    (120) Expression -> . Expression GEQ Expression
    (121) Expression -> . Expression PLUS Expression
    (122) Expression -> . Expression MINUS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression CARET Expression
    (125) Expression -> . Expression TIMES Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MOD Expression
    (128) Expression -> . Expression AMPERS Expression
    (129) Expression -> . Expression LL Expression
    (130) Expression -> . Expression GG Expression
    (131) Expression -> . Expression AMPCAR Expression
    (134) UnaryExpr -> . PrimaryExpr
    (135) UnaryExpr -> . UnaryOp UnaryExpr
    (97) PrimaryExpr -> . Operand
    (98) PrimaryExpr -> . Conversion
    (99) PrimaryExpr -> . PrimaryExpr Selector
    (100) PrimaryExpr -> . PrimaryExpr Index
    (101) PrimaryExpr -> . PrimaryExpr Slice
    (102) PrimaryExpr -> . PrimaryExpr Arguments
    (136) UnaryOp -> . PLUS
    (137) UnaryOp -> . MINUS
    (138) UnaryOp -> . TIMES
    (139) UnaryOp -> . AMPERS
    (140) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (96) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (95) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . IntLiteral
    (86) BasicLit -> . FloatLiteral
    (87) BasicLit -> . ImgLiteral
    (88) BasicLit -> . RuneLiteral
    (89) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (90) IntLiteral -> . INTEGER
    (91) FloatLiteral -> . FLOAT
    (92) ImgLiteral -> . IMAGINARY
    (93) RuneLiteral -> . RUNE
    (94) StringLiteral -> . STRING
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 104
    MINUS           shift and go to state 98
    TIMES           shift and go to state 112
    AMPERS          shift and go to state 118
    NOT             shift and go to state 103
    LPAREN          shift and go to state 115
    IDENTIFIER      shift and go to state 107
    TYPEX           shift and go to state 57
    INTEGER         shift and go to state 105
    FLOAT           shift and go to state 117
    IMAGINARY       shift and go to state 106
    RUNE            shift and go to state 92
    STRING          shift and go to state 99
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    UnaryOp                        shift and go to state 102
    PrimaryExpr                    shift and go to state 119
    Conversion                     shift and go to state 93
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    FloatLiteral                   shift and go to state 96
    Type                           shift and go to state 97
    OperandName                    shift and go to state 100
    BasicLit                       shift and go to state 101
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    IntLiteral                     shift and go to state 108
    UnaryExpr                      shift and go to state 110
    RuneLiteral                    shift and go to state 111
    Operand                        shift and go to state 113
    ExpressionList                 shift and go to state 318
    Expression                     shift and go to state 140
    PointerType                    shift and go to state 66
    StringLiteral                  shift and go to state 94
    TypeLit                        shift and go to state 55
    ImgLiteral                     shift and go to state 109
    FunctionType                   shift and go to state 67

state 300

    (166) AssignOp -> DIVIDEEQ .

    PLUS            reduce using rule 166 (AssignOp -> DIVIDEEQ .)
    MINUS           reduce using rule 166 (AssignOp -> DIVIDEEQ .)
    TIMES           reduce using rule 166 (AssignOp -> DIVIDEEQ .)
    AMPERS          reduce using rule 166 (AssignOp -> DIVIDEEQ .)
    NOT             reduce using rule 166 (AssignOp -> DIVIDEEQ .)
    LPAREN          reduce using rule 166 (AssignOp -> DIVIDEEQ .)
    IDENTIFIER      reduce using rule 166 (AssignOp -> DIVIDEEQ .)
    TYPEX           reduce using rule 166 (AssignOp -> DIVIDEEQ .)
    INTEGER         reduce using rule 166 (AssignOp -> DIVIDEEQ .)
    FLOAT           reduce using rule 166 (AssignOp -> DIVIDEEQ .)
    IMAGINARY       reduce using rule 166 (AssignOp -> DIVIDEEQ .)
    RUNE            reduce using rule 166 (AssignOp -> DIVIDEEQ .)
    STRING          reduce using rule 166 (AssignOp -> DIVIDEEQ .)
    LBRACK          reduce using rule 166 (AssignOp -> DIVIDEEQ .)
    STRUCT          reduce using rule 166 (AssignOp -> DIVIDEEQ .)
    FUNC            reduce using rule 166 (AssignOp -> DIVIDEEQ .)


state 301

    (159) IncDecStmt -> Expression PLUSPLUS .

    SEMICOL         reduce using rule 159 (IncDecStmt -> Expression PLUSPLUS .)
    LBRACE          reduce using rule 159 (IncDecStmt -> Expression PLUSPLUS .)


state 302

    (160) IncDecStmt -> Expression MINUSMIN .

    SEMICOL         reduce using rule 160 (IncDecStmt -> Expression MINUSMIN .)
    LBRACE          reduce using rule 160 (IncDecStmt -> Expression MINUSMIN .)


state 303

    (193) BreakStmt -> BREAK LabelOpt .

    SEMICOL         reduce using rule 193 (BreakStmt -> BREAK LabelOpt .)


state 304

    (197) GotoStmt -> GOTO Label .

    SEMICOL         reduce using rule 197 (GotoStmt -> GOTO Label .)


state 305

    (174) IfStmt -> IF Expression . Block ElseOpt
    (113) Expression -> Expression . OROR Expression
    (114) Expression -> Expression . AMPAMP Expression
    (115) Expression -> Expression . EQEQ Expression
    (116) Expression -> Expression . NOTEQ Expression
    (117) Expression -> Expression . LESS Expression
    (118) Expression -> Expression . GREAT Expression
    (119) Expression -> Expression . LEQ Expression
    (120) Expression -> Expression . GEQ Expression
    (121) Expression -> Expression . PLUS Expression
    (122) Expression -> Expression . MINUS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . CARET Expression
    (125) Expression -> Expression . TIMES Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MOD Expression
    (128) Expression -> Expression . AMPERS Expression
    (129) Expression -> Expression . LL Expression
    (130) Expression -> Expression . GG Expression
    (131) Expression -> Expression . AMPCAR Expression
    (40) Block -> . LBRACE StatementList RBRACE

    OROR            shift and go to state 159
    AMPAMP          shift and go to state 174
    EQEQ            shift and go to state 165
    NOTEQ           shift and go to state 171
    LESS            shift and go to state 164
    GREAT           shift and go to state 161
    LEQ             shift and go to state 177
    GEQ             shift and go to state 168
    PLUS            shift and go to state 172
    MINUS           shift and go to state 176
    OR              shift and go to state 169
    CARET           shift and go to state 160
    TIMES           shift and go to state 175
    DIVIDE          shift and go to state 162
    MOD             shift and go to state 173
    AMPERS          shift and go to state 167
    LL              shift and go to state 166
    GG              shift and go to state 170
    AMPCAR          shift and go to state 163
    LBRACE          shift and go to state 128

    Block                          shift and go to state 319

state 306

    (38) ParameterDecl -> IdentifierList Type .

    COMMA           reduce using rule 38 (ParameterDecl -> IdentifierList Type .)
    RPAREN          reduce using rule 38 (ParameterDecl -> IdentifierList Type .)


state 307

    (110) ExpressionRep -> ExpressionRep COMMA Expression .
    (113) Expression -> Expression . OROR Expression
    (114) Expression -> Expression . AMPAMP Expression
    (115) Expression -> Expression . EQEQ Expression
    (116) Expression -> Expression . NOTEQ Expression
    (117) Expression -> Expression . LESS Expression
    (118) Expression -> Expression . GREAT Expression
    (119) Expression -> Expression . LEQ Expression
    (120) Expression -> Expression . GEQ Expression
    (121) Expression -> Expression . PLUS Expression
    (122) Expression -> Expression . MINUS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . CARET Expression
    (125) Expression -> Expression . TIMES Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MOD Expression
    (128) Expression -> Expression . AMPERS Expression
    (129) Expression -> Expression . LL Expression
    (130) Expression -> Expression . GG Expression
    (131) Expression -> Expression . AMPCAR Expression

    COMMA           reduce using rule 110 (ExpressionRep -> ExpressionRep COMMA Expression .)
    SEMICOL         reduce using rule 110 (ExpressionRep -> ExpressionRep COMMA Expression .)
    RPAREN          reduce using rule 110 (ExpressionRep -> ExpressionRep COMMA Expression .)
    LBRACE          reduce using rule 110 (ExpressionRep -> ExpressionRep COMMA Expression .)
    PLUSEQ          reduce using rule 110 (ExpressionRep -> ExpressionRep COMMA Expression .)
    MINUSEQ         reduce using rule 110 (ExpressionRep -> ExpressionRep COMMA Expression .)
    TIMESEQ         reduce using rule 110 (ExpressionRep -> ExpressionRep COMMA Expression .)
    DIVIDEEQ        reduce using rule 110 (ExpressionRep -> ExpressionRep COMMA Expression .)
    MODEQ           reduce using rule 110 (ExpressionRep -> ExpressionRep COMMA Expression .)
    AMPEQ           reduce using rule 110 (ExpressionRep -> ExpressionRep COMMA Expression .)
    OREQ            reduce using rule 110 (ExpressionRep -> ExpressionRep COMMA Expression .)
    CAREQ           reduce using rule 110 (ExpressionRep -> ExpressionRep COMMA Expression .)
    LLEQ            reduce using rule 110 (ExpressionRep -> ExpressionRep COMMA Expression .)
    GGEQ            reduce using rule 110 (ExpressionRep -> ExpressionRep COMMA Expression .)
    EQUAL           reduce using rule 110 (ExpressionRep -> ExpressionRep COMMA Expression .)
    OROR            shift and go to state 159
    AMPAMP          shift and go to state 174
    EQEQ            shift and go to state 165
    NOTEQ           shift and go to state 171
    LESS            shift and go to state 164
    GREAT           shift and go to state 161
    LEQ             shift and go to state 177
    GEQ             shift and go to state 168
    PLUS            shift and go to state 172
    MINUS           shift and go to state 176
    OR              shift and go to state 169
    CARET           shift and go to state 160
    TIMES           shift and go to state 175
    DIVIDE          shift and go to state 162
    MOD             shift and go to state 173
    AMPERS          shift and go to state 167
    LL              shift and go to state 166
    GG              shift and go to state 170
    AMPCAR          shift and go to state 163


state 308

    (21) Tag -> STRING .

    SEMICOL         reduce using rule 21 (Tag -> STRING .)


state 309

    (20) TagOpt -> epsilon .

    SEMICOL         reduce using rule 20 (TagOpt -> epsilon .)


state 310

    (19) TagOpt -> Tag .

    SEMICOL         reduce using rule 19 (TagOpt -> Tag .)


state 311

    (18) FieldDecl -> IdentifierList Type TagOpt .

    SEMICOL         reduce using rule 18 (FieldDecl -> IdentifierList Type TagOpt .)


state 312

    (105) Slice -> LBRACK ExpressionOpt COLON ExpressionOpt . RBRACK

    RBRACK          shift and go to state 320


state 313

    (132) ExpressionOpt -> Expression .
    (113) Expression -> Expression . OROR Expression
    (114) Expression -> Expression . AMPAMP Expression
    (115) Expression -> Expression . EQEQ Expression
    (116) Expression -> Expression . NOTEQ Expression
    (117) Expression -> Expression . LESS Expression
    (118) Expression -> Expression . GREAT Expression
    (119) Expression -> Expression . LEQ Expression
    (120) Expression -> Expression . GEQ Expression
    (121) Expression -> Expression . PLUS Expression
    (122) Expression -> Expression . MINUS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . CARET Expression
    (125) Expression -> Expression . TIMES Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MOD Expression
    (128) Expression -> Expression . AMPERS Expression
    (129) Expression -> Expression . LL Expression
    (130) Expression -> Expression . GG Expression
    (131) Expression -> Expression . AMPCAR Expression

    RBRACK          reduce using rule 132 (ExpressionOpt -> Expression .)
    OROR            shift and go to state 159
    AMPAMP          shift and go to state 174
    EQEQ            shift and go to state 165
    NOTEQ           shift and go to state 171
    LESS            shift and go to state 164
    GREAT           shift and go to state 161
    LEQ             shift and go to state 177
    GEQ             shift and go to state 168
    PLUS            shift and go to state 172
    MINUS           shift and go to state 176
    OR              shift and go to state 169
    CARET           shift and go to state 160
    TIMES           shift and go to state 175
    DIVIDE          shift and go to state 162
    MOD             shift and go to state 173
    AMPERS          shift and go to state 167
    LL              shift and go to state 166
    GG              shift and go to state 170
    AMPCAR          shift and go to state 163


state 314

    (156) LabeledStmt -> Label COLON Statement .

    SEMICOL         reduce using rule 156 (LabeledStmt -> Label COLON Statement .)


state 315

    (183) ForClause -> SimpleStmt SEMICOL . ConditionOpt SEMICOL SimpleStmt
    (184) ConditionOpt -> . epsilon
    (185) ConditionOpt -> . Condition
    (214) epsilon -> .
    (182) Condition -> . Expression
    (112) Expression -> . UnaryExpr
    (113) Expression -> . Expression OROR Expression
    (114) Expression -> . Expression AMPAMP Expression
    (115) Expression -> . Expression EQEQ Expression
    (116) Expression -> . Expression NOTEQ Expression
    (117) Expression -> . Expression LESS Expression
    (118) Expression -> . Expression GREAT Expression
    (119) Expression -> . Expression LEQ Expression
    (120) Expression -> . Expression GEQ Expression
    (121) Expression -> . Expression PLUS Expression
    (122) Expression -> . Expression MINUS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression CARET Expression
    (125) Expression -> . Expression TIMES Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MOD Expression
    (128) Expression -> . Expression AMPERS Expression
    (129) Expression -> . Expression LL Expression
    (130) Expression -> . Expression GG Expression
    (131) Expression -> . Expression AMPCAR Expression
    (134) UnaryExpr -> . PrimaryExpr
    (135) UnaryExpr -> . UnaryOp UnaryExpr
    (97) PrimaryExpr -> . Operand
    (98) PrimaryExpr -> . Conversion
    (99) PrimaryExpr -> . PrimaryExpr Selector
    (100) PrimaryExpr -> . PrimaryExpr Index
    (101) PrimaryExpr -> . PrimaryExpr Slice
    (102) PrimaryExpr -> . PrimaryExpr Arguments
    (136) UnaryOp -> . PLUS
    (137) UnaryOp -> . MINUS
    (138) UnaryOp -> . TIMES
    (139) UnaryOp -> . AMPERS
    (140) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (96) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (95) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . IntLiteral
    (86) BasicLit -> . FloatLiteral
    (87) BasicLit -> . ImgLiteral
    (88) BasicLit -> . RuneLiteral
    (89) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (90) IntLiteral -> . INTEGER
    (91) FloatLiteral -> . FLOAT
    (92) ImgLiteral -> . IMAGINARY
    (93) RuneLiteral -> . RUNE
    (94) StringLiteral -> . STRING
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    SEMICOL         reduce using rule 214 (epsilon -> .)
    PLUS            shift and go to state 104
    MINUS           shift and go to state 98
    TIMES           shift and go to state 112
    AMPERS          shift and go to state 118
    NOT             shift and go to state 103
    LPAREN          shift and go to state 115
    IDENTIFIER      shift and go to state 107
    TYPEX           shift and go to state 57
    INTEGER         shift and go to state 105
    FLOAT           shift and go to state 117
    IMAGINARY       shift and go to state 106
    RUNE            shift and go to state 92
    STRING          shift and go to state 99
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 93
    UnaryOp                        shift and go to state 102
    Literal                        shift and go to state 95
    FloatLiteral                   shift and go to state 96
    Type                           shift and go to state 97
    OperandName                    shift and go to state 100
    BasicLit                       shift and go to state 101
    TypeName                       shift and go to state 56
    Condition                      shift and go to state 321
    StructType                     shift and go to state 58
    IntLiteral                     shift and go to state 108
    ImgLiteral                     shift and go to state 109
    epsilon                        shift and go to state 322
    UnaryExpr                      shift and go to state 110
    RuneLiteral                    shift and go to state 111
    PrimaryExpr                    shift and go to state 119
    ConditionOpt                   shift and go to state 323
    ArrayType                      shift and go to state 53
    Expression                     shift and go to state 324
    PointerType                    shift and go to state 66
    StringLiteral                  shift and go to state 94
    TypeLit                        shift and go to state 55
    Operand                        shift and go to state 113
    FunctionType                   shift and go to state 67

state 316

    (178) ForStmt -> FOR ConditionBlockOpt Block .

    SEMICOL         reduce using rule 178 (ForStmt -> FOR ConditionBlockOpt Block .)


state 317

    (75) ShortVarDecl -> IDENTIFIER COLONEQ Expression .
    (113) Expression -> Expression . OROR Expression
    (114) Expression -> Expression . AMPAMP Expression
    (115) Expression -> Expression . EQEQ Expression
    (116) Expression -> Expression . NOTEQ Expression
    (117) Expression -> Expression . LESS Expression
    (118) Expression -> Expression . GREAT Expression
    (119) Expression -> Expression . LEQ Expression
    (120) Expression -> Expression . GEQ Expression
    (121) Expression -> Expression . PLUS Expression
    (122) Expression -> Expression . MINUS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . CARET Expression
    (125) Expression -> Expression . TIMES Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MOD Expression
    (128) Expression -> Expression . AMPERS Expression
    (129) Expression -> Expression . LL Expression
    (130) Expression -> Expression . GG Expression
    (131) Expression -> Expression . AMPCAR Expression

    SEMICOL         reduce using rule 75 (ShortVarDecl -> IDENTIFIER COLONEQ Expression .)
    LBRACE          reduce using rule 75 (ShortVarDecl -> IDENTIFIER COLONEQ Expression .)
    OROR            shift and go to state 159
    AMPAMP          shift and go to state 174
    EQEQ            shift and go to state 165
    NOTEQ           shift and go to state 171
    LESS            shift and go to state 164
    GREAT           shift and go to state 161
    LEQ             shift and go to state 177
    GEQ             shift and go to state 168
    PLUS            shift and go to state 172
    MINUS           shift and go to state 176
    OR              shift and go to state 169
    CARET           shift and go to state 160
    TIMES           shift and go to state 175
    DIVIDE          shift and go to state 162
    MOD             shift and go to state 173
    AMPERS          shift and go to state 167
    LL              shift and go to state 166
    GG              shift and go to state 170
    AMPCAR          shift and go to state 163


state 318

    (161) Assignment -> ExpressionList assign_op ExpressionList .

    SEMICOL         reduce using rule 161 (Assignment -> ExpressionList assign_op ExpressionList .)
    LBRACE          reduce using rule 161 (Assignment -> ExpressionList assign_op ExpressionList .)


state 319

    (174) IfStmt -> IF Expression Block . ElseOpt
    (175) ElseOpt -> . ELSE IfStmt
    (176) ElseOpt -> . ELSE Block
    (177) ElseOpt -> . epsilon
    (214) epsilon -> .

    ELSE            shift and go to state 326
    SEMICOL         reduce using rule 214 (epsilon -> .)

    epsilon                        shift and go to state 325
    ElseOpt                        shift and go to state 327

state 320

    (105) Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .

    DOT             reduce using rule 105 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    LBRACK          reduce using rule 105 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    LPAREN          reduce using rule 105 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    OROR            reduce using rule 105 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    AMPAMP          reduce using rule 105 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    EQEQ            reduce using rule 105 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    NOTEQ           reduce using rule 105 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    LESS            reduce using rule 105 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    GREAT           reduce using rule 105 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    LEQ             reduce using rule 105 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    GEQ             reduce using rule 105 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    PLUS            reduce using rule 105 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    MINUS           reduce using rule 105 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    OR              reduce using rule 105 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    CARET           reduce using rule 105 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    TIMES           reduce using rule 105 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    DIVIDE          reduce using rule 105 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    MOD             reduce using rule 105 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    AMPERS          reduce using rule 105 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    LL              reduce using rule 105 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    GG              reduce using rule 105 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    AMPCAR          reduce using rule 105 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    RBRACK          reduce using rule 105 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    COMMA           reduce using rule 105 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    SEMICOL         reduce using rule 105 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    RPAREN          reduce using rule 105 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    COLON           reduce using rule 105 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    PLUSPLUS        reduce using rule 105 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    MINUSMIN        reduce using rule 105 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    PLUSEQ          reduce using rule 105 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    MINUSEQ         reduce using rule 105 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    TIMESEQ         reduce using rule 105 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    DIVIDEEQ        reduce using rule 105 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    MODEQ           reduce using rule 105 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    AMPEQ           reduce using rule 105 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    OREQ            reduce using rule 105 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    CAREQ           reduce using rule 105 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    LLEQ            reduce using rule 105 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    GGEQ            reduce using rule 105 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    EQUAL           reduce using rule 105 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    LBRACE          reduce using rule 105 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)


state 321

    (185) ConditionOpt -> Condition .

    SEMICOL         reduce using rule 185 (ConditionOpt -> Condition .)


state 322

    (184) ConditionOpt -> epsilon .

    SEMICOL         reduce using rule 184 (ConditionOpt -> epsilon .)


state 323

    (183) ForClause -> SimpleStmt SEMICOL ConditionOpt . SEMICOL SimpleStmt

    SEMICOL         shift and go to state 328


state 324

    (182) Condition -> Expression .
    (113) Expression -> Expression . OROR Expression
    (114) Expression -> Expression . AMPAMP Expression
    (115) Expression -> Expression . EQEQ Expression
    (116) Expression -> Expression . NOTEQ Expression
    (117) Expression -> Expression . LESS Expression
    (118) Expression -> Expression . GREAT Expression
    (119) Expression -> Expression . LEQ Expression
    (120) Expression -> Expression . GEQ Expression
    (121) Expression -> Expression . PLUS Expression
    (122) Expression -> Expression . MINUS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . CARET Expression
    (125) Expression -> Expression . TIMES Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MOD Expression
    (128) Expression -> Expression . AMPERS Expression
    (129) Expression -> Expression . LL Expression
    (130) Expression -> Expression . GG Expression
    (131) Expression -> Expression . AMPCAR Expression

    SEMICOL         reduce using rule 182 (Condition -> Expression .)
    OROR            shift and go to state 159
    AMPAMP          shift and go to state 174
    EQEQ            shift and go to state 165
    NOTEQ           shift and go to state 171
    LESS            shift and go to state 164
    GREAT           shift and go to state 161
    LEQ             shift and go to state 177
    GEQ             shift and go to state 168
    PLUS            shift and go to state 172
    MINUS           shift and go to state 176
    OR              shift and go to state 169
    CARET           shift and go to state 160
    TIMES           shift and go to state 175
    DIVIDE          shift and go to state 162
    MOD             shift and go to state 173
    AMPERS          shift and go to state 167
    LL              shift and go to state 166
    GG              shift and go to state 170
    AMPCAR          shift and go to state 163


state 325

    (177) ElseOpt -> epsilon .

    SEMICOL         reduce using rule 177 (ElseOpt -> epsilon .)


state 326

    (175) ElseOpt -> ELSE . IfStmt
    (176) ElseOpt -> ELSE . Block
    (174) IfStmt -> . IF Expression Block ElseOpt
    (40) Block -> . LBRACE StatementList RBRACE

    IF              shift and go to state 257
    LBRACE          shift and go to state 128

    IfStmt                         shift and go to state 329
    Block                          shift and go to state 330

state 327

    (174) IfStmt -> IF Expression Block ElseOpt .

    SEMICOL         reduce using rule 174 (IfStmt -> IF Expression Block ElseOpt .)


state 328

    (183) ForClause -> SimpleStmt SEMICOL ConditionOpt SEMICOL . SimpleStmt
    (151) SimpleStmt -> . epsilon
    (152) SimpleStmt -> . ExpressionStmt
    (153) SimpleStmt -> . IncDecStmt
    (154) SimpleStmt -> . Assignment
    (155) SimpleStmt -> . ShortVarDecl
    (214) epsilon -> .
    (158) ExpressionStmt -> . Expression
    (159) IncDecStmt -> . Expression PLUSPLUS
    (160) IncDecStmt -> . Expression MINUSMIN
    (161) Assignment -> . ExpressionList assign_op ExpressionList
    (75) ShortVarDecl -> . IDENTIFIER COLONEQ Expression
    (112) Expression -> . UnaryExpr
    (113) Expression -> . Expression OROR Expression
    (114) Expression -> . Expression AMPAMP Expression
    (115) Expression -> . Expression EQEQ Expression
    (116) Expression -> . Expression NOTEQ Expression
    (117) Expression -> . Expression LESS Expression
    (118) Expression -> . Expression GREAT Expression
    (119) Expression -> . Expression LEQ Expression
    (120) Expression -> . Expression GEQ Expression
    (121) Expression -> . Expression PLUS Expression
    (122) Expression -> . Expression MINUS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression CARET Expression
    (125) Expression -> . Expression TIMES Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MOD Expression
    (128) Expression -> . Expression AMPERS Expression
    (129) Expression -> . Expression LL Expression
    (130) Expression -> . Expression GG Expression
    (131) Expression -> . Expression AMPCAR Expression
    (109) ExpressionList -> . Expression ExpressionRep
    (134) UnaryExpr -> . PrimaryExpr
    (135) UnaryExpr -> . UnaryOp UnaryExpr
    (97) PrimaryExpr -> . Operand
    (98) PrimaryExpr -> . Conversion
    (99) PrimaryExpr -> . PrimaryExpr Selector
    (100) PrimaryExpr -> . PrimaryExpr Index
    (101) PrimaryExpr -> . PrimaryExpr Slice
    (102) PrimaryExpr -> . PrimaryExpr Arguments
    (136) UnaryOp -> . PLUS
    (137) UnaryOp -> . MINUS
    (138) UnaryOp -> . TIMES
    (139) UnaryOp -> . AMPERS
    (140) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (96) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (95) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . IntLiteral
    (86) BasicLit -> . FloatLiteral
    (87) BasicLit -> . ImgLiteral
    (88) BasicLit -> . RuneLiteral
    (89) BasicLit -> . StringLiteral
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (90) IntLiteral -> . INTEGER
    (91) FloatLiteral -> . FLOAT
    (92) ImgLiteral -> . IMAGINARY
    (93) RuneLiteral -> . RUNE
    (94) StringLiteral -> . STRING
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    LBRACE          reduce using rule 214 (epsilon -> .)
    IDENTIFIER      shift and go to state 277
    PLUS            shift and go to state 104
    MINUS           shift and go to state 98
    TIMES           shift and go to state 112
    AMPERS          shift and go to state 118
    NOT             shift and go to state 103
    LPAREN          shift and go to state 115
    TYPEX           shift and go to state 57
    INTEGER         shift and go to state 105
    FLOAT           shift and go to state 117
    IMAGINARY       shift and go to state 106
    RUNE            shift and go to state 92
    STRING          shift and go to state 99
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    UnaryOp                        shift and go to state 102
    Conversion                     shift and go to state 93
    SimpleStmt                     shift and go to state 331
    StringLiteral                  shift and go to state 94
    ExpressionStmt                 shift and go to state 234
    FloatLiteral                   shift and go to state 96
    Type                           shift and go to state 97
    OperandName                    shift and go to state 100
    Assignment                     shift and go to state 236
    TypeName                       shift and go to state 56
    IncDecStmt                     shift and go to state 240
    StructType                     shift and go to state 58
    IntLiteral                     shift and go to state 108
    ImgLiteral                     shift and go to state 109
    epsilon                        shift and go to state 247
    UnaryExpr                      shift and go to state 110
    RuneLiteral                    shift and go to state 111
    PrimaryExpr                    shift and go to state 119
    ExpressionList                 shift and go to state 249
    ArrayType                      shift and go to state 53
    Expression                     shift and go to state 250
    ShortVarDecl                   shift and go to state 256
    PointerType                    shift and go to state 66
    Literal                        shift and go to state 95
    TypeLit                        shift and go to state 55
    BasicLit                       shift and go to state 101
    Operand                        shift and go to state 113
    FunctionType                   shift and go to state 67

state 329

    (175) ElseOpt -> ELSE IfStmt .

    SEMICOL         reduce using rule 175 (ElseOpt -> ELSE IfStmt .)


state 330

    (176) ElseOpt -> ELSE Block .

    SEMICOL         reduce using rule 176 (ElseOpt -> ELSE Block .)


state 331

    (183) ForClause -> SimpleStmt SEMICOL ConditionOpt SEMICOL SimpleStmt .

    LBRACE          reduce using rule 183 (ForClause -> SimpleStmt SEMICOL ConditionOpt SEMICOL SimpleStmt .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LPAREN in state 71 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 186 resolved as shift
