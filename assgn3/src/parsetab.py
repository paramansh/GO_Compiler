
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightEQUALNOTleftORORleftAMPAMPleftEQEQNOTEQLESSGREATLEQGEQleftPLUSMINUSORCARETleftTIMESDIVIDEMODLLGGAMPERSAMPCARAMPAMP AMPCAR AMPCAREQ AMPEQ AMPERS BREAK CAREQ CARET CASE CHAN COLON COLONEQ COMMA CONST CONSTANT CONTINUE DDD DEFAULT DEFER DIVIDE DIVIDEEQ DOT ELSE EQEQ EQUAL FALLTHROUGH FLOAT FOR FUNC GEQ GG GGEQ GO GOTO GREAT IDENTIFIER IF IMAGINARY IMPORT INTEGER INTERFACE LBRACE LBRACK LEQ LESS LL LLEQ LMINUS LPAREN MAP MINUS MINUSEQ MINUSMIN MOD MODEQ NOT NOTEQ OR OREQ OROR PACKAGE PLUS PLUSEQ PLUSPLUS RANGE RBRACE RBRACK RETURN RPAREN RUNE SELECT SEMICOL STRING STRUCT SWITCH TIMES TIMESEQ TYPE TYPEX VARstart : SourceType : TypeName \n\t\t\t| TypeLit \n\t\t\t| LPAREN Type RPARENTypeName : TYPEXTypeLit : ArrayType\n\t\t\t   | StructType\n\t\t\t   | PointerType\n\t\t\t   | FunctionTypeTypeOpt : Type\n\t\t\t   | epsilonArrayType : LBRACK ArrayLength RBRACK ElementType ArrayLength : Expression  ElementType : Type StructType : STRUCT LBRACE FieldDeclRep RBRACE FieldDeclRep : FieldDeclRep FieldDecl SEMICOL\n\t\t\t\t  | epsilon FieldDecl : IdentifierList Type TagOpt TagOpt : Tag\n\t\t\t | epsilon  Tag : STRING PointerType : TIMES BaseTypeBaseType : TypeFunctionType : FUNC SignatureSignature : Parameters ResultOptResultOpt : Result\n\t\t\t\t | epsilonResult : Parameters\n\t\t\t  | TypeParameters : LPAREN ParameterListOpt RPARENParameterListOpt : ParametersList\n\t\t\t\t\t\t| epsilonParametersList : Type\n\t\t\t\t\t  | IdentifierList Type\n\t\t\t\t\t  | ParameterDeclCommaRepParameterDeclCommaRep : ParameterDeclCommaRep COMMA ParameterDecl\n\t\t\t\t\t\t\t | ParameterDecl COMMA ParameterDeclParameterDecl : IdentifierList Type\n\t\t\t\t\t | TypeBlock : LBRACE StatementList RBRACEStatementList : StatementRepStatementRep : StatementRep Statement SEMICOL\n\t\t\t\t\t| epsilonDeclaration : ConstDecl\n\t\t\t\t\t| TypeDecl\n\t\t\t\t\t| VarDeclTopLevelDecl : Declaration\n\t\t\t\t\t| FunctionDeclConstDecl : CONST ConstSpec\n\t\t\t\t | CONST LPAREN ConstSpecRep RPARENConstSpecRep : ConstSpecRep ConstSpec SEMICOL\n\t\t\t\t\t| epsilonConstSpec : IdentifierList TypeExprListOptTypeExprListOpt : TypeOpt EQUAL ExpressionList\n\t\t\t\t\t   | epsilonIdentifierList : IDENTIFIER IdentifierRepIdentifierRep : IdentifierRep COMMA IDENTIFIER\n\t\t\t\t\t | epsilonTypeDecl : TYPE TypeSpec\n\t\t\t\t| TYPE LPAREN TypeSpecRep RPARENTypeSpecRep : TypeSpecRep TypeSpec SEMICOL\n\t\t\t\t   | epsilonTypeSpec : AliasDecl\n\t\t\t\t| TypeDefAliasDecl : IDENTIFIER EQUAL TypeTypeDef : IDENTIFIER TypeVarDecl : VAR VarSpec\n\t\t\t   | VAR LPAREN VarSpecRep RPARENVarSpecRep : VarSpecRep VarSpec SEMICOL\n\t\t\t\t  | epsilonVarSpec : IdentifierList Type ExpressionListOpt\n\t\t\t   | IdentifierList EQUAL ExpressionListExpressionListOpt : EQUAL ExpressionList\n\t\t\t\t\t\t | epsilon ShortVarDecl : IDENTIFIER COLONEQ Expression FunctionDecl : FUNC FunctionName Function\n\t\t\t\t\t| FUNC FunctionName SignatureFunctionName : IDENTIFIERFunction : Signature FunctionBodyFunctionBody : BlockOperand : Literal\n\t\t\t   | OperandName\n\t\t\t   | LPAREN Expression RPARENLiteral : BasicLitBasicLit : IntLiteral\n\t\t\t\t| FloatLiteral\n\t\t\t\t| ImgLiteral\n\t\t\t\t| RuneLiteral\n\t\t\t\t| StringLiteralIntLiteral : INTEGERFloatLiteral : FLOATImgLiteral : IMAGINARYRuneLiteral : RUNEStringLiteral : STRINGOperandName : IDENTIFIERConversion : Type LPAREN Expression RPARENPrimaryExpr : Operand\n\t\t\t\t   | Conversion\n\t\t\t\t   | PrimaryExpr Selector\n\t\t\t\t   | PrimaryExpr Index\n\t\t\t\t   | PrimaryExpr Slice\n\t\t\t\t   | PrimaryExpr ArgumentsSelector : DOT IDENTIFIERIndex : LBRACK Expression RBRACKSlice : LBRACK ExpressionOpt COLON ExpressionOpt RBRACKArguments : LPAREN ExpressionListTypeOpt RPARENExpressionListTypeOpt : ExpressionList\n\t\t\t\t\t\t\t | epsilonExpressionList : Expression ExpressionRepExpressionRep : ExpressionRep COMMA Expression\n\t\t\t\t\t | epsilonExpression : UnaryExpr\n\t\t\t\t  | Expression OROR Expression\n\t\t\t\t\t| Expression AMPAMP Expression\n\t\t\t\t\t| Expression EQEQ Expression\n\t\t\t\t\t| Expression NOTEQ Expression\n\t\t\t\t\t| Expression LESS Expression\n\t\t\t\t\t| Expression GREAT Expression\n\t\t\t\t\t| Expression LEQ Expression\n\t\t\t\t\t| Expression GEQ Expression\n\t\t\t\t\t| Expression PLUS Expression\n\t\t\t\t\t| Expression MINUS Expression\n\t\t\t\t\t| Expression OR Expression\n\t\t\t\t\t| Expression CARET Expression\n\t\t\t\t\t| Expression TIMES Expression\n\t\t\t\t\t| Expression DIVIDE Expression\n\t\t\t\t\t| Expression MOD Expression\n\t\t\t\t\t| Expression AMPERS Expression\n\t\t\t\t\t| Expression LL Expression\n\t\t\t\t\t| Expression GG Expression\n\t\t\t\t\t| Expression AMPCAR ExpressionExpressionOpt : Expression\n\t\t\t\t\t | epsilonUnaryExpr : PrimaryExpr\n\t\t\t\t | UnaryOp UnaryExprUnaryOp : PLUS\n\t\t\t   | MINUS\n\t\t\t   | TIMES\n\t\t\t   | AMPERS\n\t\t\t   | NOT Statement : Declaration\n\t\t\t\t | LabeledStmt\n\t\t\t\t | SimpleStmt\n\t\t\t\t | ReturnStmt\n\t\t\t\t | BreakStmt\n\t\t\t\t | ContinueStmt\n\t\t\t\t | GotoStmt\n\t\t\t\t | Block\n\t\t\t\t | IfStmt\n\t\t\t\t | ForStmt SimpleStmt : epsilon\n\t\t\t\t  | ExpressionStmt\n\t\t\t\t  | IncDecStmt\n\t\t\t\t  | Assignment\n\t\t\t\t  | ShortVarDecl  LabeledStmt : Label COLON Statement  Label : IDENTIFIER  ExpressionStmt : Expression  IncDecStmt : PrimaryExpr PLUSPLUS\n\t\t\t\t\t| PrimaryExpr MINUSMIN Assignment : ExpressionList assign_op ExpressionList assign_op : AssignOpAssignOp : PLUSEQ\n\t\t\t\t| MINUSEQ\n\t\t\t\t| TIMESEQ\n\t\t\t\t| DIVIDEEQ\n\t\t\t\t| MODEQ\n\t\t\t\t| AMPEQ\n\t\t\t\t| OREQ\n\t\t\t\t| CAREQ\n\t\t\t\t| LLEQ\n\t\t\t\t| GGEQ\n\t\t\t\t| EQUAL  IfStmt : IF Expression Block ElseOpt  ElseOpt : ELSE IfStmt\n\t\t\t\t| ELSE Block\n\t\t\t\t| epsilon ForStmt : FOR ConditionBlockOpt BlockConditionBlockOpt : epsilon\n\t\t\t\t| Condition\n\t\t\t\t| ForClauseCondition : Expression ForClause : SimpleStmt SEMICOL ConditionOpt SEMICOL SimpleStmtConditionOpt : epsilon\n\t\t\t| Condition RangeClause : ExpressionIdentListOpt RANGE ExpressionExpressionIdentListOpt : epsilon\n\t\t\t\t| ExpressionIdentifierExpressionIdentifier : ExpressionList EQUALReturnStmt : RETURN ExpressionListPureOptExpressionListPureOpt : ExpressionList\n\t\t\t\t| epsilonBreakStmt : BREAK LabelOptContinueStmt : CONTINUE LabelOptLabelOpt : Label\n\t\t\t| epsilon GotoStmt : GOTO Label Source : PackageClause SEMICOL ImportDeclRep TopLevelDeclRepImportDeclRep : epsilon\n\t\t\t| ImportDeclRep ImportDecl SEMICOLTopLevelDeclRep : TopLevelDeclRep TopLevelDecl SEMICOL\n\t\t\t\t\t\t| epsilonPackageClause : PACKAGE PackageNamePackageName : IDENTIFIERImportDecl : IMPORT ImportSpec\n\t\t\t| IMPORT LPAREN ImportSpecRep RPAREN  ImportSpecRep : ImportSpecRep ImportSpec SEMICOL\n\t\t\t\t| epsilon  ImportSpec : PackageNameDotOpt ImportPath  PackageNameDotOpt : DOT\n\t\t\t\t\t\t\t| PackageName\n\t\t\t\t\t\t\t| epsilon ImportPath : STRING epsilon : '
    
_lr_action_items = {'OROR':([92,93,94,95,96,99,100,101,105,106,107,108,109,110,111,113,116,117,119,140,154,158,178,179,181,182,202,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,228,232,243,247,251,268,270,271,278,283,284,307,309,315,319,322,326,],[-93,-98,-89,-81,-86,-94,-82,-84,-90,-92,-95,-85,-87,-112,-88,-97,159,-91,-134,159,-135,159,-100,-101,-99,-102,159,-83,-113,-124,-118,-126,-131,-117,-115,-129,-128,-120,-123,-130,-116,-121,-127,-114,-125,-122,-119,159,-103,-134,-95,159,-96,-104,-106,-95,159,-134,159,159,159,159,-105,159,]),'CARET':([92,93,94,95,96,99,100,101,105,106,107,108,109,110,111,113,116,117,119,140,154,158,178,179,181,182,202,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,228,232,243,247,251,268,270,271,278,283,284,307,309,315,319,322,326,],[-93,-98,-89,-81,-86,-94,-82,-84,-90,-92,-95,-85,-87,-112,-88,-97,160,-91,-134,160,-135,160,-100,-101,-99,-102,160,-83,160,-124,160,-126,-131,160,160,-129,-128,160,-123,-130,160,-121,-127,160,-125,-122,160,160,-103,-134,-95,160,-96,-104,-106,-95,160,-134,160,160,160,160,-105,160,]),'GREAT':([92,93,94,95,96,99,100,101,105,106,107,108,109,110,111,113,116,117,119,140,154,158,178,179,181,182,202,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,228,232,243,247,251,268,270,271,278,283,284,307,309,315,319,322,326,],[-93,-98,-89,-81,-86,-94,-82,-84,-90,-92,-95,-85,-87,-112,-88,-97,161,-91,-134,161,-135,161,-100,-101,-99,-102,161,-83,161,-124,-118,-126,-131,-117,-115,-129,-128,-120,-123,-130,-116,-121,-127,161,-125,-122,-119,161,-103,-134,-95,161,-96,-104,-106,-95,161,-134,161,161,161,161,-105,161,]),'SEMICOL':([1,6,7,12,15,16,17,18,19,22,26,31,33,34,38,41,42,44,48,49,53,55,56,57,58,59,65,66,67,68,69,70,71,72,77,81,82,83,84,85,86,87,88,92,93,94,95,96,99,100,101,105,106,107,108,109,110,111,113,117,119,121,122,123,124,126,127,128,129,137,138,139,140,142,143,144,145,146,149,150,154,178,179,181,182,185,187,188,190,195,196,197,199,201,203,204,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,232,233,234,235,236,237,238,240,241,242,243,244,245,246,247,248,249,251,252,253,254,255,257,259,260,267,268,270,271,272,273,274,275,276,277,278,280,283,284,285,286,287,288,289,290,305,306,309,310,311,312,313,316,317,318,319,320,321,322,323,324,325,326,327,329,331,332,],[5,-203,-204,24,-48,35,-47,-44,-45,-46,-205,-49,-214,-214,-67,-64,-63,-59,-209,-213,-6,-3,-2,-5,-7,-55,-53,-8,-9,-58,-56,-76,-214,-77,-214,-66,-206,147,148,-50,-24,-23,-22,-93,-98,-89,-81,-86,-94,-82,-84,-90,-92,-95,-85,-87,-112,-88,-97,-91,-134,-28,-29,-25,-27,-26,-79,-214,-80,-68,194,-72,-214,-74,-71,-60,198,-65,-4,-54,-135,-100,-101,-99,-102,-57,-214,-43,-30,-109,-111,-73,266,-15,-14,-12,-83,-113,-124,-118,-126,-131,-117,-115,-129,-128,-120,-123,-130,-116,-121,-127,-114,-125,-122,-119,-103,-146,-152,272,-154,-142,-214,-153,-147,-214,-134,-148,-214,-141,-95,-151,-149,-158,-214,-144,-143,-150,-155,-145,-40,-214,-96,-104,-106,-42,-190,-192,-191,-214,317,-95,-151,-158,-134,-159,-160,-196,-157,-194,-195,-193,-197,-110,-21,-20,-19,-18,-156,-214,-178,-75,-161,-214,-105,-185,-184,330,-182,-177,-174,-175,-176,]),'CONST':([5,8,9,10,11,24,35,128,187,188,272,276,],[-214,-199,-214,14,-202,-200,-201,-214,14,-43,-42,14,]),'FUNC':([5,8,9,10,11,24,33,34,35,40,45,60,61,64,68,69,71,73,76,80,90,98,102,103,104,112,115,118,125,128,131,141,153,155,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,180,183,185,187,188,190,192,193,200,205,238,242,258,261,265,269,272,276,291,292,293,294,295,296,297,298,299,300,301,302,303,304,317,330,],[-214,-199,-214,20,-202,-200,52,-214,-201,52,52,52,52,52,-58,-56,52,52,52,52,52,-137,52,-140,-136,-138,52,-139,52,-214,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-57,52,-43,-30,52,52,52,-138,52,52,52,52,52,52,-42,52,52,-162,-173,-170,-165,-163,-167,-172,-171,-169,-164,-168,52,-166,52,52,]),'AMPCAR':([92,93,94,95,96,99,100,101,105,106,107,108,109,110,111,113,116,117,119,140,154,158,178,179,181,182,202,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,228,232,243,247,251,268,270,271,278,283,284,307,309,315,319,322,326,],[-93,-98,-89,-81,-86,-94,-82,-84,-90,-92,-95,-85,-87,-112,-88,-97,163,-91,-134,163,-135,163,-100,-101,-99,-102,163,-83,163,163,163,-126,-131,163,163,-129,-128,163,163,-130,163,163,-127,163,-125,163,163,163,-103,-134,-95,163,-96,-104,-106,-95,163,-134,163,163,163,163,-105,163,]),'LESS':([92,93,94,95,96,99,100,101,105,106,107,108,109,110,111,113,116,117,119,140,154,158,178,179,181,182,202,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,228,232,243,247,251,268,270,271,278,283,284,307,309,315,319,322,326,],[-93,-98,-89,-81,-86,-94,-82,-84,-90,-92,-95,-85,-87,-112,-88,-97,164,-91,-134,164,-135,164,-100,-101,-99,-102,164,-83,164,-124,-118,-126,-131,-117,-115,-129,-128,-120,-123,-130,-116,-121,-127,164,-125,-122,-119,164,-103,-134,-95,164,-96,-104,-106,-95,164,-134,164,164,164,164,-105,164,]),'EQEQ':([92,93,94,95,96,99,100,101,105,106,107,108,109,110,111,113,116,117,119,140,154,158,178,179,181,182,202,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,228,232,243,247,251,268,270,271,278,283,284,307,309,315,319,322,326,],[-93,-98,-89,-81,-86,-94,-82,-84,-90,-92,-95,-85,-87,-112,-88,-97,165,-91,-134,165,-135,165,-100,-101,-99,-102,165,-83,165,-124,-118,-126,-131,-117,-115,-129,-128,-120,-123,-130,-116,-121,-127,165,-125,-122,-119,165,-103,-134,-95,165,-96,-104,-106,-95,165,-134,165,165,165,165,-105,165,]),'GGEQ':([92,93,94,95,96,99,100,101,105,106,107,108,109,110,111,113,117,119,154,178,179,181,182,195,196,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,232,243,247,250,251,268,270,271,278,283,284,309,322,],[-93,-98,-89,-81,-86,-94,-82,-84,-90,-92,-95,-85,-87,-112,-88,-97,-91,-134,-135,-100,-101,-99,-102,-109,-111,-83,-113,-124,-118,-126,-131,-117,-115,-129,-128,-120,-123,-130,-116,-121,-127,-114,-125,-122,-119,-103,-134,-95,298,-214,-96,-104,-106,-95,-214,-134,-110,-105,]),'EQUAL':([33,34,40,45,53,54,55,56,57,58,59,62,66,67,68,69,71,77,86,87,88,92,93,94,95,96,99,100,101,105,106,107,108,109,110,111,113,117,119,121,122,123,124,126,149,154,178,179,181,182,185,190,195,196,201,203,204,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,232,243,247,250,251,268,270,271,278,283,284,309,322,],[-214,-214,76,80,-6,-10,-3,-2,-5,-7,-11,90,-8,-9,-58,-56,-214,141,-24,-23,-22,-93,-98,-89,-81,-86,-94,-82,-84,-90,-92,-95,-85,-87,-112,-88,-97,-91,-134,-28,-29,-25,-27,-26,-4,-135,-100,-101,-99,-102,-57,-30,-109,-111,-15,-14,-12,-83,-113,-124,-118,-126,-131,-117,-115,-129,-128,-120,-123,-130,-116,-121,-127,-114,-125,-122,-119,-103,-134,-95,293,-214,-96,-104,-106,-95,-214,-134,-110,-105,]),'GOTO':([128,187,188,272,276,],[-214,256,-43,-42,256,]),'CAREQ':([92,93,94,95,96,99,100,101,105,106,107,108,109,110,111,113,117,119,154,178,179,181,182,195,196,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,232,243,247,250,251,268,270,271,278,283,284,309,322,],[-93,-98,-89,-81,-86,-94,-82,-84,-90,-92,-95,-85,-87,-112,-88,-97,-91,-134,-135,-100,-101,-99,-102,-109,-111,-83,-113,-124,-118,-126,-131,-117,-115,-129,-128,-120,-123,-130,-116,-121,-127,-114,-125,-122,-119,-103,-134,-95,294,-214,-96,-104,-106,-95,-214,-134,-110,-105,]),'COLON':([92,93,94,95,96,99,100,101,105,106,107,108,109,110,111,113,117,119,154,178,179,180,181,182,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,232,239,247,268,270,271,322,],[-93,-98,-89,-81,-86,-94,-82,-84,-90,-92,-95,-85,-87,-112,-88,-97,-91,-134,-135,-100,-101,-214,-99,-102,-83,-113,-124,-118,-126,-131,-117,-115,-129,-128,-120,-123,-130,-116,-121,-127,-114,-125,-122,-119,269,-133,-132,-103,276,-157,-96,-104,-106,-105,]),'COLONEQ':([247,278,],[291,291,]),'AMPAMP':([92,93,94,95,96,99,100,101,105,106,107,108,109,110,111,113,116,117,119,140,154,158,178,179,181,182,202,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,228,232,243,247,251,268,270,271,278,283,284,307,309,315,319,322,326,],[-93,-98,-89,-81,-86,-94,-82,-84,-90,-92,-95,-85,-87,-112,-88,-97,174,-91,-134,174,-135,174,-100,-101,-99,-102,174,-83,174,-124,-118,-126,-131,-117,-115,-129,-128,-120,-123,-130,-116,-121,-127,-114,-125,-122,-119,174,-103,-134,-95,174,-96,-104,-106,-95,174,-134,174,174,174,174,-105,174,]),'RETURN':([128,187,188,272,276,],[-214,238,-43,-42,238,]),'RUNE':([64,76,90,98,102,103,104,112,115,118,128,141,153,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,180,183,187,188,205,238,242,258,265,269,272,276,291,292,293,294,295,296,297,298,299,300,301,302,303,304,317,330,],[92,92,92,-137,92,-140,-136,-138,92,-139,-214,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,-43,-138,92,92,92,92,92,-42,92,92,-162,-173,-170,-165,-163,-167,-172,-171,-169,-164,-168,92,-166,92,92,]),'MINUS':([64,76,90,92,93,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,119,128,140,141,153,154,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,187,188,202,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,228,232,238,242,243,247,251,258,265,268,269,270,271,272,276,278,283,284,291,292,293,294,295,296,297,298,299,300,301,302,303,304,307,309,315,317,319,322,326,330,],[98,98,98,-93,-98,-89,-81,-86,-137,-94,-82,-84,98,-140,-136,-90,-92,-95,-85,-87,-112,-88,-138,-97,98,176,-91,-139,-134,-214,176,98,98,-135,98,176,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,-100,-101,98,-99,-102,98,98,-43,176,-138,-83,176,-124,176,-126,-131,176,176,-129,-128,176,-123,-130,176,-121,-127,176,-125,-122,176,176,-103,98,98,-134,-95,176,98,98,-96,98,-104,-106,-42,98,-95,176,-134,98,-162,-173,-170,-165,-163,-167,-172,-171,-169,-164,-168,98,-166,176,176,176,98,176,-105,176,98,]),'DOT':([13,25,46,47,92,93,94,95,96,99,100,101,105,106,107,108,109,111,113,117,119,147,178,179,181,182,206,232,243,247,268,270,271,278,284,322,],[30,-214,-208,30,-93,-98,-89,-81,-86,-94,-82,-84,-90,-92,-95,-85,-87,-88,-97,-91,184,-207,-100,-101,-99,-102,-83,-103,184,-95,-96,-104,-106,-95,184,-105,]),'RBRACE':([91,128,151,152,187,188,189,266,272,],[-214,-214,201,-17,-41,-43,260,-16,-42,]),'GEQ':([92,93,94,95,96,99,100,101,105,106,107,108,109,110,111,113,116,117,119,140,154,158,178,179,181,182,202,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,228,232,243,247,251,268,270,271,278,283,284,307,309,315,319,322,326,],[-93,-98,-89,-81,-86,-94,-82,-84,-90,-92,-95,-85,-87,-112,-88,-97,168,-91,-134,168,-135,168,-100,-101,-99,-102,168,-83,168,-124,-118,-126,-131,-117,-115,-129,-128,-120,-123,-130,-116,-121,-127,168,-125,-122,-119,168,-103,-134,-95,168,-96,-104,-106,-95,168,-134,168,168,168,168,-105,168,]),'RPAREN':([25,32,39,43,46,47,50,51,53,55,56,57,58,66,67,71,73,74,75,78,79,86,87,88,89,92,93,94,95,96,99,100,101,105,106,107,108,109,110,111,113,117,119,121,122,123,124,125,126,130,132,133,134,136,140,147,148,149,154,156,158,178,179,181,182,183,186,190,191,194,195,196,198,201,202,203,204,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,229,230,231,232,262,263,264,268,270,271,308,309,322,],[-214,-214,-214,-214,-208,82,85,-52,-6,-3,-2,-5,-7,-8,-9,-214,-214,137,-70,144,-62,-24,-23,-22,149,-93,-98,-89,-81,-86,-94,-82,-84,-90,-92,-95,-85,-87,-112,-88,-97,-91,-134,-28,-29,-25,-27,-214,-26,190,-35,-33,-31,-32,-214,-207,-51,-4,-135,149,206,-100,-101,-99,-102,-214,149,-30,-34,-69,-109,-111,-61,-15,268,-14,-12,-83,-113,-124,-118,-126,-131,-117,-115,-129,-128,-120,-123,-130,-116,-121,-127,-114,-125,-122,-119,-108,-107,271,-103,-39,-36,-37,-96,-104,-106,-38,-110,-105,]),'TIMESEQ':([92,93,94,95,96,99,100,101,105,106,107,108,109,110,111,113,117,119,154,178,179,181,182,195,196,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,232,243,247,250,251,268,270,271,278,283,284,309,322,],[-93,-98,-89,-81,-86,-94,-82,-84,-90,-92,-95,-85,-87,-112,-88,-97,-91,-134,-135,-100,-101,-99,-102,-109,-111,-83,-113,-124,-118,-126,-131,-117,-115,-129,-128,-120,-123,-130,-116,-121,-127,-114,-125,-122,-119,-103,-134,-95,295,-214,-96,-104,-106,-95,-214,-134,-110,-105,]),'LL':([92,93,94,95,96,99,100,101,105,106,107,108,109,110,111,113,116,117,119,140,154,158,178,179,181,182,202,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,228,232,243,247,251,268,270,271,278,283,284,307,309,315,319,322,326,],[-93,-98,-89,-81,-86,-94,-82,-84,-90,-92,-95,-85,-87,-112,-88,-97,166,-91,-134,166,-135,166,-100,-101,-99,-102,166,-83,166,166,166,-126,-131,166,166,-129,-128,166,166,-130,166,166,-127,166,-125,166,166,166,-103,-134,-95,166,-96,-104,-106,-95,166,-134,166,166,166,166,-105,166,]),'MODEQ':([92,93,94,95,96,99,100,101,105,106,107,108,109,110,111,113,117,119,154,178,179,181,182,195,196,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,232,243,247,250,251,268,270,271,278,283,284,309,322,],[-93,-98,-89,-81,-86,-94,-82,-84,-90,-92,-95,-85,-87,-112,-88,-97,-91,-134,-135,-100,-101,-99,-102,-109,-111,-83,-113,-124,-118,-126,-131,-117,-115,-129,-128,-120,-123,-130,-116,-121,-127,-114,-125,-122,-119,-103,-134,-95,297,-214,-96,-104,-106,-95,-214,-134,-110,-105,]),'PLUS':([64,76,90,92,93,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,119,128,140,141,153,154,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,187,188,202,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,228,232,238,242,243,247,251,258,265,268,269,270,271,272,276,278,283,284,291,292,293,294,295,296,297,298,299,300,301,302,303,304,307,309,315,317,319,322,326,330,],[104,104,104,-93,-98,-89,-81,-86,-137,-94,-82,-84,104,-140,-136,-90,-92,-95,-85,-87,-112,-88,-138,-97,104,172,-91,-139,-134,-214,172,104,104,-135,104,172,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,-100,-101,104,-99,-102,104,104,-43,172,-138,-83,172,-124,172,-126,-131,172,172,-129,-128,172,-123,-130,172,-121,-127,172,-125,-122,172,172,-103,104,104,-134,-95,172,104,104,-96,104,-104,-106,-42,104,-95,172,-134,104,-162,-173,-170,-165,-163,-167,-172,-171,-169,-164,-168,104,-166,172,172,172,104,172,-105,172,104,]),'MINUSEQ':([92,93,94,95,96,99,100,101,105,106,107,108,109,110,111,113,117,119,154,178,179,181,182,195,196,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,232,243,247,250,251,268,270,271,278,283,284,309,322,],[-93,-98,-89,-81,-86,-94,-82,-84,-90,-92,-95,-85,-87,-112,-88,-97,-91,-134,-135,-100,-101,-99,-102,-109,-111,-83,-113,-124,-118,-126,-131,-117,-115,-129,-128,-120,-123,-130,-116,-121,-127,-114,-125,-122,-119,-103,-134,-95,301,-214,-96,-104,-106,-95,-214,-134,-110,-105,]),'COMMA':([34,53,55,56,57,58,66,67,68,69,71,86,87,88,92,93,94,95,96,99,100,101,105,106,107,108,109,110,111,113,117,119,121,122,123,124,126,132,133,135,140,149,154,178,179,181,182,185,186,190,191,195,196,201,203,204,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,232,243,247,251,262,263,264,268,270,271,278,283,284,308,309,322,],[-214,-6,-3,-2,-5,-7,-8,-9,-58,120,-214,-24,-23,-22,-93,-98,-89,-81,-86,-94,-82,-84,-90,-92,-95,-85,-87,-112,-88,-97,-91,-134,-28,-29,-25,-27,-26,192,-39,193,-214,-4,-135,-100,-101,-99,-102,-57,-39,-30,-38,265,-111,-15,-14,-12,-83,-113,-124,-118,-126,-131,-117,-115,-129,-128,-120,-123,-130,-116,-121,-127,-114,-125,-122,-119,-103,-134,-95,-214,-39,-36,-37,-96,-104,-106,-95,-214,-134,-38,-110,-105,]),'TYPEX':([33,34,40,45,60,61,64,68,69,71,73,76,80,90,98,102,103,104,112,115,118,125,128,131,141,153,155,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,180,183,185,187,188,190,192,193,200,205,238,242,258,261,265,269,272,276,291,292,293,294,295,296,297,298,299,300,301,302,303,304,317,330,],[57,-214,57,57,57,57,57,-58,-56,57,57,57,57,57,-137,57,-140,-136,-138,57,-139,57,-214,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-57,57,-43,-30,57,57,57,-138,57,57,57,57,57,57,-42,57,57,-162,-173,-170,-165,-163,-167,-172,-171,-169,-164,-168,57,-166,57,57,]),'IMPORT':([5,8,9,24,],[-214,-199,13,-200,]),'IMAGINARY':([64,76,90,98,102,103,104,112,115,118,128,141,153,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,180,183,187,188,205,238,242,258,265,269,272,276,291,292,293,294,295,296,297,298,299,300,301,302,303,304,317,330,],[106,106,106,-137,106,-140,-136,-138,106,-139,-214,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,-43,-138,106,106,106,106,106,-42,106,106,-162,-173,-170,-165,-163,-167,-172,-171,-169,-164,-168,106,-166,106,106,]),'IDENTIFIER':([2,13,14,20,21,23,25,32,39,43,46,47,50,51,64,73,74,75,76,78,79,90,91,98,102,103,104,112,115,118,120,125,128,141,147,148,151,152,153,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,180,183,184,187,188,192,193,194,198,205,238,242,245,252,256,258,265,266,269,272,276,291,292,293,294,295,296,297,298,299,300,301,302,303,304,317,330,],[7,7,34,36,34,45,-214,-214,-214,-214,-208,7,34,-52,107,34,34,-70,107,45,-62,107,-214,-137,107,-140,-136,-138,107,-139,185,34,-214,107,-207,-51,34,-17,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,232,247,-43,34,34,-69,-61,-138,107,278,288,288,288,107,107,-16,107,-42,247,107,-162,-173,-170,-165,-163,-167,-172,-171,-169,-164,-168,107,-166,107,278,]),'DIVIDEEQ':([92,93,94,95,96,99,100,101,105,106,107,108,109,110,111,113,117,119,154,178,179,181,182,195,196,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,232,243,247,250,251,268,270,271,278,283,284,309,322,],[-93,-98,-89,-81,-86,-94,-82,-84,-90,-92,-95,-85,-87,-112,-88,-97,-91,-134,-135,-100,-101,-99,-102,-109,-111,-83,-113,-124,-118,-126,-131,-117,-115,-129,-128,-120,-123,-130,-116,-121,-127,-114,-125,-122,-119,-103,-134,-95,304,-214,-96,-104,-106,-95,-214,-134,-110,-105,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'FunctionBody':([72,],[127,]),'Conversion':([64,76,90,102,115,141,153,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,180,183,187,238,242,258,265,269,276,291,303,317,330,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'ContinueStmt':([187,276,],[233,233,]),'ParameterListOpt':([73,125,],[130,130,]),'ExpressionRep':([140,251,283,],[195,195,195,]),'ExpressionStmt':([187,242,276,330,],[234,234,234,234,]),'Statement':([187,276,],[235,316,]),'ParameterDeclCommaRep':([73,125,],[132,132,]),'Selector':([119,243,284,],[181,181,181,]),'IfStmt':([187,276,328,],[249,249,331,]),'StatementRep':([128,],[187,]),'Assignment':([187,242,276,330,],[236,236,236,236,]),'PackageNameDotOpt':([13,47,],[29,29,]),'TypeName':([33,40,45,60,61,64,71,73,76,80,90,102,112,115,125,131,141,153,155,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,180,183,187,192,193,200,205,238,242,258,261,265,269,276,291,303,317,330,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'ParametersList':([73,125,],[134,134,]),'ParameterDecl':([73,125,192,193,],[135,135,263,264,]),'FunctionName':([20,],[37,]),'LabeledStmt':([187,276,],[237,237,]),'StatementList':([128,],[189,]),'ConditionOpt':([317,],[325,]),'ElementType':([155,],[204,]),'PointerType':([33,40,45,60,61,64,71,73,76,80,90,102,112,115,125,131,141,153,155,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,180,183,187,192,193,200,205,238,242,258,261,265,269,276,291,303,317,330,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'VarSpecRep':([39,],[74,]),'VarDecl':([10,187,276,],[22,22,22,]),'Tag':([267,],[312,]),'ConstSpecRep':([32,],[50,]),'PrimaryExpr':([64,76,90,102,115,141,153,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,180,183,187,238,242,258,265,269,276,291,303,317,330,],[119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,243,119,284,119,119,119,243,119,119,119,243,]),'TypeSpec':([23,78,],[44,145,]),'Index':([119,243,284,],[178,178,178,]),'Parameters':([37,52,71,],[71,71,121,]),'UnaryOp':([64,76,90,102,115,141,153,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,180,183,187,238,242,258,265,269,276,291,303,317,330,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'PackageName':([2,13,47,],[6,28,28,]),'ExpressionListPureOpt':([238,],[273,]),'Label':([187,245,252,256,276,],[239,290,290,306,239,]),'FunctionDecl':([10,],[15,]),'TopLevelDecl':([10,],[16,]),'IdentifierList':([14,21,50,73,74,125,151,192,193,],[33,40,33,131,40,131,200,261,261,]),'TypeLit':([33,40,45,60,61,64,71,73,76,80,90,102,112,115,125,131,141,153,155,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,180,183,187,192,193,200,205,238,242,258,261,265,269,276,291,303,317,330,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'ImportDeclRep':([5,],[9,]),'PackageClause':([0,],[1,]),'ResultOpt':([71,],[123,]),'FloatLiteral':([64,76,90,102,115,141,153,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,180,183,187,238,242,258,265,269,276,291,303,317,330,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'IncDecStmt':([187,242,276,330,],[240,240,240,240,]),'GotoStmt':([187,276,],[241,241,]),'TopLevelDeclRep':([9,],[10,]),'Operand':([64,76,90,102,115,141,153,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,180,183,187,238,242,258,265,269,276,291,303,317,330,],[113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'assign_op':([250,],[303,]),'Signature':([37,52,],[72,86,]),'Block':([72,187,276,281,307,328,],[129,244,244,318,321,332,]),'ConstDecl':([10,187,276,],[18,18,18,]),'VarSpec':([21,74,],[38,138,]),'Result':([71,],[126,]),'AliasDecl':([23,78,],[42,42,]),'ExpressionListTypeOpt':([183,],[231,]),'Literal':([64,76,90,102,115,141,153,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,180,183,187,238,242,258,265,269,276,291,303,317,330,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'ImportDecl':([9,],[12,]),'OperandName':([64,76,90,102,115,141,153,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,180,183,187,238,242,258,265,269,276,291,303,317,330,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'AssignOp':([250,],[292,]),'FieldDeclRep':([91,],[151,]),'start':([0,],[4,]),'Declaration':([10,187,276,],[17,246,246,]),'Condition':([242,317,],[279,323,]),'StructType':([33,40,45,60,61,64,71,73,76,80,90,102,112,115,125,131,141,153,155,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,180,183,187,192,193,200,205,238,242,258,261,265,269,276,291,303,317,330,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'IntLiteral':([64,76,90,102,115,141,153,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,180,183,187,238,242,258,265,269,276,291,303,317,330,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'ConstSpec':([14,50,],[31,84,]),'epsilon':([5,9,13,25,32,33,34,39,43,47,71,73,77,91,125,128,140,180,183,187,238,242,245,251,252,267,269,276,283,317,321,330,],[8,11,27,46,51,59,68,75,79,27,124,136,142,152,136,188,196,227,229,248,274,280,287,196,287,311,227,248,196,324,327,248,]),'ConditionBlockOpt':([242,],[281,]),'ExpressionList':([76,90,141,183,187,238,242,276,303,330,],[139,150,197,230,250,275,250,250,320,250,]),'SimpleStmt':([187,242,276,330,],[254,277,254,333,]),'ImportSpecRep':([25,],[47,]),'Expression':([64,76,90,115,141,153,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,180,183,187,238,242,258,265,269,276,291,303,317,330,],[116,140,140,158,140,202,158,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,228,140,251,140,283,307,309,315,251,319,140,326,251,]),'ImportPath':([29,],[48,]),'Source':([0,],[3,]),'ExpressionOpt':([180,269,],[226,314,]),'StringLiteral':([64,76,90,102,115,141,153,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,180,183,187,238,242,258,265,269,276,291,303,317,330,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'IdentifierRep':([34,],[69,]),'TypeExprListOpt':([33,],[65,]),'ReturnStmt':([187,276,],[253,253,]),'FunctionType':([33,40,45,60,61,64,71,73,76,80,90,102,112,115,125,131,141,153,155,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,180,183,187,192,193,200,205,238,242,258,261,265,269,276,291,303,317,330,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'Slice':([119,243,284,],[179,179,179,]),'ArrayType':([33,40,45,60,61,64,71,73,76,80,90,102,112,115,125,131,141,153,155,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,180,183,187,192,193,200,205,238,242,258,261,265,269,276,291,303,317,330,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'ForStmt':([187,276,],[255,255,]),'Arguments':([119,243,284,],[182,182,182,]),'Function':([37,],[70,]),'ImportSpec':([13,47,],[26,83,]),'Type':([33,40,45,60,61,64,71,73,76,80,90,102,112,115,125,131,141,153,155,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,180,183,187,192,193,200,205,238,242,258,261,265,269,276,291,303,317,330,],[54,77,81,87,89,97,122,133,97,146,97,97,87,156,186,191,97,97,203,156,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,262,262,267,87,97,97,97,308,97,97,97,97,97,97,97,]),'TypeSpecRep':([43,],[78,]),'LabelOpt':([245,252,],[289,305,]),'TypeDecl':([10,187,276,],[19,19,19,]),'BaseType':([60,112,205,],[88,88,88,]),'UnaryExpr':([64,76,90,102,115,141,153,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,180,183,187,238,242,258,265,269,276,291,303,317,330,],[110,110,110,154,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'RuneLiteral':([64,76,90,102,115,141,153,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,180,183,187,238,242,258,265,269,276,291,303,317,330,],[111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'ArrayLength':([64,],[114,]),'ForClause':([242,],[282,]),'TypeOpt':([33,],[62,]),'ShortVarDecl':([187,242,276,330,],[257,257,257,257,]),'TypeDef':([23,78,],[41,41,]),'FieldDecl':([151,],[199,]),'BreakStmt':([187,276,],[259,259,]),'TagOpt':([267,],[313,]),'BasicLit':([64,76,90,102,115,141,153,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,180,183,187,238,242,258,265,269,276,291,303,317,330,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'ImgLiteral':([64,76,90,102,115,141,153,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,180,183,187,238,242,258,265,269,276,291,303,317,330,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'ExpressionListOpt':([77,],[143,]),'ElseOpt':([321,],[329,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> Source','start',1,'p_start','parser.py',106),
  ('Type -> TypeName','Type',1,'p_type','parser.py',115),
  ('Type -> TypeLit','Type',1,'p_type','parser.py',116),
  ('Type -> LPAREN Type RPAREN','Type',3,'p_type','parser.py',117),
  ('TypeName -> TYPEX','TypeName',1,'p_type_name','parser.py',124),
  ('TypeLit -> ArrayType','TypeLit',1,'p_type_lit','parser.py',131),
  ('TypeLit -> StructType','TypeLit',1,'p_type_lit','parser.py',132),
  ('TypeLit -> PointerType','TypeLit',1,'p_type_lit','parser.py',133),
  ('TypeLit -> FunctionType','TypeLit',1,'p_type_lit','parser.py',134),
  ('TypeOpt -> Type','TypeOpt',1,'p_type_opt','parser.py',138),
  ('TypeOpt -> epsilon','TypeOpt',1,'p_type_opt','parser.py',139),
  ('ArrayType -> LBRACK ArrayLength RBRACK ElementType','ArrayType',4,'p_array_type','parser.py',151),
  ('ArrayLength -> Expression','ArrayLength',1,'p_array_length','parser.py',157),
  ('ElementType -> Type','ElementType',1,'p_element_type','parser.py',161),
  ('StructType -> STRUCT LBRACE FieldDeclRep RBRACE','StructType',4,'p_struct_type','parser.py',170),
  ('FieldDeclRep -> FieldDeclRep FieldDecl SEMICOL','FieldDeclRep',3,'p_field_decl_rep','parser.py',176),
  ('FieldDeclRep -> epsilon','FieldDeclRep',1,'p_field_decl_rep','parser.py',177),
  ('FieldDecl -> IdentifierList Type TagOpt','FieldDecl',3,'p_field_decl','parser.py',185),
  ('TagOpt -> Tag','TagOpt',1,'p_tag_opt','parser.py',195),
  ('TagOpt -> epsilon','TagOpt',1,'p_tag_opt','parser.py',196),
  ('Tag -> STRING','Tag',1,'p_tag','parser.py',203),
  ('PointerType -> TIMES BaseType','PointerType',2,'p_pointer_type','parser.py',212),
  ('BaseType -> Type','BaseType',1,'p_base_type','parser.py',217),
  ('FunctionType -> FUNC Signature','FunctionType',2,'p_function_type','parser.py',226),
  ('Signature -> Parameters ResultOpt','Signature',2,'p_signature','parser.py',230),
  ('ResultOpt -> Result','ResultOpt',1,'p_result_opt','parser.py',238),
  ('ResultOpt -> epsilon','ResultOpt',1,'p_result_opt','parser.py',239),
  ('Result -> Parameters','Result',1,'p_result','parser.py',246),
  ('Result -> Type','Result',1,'p_result','parser.py',247),
  ('Parameters -> LPAREN ParameterListOpt RPAREN','Parameters',3,'p_parameters','parser.py',254),
  ('ParameterListOpt -> ParametersList','ParameterListOpt',1,'p_parameter_list_opt','parser.py',258),
  ('ParameterListOpt -> epsilon','ParameterListOpt',1,'p_parameter_list_opt','parser.py',259),
  ('ParametersList -> Type','ParametersList',1,'p_parameter_list','parser.py',266),
  ('ParametersList -> IdentifierList Type','ParametersList',2,'p_parameter_list','parser.py',267),
  ('ParametersList -> ParameterDeclCommaRep','ParametersList',1,'p_parameter_list','parser.py',268),
  ('ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA ParameterDecl','ParameterDeclCommaRep',3,'p_parameter_decl_comma_rep','parser.py',281),
  ('ParameterDeclCommaRep -> ParameterDecl COMMA ParameterDecl','ParameterDeclCommaRep',3,'p_parameter_decl_comma_rep','parser.py',282),
  ('ParameterDecl -> IdentifierList Type','ParameterDecl',2,'p_parameter_decl','parser.py',290),
  ('ParameterDecl -> Type','ParameterDecl',1,'p_parameter_decl','parser.py',291),
  ('Block -> LBRACE StatementList RBRACE','Block',3,'p_block','parser.py',306),
  ('StatementList -> StatementRep','StatementList',1,'p_statement_list','parser.py',314),
  ('StatementRep -> StatementRep Statement SEMICOL','StatementRep',3,'p_statement_rep','parser.py',318),
  ('StatementRep -> epsilon','StatementRep',1,'p_statement_rep','parser.py',319),
  ('Declaration -> ConstDecl','Declaration',1,'p_decl','parser.py',333),
  ('Declaration -> TypeDecl','Declaration',1,'p_decl','parser.py',334),
  ('Declaration -> VarDecl','Declaration',1,'p_decl','parser.py',335),
  ('TopLevelDecl -> Declaration','TopLevelDecl',1,'p_toplevel_decl','parser.py',339),
  ('TopLevelDecl -> FunctionDecl','TopLevelDecl',1,'p_toplevel_decl','parser.py',340),
  ('ConstDecl -> CONST ConstSpec','ConstDecl',2,'p_const_decl','parser.py',350),
  ('ConstDecl -> CONST LPAREN ConstSpecRep RPAREN','ConstDecl',4,'p_const_decl','parser.py',351),
  ('ConstSpecRep -> ConstSpecRep ConstSpec SEMICOL','ConstSpecRep',3,'p_const_spec_rep','parser.py',359),
  ('ConstSpecRep -> epsilon','ConstSpecRep',1,'p_const_spec_rep','parser.py',360),
  ('ConstSpec -> IdentifierList TypeExprListOpt','ConstSpec',2,'p_const_spec','parser.py',369),
  ('TypeExprListOpt -> TypeOpt EQUAL ExpressionList','TypeExprListOpt',3,'p_type_expr_list','parser.py',399),
  ('TypeExprListOpt -> epsilon','TypeExprListOpt',1,'p_type_expr_list','parser.py',400),
  ('IdentifierList -> IDENTIFIER IdentifierRep','IdentifierList',2,'p_identifier_list','parser.py',411),
  ('IdentifierRep -> IdentifierRep COMMA IDENTIFIER','IdentifierRep',3,'p_identifier_rep','parser.py',416),
  ('IdentifierRep -> epsilon','IdentifierRep',1,'p_identifier_rep','parser.py',417),
  ('TypeDecl -> TYPE TypeSpec','TypeDecl',2,'p_type_decl','parser.py',431),
  ('TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN','TypeDecl',4,'p_type_decl','parser.py',432),
  ('TypeSpecRep -> TypeSpecRep TypeSpec SEMICOL','TypeSpecRep',3,'p_type_spec_rep','parser.py',441),
  ('TypeSpecRep -> epsilon','TypeSpecRep',1,'p_type_spec_rep','parser.py',442),
  ('TypeSpec -> AliasDecl','TypeSpec',1,'p_type_spec','parser.py',450),
  ('TypeSpec -> TypeDef','TypeSpec',1,'p_type_spec','parser.py',451),
  ('AliasDecl -> IDENTIFIER EQUAL Type','AliasDecl',3,'p_alias_decl','parser.py',455),
  ('TypeDef -> IDENTIFIER Type','TypeDef',2,'p_type_def','parser.py',467),
  ('VarDecl -> VAR VarSpec','VarDecl',2,'p_var_decl','parser.py',479),
  ('VarDecl -> VAR LPAREN VarSpecRep RPAREN','VarDecl',4,'p_var_decl','parser.py',480),
  ('VarSpecRep -> VarSpecRep VarSpec SEMICOL','VarSpecRep',3,'p_var_spec_rep','parser.py',490),
  ('VarSpecRep -> epsilon','VarSpecRep',1,'p_var_spec_rep','parser.py',491),
  ('VarSpec -> IdentifierList Type ExpressionListOpt','VarSpec',3,'p_var_spec','parser.py',499),
  ('VarSpec -> IdentifierList EQUAL ExpressionList','VarSpec',3,'p_var_spec','parser.py',500),
  ('ExpressionListOpt -> EQUAL ExpressionList','ExpressionListOpt',2,'p_expr_list_opt','parser.py',542),
  ('ExpressionListOpt -> epsilon','ExpressionListOpt',1,'p_expr_list_opt','parser.py',543),
  ('ShortVarDecl -> IDENTIFIER COLONEQ Expression','ShortVarDecl',3,'p_short_var_decl','parser.py',555),
  ('FunctionDecl -> FUNC FunctionName Function','FunctionDecl',3,'p_func_decl','parser.py',567),
  ('FunctionDecl -> FUNC FunctionName Signature','FunctionDecl',3,'p_func_decl','parser.py',568),
  ('FunctionName -> IDENTIFIER','FunctionName',1,'p_func_name','parser.py',574),
  ('Function -> Signature FunctionBody','Function',2,'p_func','parser.py',578),
  ('FunctionBody -> Block','FunctionBody',1,'p_func_body','parser.py',583),
  ('Operand -> Literal','Operand',1,'p_operand','parser.py',601),
  ('Operand -> OperandName','Operand',1,'p_operand','parser.py',602),
  ('Operand -> LPAREN Expression RPAREN','Operand',3,'p_operand','parser.py',603),
  ('Literal -> BasicLit','Literal',1,'p_literal','parser.py',610),
  ('BasicLit -> IntLiteral','BasicLit',1,'p_basic_lit','parser.py',615),
  ('BasicLit -> FloatLiteral','BasicLit',1,'p_basic_lit','parser.py',616),
  ('BasicLit -> ImgLiteral','BasicLit',1,'p_basic_lit','parser.py',617),
  ('BasicLit -> RuneLiteral','BasicLit',1,'p_basic_lit','parser.py',618),
  ('BasicLit -> StringLiteral','BasicLit',1,'p_basic_lit','parser.py',619),
  ('IntLiteral -> INTEGER','IntLiteral',1,'p_int_literal','parser.py',623),
  ('FloatLiteral -> FLOAT','FloatLiteral',1,'p_float_literal','parser.py',631),
  ('ImgLiteral -> IMAGINARY','ImgLiteral',1,'p_img_literal','parser.py',639),
  ('RuneLiteral -> RUNE','RuneLiteral',1,'p_rune_literal','parser.py',647),
  ('StringLiteral -> STRING','StringLiteral',1,'p_string_literal','parser.py',655),
  ('OperandName -> IDENTIFIER','OperandName',1,'p_operand_name','parser.py',663),
  ('Conversion -> Type LPAREN Expression RPAREN','Conversion',4,'p_conversion','parser.py',682),
  ('PrimaryExpr -> Operand','PrimaryExpr',1,'p_prim_expr','parser.py',692),
  ('PrimaryExpr -> Conversion','PrimaryExpr',1,'p_prim_expr','parser.py',693),
  ('PrimaryExpr -> PrimaryExpr Selector','PrimaryExpr',2,'p_prim_expr','parser.py',694),
  ('PrimaryExpr -> PrimaryExpr Index','PrimaryExpr',2,'p_prim_expr','parser.py',695),
  ('PrimaryExpr -> PrimaryExpr Slice','PrimaryExpr',2,'p_prim_expr','parser.py',696),
  ('PrimaryExpr -> PrimaryExpr Arguments','PrimaryExpr',2,'p_prim_expr','parser.py',697),
  ('Selector -> DOT IDENTIFIER','Selector',2,'p_selector','parser.py',706),
  ('Index -> LBRACK Expression RBRACK','Index',3,'p_index','parser.py',712),
  ('Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK','Slice',5,'p_slice','parser.py',717),
  ('Arguments -> LPAREN ExpressionListTypeOpt RPAREN','Arguments',3,'p_argument','parser.py',731),
  ('ExpressionListTypeOpt -> ExpressionList','ExpressionListTypeOpt',1,'p_expr_list_type_opt','parser.py',737),
  ('ExpressionListTypeOpt -> epsilon','ExpressionListTypeOpt',1,'p_expr_list_type_opt','parser.py',738),
  ('ExpressionList -> Expression ExpressionRep','ExpressionList',2,'p_expr_list','parser.py',761),
  ('ExpressionRep -> ExpressionRep COMMA Expression','ExpressionRep',3,'p_expr_rep','parser.py',766),
  ('ExpressionRep -> epsilon','ExpressionRep',1,'p_expr_rep','parser.py',767),
  ('Expression -> UnaryExpr','Expression',1,'p_expression','parser.py',780),
  ('Expression -> Expression OROR Expression','Expression',3,'p_expression','parser.py',781),
  ('Expression -> Expression AMPAMP Expression','Expression',3,'p_expression','parser.py',782),
  ('Expression -> Expression EQEQ Expression','Expression',3,'p_expression','parser.py',783),
  ('Expression -> Expression NOTEQ Expression','Expression',3,'p_expression','parser.py',784),
  ('Expression -> Expression LESS Expression','Expression',3,'p_expression','parser.py',785),
  ('Expression -> Expression GREAT Expression','Expression',3,'p_expression','parser.py',786),
  ('Expression -> Expression LEQ Expression','Expression',3,'p_expression','parser.py',787),
  ('Expression -> Expression GEQ Expression','Expression',3,'p_expression','parser.py',788),
  ('Expression -> Expression PLUS Expression','Expression',3,'p_expression','parser.py',789),
  ('Expression -> Expression MINUS Expression','Expression',3,'p_expression','parser.py',790),
  ('Expression -> Expression OR Expression','Expression',3,'p_expression','parser.py',791),
  ('Expression -> Expression CARET Expression','Expression',3,'p_expression','parser.py',792),
  ('Expression -> Expression TIMES Expression','Expression',3,'p_expression','parser.py',793),
  ('Expression -> Expression DIVIDE Expression','Expression',3,'p_expression','parser.py',794),
  ('Expression -> Expression MOD Expression','Expression',3,'p_expression','parser.py',795),
  ('Expression -> Expression AMPERS Expression','Expression',3,'p_expression','parser.py',796),
  ('Expression -> Expression LL Expression','Expression',3,'p_expression','parser.py',797),
  ('Expression -> Expression GG Expression','Expression',3,'p_expression','parser.py',798),
  ('Expression -> Expression AMPCAR Expression','Expression',3,'p_expression','parser.py',799),
  ('ExpressionOpt -> Expression','ExpressionOpt',1,'p_expr_opt','parser.py',869),
  ('ExpressionOpt -> epsilon','ExpressionOpt',1,'p_expr_opt','parser.py',870),
  ('UnaryExpr -> PrimaryExpr','UnaryExpr',1,'p_unary_expr','parser.py',877),
  ('UnaryExpr -> UnaryOp UnaryExpr','UnaryExpr',2,'p_unary_expr','parser.py',878),
  ('UnaryOp -> PLUS','UnaryOp',1,'p_unary_op','parser.py',906),
  ('UnaryOp -> MINUS','UnaryOp',1,'p_unary_op','parser.py',907),
  ('UnaryOp -> TIMES','UnaryOp',1,'p_unary_op','parser.py',908),
  ('UnaryOp -> AMPERS','UnaryOp',1,'p_unary_op','parser.py',909),
  ('UnaryOp -> NOT','UnaryOp',1,'p_unary_op','parser.py',910),
  ('Statement -> Declaration','Statement',1,'p_statement','parser.py',919),
  ('Statement -> LabeledStmt','Statement',1,'p_statement','parser.py',920),
  ('Statement -> SimpleStmt','Statement',1,'p_statement','parser.py',921),
  ('Statement -> ReturnStmt','Statement',1,'p_statement','parser.py',922),
  ('Statement -> BreakStmt','Statement',1,'p_statement','parser.py',923),
  ('Statement -> ContinueStmt','Statement',1,'p_statement','parser.py',924),
  ('Statement -> GotoStmt','Statement',1,'p_statement','parser.py',925),
  ('Statement -> Block','Statement',1,'p_statement','parser.py',926),
  ('Statement -> IfStmt','Statement',1,'p_statement','parser.py',927),
  ('Statement -> ForStmt','Statement',1,'p_statement','parser.py',928),
  ('SimpleStmt -> epsilon','SimpleStmt',1,'p_simple_stmt','parser.py',939),
  ('SimpleStmt -> ExpressionStmt','SimpleStmt',1,'p_simple_stmt','parser.py',940),
  ('SimpleStmt -> IncDecStmt','SimpleStmt',1,'p_simple_stmt','parser.py',941),
  ('SimpleStmt -> Assignment','SimpleStmt',1,'p_simple_stmt','parser.py',942),
  ('SimpleStmt -> ShortVarDecl','SimpleStmt',1,'p_simple_stmt','parser.py',943),
  ('LabeledStmt -> Label COLON Statement','LabeledStmt',3,'p_labeled_statements','parser.py',950),
  ('Label -> IDENTIFIER','Label',1,'p_label','parser.py',957),
  ('ExpressionStmt -> Expression','ExpressionStmt',1,'p_expression_stmt','parser.py',961),
  ('IncDecStmt -> PrimaryExpr PLUSPLUS','IncDecStmt',2,'p_inc_dec','parser.py',965),
  ('IncDecStmt -> PrimaryExpr MINUSMIN','IncDecStmt',2,'p_inc_dec','parser.py',966),
  ('Assignment -> ExpressionList assign_op ExpressionList','Assignment',3,'p_assignment','parser.py',980),
  ('assign_op -> AssignOp','assign_op',1,'p_assign_op','parser.py',1004),
  ('AssignOp -> PLUSEQ','AssignOp',1,'p_AssignOp','parser.py',1008),
  ('AssignOp -> MINUSEQ','AssignOp',1,'p_AssignOp','parser.py',1009),
  ('AssignOp -> TIMESEQ','AssignOp',1,'p_AssignOp','parser.py',1010),
  ('AssignOp -> DIVIDEEQ','AssignOp',1,'p_AssignOp','parser.py',1011),
  ('AssignOp -> MODEQ','AssignOp',1,'p_AssignOp','parser.py',1012),
  ('AssignOp -> AMPEQ','AssignOp',1,'p_AssignOp','parser.py',1013),
  ('AssignOp -> OREQ','AssignOp',1,'p_AssignOp','parser.py',1014),
  ('AssignOp -> CAREQ','AssignOp',1,'p_AssignOp','parser.py',1015),
  ('AssignOp -> LLEQ','AssignOp',1,'p_AssignOp','parser.py',1016),
  ('AssignOp -> GGEQ','AssignOp',1,'p_AssignOp','parser.py',1017),
  ('AssignOp -> EQUAL','AssignOp',1,'p_AssignOp','parser.py',1018),
  ('IfStmt -> IF Expression Block ElseOpt','IfStmt',4,'p_if_statement','parser.py',1027),
  ('ElseOpt -> ELSE IfStmt','ElseOpt',2,'p_else_opt','parser.py',1054),
  ('ElseOpt -> ELSE Block','ElseOpt',2,'p_else_opt','parser.py',1055),
  ('ElseOpt -> epsilon','ElseOpt',1,'p_else_opt','parser.py',1056),
  ('ForStmt -> FOR ConditionBlockOpt Block','ForStmt',3,'p_for','parser.py',1152),
  ('ConditionBlockOpt -> epsilon','ConditionBlockOpt',1,'p_conditionblockopt','parser.py',1173),
  ('ConditionBlockOpt -> Condition','ConditionBlockOpt',1,'p_conditionblockopt','parser.py',1174),
  ('ConditionBlockOpt -> ForClause','ConditionBlockOpt',1,'p_conditionblockopt','parser.py',1175),
  ('Condition -> Expression','Condition',1,'p_condition','parser.py',1183),
  ('ForClause -> SimpleStmt SEMICOL ConditionOpt SEMICOL SimpleStmt','ForClause',5,'p_forclause','parser.py',1187),
  ('ConditionOpt -> epsilon','ConditionOpt',1,'p_conditionopt','parser.py',1195),
  ('ConditionOpt -> Condition','ConditionOpt',1,'p_conditionopt','parser.py',1196),
  ('RangeClause -> ExpressionIdentListOpt RANGE Expression','RangeClause',3,'p_rageclause','parser.py',1203),
  ('ExpressionIdentListOpt -> epsilon','ExpressionIdentListOpt',1,'p_expression_ident_listopt','parser.py',1207),
  ('ExpressionIdentListOpt -> ExpressionIdentifier','ExpressionIdentListOpt',1,'p_expression_ident_listopt','parser.py',1208),
  ('ExpressionIdentifier -> ExpressionList EQUAL','ExpressionIdentifier',2,'p_expressionidentifier','parser.py',1212),
  ('ReturnStmt -> RETURN ExpressionListPureOpt','ReturnStmt',2,'p_return','parser.py',1225),
  ('ExpressionListPureOpt -> ExpressionList','ExpressionListPureOpt',1,'p_expressionlist_pure_opt','parser.py',1231),
  ('ExpressionListPureOpt -> epsilon','ExpressionListPureOpt',1,'p_expressionlist_pure_opt','parser.py',1232),
  ('BreakStmt -> BREAK LabelOpt','BreakStmt',2,'p_break','parser.py',1239),
  ('ContinueStmt -> CONTINUE LabelOpt','ContinueStmt',2,'p_continue','parser.py',1245),
  ('LabelOpt -> Label','LabelOpt',1,'p_labelopt','parser.py',1251),
  ('LabelOpt -> epsilon','LabelOpt',1,'p_labelopt','parser.py',1252),
  ('GotoStmt -> GOTO Label','GotoStmt',2,'p_goto','parser.py',1259),
  ('Source -> PackageClause SEMICOL ImportDeclRep TopLevelDeclRep','Source',4,'p_source_file','parser.py',1270),
  ('ImportDeclRep -> epsilon','ImportDeclRep',1,'p_import_decl_rep','parser.py',1280),
  ('ImportDeclRep -> ImportDeclRep ImportDecl SEMICOL','ImportDeclRep',3,'p_import_decl_rep','parser.py',1281),
  ('TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOL','TopLevelDeclRep',3,'p_toplevel_decl_rep','parser.py',1289),
  ('TopLevelDeclRep -> epsilon','TopLevelDeclRep',1,'p_toplevel_decl_rep','parser.py',1290),
  ('PackageClause -> PACKAGE PackageName','PackageClause',2,'p_package_clause','parser.py',1302),
  ('PackageName -> IDENTIFIER','PackageName',1,'p_package_name','parser.py',1308),
  ('ImportDecl -> IMPORT ImportSpec','ImportDecl',2,'p_import_decl','parser.py',1317),
  ('ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN','ImportDecl',4,'p_import_decl','parser.py',1318),
  ('ImportSpecRep -> ImportSpecRep ImportSpec SEMICOL','ImportSpecRep',3,'p_import_spec_rep','parser.py',1327),
  ('ImportSpecRep -> epsilon','ImportSpecRep',1,'p_import_spec_rep','parser.py',1328),
  ('ImportSpec -> PackageNameDotOpt ImportPath','ImportSpec',2,'p_import_spec','parser.py',1336),
  ('PackageNameDotOpt -> DOT','PackageNameDotOpt',1,'p_package_name_dot_opt','parser.py',1342),
  ('PackageNameDotOpt -> PackageName','PackageNameDotOpt',1,'p_package_name_dot_opt','parser.py',1343),
  ('PackageNameDotOpt -> epsilon','PackageNameDotOpt',1,'p_package_name_dot_opt','parser.py',1344),
  ('ImportPath -> STRING','ImportPath',1,'p_import_path','parser.py',1351),
  ('epsilon -> <empty>','epsilon',0,'p_empty','parser.py',1360),
]
