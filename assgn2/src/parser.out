Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CHAN
    CONSTANT
    DEFER
    FALLTHROUGH
    SELECT
    LMINUS
    AMPCAREQ
    GO
    DDD
    MAP
    INTERFACE

Grammar

Rule 0     S' -> start
Rule 1     start -> Source
Rule 2     Type -> TypeName
Rule 3     Type -> TypeLit
Rule 4     Type -> LPAREN Type RPAREN
Rule 5     TypeName -> TYPEX
Rule 6     TypeLit -> ArrayType
Rule 7     TypeLit -> StructType
Rule 8     TypeLit -> PointerType
Rule 9     TypeLit -> FunctionType
Rule 10    TypeOpt -> Type
Rule 11    TypeOpt -> epsilon
Rule 12    ArrayType -> LBRACK ArrayLength RBRACK ElementType
Rule 13    ArrayLength -> Expression
Rule 14    ElementType -> Type
Rule 15    StructType -> STRUCT LBRACE FieldDeclRep RBRACE
Rule 16    FieldDeclRep -> FieldDeclRep FieldDecl SEMICOL
Rule 17    FieldDeclRep -> epsilon
Rule 18    FieldDecl -> IdentifierList Type TagOpt
Rule 19    TagOpt -> Tag
Rule 20    TagOpt -> epsilon
Rule 21    Tag -> STRING
Rule 22    PointerType -> TIMES BaseType
Rule 23    BaseType -> Type
Rule 24    FunctionType -> FUNC Signature
Rule 25    Signature -> Parameters ResultOpt
Rule 26    ResultOpt -> Result
Rule 27    ResultOpt -> epsilon
Rule 28    Result -> Parameters
Rule 29    Result -> Type
Rule 30    Parameters -> LPAREN ParameterListOpt RPAREN
Rule 31    ParameterListOpt -> ParametersList
Rule 32    ParameterListOpt -> epsilon
Rule 33    ParametersList -> Type
Rule 34    ParametersList -> IdentifierList Type
Rule 35    ParametersList -> ParameterDeclCommaRep
Rule 36    ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA ParameterDecl
Rule 37    ParameterDeclCommaRep -> ParameterDecl COMMA ParameterDecl
Rule 38    ParameterDecl -> IdentifierList Type
Rule 39    ParameterDecl -> Type
Rule 40    Block -> LBRACE StatementList RBRACE
Rule 41    StatementList -> StatementRep
Rule 42    StatementRep -> StatementRep Statement SEMICOL
Rule 43    StatementRep -> epsilon
Rule 44    Declaration -> ConstDecl
Rule 45    Declaration -> TypeDecl
Rule 46    Declaration -> VarDecl
Rule 47    TopLevelDecl -> Declaration
Rule 48    TopLevelDecl -> FunctionDecl
Rule 49    ConstDecl -> CONST ConstSpec
Rule 50    ConstDecl -> CONST LPAREN ConstSpecRep RPAREN
Rule 51    ConstSpecRep -> ConstSpecRep ConstSpec SEMICOL
Rule 52    ConstSpecRep -> epsilon
Rule 53    ConstSpec -> IdentifierList TypeExprListOpt
Rule 54    TypeExprListOpt -> TypeOpt EQUAL ExpressionList
Rule 55    TypeExprListOpt -> epsilon
Rule 56    IdentifierList -> IDENTIFIER IdentifierRep
Rule 57    IdentifierRep -> IdentifierRep COMMA IDENTIFIER
Rule 58    IdentifierRep -> epsilon
Rule 59    TypeDecl -> TYPE TypeSpec
Rule 60    TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN
Rule 61    TypeSpecRep -> TypeSpecRep TypeSpec SEMICOL
Rule 62    TypeSpecRep -> epsilon
Rule 63    TypeSpec -> AliasDecl
Rule 64    TypeSpec -> TypeDef
Rule 65    AliasDecl -> IDENTIFIER EQUAL Type
Rule 66    TypeDef -> IDENTIFIER Type
Rule 67    VarDecl -> VAR VarSpec
Rule 68    VarDecl -> VAR LPAREN VarSpecRep RPAREN
Rule 69    VarSpecRep -> VarSpecRep VarSpec SEMICOL
Rule 70    VarSpecRep -> epsilon
Rule 71    VarSpec -> IdentifierList Type ExpressionListOpt
Rule 72    VarSpec -> IdentifierList EQUAL ExpressionList
Rule 73    ExpressionListOpt -> EQUAL ExpressionList
Rule 74    ExpressionListOpt -> epsilon
Rule 75    ShortVarDecl -> IDENTIFIER COLONEQ Expression
Rule 76    FunctionDecl -> FUNC FunctionName Function
Rule 77    FunctionDecl -> FUNC FunctionName Signature
Rule 78    FunctionName -> IDENTIFIER
Rule 79    Function -> Signature FunctionBody
Rule 80    FunctionBody -> Block
Rule 81    Operand -> Literal
Rule 82    Operand -> OperandName
Rule 83    Operand -> LPAREN Expression RPAREN
Rule 84    Literal -> BasicLit
Rule 85    BasicLit -> INTEGER
Rule 86    BasicLit -> FLOAT
Rule 87    BasicLit -> IMAGINARY
Rule 88    BasicLit -> RUNE
Rule 89    BasicLit -> STRING
Rule 90    OperandName -> IDENTIFIER
Rule 91    Conversion -> Type LPAREN Expression RPAREN
Rule 92    PrimaryExpr -> Operand
Rule 93    PrimaryExpr -> Conversion
Rule 94    PrimaryExpr -> PrimaryExpr Selector
Rule 95    PrimaryExpr -> PrimaryExpr Index
Rule 96    PrimaryExpr -> PrimaryExpr Slice
Rule 97    PrimaryExpr -> PrimaryExpr Arguments
Rule 98    Selector -> DOT IDENTIFIER
Rule 99    Index -> LBRACK Expression RBRACK
Rule 100   Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK
Rule 101   Arguments -> LPAREN ExpressionListTypeOpt RPAREN
Rule 102   ExpressionListTypeOpt -> ExpressionList
Rule 103   ExpressionListTypeOpt -> epsilon
Rule 104   ExpressionList -> Expression ExpressionRep
Rule 105   ExpressionRep -> ExpressionRep COMMA Expression
Rule 106   ExpressionRep -> epsilon
Rule 107   Expression -> UnaryExpr
Rule 108   Expression -> Expression AddOp Term
Rule 109   Expression -> Expression AddOp UnaryExpr
Rule 110   Expression -> Term
Rule 111   Term -> Term MulOp Term
Rule 112   Term -> UnaryExpr MulOp UnaryExpr
Rule 113   ExpressionOpt -> Expression
Rule 114   ExpressionOpt -> epsilon
Rule 115   UnaryExpr -> PrimaryExpr
Rule 116   UnaryExpr -> UnaryOp UnaryExpr
Rule 117   BinaryOp -> OROR
Rule 118   BinaryOp -> AMPAMP
Rule 119   BinaryOp -> RelOp
Rule 120   BinaryOp -> AddOp
Rule 121   BinaryOp -> MulOp
Rule 122   RelOp -> EQEQ
Rule 123   RelOp -> NOTEQ
Rule 124   RelOp -> LESS
Rule 125   RelOp -> GREAT
Rule 126   RelOp -> LEQ
Rule 127   RelOp -> GEQ
Rule 128   AddOp -> PLUS
Rule 129   AddOp -> MINUS
Rule 130   AddOp -> OR
Rule 131   AddOp -> CARET
Rule 132   MulOp -> TIMES
Rule 133   MulOp -> DIVIDE
Rule 134   MulOp -> MOD
Rule 135   MulOp -> AMPERS
Rule 136   MulOp -> LL
Rule 137   MulOp -> GG
Rule 138   MulOp -> AMPCAR
Rule 139   UnaryOp -> PLUS
Rule 140   UnaryOp -> MINUS
Rule 141   UnaryOp -> TIMES
Rule 142   UnaryOp -> AMPERS
Rule 143   UnaryOp -> NOT
Rule 144   Statement -> Declaration
Rule 145   Statement -> LabeledStmt
Rule 146   Statement -> SimpleStmt
Rule 147   Statement -> ReturnStmt
Rule 148   Statement -> BreakStmt
Rule 149   Statement -> ContinueStmt
Rule 150   Statement -> GotoStmt
Rule 151   Statement -> Block
Rule 152   Statement -> IfStmt
Rule 153   Statement -> SwitchStmt
Rule 154   Statement -> ForStmt
Rule 155   SimpleStmt -> epsilon
Rule 156   SimpleStmt -> ExpressionStmt
Rule 157   SimpleStmt -> IncDecStmt
Rule 158   SimpleStmt -> Assignment
Rule 159   SimpleStmt -> ShortVarDecl
Rule 160   LabeledStmt -> Label COLON Statement
Rule 161   Label -> IDENTIFIER
Rule 162   ExpressionStmt -> Expression
Rule 163   IncDecStmt -> Expression PLUSPLUS
Rule 164   IncDecStmt -> Expression MINUSMIN
Rule 165   Assignment -> ExpressionList assign_op ExpressionList
Rule 166   assign_op -> AssignOp
Rule 167   AssignOp -> PLUSEQ
Rule 168   AssignOp -> MINUSEQ
Rule 169   AssignOp -> TIMESEQ
Rule 170   AssignOp -> DIVIDEEQ
Rule 171   AssignOp -> MODEQ
Rule 172   AssignOp -> AMPEQ
Rule 173   AssignOp -> OREQ
Rule 174   AssignOp -> CAREQ
Rule 175   AssignOp -> LLEQ
Rule 176   AssignOp -> GGEQ
Rule 177   AssignOp -> EQUAL
Rule 178   IfStmt -> IF Expression Block ElseOpt
Rule 179   SimpleStmtOpt -> SimpleStmt SEMICOL
Rule 180   SimpleStmtOpt -> epsilon
Rule 181   ElseOpt -> ELSE IfStmt
Rule 182   ElseOpt -> ELSE Block
Rule 183   ElseOpt -> epsilon
Rule 184   SwitchStmt -> ExprSwitchStmt
Rule 185   SwitchStmt -> TypeSwitchStmt
Rule 186   ExprSwitchStmt -> SWITCH ExpressionOpt LBRACE ExprCaseClauseRep RBRACE
Rule 187   ExprCaseClauseRep -> ExprCaseClauseRep ExprCaseClause
Rule 188   ExprCaseClauseRep -> epsilon
Rule 189   ExprCaseClause -> ExprSwitchCase COLON StatementList
Rule 190   ExprSwitchCase -> CASE ExpressionList
Rule 191   ExprSwitchCase -> DEFAULT
Rule 192   TypeSwitchStmt -> SWITCH SimpleStmtOpt TypeSwitchGuard LBRACE TypeCaseClauseOpt RBRACE
Rule 193   TypeSwitchGuard -> IdentifierOpt PrimaryExpr DOT LPAREN TYPE RPAREN
Rule 194   IdentifierOpt -> IDENTIFIER COLONEQ
Rule 195   IdentifierOpt -> epsilon
Rule 196   TypeCaseClauseOpt -> TypeCaseClauseOpt TypeCaseClause
Rule 197   TypeCaseClauseOpt -> epsilon
Rule 198   TypeCaseClause -> TypeSwitchCase COLON StatementList
Rule 199   TypeSwitchCase -> CASE TypeList
Rule 200   TypeSwitchCase -> DEFAULT
Rule 201   TypeList -> Type TypeRep
Rule 202   TypeRep -> TypeRep COMMA Type
Rule 203   TypeRep -> epsilon
Rule 204   ForStmt -> FOR ConditionBlockOpt Block
Rule 205   ConditionBlockOpt -> epsilon
Rule 206   ConditionBlockOpt -> Condition
Rule 207   ConditionBlockOpt -> ForClause
Rule 208   Condition -> Expression
Rule 209   ForClause -> SimpleStmt SEMICOL ConditionOpt SEMICOL SimpleStmt
Rule 210   ConditionOpt -> epsilon
Rule 211   ConditionOpt -> Condition
Rule 212   RangeClause -> ExpressionIdentListOpt RANGE Expression
Rule 213   ExpressionIdentListOpt -> epsilon
Rule 214   ExpressionIdentListOpt -> ExpressionIdentifier
Rule 215   ExpressionIdentifier -> ExpressionList EQUAL
Rule 216   ReturnStmt -> RETURN ExpressionListPureOpt
Rule 217   ExpressionListPureOpt -> ExpressionList
Rule 218   ExpressionListPureOpt -> epsilon
Rule 219   BreakStmt -> BREAK LabelOpt
Rule 220   ContinueStmt -> CONTINUE LabelOpt
Rule 221   LabelOpt -> Label
Rule 222   LabelOpt -> epsilon
Rule 223   GotoStmt -> GOTO Label
Rule 224   Source -> PackageClause SEMICOL ImportDeclRep TopLevelDeclRep
Rule 225   ImportDeclRep -> epsilon
Rule 226   ImportDeclRep -> ImportDeclRep ImportDecl SEMICOL
Rule 227   TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOL
Rule 228   TopLevelDeclRep -> epsilon
Rule 229   PackageClause -> PACKAGE PackageName
Rule 230   PackageName -> IDENTIFIER
Rule 231   ImportDecl -> IMPORT ImportSpec
Rule 232   ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN
Rule 233   ImportSpecRep -> ImportSpecRep ImportSpec SEMICOL
Rule 234   ImportSpecRep -> epsilon
Rule 235   ImportSpec -> PackageNameDotOpt ImportPath
Rule 236   PackageNameDotOpt -> DOT
Rule 237   PackageNameDotOpt -> PackageName
Rule 238   PackageNameDotOpt -> epsilon
Rule 239   ImportPath -> STRING
Rule 240   epsilon -> <empty>

Terminals, with rules where they appear

AMPAMP               : 118
AMPCAR               : 138
AMPCAREQ             : 
AMPEQ                : 172
AMPERS               : 135 142
BREAK                : 219
CAREQ                : 174
CARET                : 131
CASE                 : 190 199
CHAN                 : 
COLON                : 100 160 189 198
COLONEQ              : 75 194
COMMA                : 36 37 57 105 202
CONST                : 49 50
CONSTANT             : 
CONTINUE             : 220
DDD                  : 
DEFAULT              : 191 200
DEFER                : 
DIVIDE               : 133
DIVIDEEQ             : 170
DOT                  : 98 193 236
ELSE                 : 181 182
EQEQ                 : 122
EQUAL                : 54 65 72 73 177 215
FALLTHROUGH          : 
FLOAT                : 86
FOR                  : 204
FUNC                 : 24 76 77
GEQ                  : 127
GG                   : 137
GGEQ                 : 176
GO                   : 
GOTO                 : 223
GREAT                : 125
IDENTIFIER           : 56 57 65 66 75 78 90 98 161 194 230
IF                   : 178
IMAGINARY            : 87
IMPORT               : 231 232
INTEGER              : 85
INTERFACE            : 
LBRACE               : 15 40 186 192
LBRACK               : 12 99 100
LEQ                  : 126
LESS                 : 124
LL                   : 136
LLEQ                 : 175
LMINUS               : 
LPAREN               : 4 30 50 60 68 83 91 101 193 232
MAP                  : 
MINUS                : 129 140
MINUSEQ              : 168
MINUSMIN             : 164
MOD                  : 134
MODEQ                : 171
NOT                  : 143
NOTEQ                : 123
OR                   : 130
OREQ                 : 173
OROR                 : 117
PACKAGE              : 229
PLUS                 : 128 139
PLUSEQ               : 167
PLUSPLUS             : 163
RANGE                : 212
RBRACE               : 15 40 186 192
RBRACK               : 12 99 100
RETURN               : 216
RPAREN               : 4 30 50 60 68 83 91 101 193 232
RUNE                 : 88
SELECT               : 
SEMICOL              : 16 42 51 61 69 179 209 209 224 226 227 233
STRING               : 21 89 239
STRUCT               : 15
SWITCH               : 186 192
TIMES                : 22 132 141
TIMESEQ              : 169
TYPE                 : 59 60 193
TYPEX                : 5
VAR                  : 67 68
error                : 

Nonterminals, with rules where they appear

AddOp                : 108 109 120
AliasDecl            : 63
Arguments            : 97
ArrayLength          : 12
ArrayType            : 6
AssignOp             : 166
Assignment           : 158
BaseType             : 22
BasicLit             : 84
BinaryOp             : 
Block                : 80 151 178 182 204
BreakStmt            : 148
Condition            : 206 211
ConditionBlockOpt    : 204
ConditionOpt         : 209
ConstDecl            : 44
ConstSpec            : 49 51
ConstSpecRep         : 50 51
ContinueStmt         : 149
Conversion           : 93
Declaration          : 47 144
ElementType          : 12
ElseOpt              : 178
ExprCaseClause       : 187
ExprCaseClauseRep    : 186 187
ExprSwitchCase       : 189
ExprSwitchStmt       : 184
Expression           : 13 75 83 91 99 104 105 108 109 113 162 163 164 178 208 212
ExpressionIdentListOpt : 212
ExpressionIdentifier : 214
ExpressionList       : 54 72 73 102 165 165 190 215 217
ExpressionListOpt    : 71
ExpressionListPureOpt : 216
ExpressionListTypeOpt : 101
ExpressionOpt        : 100 100 186
ExpressionRep        : 104 105
ExpressionStmt       : 156
FieldDecl            : 16
FieldDeclRep         : 15 16
ForClause            : 207
ForStmt              : 154
Function             : 76
FunctionBody         : 79
FunctionDecl         : 48
FunctionName         : 76 77
FunctionType         : 9
GotoStmt             : 150
IdentifierList       : 18 34 38 53 71 72
IdentifierOpt        : 193
IdentifierRep        : 56 57
IfStmt               : 152 181
ImportDecl           : 226
ImportDeclRep        : 224 226
ImportPath           : 235
ImportSpec           : 231 233
ImportSpecRep        : 232 233
IncDecStmt           : 157
Index                : 95
Label                : 160 221 223
LabelOpt             : 219 220
LabeledStmt          : 145
Literal              : 81
MulOp                : 111 112 121
Operand              : 92
OperandName          : 82
PackageClause        : 224
PackageName          : 229 237
PackageNameDotOpt    : 235
ParameterDecl        : 36 37 37
ParameterDeclCommaRep : 35 36
ParameterListOpt     : 30
Parameters           : 25 28
ParametersList       : 31
PointerType          : 8
PrimaryExpr          : 94 95 96 97 115 193
RangeClause          : 
RelOp                : 119
Result               : 26
ResultOpt            : 25
ReturnStmt           : 147
Selector             : 94
ShortVarDecl         : 159
Signature            : 24 77 79
SimpleStmt           : 146 179 209 209
SimpleStmtOpt        : 192
Slice                : 96
Source               : 1
Statement            : 42 160
StatementList        : 40 189 198
StatementRep         : 41 42
StructType           : 7
SwitchStmt           : 153
Tag                  : 19
TagOpt               : 18
Term                 : 108 110 111 111
TopLevelDecl         : 227
TopLevelDeclRep      : 224 227
Type                 : 4 10 14 18 23 29 33 34 38 39 65 66 71 91 201 202
TypeCaseClause       : 196
TypeCaseClauseOpt    : 192 196
TypeDecl             : 45
TypeDef              : 64
TypeExprListOpt      : 53
TypeList             : 199
TypeLit              : 3
TypeName             : 2
TypeOpt              : 54
TypeRep              : 201 202
TypeSpec             : 59 61
TypeSpecRep          : 60 61
TypeSwitchCase       : 198
TypeSwitchGuard      : 192
TypeSwitchStmt       : 185
UnaryExpr            : 107 109 112 112 116
UnaryOp              : 116
VarDecl              : 46
VarSpec              : 67 69
VarSpecRep           : 68 69
assign_op            : 165
epsilon              : 11 17 20 27 32 43 52 55 58 62 70 74 103 106 114 155 180 183 188 195 197 203 205 210 213 218 222 225 228 234 238
start                : 0

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . Source
    (224) Source -> . PackageClause SEMICOL ImportDeclRep TopLevelDeclRep
    (229) PackageClause -> . PACKAGE PackageName

    PACKAGE         shift and go to state 2

    PackageClause                  shift and go to state 1
    Source                         shift and go to state 3
    start                          shift and go to state 4

state 1

    (224) Source -> PackageClause . SEMICOL ImportDeclRep TopLevelDeclRep

    SEMICOL         shift and go to state 5


state 2

    (229) PackageClause -> PACKAGE . PackageName
    (230) PackageName -> . IDENTIFIER

    IDENTIFIER      shift and go to state 7

    PackageName                    shift and go to state 6

state 3

    (1) start -> Source .

    $end            reduce using rule 1 (start -> Source .)


state 4

    (0) S' -> start .



state 5

    (224) Source -> PackageClause SEMICOL . ImportDeclRep TopLevelDeclRep
    (225) ImportDeclRep -> . epsilon
    (226) ImportDeclRep -> . ImportDeclRep ImportDecl SEMICOL
    (240) epsilon -> .

    IMPORT          reduce using rule 240 (epsilon -> .)
    FUNC            reduce using rule 240 (epsilon -> .)
    CONST           reduce using rule 240 (epsilon -> .)
    TYPE            reduce using rule 240 (epsilon -> .)
    VAR             reduce using rule 240 (epsilon -> .)
    $end            reduce using rule 240 (epsilon -> .)

    ImportDeclRep                  shift and go to state 9
    epsilon                        shift and go to state 8

state 6

    (229) PackageClause -> PACKAGE PackageName .

    SEMICOL         reduce using rule 229 (PackageClause -> PACKAGE PackageName .)


state 7

    (230) PackageName -> IDENTIFIER .

    STRING          reduce using rule 230 (PackageName -> IDENTIFIER .)
    SEMICOL         reduce using rule 230 (PackageName -> IDENTIFIER .)


state 8

    (225) ImportDeclRep -> epsilon .

    IMPORT          reduce using rule 225 (ImportDeclRep -> epsilon .)
    FUNC            reduce using rule 225 (ImportDeclRep -> epsilon .)
    CONST           reduce using rule 225 (ImportDeclRep -> epsilon .)
    TYPE            reduce using rule 225 (ImportDeclRep -> epsilon .)
    VAR             reduce using rule 225 (ImportDeclRep -> epsilon .)
    $end            reduce using rule 225 (ImportDeclRep -> epsilon .)


state 9

    (224) Source -> PackageClause SEMICOL ImportDeclRep . TopLevelDeclRep
    (226) ImportDeclRep -> ImportDeclRep . ImportDecl SEMICOL
    (227) TopLevelDeclRep -> . TopLevelDeclRep TopLevelDecl SEMICOL
    (228) TopLevelDeclRep -> . epsilon
    (231) ImportDecl -> . IMPORT ImportSpec
    (232) ImportDecl -> . IMPORT LPAREN ImportSpecRep RPAREN
    (240) epsilon -> .

    IMPORT          shift and go to state 13
    FUNC            reduce using rule 240 (epsilon -> .)
    CONST           reduce using rule 240 (epsilon -> .)
    TYPE            reduce using rule 240 (epsilon -> .)
    VAR             reduce using rule 240 (epsilon -> .)
    $end            reduce using rule 240 (epsilon -> .)

    TopLevelDeclRep                shift and go to state 10
    epsilon                        shift and go to state 11
    ImportDecl                     shift and go to state 12

state 10

    (224) Source -> PackageClause SEMICOL ImportDeclRep TopLevelDeclRep .
    (227) TopLevelDeclRep -> TopLevelDeclRep . TopLevelDecl SEMICOL
    (47) TopLevelDecl -> . Declaration
    (48) TopLevelDecl -> . FunctionDecl
    (44) Declaration -> . ConstDecl
    (45) Declaration -> . TypeDecl
    (46) Declaration -> . VarDecl
    (76) FunctionDecl -> . FUNC FunctionName Function
    (77) FunctionDecl -> . FUNC FunctionName Signature
    (49) ConstDecl -> . CONST ConstSpec
    (50) ConstDecl -> . CONST LPAREN ConstSpecRep RPAREN
    (59) TypeDecl -> . TYPE TypeSpec
    (60) TypeDecl -> . TYPE LPAREN TypeSpecRep RPAREN
    (67) VarDecl -> . VAR VarSpec
    (68) VarDecl -> . VAR LPAREN VarSpecRep RPAREN

    $end            reduce using rule 224 (Source -> PackageClause SEMICOL ImportDeclRep TopLevelDeclRep .)
    FUNC            shift and go to state 20
    CONST           shift and go to state 14
    TYPE            shift and go to state 23
    VAR             shift and go to state 21

    TypeDecl                       shift and go to state 19
    VarDecl                        shift and go to state 22
    FunctionDecl                   shift and go to state 15
    TopLevelDecl                   shift and go to state 16
    Declaration                    shift and go to state 17
    ConstDecl                      shift and go to state 18

state 11

    (228) TopLevelDeclRep -> epsilon .

    FUNC            reduce using rule 228 (TopLevelDeclRep -> epsilon .)
    CONST           reduce using rule 228 (TopLevelDeclRep -> epsilon .)
    TYPE            reduce using rule 228 (TopLevelDeclRep -> epsilon .)
    VAR             reduce using rule 228 (TopLevelDeclRep -> epsilon .)
    $end            reduce using rule 228 (TopLevelDeclRep -> epsilon .)


state 12

    (226) ImportDeclRep -> ImportDeclRep ImportDecl . SEMICOL

    SEMICOL         shift and go to state 24


state 13

    (231) ImportDecl -> IMPORT . ImportSpec
    (232) ImportDecl -> IMPORT . LPAREN ImportSpecRep RPAREN
    (235) ImportSpec -> . PackageNameDotOpt ImportPath
    (236) PackageNameDotOpt -> . DOT
    (237) PackageNameDotOpt -> . PackageName
    (238) PackageNameDotOpt -> . epsilon
    (230) PackageName -> . IDENTIFIER
    (240) epsilon -> .

    LPAREN          shift and go to state 25
    DOT             shift and go to state 30
    IDENTIFIER      shift and go to state 7
    STRING          reduce using rule 240 (epsilon -> .)

    ImportSpec                     shift and go to state 26
    epsilon                        shift and go to state 27
    PackageName                    shift and go to state 28
    PackageNameDotOpt              shift and go to state 29

state 14

    (49) ConstDecl -> CONST . ConstSpec
    (50) ConstDecl -> CONST . LPAREN ConstSpecRep RPAREN
    (53) ConstSpec -> . IdentifierList TypeExprListOpt
    (56) IdentifierList -> . IDENTIFIER IdentifierRep

    LPAREN          shift and go to state 32
    IDENTIFIER      shift and go to state 34

    ConstSpec                      shift and go to state 31
    IdentifierList                 shift and go to state 33

state 15

    (48) TopLevelDecl -> FunctionDecl .

    SEMICOL         reduce using rule 48 (TopLevelDecl -> FunctionDecl .)


state 16

    (227) TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl . SEMICOL

    SEMICOL         shift and go to state 35


state 17

    (47) TopLevelDecl -> Declaration .

    SEMICOL         reduce using rule 47 (TopLevelDecl -> Declaration .)


state 18

    (44) Declaration -> ConstDecl .

    SEMICOL         reduce using rule 44 (Declaration -> ConstDecl .)


state 19

    (45) Declaration -> TypeDecl .

    SEMICOL         reduce using rule 45 (Declaration -> TypeDecl .)


state 20

    (76) FunctionDecl -> FUNC . FunctionName Function
    (77) FunctionDecl -> FUNC . FunctionName Signature
    (78) FunctionName -> . IDENTIFIER

    IDENTIFIER      shift and go to state 36

    FunctionName                   shift and go to state 37

state 21

    (67) VarDecl -> VAR . VarSpec
    (68) VarDecl -> VAR . LPAREN VarSpecRep RPAREN
    (71) VarSpec -> . IdentifierList Type ExpressionListOpt
    (72) VarSpec -> . IdentifierList EQUAL ExpressionList
    (56) IdentifierList -> . IDENTIFIER IdentifierRep

    LPAREN          shift and go to state 39
    IDENTIFIER      shift and go to state 34

    VarSpec                        shift and go to state 38
    IdentifierList                 shift and go to state 40

state 22

    (46) Declaration -> VarDecl .

    SEMICOL         reduce using rule 46 (Declaration -> VarDecl .)


state 23

    (59) TypeDecl -> TYPE . TypeSpec
    (60) TypeDecl -> TYPE . LPAREN TypeSpecRep RPAREN
    (63) TypeSpec -> . AliasDecl
    (64) TypeSpec -> . TypeDef
    (65) AliasDecl -> . IDENTIFIER EQUAL Type
    (66) TypeDef -> . IDENTIFIER Type

    LPAREN          shift and go to state 43
    IDENTIFIER      shift and go to state 45

    TypeSpec                       shift and go to state 44
    TypeDef                        shift and go to state 41
    AliasDecl                      shift and go to state 42

state 24

    (226) ImportDeclRep -> ImportDeclRep ImportDecl SEMICOL .

    IMPORT          reduce using rule 226 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOL .)
    FUNC            reduce using rule 226 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOL .)
    CONST           reduce using rule 226 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOL .)
    TYPE            reduce using rule 226 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOL .)
    VAR             reduce using rule 226 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOL .)
    $end            reduce using rule 226 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOL .)


state 25

    (232) ImportDecl -> IMPORT LPAREN . ImportSpecRep RPAREN
    (233) ImportSpecRep -> . ImportSpecRep ImportSpec SEMICOL
    (234) ImportSpecRep -> . epsilon
    (240) epsilon -> .

    RPAREN          reduce using rule 240 (epsilon -> .)
    DOT             reduce using rule 240 (epsilon -> .)
    IDENTIFIER      reduce using rule 240 (epsilon -> .)
    STRING          reduce using rule 240 (epsilon -> .)

    epsilon                        shift and go to state 46
    ImportSpecRep                  shift and go to state 47

state 26

    (231) ImportDecl -> IMPORT ImportSpec .

    SEMICOL         reduce using rule 231 (ImportDecl -> IMPORT ImportSpec .)


state 27

    (238) PackageNameDotOpt -> epsilon .

    STRING          reduce using rule 238 (PackageNameDotOpt -> epsilon .)


state 28

    (237) PackageNameDotOpt -> PackageName .

    STRING          reduce using rule 237 (PackageNameDotOpt -> PackageName .)


state 29

    (235) ImportSpec -> PackageNameDotOpt . ImportPath
    (239) ImportPath -> . STRING

    STRING          shift and go to state 49

    ImportPath                     shift and go to state 48

state 30

    (236) PackageNameDotOpt -> DOT .

    STRING          reduce using rule 236 (PackageNameDotOpt -> DOT .)


state 31

    (49) ConstDecl -> CONST ConstSpec .

    SEMICOL         reduce using rule 49 (ConstDecl -> CONST ConstSpec .)


state 32

    (50) ConstDecl -> CONST LPAREN . ConstSpecRep RPAREN
    (51) ConstSpecRep -> . ConstSpecRep ConstSpec SEMICOL
    (52) ConstSpecRep -> . epsilon
    (240) epsilon -> .

    RPAREN          reduce using rule 240 (epsilon -> .)
    IDENTIFIER      reduce using rule 240 (epsilon -> .)

    ConstSpecRep                   shift and go to state 50
    epsilon                        shift and go to state 51

state 33

    (53) ConstSpec -> IdentifierList . TypeExprListOpt
    (54) TypeExprListOpt -> . TypeOpt EQUAL ExpressionList
    (55) TypeExprListOpt -> . epsilon
    (10) TypeOpt -> . Type
    (11) TypeOpt -> . epsilon
    (240) epsilon -> .
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    SEMICOL         reduce using rule 240 (epsilon -> .)
    EQUAL           reduce using rule 240 (epsilon -> .)
    LPAREN          shift and go to state 61
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    TypeOpt                        shift and go to state 62
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    TypeLit                        shift and go to state 55
    TypeExprListOpt                shift and go to state 65
    epsilon                        shift and go to state 59
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    Type                           shift and go to state 54

state 34

    (56) IdentifierList -> IDENTIFIER . IdentifierRep
    (57) IdentifierRep -> . IdentifierRep COMMA IDENTIFIER
    (58) IdentifierRep -> . epsilon
    (240) epsilon -> .

    COMMA           reduce using rule 240 (epsilon -> .)
    LPAREN          reduce using rule 240 (epsilon -> .)
    TYPEX           reduce using rule 240 (epsilon -> .)
    LBRACK          reduce using rule 240 (epsilon -> .)
    STRUCT          reduce using rule 240 (epsilon -> .)
    TIMES           reduce using rule 240 (epsilon -> .)
    FUNC            reduce using rule 240 (epsilon -> .)
    EQUAL           reduce using rule 240 (epsilon -> .)
    SEMICOL         reduce using rule 240 (epsilon -> .)

    epsilon                        shift and go to state 68
    IdentifierRep                  shift and go to state 69

state 35

    (227) TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOL .

    FUNC            reduce using rule 227 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOL .)
    CONST           reduce using rule 227 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOL .)
    TYPE            reduce using rule 227 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOL .)
    VAR             reduce using rule 227 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOL .)
    $end            reduce using rule 227 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOL .)


state 36

    (78) FunctionName -> IDENTIFIER .

    LPAREN          reduce using rule 78 (FunctionName -> IDENTIFIER .)


state 37

    (76) FunctionDecl -> FUNC FunctionName . Function
    (77) FunctionDecl -> FUNC FunctionName . Signature
    (79) Function -> . Signature FunctionBody
    (25) Signature -> . Parameters ResultOpt
    (30) Parameters -> . LPAREN ParameterListOpt RPAREN

    LPAREN          shift and go to state 73

    Function                       shift and go to state 70
    Parameters                     shift and go to state 71
    Signature                      shift and go to state 72

state 38

    (67) VarDecl -> VAR VarSpec .

    SEMICOL         reduce using rule 67 (VarDecl -> VAR VarSpec .)


state 39

    (68) VarDecl -> VAR LPAREN . VarSpecRep RPAREN
    (69) VarSpecRep -> . VarSpecRep VarSpec SEMICOL
    (70) VarSpecRep -> . epsilon
    (240) epsilon -> .

    RPAREN          reduce using rule 240 (epsilon -> .)
    IDENTIFIER      reduce using rule 240 (epsilon -> .)

    VarSpecRep                     shift and go to state 74
    epsilon                        shift and go to state 75

state 40

    (71) VarSpec -> IdentifierList . Type ExpressionListOpt
    (72) VarSpec -> IdentifierList . EQUAL ExpressionList
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    EQUAL           shift and go to state 76
    LPAREN          shift and go to state 61
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    Type                           shift and go to state 77
    TypeLit                        shift and go to state 55
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67

state 41

    (64) TypeSpec -> TypeDef .

    SEMICOL         reduce using rule 64 (TypeSpec -> TypeDef .)


state 42

    (63) TypeSpec -> AliasDecl .

    SEMICOL         reduce using rule 63 (TypeSpec -> AliasDecl .)


state 43

    (60) TypeDecl -> TYPE LPAREN . TypeSpecRep RPAREN
    (61) TypeSpecRep -> . TypeSpecRep TypeSpec SEMICOL
    (62) TypeSpecRep -> . epsilon
    (240) epsilon -> .

    RPAREN          reduce using rule 240 (epsilon -> .)
    IDENTIFIER      reduce using rule 240 (epsilon -> .)

    TypeSpecRep                    shift and go to state 78
    epsilon                        shift and go to state 79

state 44

    (59) TypeDecl -> TYPE TypeSpec .

    SEMICOL         reduce using rule 59 (TypeDecl -> TYPE TypeSpec .)


state 45

    (65) AliasDecl -> IDENTIFIER . EQUAL Type
    (66) TypeDef -> IDENTIFIER . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    EQUAL           shift and go to state 80
    LPAREN          shift and go to state 61
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    Type                           shift and go to state 81
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    TypeLit                        shift and go to state 55

state 46

    (234) ImportSpecRep -> epsilon .

    RPAREN          reduce using rule 234 (ImportSpecRep -> epsilon .)
    DOT             reduce using rule 234 (ImportSpecRep -> epsilon .)
    IDENTIFIER      reduce using rule 234 (ImportSpecRep -> epsilon .)
    STRING          reduce using rule 234 (ImportSpecRep -> epsilon .)


state 47

    (232) ImportDecl -> IMPORT LPAREN ImportSpecRep . RPAREN
    (233) ImportSpecRep -> ImportSpecRep . ImportSpec SEMICOL
    (235) ImportSpec -> . PackageNameDotOpt ImportPath
    (236) PackageNameDotOpt -> . DOT
    (237) PackageNameDotOpt -> . PackageName
    (238) PackageNameDotOpt -> . epsilon
    (230) PackageName -> . IDENTIFIER
    (240) epsilon -> .

    RPAREN          shift and go to state 82
    DOT             shift and go to state 30
    IDENTIFIER      shift and go to state 7
    STRING          reduce using rule 240 (epsilon -> .)

    ImportSpec                     shift and go to state 83
    epsilon                        shift and go to state 27
    PackageName                    shift and go to state 28
    PackageNameDotOpt              shift and go to state 29

state 48

    (235) ImportSpec -> PackageNameDotOpt ImportPath .

    SEMICOL         reduce using rule 235 (ImportSpec -> PackageNameDotOpt ImportPath .)


state 49

    (239) ImportPath -> STRING .

    SEMICOL         reduce using rule 239 (ImportPath -> STRING .)


state 50

    (50) ConstDecl -> CONST LPAREN ConstSpecRep . RPAREN
    (51) ConstSpecRep -> ConstSpecRep . ConstSpec SEMICOL
    (53) ConstSpec -> . IdentifierList TypeExprListOpt
    (56) IdentifierList -> . IDENTIFIER IdentifierRep

    RPAREN          shift and go to state 85
    IDENTIFIER      shift and go to state 34

    ConstSpec                      shift and go to state 84
    IdentifierList                 shift and go to state 33

state 51

    (52) ConstSpecRep -> epsilon .

    RPAREN          reduce using rule 52 (ConstSpecRep -> epsilon .)
    IDENTIFIER      reduce using rule 52 (ConstSpecRep -> epsilon .)


state 52

    (24) FunctionType -> FUNC . Signature
    (25) Signature -> . Parameters ResultOpt
    (30) Parameters -> . LPAREN ParameterListOpt RPAREN

    LPAREN          shift and go to state 73

    Parameters                     shift and go to state 71
    Signature                      shift and go to state 86

state 53

    (6) TypeLit -> ArrayType .

    LPAREN          reduce using rule 6 (TypeLit -> ArrayType .)
    RPAREN          reduce using rule 6 (TypeLit -> ArrayType .)
    COMMA           reduce using rule 6 (TypeLit -> ArrayType .)
    STRING          reduce using rule 6 (TypeLit -> ArrayType .)
    SEMICOL         reduce using rule 6 (TypeLit -> ArrayType .)
    EQUAL           reduce using rule 6 (TypeLit -> ArrayType .)
    LBRACE          reduce using rule 6 (TypeLit -> ArrayType .)
    COLON           reduce using rule 6 (TypeLit -> ArrayType .)


state 54

    (10) TypeOpt -> Type .

    EQUAL           reduce using rule 10 (TypeOpt -> Type .)


state 55

    (3) Type -> TypeLit .

    LPAREN          reduce using rule 3 (Type -> TypeLit .)
    RPAREN          reduce using rule 3 (Type -> TypeLit .)
    COMMA           reduce using rule 3 (Type -> TypeLit .)
    COLON           reduce using rule 3 (Type -> TypeLit .)
    EQUAL           reduce using rule 3 (Type -> TypeLit .)
    STRING          reduce using rule 3 (Type -> TypeLit .)
    SEMICOL         reduce using rule 3 (Type -> TypeLit .)
    LBRACE          reduce using rule 3 (Type -> TypeLit .)


state 56

    (2) Type -> TypeName .

    LPAREN          reduce using rule 2 (Type -> TypeName .)
    RPAREN          reduce using rule 2 (Type -> TypeName .)
    COMMA           reduce using rule 2 (Type -> TypeName .)
    COLON           reduce using rule 2 (Type -> TypeName .)
    EQUAL           reduce using rule 2 (Type -> TypeName .)
    STRING          reduce using rule 2 (Type -> TypeName .)
    SEMICOL         reduce using rule 2 (Type -> TypeName .)
    LBRACE          reduce using rule 2 (Type -> TypeName .)


state 57

    (5) TypeName -> TYPEX .

    LPAREN          reduce using rule 5 (TypeName -> TYPEX .)
    RPAREN          reduce using rule 5 (TypeName -> TYPEX .)
    COMMA           reduce using rule 5 (TypeName -> TYPEX .)
    COLON           reduce using rule 5 (TypeName -> TYPEX .)
    EQUAL           reduce using rule 5 (TypeName -> TYPEX .)
    SEMICOL         reduce using rule 5 (TypeName -> TYPEX .)
    LBRACE          reduce using rule 5 (TypeName -> TYPEX .)
    STRING          reduce using rule 5 (TypeName -> TYPEX .)


state 58

    (7) TypeLit -> StructType .

    LPAREN          reduce using rule 7 (TypeLit -> StructType .)
    RPAREN          reduce using rule 7 (TypeLit -> StructType .)
    COMMA           reduce using rule 7 (TypeLit -> StructType .)
    STRING          reduce using rule 7 (TypeLit -> StructType .)
    SEMICOL         reduce using rule 7 (TypeLit -> StructType .)
    EQUAL           reduce using rule 7 (TypeLit -> StructType .)
    LBRACE          reduce using rule 7 (TypeLit -> StructType .)
    COLON           reduce using rule 7 (TypeLit -> StructType .)


state 59

    (55) TypeExprListOpt -> epsilon .
    (11) TypeOpt -> epsilon .

    SEMICOL         reduce using rule 55 (TypeExprListOpt -> epsilon .)
    EQUAL           reduce using rule 11 (TypeOpt -> epsilon .)


state 60

    (22) PointerType -> TIMES . BaseType
    (23) BaseType -> . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 61
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    BaseType                       shift and go to state 88
    Type                           shift and go to state 87
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    TypeLit                        shift and go to state 55

state 61

    (4) Type -> LPAREN . Type RPAREN
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 61
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    Type                           shift and go to state 89
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    TypeLit                        shift and go to state 55

state 62

    (54) TypeExprListOpt -> TypeOpt . EQUAL ExpressionList

    EQUAL           shift and go to state 90


state 63

    (15) StructType -> STRUCT . LBRACE FieldDeclRep RBRACE

    LBRACE          shift and go to state 91


state 64

    (12) ArrayType -> LBRACK . ArrayLength RBRACK ElementType
    (13) ArrayLength -> . Expression
    (107) Expression -> . UnaryExpr
    (108) Expression -> . Expression AddOp Term
    (109) Expression -> . Expression AddOp UnaryExpr
    (110) Expression -> . Term
    (115) UnaryExpr -> . PrimaryExpr
    (116) UnaryExpr -> . UnaryOp UnaryExpr
    (111) Term -> . Term MulOp Term
    (112) Term -> . UnaryExpr MulOp UnaryExpr
    (92) PrimaryExpr -> . Operand
    (93) PrimaryExpr -> . Conversion
    (94) PrimaryExpr -> . PrimaryExpr Selector
    (95) PrimaryExpr -> . PrimaryExpr Index
    (96) PrimaryExpr -> . PrimaryExpr Slice
    (97) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (91) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (90) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . INTEGER
    (86) BasicLit -> . FLOAT
    (87) BasicLit -> . IMAGINARY
    (88) BasicLit -> . RUNE
    (89) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 101
    MINUS           shift and go to state 98
    TIMES           shift and go to state 108
    AMPERS          shift and go to state 114
    NOT             shift and go to state 115
    LPAREN          shift and go to state 111
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 113
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 106
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 92
    UnaryOp                        shift and go to state 93
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    Type                           shift and go to state 97
    OperandName                    shift and go to state 99
    TypeLit                        shift and go to state 55
    TypeName                       shift and go to state 56
    Term                           shift and go to state 105
    UnaryExpr                      shift and go to state 107
    PrimaryExpr                    shift and go to state 94
    ArrayLength                    shift and go to state 110
    Expression                     shift and go to state 112
    PointerType                    shift and go to state 66
    BasicLit                       shift and go to state 100
    Operand                        shift and go to state 109
    FunctionType                   shift and go to state 67
    StructType                     shift and go to state 58

state 65

    (53) ConstSpec -> IdentifierList TypeExprListOpt .

    SEMICOL         reduce using rule 53 (ConstSpec -> IdentifierList TypeExprListOpt .)


state 66

    (8) TypeLit -> PointerType .

    LPAREN          reduce using rule 8 (TypeLit -> PointerType .)
    RPAREN          reduce using rule 8 (TypeLit -> PointerType .)
    COMMA           reduce using rule 8 (TypeLit -> PointerType .)
    STRING          reduce using rule 8 (TypeLit -> PointerType .)
    SEMICOL         reduce using rule 8 (TypeLit -> PointerType .)
    EQUAL           reduce using rule 8 (TypeLit -> PointerType .)
    LBRACE          reduce using rule 8 (TypeLit -> PointerType .)
    COLON           reduce using rule 8 (TypeLit -> PointerType .)


state 67

    (9) TypeLit -> FunctionType .

    LPAREN          reduce using rule 9 (TypeLit -> FunctionType .)
    RPAREN          reduce using rule 9 (TypeLit -> FunctionType .)
    COMMA           reduce using rule 9 (TypeLit -> FunctionType .)
    STRING          reduce using rule 9 (TypeLit -> FunctionType .)
    SEMICOL         reduce using rule 9 (TypeLit -> FunctionType .)
    EQUAL           reduce using rule 9 (TypeLit -> FunctionType .)
    LBRACE          reduce using rule 9 (TypeLit -> FunctionType .)
    COLON           reduce using rule 9 (TypeLit -> FunctionType .)


state 68

    (58) IdentifierRep -> epsilon .

    COMMA           reduce using rule 58 (IdentifierRep -> epsilon .)
    LPAREN          reduce using rule 58 (IdentifierRep -> epsilon .)
    TYPEX           reduce using rule 58 (IdentifierRep -> epsilon .)
    LBRACK          reduce using rule 58 (IdentifierRep -> epsilon .)
    STRUCT          reduce using rule 58 (IdentifierRep -> epsilon .)
    TIMES           reduce using rule 58 (IdentifierRep -> epsilon .)
    FUNC            reduce using rule 58 (IdentifierRep -> epsilon .)
    EQUAL           reduce using rule 58 (IdentifierRep -> epsilon .)
    SEMICOL         reduce using rule 58 (IdentifierRep -> epsilon .)


state 69

    (56) IdentifierList -> IDENTIFIER IdentifierRep .
    (57) IdentifierRep -> IdentifierRep . COMMA IDENTIFIER

    LPAREN          reduce using rule 56 (IdentifierList -> IDENTIFIER IdentifierRep .)
    TYPEX           reduce using rule 56 (IdentifierList -> IDENTIFIER IdentifierRep .)
    LBRACK          reduce using rule 56 (IdentifierList -> IDENTIFIER IdentifierRep .)
    STRUCT          reduce using rule 56 (IdentifierList -> IDENTIFIER IdentifierRep .)
    TIMES           reduce using rule 56 (IdentifierList -> IDENTIFIER IdentifierRep .)
    FUNC            reduce using rule 56 (IdentifierList -> IDENTIFIER IdentifierRep .)
    EQUAL           reduce using rule 56 (IdentifierList -> IDENTIFIER IdentifierRep .)
    SEMICOL         reduce using rule 56 (IdentifierList -> IDENTIFIER IdentifierRep .)
    COMMA           shift and go to state 116


state 70

    (76) FunctionDecl -> FUNC FunctionName Function .

    SEMICOL         reduce using rule 76 (FunctionDecl -> FUNC FunctionName Function .)


state 71

    (25) Signature -> Parameters . ResultOpt
    (26) ResultOpt -> . Result
    (27) ResultOpt -> . epsilon
    (28) Result -> . Parameters
    (29) Result -> . Type
    (240) epsilon -> .
    (30) Parameters -> . LPAREN ParameterListOpt RPAREN
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

  ! shift/reduce conflict for LPAREN resolved as shift
    EQUAL           reduce using rule 240 (epsilon -> .)
    SEMICOL         reduce using rule 240 (epsilon -> .)
    RPAREN          reduce using rule 240 (epsilon -> .)
    LBRACE          reduce using rule 240 (epsilon -> .)
    COMMA           reduce using rule 240 (epsilon -> .)
    STRING          reduce using rule 240 (epsilon -> .)
    COLON           reduce using rule 240 (epsilon -> .)
    LPAREN          shift and go to state 121
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

  ! LPAREN          [ reduce using rule 240 (epsilon -> .) ]

    StructType                     shift and go to state 58
    Parameters                     shift and go to state 117
    epsilon                        shift and go to state 120
    ResultOpt                      shift and go to state 119
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    TypeLit                        shift and go to state 55
    Result                         shift and go to state 122
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    Type                           shift and go to state 118

state 72

    (77) FunctionDecl -> FUNC FunctionName Signature .
    (79) Function -> Signature . FunctionBody
    (80) FunctionBody -> . Block
    (40) Block -> . LBRACE StatementList RBRACE

    SEMICOL         reduce using rule 77 (FunctionDecl -> FUNC FunctionName Signature .)
    LBRACE          shift and go to state 124

    FunctionBody                   shift and go to state 123
    Block                          shift and go to state 125

state 73

    (30) Parameters -> LPAREN . ParameterListOpt RPAREN
    (31) ParameterListOpt -> . ParametersList
    (32) ParameterListOpt -> . epsilon
    (33) ParametersList -> . Type
    (34) ParametersList -> . IdentifierList Type
    (35) ParametersList -> . ParameterDeclCommaRep
    (240) epsilon -> .
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (56) IdentifierList -> . IDENTIFIER IdentifierRep
    (36) ParameterDeclCommaRep -> . ParameterDeclCommaRep COMMA ParameterDecl
    (37) ParameterDeclCommaRep -> . ParameterDecl COMMA ParameterDecl
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (38) ParameterDecl -> . IdentifierList Type
    (39) ParameterDecl -> . Type
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    RPAREN          reduce using rule 240 (epsilon -> .)
    LPAREN          shift and go to state 61
    IDENTIFIER      shift and go to state 34
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    epsilon                        shift and go to state 132
    ParameterListOpt               shift and go to state 126
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    TypeLit                        shift and go to state 55
    IdentifierList                 shift and go to state 127
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    ParametersList                 shift and go to state 130
    Type                           shift and go to state 129
    ParameterDeclCommaRep          shift and go to state 128
    ParameterDecl                  shift and go to state 131

state 74

    (68) VarDecl -> VAR LPAREN VarSpecRep . RPAREN
    (69) VarSpecRep -> VarSpecRep . VarSpec SEMICOL
    (71) VarSpec -> . IdentifierList Type ExpressionListOpt
    (72) VarSpec -> . IdentifierList EQUAL ExpressionList
    (56) IdentifierList -> . IDENTIFIER IdentifierRep

    RPAREN          shift and go to state 133
    IDENTIFIER      shift and go to state 34

    VarSpec                        shift and go to state 134
    IdentifierList                 shift and go to state 40

state 75

    (70) VarSpecRep -> epsilon .

    RPAREN          reduce using rule 70 (VarSpecRep -> epsilon .)
    IDENTIFIER      reduce using rule 70 (VarSpecRep -> epsilon .)


state 76

    (72) VarSpec -> IdentifierList EQUAL . ExpressionList
    (104) ExpressionList -> . Expression ExpressionRep
    (107) Expression -> . UnaryExpr
    (108) Expression -> . Expression AddOp Term
    (109) Expression -> . Expression AddOp UnaryExpr
    (110) Expression -> . Term
    (115) UnaryExpr -> . PrimaryExpr
    (116) UnaryExpr -> . UnaryOp UnaryExpr
    (111) Term -> . Term MulOp Term
    (112) Term -> . UnaryExpr MulOp UnaryExpr
    (92) PrimaryExpr -> . Operand
    (93) PrimaryExpr -> . Conversion
    (94) PrimaryExpr -> . PrimaryExpr Selector
    (95) PrimaryExpr -> . PrimaryExpr Index
    (96) PrimaryExpr -> . PrimaryExpr Slice
    (97) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (91) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (90) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . INTEGER
    (86) BasicLit -> . FLOAT
    (87) BasicLit -> . IMAGINARY
    (88) BasicLit -> . RUNE
    (89) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 101
    MINUS           shift and go to state 98
    TIMES           shift and go to state 108
    AMPERS          shift and go to state 114
    NOT             shift and go to state 115
    LPAREN          shift and go to state 111
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 113
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 106
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    UnaryOp                        shift and go to state 93
    Conversion                     shift and go to state 92
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    Type                           shift and go to state 97
    OperandName                    shift and go to state 99
    BasicLit                       shift and go to state 100
    TypeName                       shift and go to state 56
    Term                           shift and go to state 105
    UnaryExpr                      shift and go to state 107
    Operand                        shift and go to state 109
    ExpressionList                 shift and go to state 135
    Expression                     shift and go to state 136
    PointerType                    shift and go to state 66
    TypeLit                        shift and go to state 55
    PrimaryExpr                    shift and go to state 94
    FunctionType                   shift and go to state 67
    StructType                     shift and go to state 58

state 77

    (71) VarSpec -> IdentifierList Type . ExpressionListOpt
    (73) ExpressionListOpt -> . EQUAL ExpressionList
    (74) ExpressionListOpt -> . epsilon
    (240) epsilon -> .

    EQUAL           shift and go to state 137
    SEMICOL         reduce using rule 240 (epsilon -> .)

    ExpressionListOpt              shift and go to state 139
    epsilon                        shift and go to state 138

state 78

    (60) TypeDecl -> TYPE LPAREN TypeSpecRep . RPAREN
    (61) TypeSpecRep -> TypeSpecRep . TypeSpec SEMICOL
    (63) TypeSpec -> . AliasDecl
    (64) TypeSpec -> . TypeDef
    (65) AliasDecl -> . IDENTIFIER EQUAL Type
    (66) TypeDef -> . IDENTIFIER Type

    RPAREN          shift and go to state 140
    IDENTIFIER      shift and go to state 45

    TypeDef                        shift and go to state 41
    AliasDecl                      shift and go to state 42
    TypeSpec                       shift and go to state 141

state 79

    (62) TypeSpecRep -> epsilon .

    RPAREN          reduce using rule 62 (TypeSpecRep -> epsilon .)
    IDENTIFIER      reduce using rule 62 (TypeSpecRep -> epsilon .)


state 80

    (65) AliasDecl -> IDENTIFIER EQUAL . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 61
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    Type                           shift and go to state 142
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    TypeLit                        shift and go to state 55

state 81

    (66) TypeDef -> IDENTIFIER Type .

    SEMICOL         reduce using rule 66 (TypeDef -> IDENTIFIER Type .)


state 82

    (232) ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN .

    SEMICOL         reduce using rule 232 (ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN .)


state 83

    (233) ImportSpecRep -> ImportSpecRep ImportSpec . SEMICOL

    SEMICOL         shift and go to state 143


state 84

    (51) ConstSpecRep -> ConstSpecRep ConstSpec . SEMICOL

    SEMICOL         shift and go to state 144


state 85

    (50) ConstDecl -> CONST LPAREN ConstSpecRep RPAREN .

    SEMICOL         reduce using rule 50 (ConstDecl -> CONST LPAREN ConstSpecRep RPAREN .)


state 86

    (24) FunctionType -> FUNC Signature .

    EQUAL           reduce using rule 24 (FunctionType -> FUNC Signature .)
    SEMICOL         reduce using rule 24 (FunctionType -> FUNC Signature .)
    RPAREN          reduce using rule 24 (FunctionType -> FUNC Signature .)
    LBRACE          reduce using rule 24 (FunctionType -> FUNC Signature .)
    COMMA           reduce using rule 24 (FunctionType -> FUNC Signature .)
    LPAREN          reduce using rule 24 (FunctionType -> FUNC Signature .)
    STRING          reduce using rule 24 (FunctionType -> FUNC Signature .)
    COLON           reduce using rule 24 (FunctionType -> FUNC Signature .)


state 87

    (23) BaseType -> Type .

    LPAREN          reduce using rule 23 (BaseType -> Type .)
    RPAREN          reduce using rule 23 (BaseType -> Type .)
    EQUAL           reduce using rule 23 (BaseType -> Type .)
    SEMICOL         reduce using rule 23 (BaseType -> Type .)
    LBRACE          reduce using rule 23 (BaseType -> Type .)
    COMMA           reduce using rule 23 (BaseType -> Type .)
    STRING          reduce using rule 23 (BaseType -> Type .)
    COLON           reduce using rule 23 (BaseType -> Type .)


state 88

    (22) PointerType -> TIMES BaseType .

    EQUAL           reduce using rule 22 (PointerType -> TIMES BaseType .)
    SEMICOL         reduce using rule 22 (PointerType -> TIMES BaseType .)
    RPAREN          reduce using rule 22 (PointerType -> TIMES BaseType .)
    LBRACE          reduce using rule 22 (PointerType -> TIMES BaseType .)
    COMMA           reduce using rule 22 (PointerType -> TIMES BaseType .)
    LPAREN          reduce using rule 22 (PointerType -> TIMES BaseType .)
    STRING          reduce using rule 22 (PointerType -> TIMES BaseType .)
    COLON           reduce using rule 22 (PointerType -> TIMES BaseType .)


state 89

    (4) Type -> LPAREN Type . RPAREN

    RPAREN          shift and go to state 145


state 90

    (54) TypeExprListOpt -> TypeOpt EQUAL . ExpressionList
    (104) ExpressionList -> . Expression ExpressionRep
    (107) Expression -> . UnaryExpr
    (108) Expression -> . Expression AddOp Term
    (109) Expression -> . Expression AddOp UnaryExpr
    (110) Expression -> . Term
    (115) UnaryExpr -> . PrimaryExpr
    (116) UnaryExpr -> . UnaryOp UnaryExpr
    (111) Term -> . Term MulOp Term
    (112) Term -> . UnaryExpr MulOp UnaryExpr
    (92) PrimaryExpr -> . Operand
    (93) PrimaryExpr -> . Conversion
    (94) PrimaryExpr -> . PrimaryExpr Selector
    (95) PrimaryExpr -> . PrimaryExpr Index
    (96) PrimaryExpr -> . PrimaryExpr Slice
    (97) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (91) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (90) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . INTEGER
    (86) BasicLit -> . FLOAT
    (87) BasicLit -> . IMAGINARY
    (88) BasicLit -> . RUNE
    (89) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 101
    MINUS           shift and go to state 98
    TIMES           shift and go to state 108
    AMPERS          shift and go to state 114
    NOT             shift and go to state 115
    LPAREN          shift and go to state 111
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 113
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 106
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    UnaryOp                        shift and go to state 93
    Conversion                     shift and go to state 92
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    Expression                     shift and go to state 136
    Type                           shift and go to state 97
    OperandName                    shift and go to state 99
    BasicLit                       shift and go to state 100
    TypeName                       shift and go to state 56
    Term                           shift and go to state 105
    UnaryExpr                      shift and go to state 107
    Operand                        shift and go to state 109
    ExpressionList                 shift and go to state 146
    PointerType                    shift and go to state 66
    TypeLit                        shift and go to state 55
    PrimaryExpr                    shift and go to state 94
    FunctionType                   shift and go to state 67
    StructType                     shift and go to state 58

state 91

    (15) StructType -> STRUCT LBRACE . FieldDeclRep RBRACE
    (16) FieldDeclRep -> . FieldDeclRep FieldDecl SEMICOL
    (17) FieldDeclRep -> . epsilon
    (240) epsilon -> .

    RBRACE          reduce using rule 240 (epsilon -> .)
    IDENTIFIER      reduce using rule 240 (epsilon -> .)

    FieldDeclRep                   shift and go to state 147
    epsilon                        shift and go to state 148

state 92

    (93) PrimaryExpr -> Conversion .

    DOT             reduce using rule 93 (PrimaryExpr -> Conversion .)
    LBRACK          reduce using rule 93 (PrimaryExpr -> Conversion .)
    LPAREN          reduce using rule 93 (PrimaryExpr -> Conversion .)
    TIMES           reduce using rule 93 (PrimaryExpr -> Conversion .)
    DIVIDE          reduce using rule 93 (PrimaryExpr -> Conversion .)
    MOD             reduce using rule 93 (PrimaryExpr -> Conversion .)
    AMPERS          reduce using rule 93 (PrimaryExpr -> Conversion .)
    LL              reduce using rule 93 (PrimaryExpr -> Conversion .)
    GG              reduce using rule 93 (PrimaryExpr -> Conversion .)
    AMPCAR          reduce using rule 93 (PrimaryExpr -> Conversion .)
    PLUS            reduce using rule 93 (PrimaryExpr -> Conversion .)
    MINUS           reduce using rule 93 (PrimaryExpr -> Conversion .)
    OR              reduce using rule 93 (PrimaryExpr -> Conversion .)
    CARET           reduce using rule 93 (PrimaryExpr -> Conversion .)
    COMMA           reduce using rule 93 (PrimaryExpr -> Conversion .)
    SEMICOL         reduce using rule 93 (PrimaryExpr -> Conversion .)
    RPAREN          reduce using rule 93 (PrimaryExpr -> Conversion .)
    LBRACE          reduce using rule 93 (PrimaryExpr -> Conversion .)
    COLON           reduce using rule 93 (PrimaryExpr -> Conversion .)
    PLUSEQ          reduce using rule 93 (PrimaryExpr -> Conversion .)
    MINUSEQ         reduce using rule 93 (PrimaryExpr -> Conversion .)
    TIMESEQ         reduce using rule 93 (PrimaryExpr -> Conversion .)
    DIVIDEEQ        reduce using rule 93 (PrimaryExpr -> Conversion .)
    MODEQ           reduce using rule 93 (PrimaryExpr -> Conversion .)
    AMPEQ           reduce using rule 93 (PrimaryExpr -> Conversion .)
    OREQ            reduce using rule 93 (PrimaryExpr -> Conversion .)
    CAREQ           reduce using rule 93 (PrimaryExpr -> Conversion .)
    LLEQ            reduce using rule 93 (PrimaryExpr -> Conversion .)
    GGEQ            reduce using rule 93 (PrimaryExpr -> Conversion .)
    EQUAL           reduce using rule 93 (PrimaryExpr -> Conversion .)
    PLUSPLUS        reduce using rule 93 (PrimaryExpr -> Conversion .)
    MINUSMIN        reduce using rule 93 (PrimaryExpr -> Conversion .)
    RBRACK          reduce using rule 93 (PrimaryExpr -> Conversion .)


state 93

    (116) UnaryExpr -> UnaryOp . UnaryExpr
    (115) UnaryExpr -> . PrimaryExpr
    (116) UnaryExpr -> . UnaryOp UnaryExpr
    (92) PrimaryExpr -> . Operand
    (93) PrimaryExpr -> . Conversion
    (94) PrimaryExpr -> . PrimaryExpr Selector
    (95) PrimaryExpr -> . PrimaryExpr Index
    (96) PrimaryExpr -> . PrimaryExpr Slice
    (97) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (91) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (90) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . INTEGER
    (86) BasicLit -> . FLOAT
    (87) BasicLit -> . IMAGINARY
    (88) BasicLit -> . RUNE
    (89) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 101
    MINUS           shift and go to state 98
    TIMES           shift and go to state 108
    AMPERS          shift and go to state 114
    NOT             shift and go to state 115
    LPAREN          shift and go to state 111
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 113
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 106
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 92
    UnaryOp                        shift and go to state 93
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    Type                           shift and go to state 97
    OperandName                    shift and go to state 99
    BasicLit                       shift and go to state 100
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    UnaryExpr                      shift and go to state 149
    PrimaryExpr                    shift and go to state 94
    PointerType                    shift and go to state 66
    TypeLit                        shift and go to state 55
    Operand                        shift and go to state 109
    FunctionType                   shift and go to state 67

state 94

    (115) UnaryExpr -> PrimaryExpr .
    (94) PrimaryExpr -> PrimaryExpr . Selector
    (95) PrimaryExpr -> PrimaryExpr . Index
    (96) PrimaryExpr -> PrimaryExpr . Slice
    (97) PrimaryExpr -> PrimaryExpr . Arguments
    (98) Selector -> . DOT IDENTIFIER
    (99) Index -> . LBRACK Expression RBRACK
    (100) Slice -> . LBRACK ExpressionOpt COLON ExpressionOpt RBRACK
    (101) Arguments -> . LPAREN ExpressionListTypeOpt RPAREN

    TIMES           reduce using rule 115 (UnaryExpr -> PrimaryExpr .)
    DIVIDE          reduce using rule 115 (UnaryExpr -> PrimaryExpr .)
    MOD             reduce using rule 115 (UnaryExpr -> PrimaryExpr .)
    AMPERS          reduce using rule 115 (UnaryExpr -> PrimaryExpr .)
    LL              reduce using rule 115 (UnaryExpr -> PrimaryExpr .)
    GG              reduce using rule 115 (UnaryExpr -> PrimaryExpr .)
    AMPCAR          reduce using rule 115 (UnaryExpr -> PrimaryExpr .)
    PLUS            reduce using rule 115 (UnaryExpr -> PrimaryExpr .)
    MINUS           reduce using rule 115 (UnaryExpr -> PrimaryExpr .)
    OR              reduce using rule 115 (UnaryExpr -> PrimaryExpr .)
    CARET           reduce using rule 115 (UnaryExpr -> PrimaryExpr .)
    COMMA           reduce using rule 115 (UnaryExpr -> PrimaryExpr .)
    SEMICOL         reduce using rule 115 (UnaryExpr -> PrimaryExpr .)
    PLUSPLUS        reduce using rule 115 (UnaryExpr -> PrimaryExpr .)
    MINUSMIN        reduce using rule 115 (UnaryExpr -> PrimaryExpr .)
    LBRACE          reduce using rule 115 (UnaryExpr -> PrimaryExpr .)
    PLUSEQ          reduce using rule 115 (UnaryExpr -> PrimaryExpr .)
    MINUSEQ         reduce using rule 115 (UnaryExpr -> PrimaryExpr .)
    TIMESEQ         reduce using rule 115 (UnaryExpr -> PrimaryExpr .)
    DIVIDEEQ        reduce using rule 115 (UnaryExpr -> PrimaryExpr .)
    MODEQ           reduce using rule 115 (UnaryExpr -> PrimaryExpr .)
    AMPEQ           reduce using rule 115 (UnaryExpr -> PrimaryExpr .)
    OREQ            reduce using rule 115 (UnaryExpr -> PrimaryExpr .)
    CAREQ           reduce using rule 115 (UnaryExpr -> PrimaryExpr .)
    LLEQ            reduce using rule 115 (UnaryExpr -> PrimaryExpr .)
    GGEQ            reduce using rule 115 (UnaryExpr -> PrimaryExpr .)
    EQUAL           reduce using rule 115 (UnaryExpr -> PrimaryExpr .)
    RBRACK          reduce using rule 115 (UnaryExpr -> PrimaryExpr .)
    RPAREN          reduce using rule 115 (UnaryExpr -> PrimaryExpr .)
    COLON           reduce using rule 115 (UnaryExpr -> PrimaryExpr .)
    DOT             shift and go to state 156
    LBRACK          shift and go to state 152
    LPAREN          shift and go to state 155

    Index                          shift and go to state 150
    Slice                          shift and go to state 151
    Selector                       shift and go to state 153
    Arguments                      shift and go to state 154

state 95

    (81) Operand -> Literal .

    DOT             reduce using rule 81 (Operand -> Literal .)
    LBRACK          reduce using rule 81 (Operand -> Literal .)
    LPAREN          reduce using rule 81 (Operand -> Literal .)
    TIMES           reduce using rule 81 (Operand -> Literal .)
    DIVIDE          reduce using rule 81 (Operand -> Literal .)
    MOD             reduce using rule 81 (Operand -> Literal .)
    AMPERS          reduce using rule 81 (Operand -> Literal .)
    LL              reduce using rule 81 (Operand -> Literal .)
    GG              reduce using rule 81 (Operand -> Literal .)
    AMPCAR          reduce using rule 81 (Operand -> Literal .)
    PLUSPLUS        reduce using rule 81 (Operand -> Literal .)
    MINUSMIN        reduce using rule 81 (Operand -> Literal .)
    PLUS            reduce using rule 81 (Operand -> Literal .)
    MINUS           reduce using rule 81 (Operand -> Literal .)
    OR              reduce using rule 81 (Operand -> Literal .)
    CARET           reduce using rule 81 (Operand -> Literal .)
    COMMA           reduce using rule 81 (Operand -> Literal .)
    LBRACE          reduce using rule 81 (Operand -> Literal .)
    SEMICOL         reduce using rule 81 (Operand -> Literal .)
    PLUSEQ          reduce using rule 81 (Operand -> Literal .)
    MINUSEQ         reduce using rule 81 (Operand -> Literal .)
    TIMESEQ         reduce using rule 81 (Operand -> Literal .)
    DIVIDEEQ        reduce using rule 81 (Operand -> Literal .)
    MODEQ           reduce using rule 81 (Operand -> Literal .)
    AMPEQ           reduce using rule 81 (Operand -> Literal .)
    OREQ            reduce using rule 81 (Operand -> Literal .)
    CAREQ           reduce using rule 81 (Operand -> Literal .)
    LLEQ            reduce using rule 81 (Operand -> Literal .)
    GGEQ            reduce using rule 81 (Operand -> Literal .)
    EQUAL           reduce using rule 81 (Operand -> Literal .)
    RPAREN          reduce using rule 81 (Operand -> Literal .)
    RBRACK          reduce using rule 81 (Operand -> Literal .)
    COLON           reduce using rule 81 (Operand -> Literal .)


state 96

    (88) BasicLit -> RUNE .

    DOT             reduce using rule 88 (BasicLit -> RUNE .)
    LBRACK          reduce using rule 88 (BasicLit -> RUNE .)
    LPAREN          reduce using rule 88 (BasicLit -> RUNE .)
    TIMES           reduce using rule 88 (BasicLit -> RUNE .)
    DIVIDE          reduce using rule 88 (BasicLit -> RUNE .)
    MOD             reduce using rule 88 (BasicLit -> RUNE .)
    AMPERS          reduce using rule 88 (BasicLit -> RUNE .)
    LL              reduce using rule 88 (BasicLit -> RUNE .)
    GG              reduce using rule 88 (BasicLit -> RUNE .)
    AMPCAR          reduce using rule 88 (BasicLit -> RUNE .)
    PLUSPLUS        reduce using rule 88 (BasicLit -> RUNE .)
    MINUSMIN        reduce using rule 88 (BasicLit -> RUNE .)
    PLUS            reduce using rule 88 (BasicLit -> RUNE .)
    MINUS           reduce using rule 88 (BasicLit -> RUNE .)
    OR              reduce using rule 88 (BasicLit -> RUNE .)
    CARET           reduce using rule 88 (BasicLit -> RUNE .)
    COMMA           reduce using rule 88 (BasicLit -> RUNE .)
    SEMICOL         reduce using rule 88 (BasicLit -> RUNE .)
    PLUSEQ          reduce using rule 88 (BasicLit -> RUNE .)
    MINUSEQ         reduce using rule 88 (BasicLit -> RUNE .)
    TIMESEQ         reduce using rule 88 (BasicLit -> RUNE .)
    DIVIDEEQ        reduce using rule 88 (BasicLit -> RUNE .)
    MODEQ           reduce using rule 88 (BasicLit -> RUNE .)
    AMPEQ           reduce using rule 88 (BasicLit -> RUNE .)
    OREQ            reduce using rule 88 (BasicLit -> RUNE .)
    CAREQ           reduce using rule 88 (BasicLit -> RUNE .)
    LLEQ            reduce using rule 88 (BasicLit -> RUNE .)
    GGEQ            reduce using rule 88 (BasicLit -> RUNE .)
    EQUAL           reduce using rule 88 (BasicLit -> RUNE .)
    RPAREN          reduce using rule 88 (BasicLit -> RUNE .)
    LBRACE          reduce using rule 88 (BasicLit -> RUNE .)
    COLON           reduce using rule 88 (BasicLit -> RUNE .)
    RBRACK          reduce using rule 88 (BasicLit -> RUNE .)


state 97

    (91) Conversion -> Type . LPAREN Expression RPAREN

    LPAREN          shift and go to state 157


state 98

    (140) UnaryOp -> MINUS .

    PLUS            reduce using rule 140 (UnaryOp -> MINUS .)
    MINUS           reduce using rule 140 (UnaryOp -> MINUS .)
    TIMES           reduce using rule 140 (UnaryOp -> MINUS .)
    AMPERS          reduce using rule 140 (UnaryOp -> MINUS .)
    NOT             reduce using rule 140 (UnaryOp -> MINUS .)
    LPAREN          reduce using rule 140 (UnaryOp -> MINUS .)
    IDENTIFIER      reduce using rule 140 (UnaryOp -> MINUS .)
    INTEGER         reduce using rule 140 (UnaryOp -> MINUS .)
    FLOAT           reduce using rule 140 (UnaryOp -> MINUS .)
    IMAGINARY       reduce using rule 140 (UnaryOp -> MINUS .)
    RUNE            reduce using rule 140 (UnaryOp -> MINUS .)
    STRING          reduce using rule 140 (UnaryOp -> MINUS .)
    TYPEX           reduce using rule 140 (UnaryOp -> MINUS .)
    LBRACK          reduce using rule 140 (UnaryOp -> MINUS .)
    STRUCT          reduce using rule 140 (UnaryOp -> MINUS .)
    FUNC            reduce using rule 140 (UnaryOp -> MINUS .)


state 99

    (82) Operand -> OperandName .

    DOT             reduce using rule 82 (Operand -> OperandName .)
    LBRACK          reduce using rule 82 (Operand -> OperandName .)
    LPAREN          reduce using rule 82 (Operand -> OperandName .)
    TIMES           reduce using rule 82 (Operand -> OperandName .)
    DIVIDE          reduce using rule 82 (Operand -> OperandName .)
    MOD             reduce using rule 82 (Operand -> OperandName .)
    AMPERS          reduce using rule 82 (Operand -> OperandName .)
    LL              reduce using rule 82 (Operand -> OperandName .)
    GG              reduce using rule 82 (Operand -> OperandName .)
    AMPCAR          reduce using rule 82 (Operand -> OperandName .)
    PLUSPLUS        reduce using rule 82 (Operand -> OperandName .)
    MINUSMIN        reduce using rule 82 (Operand -> OperandName .)
    PLUS            reduce using rule 82 (Operand -> OperandName .)
    MINUS           reduce using rule 82 (Operand -> OperandName .)
    OR              reduce using rule 82 (Operand -> OperandName .)
    CARET           reduce using rule 82 (Operand -> OperandName .)
    COMMA           reduce using rule 82 (Operand -> OperandName .)
    LBRACE          reduce using rule 82 (Operand -> OperandName .)
    SEMICOL         reduce using rule 82 (Operand -> OperandName .)
    PLUSEQ          reduce using rule 82 (Operand -> OperandName .)
    MINUSEQ         reduce using rule 82 (Operand -> OperandName .)
    TIMESEQ         reduce using rule 82 (Operand -> OperandName .)
    DIVIDEEQ        reduce using rule 82 (Operand -> OperandName .)
    MODEQ           reduce using rule 82 (Operand -> OperandName .)
    AMPEQ           reduce using rule 82 (Operand -> OperandName .)
    OREQ            reduce using rule 82 (Operand -> OperandName .)
    CAREQ           reduce using rule 82 (Operand -> OperandName .)
    LLEQ            reduce using rule 82 (Operand -> OperandName .)
    GGEQ            reduce using rule 82 (Operand -> OperandName .)
    EQUAL           reduce using rule 82 (Operand -> OperandName .)
    RPAREN          reduce using rule 82 (Operand -> OperandName .)
    RBRACK          reduce using rule 82 (Operand -> OperandName .)
    COLON           reduce using rule 82 (Operand -> OperandName .)


state 100

    (84) Literal -> BasicLit .

    DOT             reduce using rule 84 (Literal -> BasicLit .)
    LBRACK          reduce using rule 84 (Literal -> BasicLit .)
    LPAREN          reduce using rule 84 (Literal -> BasicLit .)
    TIMES           reduce using rule 84 (Literal -> BasicLit .)
    DIVIDE          reduce using rule 84 (Literal -> BasicLit .)
    MOD             reduce using rule 84 (Literal -> BasicLit .)
    AMPERS          reduce using rule 84 (Literal -> BasicLit .)
    LL              reduce using rule 84 (Literal -> BasicLit .)
    GG              reduce using rule 84 (Literal -> BasicLit .)
    AMPCAR          reduce using rule 84 (Literal -> BasicLit .)
    LBRACE          reduce using rule 84 (Literal -> BasicLit .)
    PLUS            reduce using rule 84 (Literal -> BasicLit .)
    MINUS           reduce using rule 84 (Literal -> BasicLit .)
    OR              reduce using rule 84 (Literal -> BasicLit .)
    CARET           reduce using rule 84 (Literal -> BasicLit .)
    COMMA           reduce using rule 84 (Literal -> BasicLit .)
    SEMICOL         reduce using rule 84 (Literal -> BasicLit .)
    RPAREN          reduce using rule 84 (Literal -> BasicLit .)
    RBRACK          reduce using rule 84 (Literal -> BasicLit .)
    COLON           reduce using rule 84 (Literal -> BasicLit .)
    PLUSEQ          reduce using rule 84 (Literal -> BasicLit .)
    MINUSEQ         reduce using rule 84 (Literal -> BasicLit .)
    TIMESEQ         reduce using rule 84 (Literal -> BasicLit .)
    DIVIDEEQ        reduce using rule 84 (Literal -> BasicLit .)
    MODEQ           reduce using rule 84 (Literal -> BasicLit .)
    AMPEQ           reduce using rule 84 (Literal -> BasicLit .)
    OREQ            reduce using rule 84 (Literal -> BasicLit .)
    CAREQ           reduce using rule 84 (Literal -> BasicLit .)
    LLEQ            reduce using rule 84 (Literal -> BasicLit .)
    GGEQ            reduce using rule 84 (Literal -> BasicLit .)
    EQUAL           reduce using rule 84 (Literal -> BasicLit .)
    PLUSPLUS        reduce using rule 84 (Literal -> BasicLit .)
    MINUSMIN        reduce using rule 84 (Literal -> BasicLit .)


state 101

    (139) UnaryOp -> PLUS .

    PLUS            reduce using rule 139 (UnaryOp -> PLUS .)
    MINUS           reduce using rule 139 (UnaryOp -> PLUS .)
    TIMES           reduce using rule 139 (UnaryOp -> PLUS .)
    AMPERS          reduce using rule 139 (UnaryOp -> PLUS .)
    NOT             reduce using rule 139 (UnaryOp -> PLUS .)
    LPAREN          reduce using rule 139 (UnaryOp -> PLUS .)
    IDENTIFIER      reduce using rule 139 (UnaryOp -> PLUS .)
    INTEGER         reduce using rule 139 (UnaryOp -> PLUS .)
    FLOAT           reduce using rule 139 (UnaryOp -> PLUS .)
    IMAGINARY       reduce using rule 139 (UnaryOp -> PLUS .)
    RUNE            reduce using rule 139 (UnaryOp -> PLUS .)
    STRING          reduce using rule 139 (UnaryOp -> PLUS .)
    TYPEX           reduce using rule 139 (UnaryOp -> PLUS .)
    LBRACK          reduce using rule 139 (UnaryOp -> PLUS .)
    STRUCT          reduce using rule 139 (UnaryOp -> PLUS .)
    FUNC            reduce using rule 139 (UnaryOp -> PLUS .)


state 102

    (85) BasicLit -> INTEGER .

    DOT             reduce using rule 85 (BasicLit -> INTEGER .)
    LBRACK          reduce using rule 85 (BasicLit -> INTEGER .)
    LPAREN          reduce using rule 85 (BasicLit -> INTEGER .)
    TIMES           reduce using rule 85 (BasicLit -> INTEGER .)
    DIVIDE          reduce using rule 85 (BasicLit -> INTEGER .)
    MOD             reduce using rule 85 (BasicLit -> INTEGER .)
    AMPERS          reduce using rule 85 (BasicLit -> INTEGER .)
    LL              reduce using rule 85 (BasicLit -> INTEGER .)
    GG              reduce using rule 85 (BasicLit -> INTEGER .)
    AMPCAR          reduce using rule 85 (BasicLit -> INTEGER .)
    PLUSPLUS        reduce using rule 85 (BasicLit -> INTEGER .)
    MINUSMIN        reduce using rule 85 (BasicLit -> INTEGER .)
    PLUS            reduce using rule 85 (BasicLit -> INTEGER .)
    MINUS           reduce using rule 85 (BasicLit -> INTEGER .)
    OR              reduce using rule 85 (BasicLit -> INTEGER .)
    CARET           reduce using rule 85 (BasicLit -> INTEGER .)
    COMMA           reduce using rule 85 (BasicLit -> INTEGER .)
    SEMICOL         reduce using rule 85 (BasicLit -> INTEGER .)
    PLUSEQ          reduce using rule 85 (BasicLit -> INTEGER .)
    MINUSEQ         reduce using rule 85 (BasicLit -> INTEGER .)
    TIMESEQ         reduce using rule 85 (BasicLit -> INTEGER .)
    DIVIDEEQ        reduce using rule 85 (BasicLit -> INTEGER .)
    MODEQ           reduce using rule 85 (BasicLit -> INTEGER .)
    AMPEQ           reduce using rule 85 (BasicLit -> INTEGER .)
    OREQ            reduce using rule 85 (BasicLit -> INTEGER .)
    CAREQ           reduce using rule 85 (BasicLit -> INTEGER .)
    LLEQ            reduce using rule 85 (BasicLit -> INTEGER .)
    GGEQ            reduce using rule 85 (BasicLit -> INTEGER .)
    EQUAL           reduce using rule 85 (BasicLit -> INTEGER .)
    RPAREN          reduce using rule 85 (BasicLit -> INTEGER .)
    LBRACE          reduce using rule 85 (BasicLit -> INTEGER .)
    COLON           reduce using rule 85 (BasicLit -> INTEGER .)
    RBRACK          reduce using rule 85 (BasicLit -> INTEGER .)


state 103

    (87) BasicLit -> IMAGINARY .

    DOT             reduce using rule 87 (BasicLit -> IMAGINARY .)
    LBRACK          reduce using rule 87 (BasicLit -> IMAGINARY .)
    LPAREN          reduce using rule 87 (BasicLit -> IMAGINARY .)
    TIMES           reduce using rule 87 (BasicLit -> IMAGINARY .)
    DIVIDE          reduce using rule 87 (BasicLit -> IMAGINARY .)
    MOD             reduce using rule 87 (BasicLit -> IMAGINARY .)
    AMPERS          reduce using rule 87 (BasicLit -> IMAGINARY .)
    LL              reduce using rule 87 (BasicLit -> IMAGINARY .)
    GG              reduce using rule 87 (BasicLit -> IMAGINARY .)
    AMPCAR          reduce using rule 87 (BasicLit -> IMAGINARY .)
    PLUSPLUS        reduce using rule 87 (BasicLit -> IMAGINARY .)
    MINUSMIN        reduce using rule 87 (BasicLit -> IMAGINARY .)
    PLUS            reduce using rule 87 (BasicLit -> IMAGINARY .)
    MINUS           reduce using rule 87 (BasicLit -> IMAGINARY .)
    OR              reduce using rule 87 (BasicLit -> IMAGINARY .)
    CARET           reduce using rule 87 (BasicLit -> IMAGINARY .)
    COMMA           reduce using rule 87 (BasicLit -> IMAGINARY .)
    SEMICOL         reduce using rule 87 (BasicLit -> IMAGINARY .)
    PLUSEQ          reduce using rule 87 (BasicLit -> IMAGINARY .)
    MINUSEQ         reduce using rule 87 (BasicLit -> IMAGINARY .)
    TIMESEQ         reduce using rule 87 (BasicLit -> IMAGINARY .)
    DIVIDEEQ        reduce using rule 87 (BasicLit -> IMAGINARY .)
    MODEQ           reduce using rule 87 (BasicLit -> IMAGINARY .)
    AMPEQ           reduce using rule 87 (BasicLit -> IMAGINARY .)
    OREQ            reduce using rule 87 (BasicLit -> IMAGINARY .)
    CAREQ           reduce using rule 87 (BasicLit -> IMAGINARY .)
    LLEQ            reduce using rule 87 (BasicLit -> IMAGINARY .)
    GGEQ            reduce using rule 87 (BasicLit -> IMAGINARY .)
    EQUAL           reduce using rule 87 (BasicLit -> IMAGINARY .)
    RPAREN          reduce using rule 87 (BasicLit -> IMAGINARY .)
    LBRACE          reduce using rule 87 (BasicLit -> IMAGINARY .)
    COLON           reduce using rule 87 (BasicLit -> IMAGINARY .)
    RBRACK          reduce using rule 87 (BasicLit -> IMAGINARY .)


state 104

    (90) OperandName -> IDENTIFIER .

    DOT             reduce using rule 90 (OperandName -> IDENTIFIER .)
    LBRACK          reduce using rule 90 (OperandName -> IDENTIFIER .)
    LPAREN          reduce using rule 90 (OperandName -> IDENTIFIER .)
    TIMES           reduce using rule 90 (OperandName -> IDENTIFIER .)
    DIVIDE          reduce using rule 90 (OperandName -> IDENTIFIER .)
    MOD             reduce using rule 90 (OperandName -> IDENTIFIER .)
    AMPERS          reduce using rule 90 (OperandName -> IDENTIFIER .)
    LL              reduce using rule 90 (OperandName -> IDENTIFIER .)
    GG              reduce using rule 90 (OperandName -> IDENTIFIER .)
    AMPCAR          reduce using rule 90 (OperandName -> IDENTIFIER .)
    PLUS            reduce using rule 90 (OperandName -> IDENTIFIER .)
    MINUS           reduce using rule 90 (OperandName -> IDENTIFIER .)
    OR              reduce using rule 90 (OperandName -> IDENTIFIER .)
    CARET           reduce using rule 90 (OperandName -> IDENTIFIER .)
    RBRACK          reduce using rule 90 (OperandName -> IDENTIFIER .)
    COMMA           reduce using rule 90 (OperandName -> IDENTIFIER .)
    SEMICOL         reduce using rule 90 (OperandName -> IDENTIFIER .)
    RPAREN          reduce using rule 90 (OperandName -> IDENTIFIER .)
    COLON           reduce using rule 90 (OperandName -> IDENTIFIER .)
    PLUSPLUS        reduce using rule 90 (OperandName -> IDENTIFIER .)
    MINUSMIN        reduce using rule 90 (OperandName -> IDENTIFIER .)
    PLUSEQ          reduce using rule 90 (OperandName -> IDENTIFIER .)
    MINUSEQ         reduce using rule 90 (OperandName -> IDENTIFIER .)
    TIMESEQ         reduce using rule 90 (OperandName -> IDENTIFIER .)
    DIVIDEEQ        reduce using rule 90 (OperandName -> IDENTIFIER .)
    MODEQ           reduce using rule 90 (OperandName -> IDENTIFIER .)
    AMPEQ           reduce using rule 90 (OperandName -> IDENTIFIER .)
    OREQ            reduce using rule 90 (OperandName -> IDENTIFIER .)
    CAREQ           reduce using rule 90 (OperandName -> IDENTIFIER .)
    LLEQ            reduce using rule 90 (OperandName -> IDENTIFIER .)
    GGEQ            reduce using rule 90 (OperandName -> IDENTIFIER .)
    EQUAL           reduce using rule 90 (OperandName -> IDENTIFIER .)
    LBRACE          reduce using rule 90 (OperandName -> IDENTIFIER .)


state 105

    (110) Expression -> Term .
    (111) Term -> Term . MulOp Term
    (132) MulOp -> . TIMES
    (133) MulOp -> . DIVIDE
    (134) MulOp -> . MOD
    (135) MulOp -> . AMPERS
    (136) MulOp -> . LL
    (137) MulOp -> . GG
    (138) MulOp -> . AMPCAR

    RBRACK          reduce using rule 110 (Expression -> Term .)
    PLUS            reduce using rule 110 (Expression -> Term .)
    MINUS           reduce using rule 110 (Expression -> Term .)
    OR              reduce using rule 110 (Expression -> Term .)
    CARET           reduce using rule 110 (Expression -> Term .)
    COLON           reduce using rule 110 (Expression -> Term .)
    COMMA           reduce using rule 110 (Expression -> Term .)
    SEMICOL         reduce using rule 110 (Expression -> Term .)
    RPAREN          reduce using rule 110 (Expression -> Term .)
    LBRACE          reduce using rule 110 (Expression -> Term .)
    PLUSEQ          reduce using rule 110 (Expression -> Term .)
    MINUSEQ         reduce using rule 110 (Expression -> Term .)
    TIMESEQ         reduce using rule 110 (Expression -> Term .)
    DIVIDEEQ        reduce using rule 110 (Expression -> Term .)
    MODEQ           reduce using rule 110 (Expression -> Term .)
    AMPEQ           reduce using rule 110 (Expression -> Term .)
    OREQ            reduce using rule 110 (Expression -> Term .)
    CAREQ           reduce using rule 110 (Expression -> Term .)
    LLEQ            reduce using rule 110 (Expression -> Term .)
    GGEQ            reduce using rule 110 (Expression -> Term .)
    EQUAL           reduce using rule 110 (Expression -> Term .)
    PLUSPLUS        reduce using rule 110 (Expression -> Term .)
    MINUSMIN        reduce using rule 110 (Expression -> Term .)
    TIMES           shift and go to state 162
    DIVIDE          shift and go to state 158
    MOD             shift and go to state 165
    AMPERS          shift and go to state 161
    LL              shift and go to state 160
    GG              shift and go to state 163
    AMPCAR          shift and go to state 159

    MulOp                          shift and go to state 164

state 106

    (89) BasicLit -> STRING .

    DOT             reduce using rule 89 (BasicLit -> STRING .)
    LBRACK          reduce using rule 89 (BasicLit -> STRING .)
    LPAREN          reduce using rule 89 (BasicLit -> STRING .)
    TIMES           reduce using rule 89 (BasicLit -> STRING .)
    DIVIDE          reduce using rule 89 (BasicLit -> STRING .)
    MOD             reduce using rule 89 (BasicLit -> STRING .)
    AMPERS          reduce using rule 89 (BasicLit -> STRING .)
    LL              reduce using rule 89 (BasicLit -> STRING .)
    GG              reduce using rule 89 (BasicLit -> STRING .)
    AMPCAR          reduce using rule 89 (BasicLit -> STRING .)
    PLUSPLUS        reduce using rule 89 (BasicLit -> STRING .)
    MINUSMIN        reduce using rule 89 (BasicLit -> STRING .)
    PLUS            reduce using rule 89 (BasicLit -> STRING .)
    MINUS           reduce using rule 89 (BasicLit -> STRING .)
    OR              reduce using rule 89 (BasicLit -> STRING .)
    CARET           reduce using rule 89 (BasicLit -> STRING .)
    COMMA           reduce using rule 89 (BasicLit -> STRING .)
    SEMICOL         reduce using rule 89 (BasicLit -> STRING .)
    PLUSEQ          reduce using rule 89 (BasicLit -> STRING .)
    MINUSEQ         reduce using rule 89 (BasicLit -> STRING .)
    TIMESEQ         reduce using rule 89 (BasicLit -> STRING .)
    DIVIDEEQ        reduce using rule 89 (BasicLit -> STRING .)
    MODEQ           reduce using rule 89 (BasicLit -> STRING .)
    AMPEQ           reduce using rule 89 (BasicLit -> STRING .)
    OREQ            reduce using rule 89 (BasicLit -> STRING .)
    CAREQ           reduce using rule 89 (BasicLit -> STRING .)
    LLEQ            reduce using rule 89 (BasicLit -> STRING .)
    GGEQ            reduce using rule 89 (BasicLit -> STRING .)
    EQUAL           reduce using rule 89 (BasicLit -> STRING .)
    RPAREN          reduce using rule 89 (BasicLit -> STRING .)
    LBRACE          reduce using rule 89 (BasicLit -> STRING .)
    COLON           reduce using rule 89 (BasicLit -> STRING .)
    RBRACK          reduce using rule 89 (BasicLit -> STRING .)


state 107

    (107) Expression -> UnaryExpr .
    (112) Term -> UnaryExpr . MulOp UnaryExpr
    (132) MulOp -> . TIMES
    (133) MulOp -> . DIVIDE
    (134) MulOp -> . MOD
    (135) MulOp -> . AMPERS
    (136) MulOp -> . LL
    (137) MulOp -> . GG
    (138) MulOp -> . AMPCAR

    RBRACK          reduce using rule 107 (Expression -> UnaryExpr .)
    PLUS            reduce using rule 107 (Expression -> UnaryExpr .)
    MINUS           reduce using rule 107 (Expression -> UnaryExpr .)
    OR              reduce using rule 107 (Expression -> UnaryExpr .)
    CARET           reduce using rule 107 (Expression -> UnaryExpr .)
    COLON           reduce using rule 107 (Expression -> UnaryExpr .)
    COMMA           reduce using rule 107 (Expression -> UnaryExpr .)
    SEMICOL         reduce using rule 107 (Expression -> UnaryExpr .)
    RPAREN          reduce using rule 107 (Expression -> UnaryExpr .)
    LBRACE          reduce using rule 107 (Expression -> UnaryExpr .)
    PLUSEQ          reduce using rule 107 (Expression -> UnaryExpr .)
    MINUSEQ         reduce using rule 107 (Expression -> UnaryExpr .)
    TIMESEQ         reduce using rule 107 (Expression -> UnaryExpr .)
    DIVIDEEQ        reduce using rule 107 (Expression -> UnaryExpr .)
    MODEQ           reduce using rule 107 (Expression -> UnaryExpr .)
    AMPEQ           reduce using rule 107 (Expression -> UnaryExpr .)
    OREQ            reduce using rule 107 (Expression -> UnaryExpr .)
    CAREQ           reduce using rule 107 (Expression -> UnaryExpr .)
    LLEQ            reduce using rule 107 (Expression -> UnaryExpr .)
    GGEQ            reduce using rule 107 (Expression -> UnaryExpr .)
    EQUAL           reduce using rule 107 (Expression -> UnaryExpr .)
    PLUSPLUS        reduce using rule 107 (Expression -> UnaryExpr .)
    MINUSMIN        reduce using rule 107 (Expression -> UnaryExpr .)
    TIMES           shift and go to state 162
    DIVIDE          shift and go to state 158
    MOD             shift and go to state 165
    AMPERS          shift and go to state 161
    LL              shift and go to state 160
    GG              shift and go to state 163
    AMPCAR          shift and go to state 159

    MulOp                          shift and go to state 166

state 108

    (141) UnaryOp -> TIMES .
    (22) PointerType -> TIMES . BaseType
    (23) BaseType -> . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            reduce using rule 141 (UnaryOp -> TIMES .)
    MINUS           reduce using rule 141 (UnaryOp -> TIMES .)
    TIMES           reduce using rule 141 (UnaryOp -> TIMES .)
    AMPERS          reduce using rule 141 (UnaryOp -> TIMES .)
    NOT             reduce using rule 141 (UnaryOp -> TIMES .)
    LPAREN          reduce using rule 141 (UnaryOp -> TIMES .)
    IDENTIFIER      reduce using rule 141 (UnaryOp -> TIMES .)
    INTEGER         reduce using rule 141 (UnaryOp -> TIMES .)
    FLOAT           reduce using rule 141 (UnaryOp -> TIMES .)
    IMAGINARY       reduce using rule 141 (UnaryOp -> TIMES .)
    RUNE            reduce using rule 141 (UnaryOp -> TIMES .)
    STRING          reduce using rule 141 (UnaryOp -> TIMES .)
    TYPEX           reduce using rule 141 (UnaryOp -> TIMES .)
    LBRACK          reduce using rule 141 (UnaryOp -> TIMES .)
    STRUCT          reduce using rule 141 (UnaryOp -> TIMES .)
    FUNC            reduce using rule 141 (UnaryOp -> TIMES .)

  ! LPAREN          [ shift and go to state 61 ]
  ! TYPEX           [ shift and go to state 57 ]
  ! LBRACK          [ shift and go to state 64 ]
  ! STRUCT          [ shift and go to state 63 ]
  ! TIMES           [ shift and go to state 60 ]
  ! FUNC            [ shift and go to state 52 ]

    StructType                     shift and go to state 58
    BaseType                       shift and go to state 88
    Type                           shift and go to state 87
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    TypeLit                        shift and go to state 55

state 109

    (92) PrimaryExpr -> Operand .

    DOT             reduce using rule 92 (PrimaryExpr -> Operand .)
    LBRACK          reduce using rule 92 (PrimaryExpr -> Operand .)
    LPAREN          reduce using rule 92 (PrimaryExpr -> Operand .)
    TIMES           reduce using rule 92 (PrimaryExpr -> Operand .)
    DIVIDE          reduce using rule 92 (PrimaryExpr -> Operand .)
    MOD             reduce using rule 92 (PrimaryExpr -> Operand .)
    AMPERS          reduce using rule 92 (PrimaryExpr -> Operand .)
    LL              reduce using rule 92 (PrimaryExpr -> Operand .)
    GG              reduce using rule 92 (PrimaryExpr -> Operand .)
    AMPCAR          reduce using rule 92 (PrimaryExpr -> Operand .)
    PLUS            reduce using rule 92 (PrimaryExpr -> Operand .)
    MINUS           reduce using rule 92 (PrimaryExpr -> Operand .)
    OR              reduce using rule 92 (PrimaryExpr -> Operand .)
    CARET           reduce using rule 92 (PrimaryExpr -> Operand .)
    COMMA           reduce using rule 92 (PrimaryExpr -> Operand .)
    SEMICOL         reduce using rule 92 (PrimaryExpr -> Operand .)
    RPAREN          reduce using rule 92 (PrimaryExpr -> Operand .)
    LBRACE          reduce using rule 92 (PrimaryExpr -> Operand .)
    COLON           reduce using rule 92 (PrimaryExpr -> Operand .)
    PLUSEQ          reduce using rule 92 (PrimaryExpr -> Operand .)
    MINUSEQ         reduce using rule 92 (PrimaryExpr -> Operand .)
    TIMESEQ         reduce using rule 92 (PrimaryExpr -> Operand .)
    DIVIDEEQ        reduce using rule 92 (PrimaryExpr -> Operand .)
    MODEQ           reduce using rule 92 (PrimaryExpr -> Operand .)
    AMPEQ           reduce using rule 92 (PrimaryExpr -> Operand .)
    OREQ            reduce using rule 92 (PrimaryExpr -> Operand .)
    CAREQ           reduce using rule 92 (PrimaryExpr -> Operand .)
    LLEQ            reduce using rule 92 (PrimaryExpr -> Operand .)
    GGEQ            reduce using rule 92 (PrimaryExpr -> Operand .)
    EQUAL           reduce using rule 92 (PrimaryExpr -> Operand .)
    PLUSPLUS        reduce using rule 92 (PrimaryExpr -> Operand .)
    MINUSMIN        reduce using rule 92 (PrimaryExpr -> Operand .)
    RBRACK          reduce using rule 92 (PrimaryExpr -> Operand .)


state 110

    (12) ArrayType -> LBRACK ArrayLength . RBRACK ElementType

    RBRACK          shift and go to state 167


state 111

    (83) Operand -> LPAREN . Expression RPAREN
    (4) Type -> LPAREN . Type RPAREN
    (107) Expression -> . UnaryExpr
    (108) Expression -> . Expression AddOp Term
    (109) Expression -> . Expression AddOp UnaryExpr
    (110) Expression -> . Term
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (115) UnaryExpr -> . PrimaryExpr
    (116) UnaryExpr -> . UnaryOp UnaryExpr
    (111) Term -> . Term MulOp Term
    (112) Term -> . UnaryExpr MulOp UnaryExpr
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (92) PrimaryExpr -> . Operand
    (93) PrimaryExpr -> . Conversion
    (94) PrimaryExpr -> . PrimaryExpr Selector
    (95) PrimaryExpr -> . PrimaryExpr Index
    (96) PrimaryExpr -> . PrimaryExpr Slice
    (97) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (91) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (90) OperandName -> . IDENTIFIER
    (85) BasicLit -> . INTEGER
    (86) BasicLit -> . FLOAT
    (87) BasicLit -> . IMAGINARY
    (88) BasicLit -> . RUNE
    (89) BasicLit -> . STRING

    LPAREN          shift and go to state 169
    TYPEX           shift and go to state 57
    PLUS            shift and go to state 101
    MINUS           shift and go to state 98
    TIMES           shift and go to state 108
    AMPERS          shift and go to state 114
    NOT             shift and go to state 115
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 113
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 106

    Conversion                     shift and go to state 92
    UnaryOp                        shift and go to state 93
    PrimaryExpr                    shift and go to state 94
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    TypeLit                        shift and go to state 55
    OperandName                    shift and go to state 99
    Type                           shift and go to state 168
    TypeName                       shift and go to state 56
    Term                           shift and go to state 105
    UnaryExpr                      shift and go to state 107
    Operand                        shift and go to state 109
    Expression                     shift and go to state 170
    BasicLit                       shift and go to state 100
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    StructType                     shift and go to state 58

state 112

    (13) ArrayLength -> Expression .
    (108) Expression -> Expression . AddOp Term
    (109) Expression -> Expression . AddOp UnaryExpr
    (128) AddOp -> . PLUS
    (129) AddOp -> . MINUS
    (130) AddOp -> . OR
    (131) AddOp -> . CARET

    RBRACK          reduce using rule 13 (ArrayLength -> Expression .)
    PLUS            shift and go to state 174
    MINUS           shift and go to state 175
    OR              shift and go to state 173
    CARET           shift and go to state 171

    AddOp                          shift and go to state 172

state 113

    (86) BasicLit -> FLOAT .

    DOT             reduce using rule 86 (BasicLit -> FLOAT .)
    LBRACK          reduce using rule 86 (BasicLit -> FLOAT .)
    LPAREN          reduce using rule 86 (BasicLit -> FLOAT .)
    TIMES           reduce using rule 86 (BasicLit -> FLOAT .)
    DIVIDE          reduce using rule 86 (BasicLit -> FLOAT .)
    MOD             reduce using rule 86 (BasicLit -> FLOAT .)
    AMPERS          reduce using rule 86 (BasicLit -> FLOAT .)
    LL              reduce using rule 86 (BasicLit -> FLOAT .)
    GG              reduce using rule 86 (BasicLit -> FLOAT .)
    AMPCAR          reduce using rule 86 (BasicLit -> FLOAT .)
    PLUSPLUS        reduce using rule 86 (BasicLit -> FLOAT .)
    MINUSMIN        reduce using rule 86 (BasicLit -> FLOAT .)
    PLUS            reduce using rule 86 (BasicLit -> FLOAT .)
    MINUS           reduce using rule 86 (BasicLit -> FLOAT .)
    OR              reduce using rule 86 (BasicLit -> FLOAT .)
    CARET           reduce using rule 86 (BasicLit -> FLOAT .)
    COMMA           reduce using rule 86 (BasicLit -> FLOAT .)
    SEMICOL         reduce using rule 86 (BasicLit -> FLOAT .)
    PLUSEQ          reduce using rule 86 (BasicLit -> FLOAT .)
    MINUSEQ         reduce using rule 86 (BasicLit -> FLOAT .)
    TIMESEQ         reduce using rule 86 (BasicLit -> FLOAT .)
    DIVIDEEQ        reduce using rule 86 (BasicLit -> FLOAT .)
    MODEQ           reduce using rule 86 (BasicLit -> FLOAT .)
    AMPEQ           reduce using rule 86 (BasicLit -> FLOAT .)
    OREQ            reduce using rule 86 (BasicLit -> FLOAT .)
    CAREQ           reduce using rule 86 (BasicLit -> FLOAT .)
    LLEQ            reduce using rule 86 (BasicLit -> FLOAT .)
    GGEQ            reduce using rule 86 (BasicLit -> FLOAT .)
    EQUAL           reduce using rule 86 (BasicLit -> FLOAT .)
    RPAREN          reduce using rule 86 (BasicLit -> FLOAT .)
    LBRACE          reduce using rule 86 (BasicLit -> FLOAT .)
    COLON           reduce using rule 86 (BasicLit -> FLOAT .)
    RBRACK          reduce using rule 86 (BasicLit -> FLOAT .)


state 114

    (142) UnaryOp -> AMPERS .

    PLUS            reduce using rule 142 (UnaryOp -> AMPERS .)
    MINUS           reduce using rule 142 (UnaryOp -> AMPERS .)
    TIMES           reduce using rule 142 (UnaryOp -> AMPERS .)
    AMPERS          reduce using rule 142 (UnaryOp -> AMPERS .)
    NOT             reduce using rule 142 (UnaryOp -> AMPERS .)
    LPAREN          reduce using rule 142 (UnaryOp -> AMPERS .)
    IDENTIFIER      reduce using rule 142 (UnaryOp -> AMPERS .)
    INTEGER         reduce using rule 142 (UnaryOp -> AMPERS .)
    FLOAT           reduce using rule 142 (UnaryOp -> AMPERS .)
    IMAGINARY       reduce using rule 142 (UnaryOp -> AMPERS .)
    RUNE            reduce using rule 142 (UnaryOp -> AMPERS .)
    STRING          reduce using rule 142 (UnaryOp -> AMPERS .)
    TYPEX           reduce using rule 142 (UnaryOp -> AMPERS .)
    LBRACK          reduce using rule 142 (UnaryOp -> AMPERS .)
    STRUCT          reduce using rule 142 (UnaryOp -> AMPERS .)
    FUNC            reduce using rule 142 (UnaryOp -> AMPERS .)


state 115

    (143) UnaryOp -> NOT .

    PLUS            reduce using rule 143 (UnaryOp -> NOT .)
    MINUS           reduce using rule 143 (UnaryOp -> NOT .)
    TIMES           reduce using rule 143 (UnaryOp -> NOT .)
    AMPERS          reduce using rule 143 (UnaryOp -> NOT .)
    NOT             reduce using rule 143 (UnaryOp -> NOT .)
    LPAREN          reduce using rule 143 (UnaryOp -> NOT .)
    IDENTIFIER      reduce using rule 143 (UnaryOp -> NOT .)
    INTEGER         reduce using rule 143 (UnaryOp -> NOT .)
    FLOAT           reduce using rule 143 (UnaryOp -> NOT .)
    IMAGINARY       reduce using rule 143 (UnaryOp -> NOT .)
    RUNE            reduce using rule 143 (UnaryOp -> NOT .)
    STRING          reduce using rule 143 (UnaryOp -> NOT .)
    TYPEX           reduce using rule 143 (UnaryOp -> NOT .)
    LBRACK          reduce using rule 143 (UnaryOp -> NOT .)
    STRUCT          reduce using rule 143 (UnaryOp -> NOT .)
    FUNC            reduce using rule 143 (UnaryOp -> NOT .)


state 116

    (57) IdentifierRep -> IdentifierRep COMMA . IDENTIFIER

    IDENTIFIER      shift and go to state 176


state 117

    (28) Result -> Parameters .

    EQUAL           reduce using rule 28 (Result -> Parameters .)
    SEMICOL         reduce using rule 28 (Result -> Parameters .)
    RPAREN          reduce using rule 28 (Result -> Parameters .)
    LBRACE          reduce using rule 28 (Result -> Parameters .)
    COMMA           reduce using rule 28 (Result -> Parameters .)
    LPAREN          reduce using rule 28 (Result -> Parameters .)
    STRING          reduce using rule 28 (Result -> Parameters .)
    COLON           reduce using rule 28 (Result -> Parameters .)


state 118

    (29) Result -> Type .

    EQUAL           reduce using rule 29 (Result -> Type .)
    SEMICOL         reduce using rule 29 (Result -> Type .)
    RPAREN          reduce using rule 29 (Result -> Type .)
    LBRACE          reduce using rule 29 (Result -> Type .)
    COMMA           reduce using rule 29 (Result -> Type .)
    LPAREN          reduce using rule 29 (Result -> Type .)
    STRING          reduce using rule 29 (Result -> Type .)
    COLON           reduce using rule 29 (Result -> Type .)


state 119

    (25) Signature -> Parameters ResultOpt .

    LBRACE          reduce using rule 25 (Signature -> Parameters ResultOpt .)
    SEMICOL         reduce using rule 25 (Signature -> Parameters ResultOpt .)
    EQUAL           reduce using rule 25 (Signature -> Parameters ResultOpt .)
    RPAREN          reduce using rule 25 (Signature -> Parameters ResultOpt .)
    COMMA           reduce using rule 25 (Signature -> Parameters ResultOpt .)
    LPAREN          reduce using rule 25 (Signature -> Parameters ResultOpt .)
    STRING          reduce using rule 25 (Signature -> Parameters ResultOpt .)
    COLON           reduce using rule 25 (Signature -> Parameters ResultOpt .)


state 120

    (27) ResultOpt -> epsilon .

    EQUAL           reduce using rule 27 (ResultOpt -> epsilon .)
    SEMICOL         reduce using rule 27 (ResultOpt -> epsilon .)
    RPAREN          reduce using rule 27 (ResultOpt -> epsilon .)
    LBRACE          reduce using rule 27 (ResultOpt -> epsilon .)
    COMMA           reduce using rule 27 (ResultOpt -> epsilon .)
    LPAREN          reduce using rule 27 (ResultOpt -> epsilon .)
    STRING          reduce using rule 27 (ResultOpt -> epsilon .)
    COLON           reduce using rule 27 (ResultOpt -> epsilon .)


state 121

    (30) Parameters -> LPAREN . ParameterListOpt RPAREN
    (4) Type -> LPAREN . Type RPAREN
    (31) ParameterListOpt -> . ParametersList
    (32) ParameterListOpt -> . epsilon
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (33) ParametersList -> . Type
    (34) ParametersList -> . IdentifierList Type
    (35) ParametersList -> . ParameterDeclCommaRep
    (240) epsilon -> .
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (56) IdentifierList -> . IDENTIFIER IdentifierRep
    (36) ParameterDeclCommaRep -> . ParameterDeclCommaRep COMMA ParameterDecl
    (37) ParameterDeclCommaRep -> . ParameterDecl COMMA ParameterDecl
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature
    (38) ParameterDecl -> . IdentifierList Type
    (39) ParameterDecl -> . Type

    LPAREN          shift and go to state 61
    RPAREN          reduce using rule 240 (epsilon -> .)
    TYPEX           shift and go to state 57
    IDENTIFIER      shift and go to state 34
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    TypeLit                        shift and go to state 55
    IdentifierList                 shift and go to state 127
    ParameterListOpt               shift and go to state 126
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    epsilon                        shift and go to state 132
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    ParametersList                 shift and go to state 130
    Type                           shift and go to state 177
    ParameterDeclCommaRep          shift and go to state 128
    ParameterDecl                  shift and go to state 131

state 122

    (26) ResultOpt -> Result .

    EQUAL           reduce using rule 26 (ResultOpt -> Result .)
    SEMICOL         reduce using rule 26 (ResultOpt -> Result .)
    RPAREN          reduce using rule 26 (ResultOpt -> Result .)
    LBRACE          reduce using rule 26 (ResultOpt -> Result .)
    COMMA           reduce using rule 26 (ResultOpt -> Result .)
    LPAREN          reduce using rule 26 (ResultOpt -> Result .)
    STRING          reduce using rule 26 (ResultOpt -> Result .)
    COLON           reduce using rule 26 (ResultOpt -> Result .)


state 123

    (79) Function -> Signature FunctionBody .

    SEMICOL         reduce using rule 79 (Function -> Signature FunctionBody .)


state 124

    (40) Block -> LBRACE . StatementList RBRACE
    (41) StatementList -> . StatementRep
    (42) StatementRep -> . StatementRep Statement SEMICOL
    (43) StatementRep -> . epsilon
    (240) epsilon -> .

    RETURN          reduce using rule 240 (epsilon -> .)
    BREAK           reduce using rule 240 (epsilon -> .)
    CONTINUE        reduce using rule 240 (epsilon -> .)
    GOTO            reduce using rule 240 (epsilon -> .)
    LBRACE          reduce using rule 240 (epsilon -> .)
    IF              reduce using rule 240 (epsilon -> .)
    FOR             reduce using rule 240 (epsilon -> .)
    CONST           reduce using rule 240 (epsilon -> .)
    TYPE            reduce using rule 240 (epsilon -> .)
    VAR             reduce using rule 240 (epsilon -> .)
    IDENTIFIER      reduce using rule 240 (epsilon -> .)
    SWITCH          reduce using rule 240 (epsilon -> .)
    PLUS            reduce using rule 240 (epsilon -> .)
    MINUS           reduce using rule 240 (epsilon -> .)
    TIMES           reduce using rule 240 (epsilon -> .)
    AMPERS          reduce using rule 240 (epsilon -> .)
    NOT             reduce using rule 240 (epsilon -> .)
    LPAREN          reduce using rule 240 (epsilon -> .)
    INTEGER         reduce using rule 240 (epsilon -> .)
    FLOAT           reduce using rule 240 (epsilon -> .)
    IMAGINARY       reduce using rule 240 (epsilon -> .)
    RUNE            reduce using rule 240 (epsilon -> .)
    STRING          reduce using rule 240 (epsilon -> .)
    TYPEX           reduce using rule 240 (epsilon -> .)
    LBRACK          reduce using rule 240 (epsilon -> .)
    STRUCT          reduce using rule 240 (epsilon -> .)
    FUNC            reduce using rule 240 (epsilon -> .)
    SEMICOL         reduce using rule 240 (epsilon -> .)
    RBRACE          reduce using rule 240 (epsilon -> .)

    epsilon                        shift and go to state 179
    StatementRep                   shift and go to state 178
    StatementList                  shift and go to state 180

state 125

    (80) FunctionBody -> Block .

    SEMICOL         reduce using rule 80 (FunctionBody -> Block .)


state 126

    (30) Parameters -> LPAREN ParameterListOpt . RPAREN

    RPAREN          shift and go to state 181


state 127

    (34) ParametersList -> IdentifierList . Type
    (38) ParameterDecl -> IdentifierList . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 61
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    Type                           shift and go to state 182
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    TypeLit                        shift and go to state 55

state 128

    (35) ParametersList -> ParameterDeclCommaRep .
    (36) ParameterDeclCommaRep -> ParameterDeclCommaRep . COMMA ParameterDecl

    RPAREN          reduce using rule 35 (ParametersList -> ParameterDeclCommaRep .)
    COMMA           shift and go to state 183


state 129

    (33) ParametersList -> Type .
    (39) ParameterDecl -> Type .

    RPAREN          reduce using rule 33 (ParametersList -> Type .)
    COMMA           reduce using rule 39 (ParameterDecl -> Type .)


state 130

    (31) ParameterListOpt -> ParametersList .

    RPAREN          reduce using rule 31 (ParameterListOpt -> ParametersList .)


state 131

    (37) ParameterDeclCommaRep -> ParameterDecl . COMMA ParameterDecl

    COMMA           shift and go to state 184


state 132

    (32) ParameterListOpt -> epsilon .

    RPAREN          reduce using rule 32 (ParameterListOpt -> epsilon .)


state 133

    (68) VarDecl -> VAR LPAREN VarSpecRep RPAREN .

    SEMICOL         reduce using rule 68 (VarDecl -> VAR LPAREN VarSpecRep RPAREN .)


state 134

    (69) VarSpecRep -> VarSpecRep VarSpec . SEMICOL

    SEMICOL         shift and go to state 185


state 135

    (72) VarSpec -> IdentifierList EQUAL ExpressionList .

    SEMICOL         reduce using rule 72 (VarSpec -> IdentifierList EQUAL ExpressionList .)


state 136

    (104) ExpressionList -> Expression . ExpressionRep
    (108) Expression -> Expression . AddOp Term
    (109) Expression -> Expression . AddOp UnaryExpr
    (105) ExpressionRep -> . ExpressionRep COMMA Expression
    (106) ExpressionRep -> . epsilon
    (128) AddOp -> . PLUS
    (129) AddOp -> . MINUS
    (130) AddOp -> . OR
    (131) AddOp -> . CARET
    (240) epsilon -> .

    PLUS            shift and go to state 174
    MINUS           shift and go to state 175
    OR              shift and go to state 173
    CARET           shift and go to state 171
    COMMA           reduce using rule 240 (epsilon -> .)
    SEMICOL         reduce using rule 240 (epsilon -> .)
    RPAREN          reduce using rule 240 (epsilon -> .)
    LBRACE          reduce using rule 240 (epsilon -> .)
    COLON           reduce using rule 240 (epsilon -> .)

    AddOp                          shift and go to state 172
    ExpressionRep                  shift and go to state 186
    epsilon                        shift and go to state 187

state 137

    (73) ExpressionListOpt -> EQUAL . ExpressionList
    (104) ExpressionList -> . Expression ExpressionRep
    (107) Expression -> . UnaryExpr
    (108) Expression -> . Expression AddOp Term
    (109) Expression -> . Expression AddOp UnaryExpr
    (110) Expression -> . Term
    (115) UnaryExpr -> . PrimaryExpr
    (116) UnaryExpr -> . UnaryOp UnaryExpr
    (111) Term -> . Term MulOp Term
    (112) Term -> . UnaryExpr MulOp UnaryExpr
    (92) PrimaryExpr -> . Operand
    (93) PrimaryExpr -> . Conversion
    (94) PrimaryExpr -> . PrimaryExpr Selector
    (95) PrimaryExpr -> . PrimaryExpr Index
    (96) PrimaryExpr -> . PrimaryExpr Slice
    (97) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (91) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (90) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . INTEGER
    (86) BasicLit -> . FLOAT
    (87) BasicLit -> . IMAGINARY
    (88) BasicLit -> . RUNE
    (89) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 101
    MINUS           shift and go to state 98
    TIMES           shift and go to state 108
    AMPERS          shift and go to state 114
    NOT             shift and go to state 115
    LPAREN          shift and go to state 111
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 113
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 106
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    UnaryOp                        shift and go to state 93
    Conversion                     shift and go to state 92
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    Type                           shift and go to state 97
    OperandName                    shift and go to state 99
    TypeLit                        shift and go to state 55
    TypeName                       shift and go to state 56
    Term                           shift and go to state 105
    UnaryExpr                      shift and go to state 107
    PrimaryExpr                    shift and go to state 94
    ExpressionList                 shift and go to state 188
    Expression                     shift and go to state 136
    PointerType                    shift and go to state 66
    BasicLit                       shift and go to state 100
    Operand                        shift and go to state 109
    FunctionType                   shift and go to state 67
    StructType                     shift and go to state 58

state 138

    (74) ExpressionListOpt -> epsilon .

    SEMICOL         reduce using rule 74 (ExpressionListOpt -> epsilon .)


state 139

    (71) VarSpec -> IdentifierList Type ExpressionListOpt .

    SEMICOL         reduce using rule 71 (VarSpec -> IdentifierList Type ExpressionListOpt .)


state 140

    (60) TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN .

    SEMICOL         reduce using rule 60 (TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN .)


state 141

    (61) TypeSpecRep -> TypeSpecRep TypeSpec . SEMICOL

    SEMICOL         shift and go to state 189


state 142

    (65) AliasDecl -> IDENTIFIER EQUAL Type .

    SEMICOL         reduce using rule 65 (AliasDecl -> IDENTIFIER EQUAL Type .)


state 143

    (233) ImportSpecRep -> ImportSpecRep ImportSpec SEMICOL .

    RPAREN          reduce using rule 233 (ImportSpecRep -> ImportSpecRep ImportSpec SEMICOL .)
    DOT             reduce using rule 233 (ImportSpecRep -> ImportSpecRep ImportSpec SEMICOL .)
    IDENTIFIER      reduce using rule 233 (ImportSpecRep -> ImportSpecRep ImportSpec SEMICOL .)
    STRING          reduce using rule 233 (ImportSpecRep -> ImportSpecRep ImportSpec SEMICOL .)


state 144

    (51) ConstSpecRep -> ConstSpecRep ConstSpec SEMICOL .

    RPAREN          reduce using rule 51 (ConstSpecRep -> ConstSpecRep ConstSpec SEMICOL .)
    IDENTIFIER      reduce using rule 51 (ConstSpecRep -> ConstSpecRep ConstSpec SEMICOL .)


state 145

    (4) Type -> LPAREN Type RPAREN .

    LPAREN          reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    RPAREN          reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    COMMA           reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    COLON           reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    EQUAL           reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    STRING          reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    SEMICOL         reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    LBRACE          reduce using rule 4 (Type -> LPAREN Type RPAREN .)


state 146

    (54) TypeExprListOpt -> TypeOpt EQUAL ExpressionList .

    SEMICOL         reduce using rule 54 (TypeExprListOpt -> TypeOpt EQUAL ExpressionList .)


state 147

    (15) StructType -> STRUCT LBRACE FieldDeclRep . RBRACE
    (16) FieldDeclRep -> FieldDeclRep . FieldDecl SEMICOL
    (18) FieldDecl -> . IdentifierList Type TagOpt
    (56) IdentifierList -> . IDENTIFIER IdentifierRep

    RBRACE          shift and go to state 192
    IDENTIFIER      shift and go to state 34

    FieldDecl                      shift and go to state 190
    IdentifierList                 shift and go to state 191

state 148

    (17) FieldDeclRep -> epsilon .

    RBRACE          reduce using rule 17 (FieldDeclRep -> epsilon .)
    IDENTIFIER      reduce using rule 17 (FieldDeclRep -> epsilon .)


state 149

    (116) UnaryExpr -> UnaryOp UnaryExpr .

    TIMES           reduce using rule 116 (UnaryExpr -> UnaryOp UnaryExpr .)
    DIVIDE          reduce using rule 116 (UnaryExpr -> UnaryOp UnaryExpr .)
    MOD             reduce using rule 116 (UnaryExpr -> UnaryOp UnaryExpr .)
    AMPERS          reduce using rule 116 (UnaryExpr -> UnaryOp UnaryExpr .)
    LL              reduce using rule 116 (UnaryExpr -> UnaryOp UnaryExpr .)
    GG              reduce using rule 116 (UnaryExpr -> UnaryOp UnaryExpr .)
    AMPCAR          reduce using rule 116 (UnaryExpr -> UnaryOp UnaryExpr .)
    PLUS            reduce using rule 116 (UnaryExpr -> UnaryOp UnaryExpr .)
    MINUS           reduce using rule 116 (UnaryExpr -> UnaryOp UnaryExpr .)
    OR              reduce using rule 116 (UnaryExpr -> UnaryOp UnaryExpr .)
    CARET           reduce using rule 116 (UnaryExpr -> UnaryOp UnaryExpr .)
    COMMA           reduce using rule 116 (UnaryExpr -> UnaryOp UnaryExpr .)
    SEMICOL         reduce using rule 116 (UnaryExpr -> UnaryOp UnaryExpr .)
    PLUSPLUS        reduce using rule 116 (UnaryExpr -> UnaryOp UnaryExpr .)
    MINUSMIN        reduce using rule 116 (UnaryExpr -> UnaryOp UnaryExpr .)
    LBRACE          reduce using rule 116 (UnaryExpr -> UnaryOp UnaryExpr .)
    PLUSEQ          reduce using rule 116 (UnaryExpr -> UnaryOp UnaryExpr .)
    MINUSEQ         reduce using rule 116 (UnaryExpr -> UnaryOp UnaryExpr .)
    TIMESEQ         reduce using rule 116 (UnaryExpr -> UnaryOp UnaryExpr .)
    DIVIDEEQ        reduce using rule 116 (UnaryExpr -> UnaryOp UnaryExpr .)
    MODEQ           reduce using rule 116 (UnaryExpr -> UnaryOp UnaryExpr .)
    AMPEQ           reduce using rule 116 (UnaryExpr -> UnaryOp UnaryExpr .)
    OREQ            reduce using rule 116 (UnaryExpr -> UnaryOp UnaryExpr .)
    CAREQ           reduce using rule 116 (UnaryExpr -> UnaryOp UnaryExpr .)
    LLEQ            reduce using rule 116 (UnaryExpr -> UnaryOp UnaryExpr .)
    GGEQ            reduce using rule 116 (UnaryExpr -> UnaryOp UnaryExpr .)
    EQUAL           reduce using rule 116 (UnaryExpr -> UnaryOp UnaryExpr .)
    RBRACK          reduce using rule 116 (UnaryExpr -> UnaryOp UnaryExpr .)
    RPAREN          reduce using rule 116 (UnaryExpr -> UnaryOp UnaryExpr .)
    COLON           reduce using rule 116 (UnaryExpr -> UnaryOp UnaryExpr .)


state 150

    (95) PrimaryExpr -> PrimaryExpr Index .

    DOT             reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    LBRACK          reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    LPAREN          reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    TIMES           reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    DIVIDE          reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    MOD             reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    AMPERS          reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    LL              reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    GG              reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    AMPCAR          reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    PLUS            reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    MINUS           reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    OR              reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    CARET           reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    COMMA           reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    SEMICOL         reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    RPAREN          reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    LBRACE          reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    COLON           reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    PLUSEQ          reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    MINUSEQ         reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    TIMESEQ         reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    DIVIDEEQ        reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    MODEQ           reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    AMPEQ           reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    OREQ            reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    CAREQ           reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    LLEQ            reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    GGEQ            reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    EQUAL           reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    PLUSPLUS        reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    MINUSMIN        reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    RBRACK          reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)


state 151

    (96) PrimaryExpr -> PrimaryExpr Slice .

    DOT             reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    LBRACK          reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    LPAREN          reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    TIMES           reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    DIVIDE          reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    MOD             reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    AMPERS          reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    LL              reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    GG              reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    AMPCAR          reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    PLUS            reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    MINUS           reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    OR              reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    CARET           reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    COMMA           reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    SEMICOL         reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    RPAREN          reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    LBRACE          reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    COLON           reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    PLUSEQ          reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    MINUSEQ         reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    TIMESEQ         reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    DIVIDEEQ        reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    MODEQ           reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    AMPEQ           reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    OREQ            reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    CAREQ           reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    LLEQ            reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    GGEQ            reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    EQUAL           reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    PLUSPLUS        reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    MINUSMIN        reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    RBRACK          reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)


state 152

    (99) Index -> LBRACK . Expression RBRACK
    (100) Slice -> LBRACK . ExpressionOpt COLON ExpressionOpt RBRACK
    (107) Expression -> . UnaryExpr
    (108) Expression -> . Expression AddOp Term
    (109) Expression -> . Expression AddOp UnaryExpr
    (110) Expression -> . Term
    (113) ExpressionOpt -> . Expression
    (114) ExpressionOpt -> . epsilon
    (115) UnaryExpr -> . PrimaryExpr
    (116) UnaryExpr -> . UnaryOp UnaryExpr
    (111) Term -> . Term MulOp Term
    (112) Term -> . UnaryExpr MulOp UnaryExpr
    (240) epsilon -> .
    (92) PrimaryExpr -> . Operand
    (93) PrimaryExpr -> . Conversion
    (94) PrimaryExpr -> . PrimaryExpr Selector
    (95) PrimaryExpr -> . PrimaryExpr Index
    (96) PrimaryExpr -> . PrimaryExpr Slice
    (97) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (91) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (90) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . INTEGER
    (86) BasicLit -> . FLOAT
    (87) BasicLit -> . IMAGINARY
    (88) BasicLit -> . RUNE
    (89) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    COLON           reduce using rule 240 (epsilon -> .)
    PLUS            shift and go to state 101
    MINUS           shift and go to state 98
    TIMES           shift and go to state 108
    AMPERS          shift and go to state 114
    NOT             shift and go to state 115
    LPAREN          shift and go to state 111
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 113
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 106
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 92
    UnaryOp                        shift and go to state 93
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    Type                           shift and go to state 97
    OperandName                    shift and go to state 99
    BasicLit                       shift and go to state 100
    TypeName                       shift and go to state 56
    ExpressionOpt                  shift and go to state 193
    Term                           shift and go to state 105
    epsilon                        shift and go to state 194
    UnaryExpr                      shift and go to state 107
    PrimaryExpr                    shift and go to state 94
    Expression                     shift and go to state 195
    PointerType                    shift and go to state 66
    TypeLit                        shift and go to state 55
    Operand                        shift and go to state 109
    FunctionType                   shift and go to state 67
    StructType                     shift and go to state 58

state 153

    (94) PrimaryExpr -> PrimaryExpr Selector .

    DOT             reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    LBRACK          reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    LPAREN          reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    TIMES           reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    DIVIDE          reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    MOD             reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    AMPERS          reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    LL              reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    GG              reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    AMPCAR          reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    PLUS            reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    MINUS           reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    OR              reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    CARET           reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    COMMA           reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    SEMICOL         reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    RPAREN          reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    LBRACE          reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    COLON           reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    PLUSEQ          reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    MINUSEQ         reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    TIMESEQ         reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    DIVIDEEQ        reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    MODEQ           reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    AMPEQ           reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    OREQ            reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    CAREQ           reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    LLEQ            reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    GGEQ            reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    EQUAL           reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    PLUSPLUS        reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    MINUSMIN        reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    RBRACK          reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)


state 154

    (97) PrimaryExpr -> PrimaryExpr Arguments .

    DOT             reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    LBRACK          reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    LPAREN          reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    TIMES           reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    DIVIDE          reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    MOD             reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    AMPERS          reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    LL              reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    GG              reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    AMPCAR          reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    PLUS            reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    MINUS           reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    OR              reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    CARET           reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    COMMA           reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    SEMICOL         reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    RPAREN          reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    LBRACE          reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    COLON           reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    PLUSEQ          reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    MINUSEQ         reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    TIMESEQ         reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    DIVIDEEQ        reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    MODEQ           reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    AMPEQ           reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    OREQ            reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    CAREQ           reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    LLEQ            reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    GGEQ            reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    EQUAL           reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    PLUSPLUS        reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    MINUSMIN        reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    RBRACK          reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)


state 155

    (101) Arguments -> LPAREN . ExpressionListTypeOpt RPAREN
    (102) ExpressionListTypeOpt -> . ExpressionList
    (103) ExpressionListTypeOpt -> . epsilon
    (104) ExpressionList -> . Expression ExpressionRep
    (240) epsilon -> .
    (107) Expression -> . UnaryExpr
    (108) Expression -> . Expression AddOp Term
    (109) Expression -> . Expression AddOp UnaryExpr
    (110) Expression -> . Term
    (115) UnaryExpr -> . PrimaryExpr
    (116) UnaryExpr -> . UnaryOp UnaryExpr
    (111) Term -> . Term MulOp Term
    (112) Term -> . UnaryExpr MulOp UnaryExpr
    (92) PrimaryExpr -> . Operand
    (93) PrimaryExpr -> . Conversion
    (94) PrimaryExpr -> . PrimaryExpr Selector
    (95) PrimaryExpr -> . PrimaryExpr Index
    (96) PrimaryExpr -> . PrimaryExpr Slice
    (97) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (91) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (90) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . INTEGER
    (86) BasicLit -> . FLOAT
    (87) BasicLit -> . IMAGINARY
    (88) BasicLit -> . RUNE
    (89) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    RPAREN          reduce using rule 240 (epsilon -> .)
    PLUS            shift and go to state 101
    MINUS           shift and go to state 98
    TIMES           shift and go to state 108
    AMPERS          shift and go to state 114
    NOT             shift and go to state 115
    LPAREN          shift and go to state 111
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 113
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 106
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    UnaryOp                        shift and go to state 93
    Conversion                     shift and go to state 92
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    Operand                        shift and go to state 109
    Type                           shift and go to state 97
    OperandName                    shift and go to state 99
    BasicLit                       shift and go to state 100
    TypeName                       shift and go to state 56
    Term                           shift and go to state 105
    epsilon                        shift and go to state 196
    UnaryExpr                      shift and go to state 107
    ExpressionListTypeOpt          shift and go to state 197
    ExpressionList                 shift and go to state 198
    Expression                     shift and go to state 136
    PointerType                    shift and go to state 66
    TypeLit                        shift and go to state 55
    PrimaryExpr                    shift and go to state 94
    FunctionType                   shift and go to state 67
    StructType                     shift and go to state 58

state 156

    (98) Selector -> DOT . IDENTIFIER

    IDENTIFIER      shift and go to state 199


state 157

    (91) Conversion -> Type LPAREN . Expression RPAREN
    (107) Expression -> . UnaryExpr
    (108) Expression -> . Expression AddOp Term
    (109) Expression -> . Expression AddOp UnaryExpr
    (110) Expression -> . Term
    (115) UnaryExpr -> . PrimaryExpr
    (116) UnaryExpr -> . UnaryOp UnaryExpr
    (111) Term -> . Term MulOp Term
    (112) Term -> . UnaryExpr MulOp UnaryExpr
    (92) PrimaryExpr -> . Operand
    (93) PrimaryExpr -> . Conversion
    (94) PrimaryExpr -> . PrimaryExpr Selector
    (95) PrimaryExpr -> . PrimaryExpr Index
    (96) PrimaryExpr -> . PrimaryExpr Slice
    (97) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (91) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (90) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . INTEGER
    (86) BasicLit -> . FLOAT
    (87) BasicLit -> . IMAGINARY
    (88) BasicLit -> . RUNE
    (89) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 101
    MINUS           shift and go to state 98
    TIMES           shift and go to state 108
    AMPERS          shift and go to state 114
    NOT             shift and go to state 115
    LPAREN          shift and go to state 111
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 113
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 106
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 92
    UnaryOp                        shift and go to state 93
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    Type                           shift and go to state 97
    OperandName                    shift and go to state 99
    BasicLit                       shift and go to state 100
    TypeName                       shift and go to state 56
    Term                           shift and go to state 105
    UnaryExpr                      shift and go to state 107
    PrimaryExpr                    shift and go to state 94
    Expression                     shift and go to state 200
    PointerType                    shift and go to state 66
    TypeLit                        shift and go to state 55
    Operand                        shift and go to state 109
    FunctionType                   shift and go to state 67
    StructType                     shift and go to state 58

state 158

    (133) MulOp -> DIVIDE .

    PLUS            reduce using rule 133 (MulOp -> DIVIDE .)
    MINUS           reduce using rule 133 (MulOp -> DIVIDE .)
    TIMES           reduce using rule 133 (MulOp -> DIVIDE .)
    AMPERS          reduce using rule 133 (MulOp -> DIVIDE .)
    NOT             reduce using rule 133 (MulOp -> DIVIDE .)
    LPAREN          reduce using rule 133 (MulOp -> DIVIDE .)
    IDENTIFIER      reduce using rule 133 (MulOp -> DIVIDE .)
    INTEGER         reduce using rule 133 (MulOp -> DIVIDE .)
    FLOAT           reduce using rule 133 (MulOp -> DIVIDE .)
    IMAGINARY       reduce using rule 133 (MulOp -> DIVIDE .)
    RUNE            reduce using rule 133 (MulOp -> DIVIDE .)
    STRING          reduce using rule 133 (MulOp -> DIVIDE .)
    TYPEX           reduce using rule 133 (MulOp -> DIVIDE .)
    LBRACK          reduce using rule 133 (MulOp -> DIVIDE .)
    STRUCT          reduce using rule 133 (MulOp -> DIVIDE .)
    FUNC            reduce using rule 133 (MulOp -> DIVIDE .)


state 159

    (138) MulOp -> AMPCAR .

    PLUS            reduce using rule 138 (MulOp -> AMPCAR .)
    MINUS           reduce using rule 138 (MulOp -> AMPCAR .)
    TIMES           reduce using rule 138 (MulOp -> AMPCAR .)
    AMPERS          reduce using rule 138 (MulOp -> AMPCAR .)
    NOT             reduce using rule 138 (MulOp -> AMPCAR .)
    LPAREN          reduce using rule 138 (MulOp -> AMPCAR .)
    IDENTIFIER      reduce using rule 138 (MulOp -> AMPCAR .)
    INTEGER         reduce using rule 138 (MulOp -> AMPCAR .)
    FLOAT           reduce using rule 138 (MulOp -> AMPCAR .)
    IMAGINARY       reduce using rule 138 (MulOp -> AMPCAR .)
    RUNE            reduce using rule 138 (MulOp -> AMPCAR .)
    STRING          reduce using rule 138 (MulOp -> AMPCAR .)
    TYPEX           reduce using rule 138 (MulOp -> AMPCAR .)
    LBRACK          reduce using rule 138 (MulOp -> AMPCAR .)
    STRUCT          reduce using rule 138 (MulOp -> AMPCAR .)
    FUNC            reduce using rule 138 (MulOp -> AMPCAR .)


state 160

    (136) MulOp -> LL .

    PLUS            reduce using rule 136 (MulOp -> LL .)
    MINUS           reduce using rule 136 (MulOp -> LL .)
    TIMES           reduce using rule 136 (MulOp -> LL .)
    AMPERS          reduce using rule 136 (MulOp -> LL .)
    NOT             reduce using rule 136 (MulOp -> LL .)
    LPAREN          reduce using rule 136 (MulOp -> LL .)
    IDENTIFIER      reduce using rule 136 (MulOp -> LL .)
    INTEGER         reduce using rule 136 (MulOp -> LL .)
    FLOAT           reduce using rule 136 (MulOp -> LL .)
    IMAGINARY       reduce using rule 136 (MulOp -> LL .)
    RUNE            reduce using rule 136 (MulOp -> LL .)
    STRING          reduce using rule 136 (MulOp -> LL .)
    TYPEX           reduce using rule 136 (MulOp -> LL .)
    LBRACK          reduce using rule 136 (MulOp -> LL .)
    STRUCT          reduce using rule 136 (MulOp -> LL .)
    FUNC            reduce using rule 136 (MulOp -> LL .)


state 161

    (135) MulOp -> AMPERS .

    PLUS            reduce using rule 135 (MulOp -> AMPERS .)
    MINUS           reduce using rule 135 (MulOp -> AMPERS .)
    TIMES           reduce using rule 135 (MulOp -> AMPERS .)
    AMPERS          reduce using rule 135 (MulOp -> AMPERS .)
    NOT             reduce using rule 135 (MulOp -> AMPERS .)
    LPAREN          reduce using rule 135 (MulOp -> AMPERS .)
    IDENTIFIER      reduce using rule 135 (MulOp -> AMPERS .)
    INTEGER         reduce using rule 135 (MulOp -> AMPERS .)
    FLOAT           reduce using rule 135 (MulOp -> AMPERS .)
    IMAGINARY       reduce using rule 135 (MulOp -> AMPERS .)
    RUNE            reduce using rule 135 (MulOp -> AMPERS .)
    STRING          reduce using rule 135 (MulOp -> AMPERS .)
    TYPEX           reduce using rule 135 (MulOp -> AMPERS .)
    LBRACK          reduce using rule 135 (MulOp -> AMPERS .)
    STRUCT          reduce using rule 135 (MulOp -> AMPERS .)
    FUNC            reduce using rule 135 (MulOp -> AMPERS .)


state 162

    (132) MulOp -> TIMES .

    PLUS            reduce using rule 132 (MulOp -> TIMES .)
    MINUS           reduce using rule 132 (MulOp -> TIMES .)
    TIMES           reduce using rule 132 (MulOp -> TIMES .)
    AMPERS          reduce using rule 132 (MulOp -> TIMES .)
    NOT             reduce using rule 132 (MulOp -> TIMES .)
    LPAREN          reduce using rule 132 (MulOp -> TIMES .)
    IDENTIFIER      reduce using rule 132 (MulOp -> TIMES .)
    INTEGER         reduce using rule 132 (MulOp -> TIMES .)
    FLOAT           reduce using rule 132 (MulOp -> TIMES .)
    IMAGINARY       reduce using rule 132 (MulOp -> TIMES .)
    RUNE            reduce using rule 132 (MulOp -> TIMES .)
    STRING          reduce using rule 132 (MulOp -> TIMES .)
    TYPEX           reduce using rule 132 (MulOp -> TIMES .)
    LBRACK          reduce using rule 132 (MulOp -> TIMES .)
    STRUCT          reduce using rule 132 (MulOp -> TIMES .)
    FUNC            reduce using rule 132 (MulOp -> TIMES .)


state 163

    (137) MulOp -> GG .

    PLUS            reduce using rule 137 (MulOp -> GG .)
    MINUS           reduce using rule 137 (MulOp -> GG .)
    TIMES           reduce using rule 137 (MulOp -> GG .)
    AMPERS          reduce using rule 137 (MulOp -> GG .)
    NOT             reduce using rule 137 (MulOp -> GG .)
    LPAREN          reduce using rule 137 (MulOp -> GG .)
    IDENTIFIER      reduce using rule 137 (MulOp -> GG .)
    INTEGER         reduce using rule 137 (MulOp -> GG .)
    FLOAT           reduce using rule 137 (MulOp -> GG .)
    IMAGINARY       reduce using rule 137 (MulOp -> GG .)
    RUNE            reduce using rule 137 (MulOp -> GG .)
    STRING          reduce using rule 137 (MulOp -> GG .)
    TYPEX           reduce using rule 137 (MulOp -> GG .)
    LBRACK          reduce using rule 137 (MulOp -> GG .)
    STRUCT          reduce using rule 137 (MulOp -> GG .)
    FUNC            reduce using rule 137 (MulOp -> GG .)


state 164

    (111) Term -> Term MulOp . Term
    (111) Term -> . Term MulOp Term
    (112) Term -> . UnaryExpr MulOp UnaryExpr
    (115) UnaryExpr -> . PrimaryExpr
    (116) UnaryExpr -> . UnaryOp UnaryExpr
    (92) PrimaryExpr -> . Operand
    (93) PrimaryExpr -> . Conversion
    (94) PrimaryExpr -> . PrimaryExpr Selector
    (95) PrimaryExpr -> . PrimaryExpr Index
    (96) PrimaryExpr -> . PrimaryExpr Slice
    (97) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (91) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (90) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . INTEGER
    (86) BasicLit -> . FLOAT
    (87) BasicLit -> . IMAGINARY
    (88) BasicLit -> . RUNE
    (89) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 101
    MINUS           shift and go to state 98
    TIMES           shift and go to state 108
    AMPERS          shift and go to state 114
    NOT             shift and go to state 115
    LPAREN          shift and go to state 111
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 113
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 106
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 92
    UnaryOp                        shift and go to state 93
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    Type                           shift and go to state 97
    OperandName                    shift and go to state 99
    BasicLit                       shift and go to state 100
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    Term                           shift and go to state 201
    UnaryExpr                      shift and go to state 202
    PrimaryExpr                    shift and go to state 94
    PointerType                    shift and go to state 66
    TypeLit                        shift and go to state 55
    Operand                        shift and go to state 109
    FunctionType                   shift and go to state 67

state 165

    (134) MulOp -> MOD .

    PLUS            reduce using rule 134 (MulOp -> MOD .)
    MINUS           reduce using rule 134 (MulOp -> MOD .)
    TIMES           reduce using rule 134 (MulOp -> MOD .)
    AMPERS          reduce using rule 134 (MulOp -> MOD .)
    NOT             reduce using rule 134 (MulOp -> MOD .)
    LPAREN          reduce using rule 134 (MulOp -> MOD .)
    IDENTIFIER      reduce using rule 134 (MulOp -> MOD .)
    INTEGER         reduce using rule 134 (MulOp -> MOD .)
    FLOAT           reduce using rule 134 (MulOp -> MOD .)
    IMAGINARY       reduce using rule 134 (MulOp -> MOD .)
    RUNE            reduce using rule 134 (MulOp -> MOD .)
    STRING          reduce using rule 134 (MulOp -> MOD .)
    TYPEX           reduce using rule 134 (MulOp -> MOD .)
    LBRACK          reduce using rule 134 (MulOp -> MOD .)
    STRUCT          reduce using rule 134 (MulOp -> MOD .)
    FUNC            reduce using rule 134 (MulOp -> MOD .)


state 166

    (112) Term -> UnaryExpr MulOp . UnaryExpr
    (115) UnaryExpr -> . PrimaryExpr
    (116) UnaryExpr -> . UnaryOp UnaryExpr
    (92) PrimaryExpr -> . Operand
    (93) PrimaryExpr -> . Conversion
    (94) PrimaryExpr -> . PrimaryExpr Selector
    (95) PrimaryExpr -> . PrimaryExpr Index
    (96) PrimaryExpr -> . PrimaryExpr Slice
    (97) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (91) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (90) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . INTEGER
    (86) BasicLit -> . FLOAT
    (87) BasicLit -> . IMAGINARY
    (88) BasicLit -> . RUNE
    (89) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 101
    MINUS           shift and go to state 98
    TIMES           shift and go to state 108
    AMPERS          shift and go to state 114
    NOT             shift and go to state 115
    LPAREN          shift and go to state 111
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 113
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 106
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 92
    UnaryOp                        shift and go to state 93
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    Type                           shift and go to state 97
    OperandName                    shift and go to state 99
    BasicLit                       shift and go to state 100
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    UnaryExpr                      shift and go to state 203
    PrimaryExpr                    shift and go to state 94
    PointerType                    shift and go to state 66
    TypeLit                        shift and go to state 55
    Operand                        shift and go to state 109
    FunctionType                   shift and go to state 67

state 167

    (12) ArrayType -> LBRACK ArrayLength RBRACK . ElementType
    (14) ElementType -> . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 61
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    TypeLit                        shift and go to state 55
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    ElementType                    shift and go to state 205
    Type                           shift and go to state 204

state 168

    (4) Type -> LPAREN Type . RPAREN
    (91) Conversion -> Type . LPAREN Expression RPAREN

    RPAREN          shift and go to state 145
    LPAREN          shift and go to state 157


state 169

    (4) Type -> LPAREN . Type RPAREN
    (83) Operand -> LPAREN . Expression RPAREN
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (107) Expression -> . UnaryExpr
    (108) Expression -> . Expression AddOp Term
    (109) Expression -> . Expression AddOp UnaryExpr
    (110) Expression -> . Term
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (115) UnaryExpr -> . PrimaryExpr
    (116) UnaryExpr -> . UnaryOp UnaryExpr
    (111) Term -> . Term MulOp Term
    (112) Term -> . UnaryExpr MulOp UnaryExpr
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature
    (92) PrimaryExpr -> . Operand
    (93) PrimaryExpr -> . Conversion
    (94) PrimaryExpr -> . PrimaryExpr Selector
    (95) PrimaryExpr -> . PrimaryExpr Index
    (96) PrimaryExpr -> . PrimaryExpr Slice
    (97) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (91) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (90) OperandName -> . IDENTIFIER
    (85) BasicLit -> . INTEGER
    (86) BasicLit -> . FLOAT
    (87) BasicLit -> . IMAGINARY
    (88) BasicLit -> . RUNE
    (89) BasicLit -> . STRING

    LPAREN          shift and go to state 169
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 206
    FUNC            shift and go to state 52
    PLUS            shift and go to state 101
    MINUS           shift and go to state 98
    AMPERS          shift and go to state 114
    NOT             shift and go to state 115
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 113
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 106

    Conversion                     shift and go to state 92
    StructType                     shift and go to state 58
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    Type                           shift and go to state 168
    OperandName                    shift and go to state 99
    TypeLit                        shift and go to state 55
    UnaryOp                        shift and go to state 93
    TypeName                       shift and go to state 56
    Term                           shift and go to state 105
    UnaryExpr                      shift and go to state 107
    PrimaryExpr                    shift and go to state 94
    Expression                     shift and go to state 170
    PointerType                    shift and go to state 66
    BasicLit                       shift and go to state 100
    Operand                        shift and go to state 109
    FunctionType                   shift and go to state 67

state 170

    (83) Operand -> LPAREN Expression . RPAREN
    (108) Expression -> Expression . AddOp Term
    (109) Expression -> Expression . AddOp UnaryExpr
    (128) AddOp -> . PLUS
    (129) AddOp -> . MINUS
    (130) AddOp -> . OR
    (131) AddOp -> . CARET

    RPAREN          shift and go to state 207
    PLUS            shift and go to state 174
    MINUS           shift and go to state 175
    OR              shift and go to state 173
    CARET           shift and go to state 171

    AddOp                          shift and go to state 172

state 171

    (131) AddOp -> CARET .

    PLUS            reduce using rule 131 (AddOp -> CARET .)
    MINUS           reduce using rule 131 (AddOp -> CARET .)
    TIMES           reduce using rule 131 (AddOp -> CARET .)
    AMPERS          reduce using rule 131 (AddOp -> CARET .)
    NOT             reduce using rule 131 (AddOp -> CARET .)
    LPAREN          reduce using rule 131 (AddOp -> CARET .)
    IDENTIFIER      reduce using rule 131 (AddOp -> CARET .)
    INTEGER         reduce using rule 131 (AddOp -> CARET .)
    FLOAT           reduce using rule 131 (AddOp -> CARET .)
    IMAGINARY       reduce using rule 131 (AddOp -> CARET .)
    RUNE            reduce using rule 131 (AddOp -> CARET .)
    STRING          reduce using rule 131 (AddOp -> CARET .)
    TYPEX           reduce using rule 131 (AddOp -> CARET .)
    LBRACK          reduce using rule 131 (AddOp -> CARET .)
    STRUCT          reduce using rule 131 (AddOp -> CARET .)
    FUNC            reduce using rule 131 (AddOp -> CARET .)


state 172

    (108) Expression -> Expression AddOp . Term
    (109) Expression -> Expression AddOp . UnaryExpr
    (111) Term -> . Term MulOp Term
    (112) Term -> . UnaryExpr MulOp UnaryExpr
    (115) UnaryExpr -> . PrimaryExpr
    (116) UnaryExpr -> . UnaryOp UnaryExpr
    (92) PrimaryExpr -> . Operand
    (93) PrimaryExpr -> . Conversion
    (94) PrimaryExpr -> . PrimaryExpr Selector
    (95) PrimaryExpr -> . PrimaryExpr Index
    (96) PrimaryExpr -> . PrimaryExpr Slice
    (97) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (91) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (90) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . INTEGER
    (86) BasicLit -> . FLOAT
    (87) BasicLit -> . IMAGINARY
    (88) BasicLit -> . RUNE
    (89) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 101
    MINUS           shift and go to state 98
    TIMES           shift and go to state 108
    AMPERS          shift and go to state 114
    NOT             shift and go to state 115
    LPAREN          shift and go to state 111
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 113
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 106
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 92
    UnaryOp                        shift and go to state 93
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    Type                           shift and go to state 97
    OperandName                    shift and go to state 99
    BasicLit                       shift and go to state 100
    TypeName                       shift and go to state 56
    Term                           shift and go to state 208
    UnaryExpr                      shift and go to state 209
    PrimaryExpr                    shift and go to state 94
    PointerType                    shift and go to state 66
    TypeLit                        shift and go to state 55
    Operand                        shift and go to state 109
    FunctionType                   shift and go to state 67
    StructType                     shift and go to state 58

state 173

    (130) AddOp -> OR .

    PLUS            reduce using rule 130 (AddOp -> OR .)
    MINUS           reduce using rule 130 (AddOp -> OR .)
    TIMES           reduce using rule 130 (AddOp -> OR .)
    AMPERS          reduce using rule 130 (AddOp -> OR .)
    NOT             reduce using rule 130 (AddOp -> OR .)
    LPAREN          reduce using rule 130 (AddOp -> OR .)
    IDENTIFIER      reduce using rule 130 (AddOp -> OR .)
    INTEGER         reduce using rule 130 (AddOp -> OR .)
    FLOAT           reduce using rule 130 (AddOp -> OR .)
    IMAGINARY       reduce using rule 130 (AddOp -> OR .)
    RUNE            reduce using rule 130 (AddOp -> OR .)
    STRING          reduce using rule 130 (AddOp -> OR .)
    TYPEX           reduce using rule 130 (AddOp -> OR .)
    LBRACK          reduce using rule 130 (AddOp -> OR .)
    STRUCT          reduce using rule 130 (AddOp -> OR .)
    FUNC            reduce using rule 130 (AddOp -> OR .)


state 174

    (128) AddOp -> PLUS .

    PLUS            reduce using rule 128 (AddOp -> PLUS .)
    MINUS           reduce using rule 128 (AddOp -> PLUS .)
    TIMES           reduce using rule 128 (AddOp -> PLUS .)
    AMPERS          reduce using rule 128 (AddOp -> PLUS .)
    NOT             reduce using rule 128 (AddOp -> PLUS .)
    LPAREN          reduce using rule 128 (AddOp -> PLUS .)
    IDENTIFIER      reduce using rule 128 (AddOp -> PLUS .)
    INTEGER         reduce using rule 128 (AddOp -> PLUS .)
    FLOAT           reduce using rule 128 (AddOp -> PLUS .)
    IMAGINARY       reduce using rule 128 (AddOp -> PLUS .)
    RUNE            reduce using rule 128 (AddOp -> PLUS .)
    STRING          reduce using rule 128 (AddOp -> PLUS .)
    TYPEX           reduce using rule 128 (AddOp -> PLUS .)
    LBRACK          reduce using rule 128 (AddOp -> PLUS .)
    STRUCT          reduce using rule 128 (AddOp -> PLUS .)
    FUNC            reduce using rule 128 (AddOp -> PLUS .)


state 175

    (129) AddOp -> MINUS .

    PLUS            reduce using rule 129 (AddOp -> MINUS .)
    MINUS           reduce using rule 129 (AddOp -> MINUS .)
    TIMES           reduce using rule 129 (AddOp -> MINUS .)
    AMPERS          reduce using rule 129 (AddOp -> MINUS .)
    NOT             reduce using rule 129 (AddOp -> MINUS .)
    LPAREN          reduce using rule 129 (AddOp -> MINUS .)
    IDENTIFIER      reduce using rule 129 (AddOp -> MINUS .)
    INTEGER         reduce using rule 129 (AddOp -> MINUS .)
    FLOAT           reduce using rule 129 (AddOp -> MINUS .)
    IMAGINARY       reduce using rule 129 (AddOp -> MINUS .)
    RUNE            reduce using rule 129 (AddOp -> MINUS .)
    STRING          reduce using rule 129 (AddOp -> MINUS .)
    TYPEX           reduce using rule 129 (AddOp -> MINUS .)
    LBRACK          reduce using rule 129 (AddOp -> MINUS .)
    STRUCT          reduce using rule 129 (AddOp -> MINUS .)
    FUNC            reduce using rule 129 (AddOp -> MINUS .)


state 176

    (57) IdentifierRep -> IdentifierRep COMMA IDENTIFIER .

    COMMA           reduce using rule 57 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    LPAREN          reduce using rule 57 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    TYPEX           reduce using rule 57 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    LBRACK          reduce using rule 57 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    STRUCT          reduce using rule 57 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    TIMES           reduce using rule 57 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    FUNC            reduce using rule 57 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    EQUAL           reduce using rule 57 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    SEMICOL         reduce using rule 57 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)


state 177

    (4) Type -> LPAREN Type . RPAREN
    (33) ParametersList -> Type .
    (39) ParameterDecl -> Type .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 145
    COMMA           reduce using rule 39 (ParameterDecl -> Type .)

  ! RPAREN          [ reduce using rule 33 (ParametersList -> Type .) ]


state 178

    (41) StatementList -> StatementRep .
    (42) StatementRep -> StatementRep . Statement SEMICOL
    (144) Statement -> . Declaration
    (145) Statement -> . LabeledStmt
    (146) Statement -> . SimpleStmt
    (147) Statement -> . ReturnStmt
    (148) Statement -> . BreakStmt
    (149) Statement -> . ContinueStmt
    (150) Statement -> . GotoStmt
    (151) Statement -> . Block
    (152) Statement -> . IfStmt
    (153) Statement -> . SwitchStmt
    (154) Statement -> . ForStmt
    (44) Declaration -> . ConstDecl
    (45) Declaration -> . TypeDecl
    (46) Declaration -> . VarDecl
    (160) LabeledStmt -> . Label COLON Statement
    (155) SimpleStmt -> . epsilon
    (156) SimpleStmt -> . ExpressionStmt
    (157) SimpleStmt -> . IncDecStmt
    (158) SimpleStmt -> . Assignment
    (159) SimpleStmt -> . ShortVarDecl
    (216) ReturnStmt -> . RETURN ExpressionListPureOpt
    (219) BreakStmt -> . BREAK LabelOpt
    (220) ContinueStmt -> . CONTINUE LabelOpt
    (223) GotoStmt -> . GOTO Label
    (40) Block -> . LBRACE StatementList RBRACE
    (178) IfStmt -> . IF Expression Block ElseOpt
    (184) SwitchStmt -> . ExprSwitchStmt
    (185) SwitchStmt -> . TypeSwitchStmt
    (204) ForStmt -> . FOR ConditionBlockOpt Block
    (49) ConstDecl -> . CONST ConstSpec
    (50) ConstDecl -> . CONST LPAREN ConstSpecRep RPAREN
    (59) TypeDecl -> . TYPE TypeSpec
    (60) TypeDecl -> . TYPE LPAREN TypeSpecRep RPAREN
    (67) VarDecl -> . VAR VarSpec
    (68) VarDecl -> . VAR LPAREN VarSpecRep RPAREN
    (161) Label -> . IDENTIFIER
    (240) epsilon -> .
    (162) ExpressionStmt -> . Expression
    (163) IncDecStmt -> . Expression PLUSPLUS
    (164) IncDecStmt -> . Expression MINUSMIN
    (165) Assignment -> . ExpressionList assign_op ExpressionList
    (75) ShortVarDecl -> . IDENTIFIER COLONEQ Expression
    (186) ExprSwitchStmt -> . SWITCH ExpressionOpt LBRACE ExprCaseClauseRep RBRACE
    (192) TypeSwitchStmt -> . SWITCH SimpleStmtOpt TypeSwitchGuard LBRACE TypeCaseClauseOpt RBRACE
    (107) Expression -> . UnaryExpr
    (108) Expression -> . Expression AddOp Term
    (109) Expression -> . Expression AddOp UnaryExpr
    (110) Expression -> . Term
    (104) ExpressionList -> . Expression ExpressionRep
    (115) UnaryExpr -> . PrimaryExpr
    (116) UnaryExpr -> . UnaryOp UnaryExpr
    (111) Term -> . Term MulOp Term
    (112) Term -> . UnaryExpr MulOp UnaryExpr
    (92) PrimaryExpr -> . Operand
    (93) PrimaryExpr -> . Conversion
    (94) PrimaryExpr -> . PrimaryExpr Selector
    (95) PrimaryExpr -> . PrimaryExpr Index
    (96) PrimaryExpr -> . PrimaryExpr Slice
    (97) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (91) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (90) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . INTEGER
    (86) BasicLit -> . FLOAT
    (87) BasicLit -> . IMAGINARY
    (88) BasicLit -> . RUNE
    (89) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    RBRACE          reduce using rule 41 (StatementList -> StatementRep .)
    CASE            reduce using rule 41 (StatementList -> StatementRep .)
    DEFAULT         reduce using rule 41 (StatementList -> StatementRep .)
    RETURN          shift and go to state 216
    BREAK           shift and go to state 232
    CONTINUE        shift and go to state 225
    GOTO            shift and go to state 236
    LBRACE          shift and go to state 124
    IF              shift and go to state 238
    FOR             shift and go to state 222
    CONST           shift and go to state 14
    TYPE            shift and go to state 23
    VAR             shift and go to state 21
    IDENTIFIER      shift and go to state 228
    SEMICOL         reduce using rule 240 (epsilon -> .)
    SWITCH          shift and go to state 226
    PLUS            shift and go to state 101
    MINUS           shift and go to state 98
    TIMES           shift and go to state 108
    AMPERS          shift and go to state 114
    NOT             shift and go to state 115
    LPAREN          shift and go to state 111
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 113
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 106
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    UnaryOp                        shift and go to state 93
    ContinueStmt                   shift and go to state 210
    Conversion                     shift and go to state 92
    SimpleStmt                     shift and go to state 234
    Label                          shift and go to state 217
    ExpressionStmt                 shift and go to state 211
    PointerType                    shift and go to state 66
    ForStmt                        shift and go to state 235
    ExprSwitchStmt                 shift and go to state 218
    Statement                      shift and go to state 212
    Type                           shift and go to state 97
    IfStmt                         shift and go to state 219
    OperandName                    shift and go to state 99
    ArrayType                      shift and go to state 53
    Assignment                     shift and go to state 213
    TypeName                       shift and go to state 56
    IncDecStmt                     shift and go to state 220
    Declaration                    shift and go to state 227
    FunctionType                   shift and go to state 67
    GotoStmt                       shift and go to state 221
    Term                           shift and go to state 105
    TypeDecl                       shift and go to state 19
    LabeledStmt                    shift and go to state 214
    epsilon                        shift and go to state 229
    UnaryExpr                      shift and go to state 107
    Operand                        shift and go to state 109
    ExpressionList                 shift and go to state 230
    Literal                        shift and go to state 95
    Expression                     shift and go to state 231
    ShortVarDecl                   shift and go to state 237
    Block                          shift and go to state 223
    TypeSwitchStmt                 shift and go to state 215
    BreakStmt                      shift and go to state 239
    SwitchStmt                     shift and go to state 224
    VarDecl                        shift and go to state 22
    TypeLit                        shift and go to state 55
    BasicLit                       shift and go to state 100
    PrimaryExpr                    shift and go to state 94
    ReturnStmt                     shift and go to state 233
    ConstDecl                      shift and go to state 18
    StructType                     shift and go to state 58

state 179

    (43) StatementRep -> epsilon .

    RETURN          reduce using rule 43 (StatementRep -> epsilon .)
    BREAK           reduce using rule 43 (StatementRep -> epsilon .)
    CONTINUE        reduce using rule 43 (StatementRep -> epsilon .)
    GOTO            reduce using rule 43 (StatementRep -> epsilon .)
    LBRACE          reduce using rule 43 (StatementRep -> epsilon .)
    IF              reduce using rule 43 (StatementRep -> epsilon .)
    FOR             reduce using rule 43 (StatementRep -> epsilon .)
    CONST           reduce using rule 43 (StatementRep -> epsilon .)
    TYPE            reduce using rule 43 (StatementRep -> epsilon .)
    VAR             reduce using rule 43 (StatementRep -> epsilon .)
    IDENTIFIER      reduce using rule 43 (StatementRep -> epsilon .)
    SWITCH          reduce using rule 43 (StatementRep -> epsilon .)
    PLUS            reduce using rule 43 (StatementRep -> epsilon .)
    MINUS           reduce using rule 43 (StatementRep -> epsilon .)
    TIMES           reduce using rule 43 (StatementRep -> epsilon .)
    AMPERS          reduce using rule 43 (StatementRep -> epsilon .)
    NOT             reduce using rule 43 (StatementRep -> epsilon .)
    LPAREN          reduce using rule 43 (StatementRep -> epsilon .)
    INTEGER         reduce using rule 43 (StatementRep -> epsilon .)
    FLOAT           reduce using rule 43 (StatementRep -> epsilon .)
    IMAGINARY       reduce using rule 43 (StatementRep -> epsilon .)
    RUNE            reduce using rule 43 (StatementRep -> epsilon .)
    STRING          reduce using rule 43 (StatementRep -> epsilon .)
    TYPEX           reduce using rule 43 (StatementRep -> epsilon .)
    LBRACK          reduce using rule 43 (StatementRep -> epsilon .)
    STRUCT          reduce using rule 43 (StatementRep -> epsilon .)
    FUNC            reduce using rule 43 (StatementRep -> epsilon .)
    SEMICOL         reduce using rule 43 (StatementRep -> epsilon .)
    RBRACE          reduce using rule 43 (StatementRep -> epsilon .)
    CASE            reduce using rule 43 (StatementRep -> epsilon .)
    DEFAULT         reduce using rule 43 (StatementRep -> epsilon .)


state 180

    (40) Block -> LBRACE StatementList . RBRACE

    RBRACE          shift and go to state 240


state 181

    (30) Parameters -> LPAREN ParameterListOpt RPAREN .

    LPAREN          reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    TYPEX           reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    LBRACK          reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    STRUCT          reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    TIMES           reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    FUNC            reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    EQUAL           reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    SEMICOL         reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    RPAREN          reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    LBRACE          reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    COMMA           reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    STRING          reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    COLON           reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)


state 182

    (34) ParametersList -> IdentifierList Type .
    (38) ParameterDecl -> IdentifierList Type .

    RPAREN          reduce using rule 34 (ParametersList -> IdentifierList Type .)
    COMMA           reduce using rule 38 (ParameterDecl -> IdentifierList Type .)


state 183

    (36) ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA . ParameterDecl
    (38) ParameterDecl -> . IdentifierList Type
    (39) ParameterDecl -> . Type
    (56) IdentifierList -> . IDENTIFIER IdentifierRep
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    IDENTIFIER      shift and go to state 34
    LPAREN          shift and go to state 61
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    ParameterDecl                  shift and go to state 243
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    TypeLit                        shift and go to state 55
    IdentifierList                 shift and go to state 241
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    Type                           shift and go to state 242

state 184

    (37) ParameterDeclCommaRep -> ParameterDecl COMMA . ParameterDecl
    (38) ParameterDecl -> . IdentifierList Type
    (39) ParameterDecl -> . Type
    (56) IdentifierList -> . IDENTIFIER IdentifierRep
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    IDENTIFIER      shift and go to state 34
    LPAREN          shift and go to state 61
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    TypeLit                        shift and go to state 55
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    IdentifierList                 shift and go to state 241
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    Type                           shift and go to state 242
    ParameterDecl                  shift and go to state 244

state 185

    (69) VarSpecRep -> VarSpecRep VarSpec SEMICOL .

    RPAREN          reduce using rule 69 (VarSpecRep -> VarSpecRep VarSpec SEMICOL .)
    IDENTIFIER      reduce using rule 69 (VarSpecRep -> VarSpecRep VarSpec SEMICOL .)


state 186

    (104) ExpressionList -> Expression ExpressionRep .
    (105) ExpressionRep -> ExpressionRep . COMMA Expression

    COLON           reduce using rule 104 (ExpressionList -> Expression ExpressionRep .)
    SEMICOL         reduce using rule 104 (ExpressionList -> Expression ExpressionRep .)
    PLUSEQ          reduce using rule 104 (ExpressionList -> Expression ExpressionRep .)
    MINUSEQ         reduce using rule 104 (ExpressionList -> Expression ExpressionRep .)
    TIMESEQ         reduce using rule 104 (ExpressionList -> Expression ExpressionRep .)
    DIVIDEEQ        reduce using rule 104 (ExpressionList -> Expression ExpressionRep .)
    MODEQ           reduce using rule 104 (ExpressionList -> Expression ExpressionRep .)
    AMPEQ           reduce using rule 104 (ExpressionList -> Expression ExpressionRep .)
    OREQ            reduce using rule 104 (ExpressionList -> Expression ExpressionRep .)
    CAREQ           reduce using rule 104 (ExpressionList -> Expression ExpressionRep .)
    LLEQ            reduce using rule 104 (ExpressionList -> Expression ExpressionRep .)
    GGEQ            reduce using rule 104 (ExpressionList -> Expression ExpressionRep .)
    EQUAL           reduce using rule 104 (ExpressionList -> Expression ExpressionRep .)
    RPAREN          reduce using rule 104 (ExpressionList -> Expression ExpressionRep .)
    LBRACE          reduce using rule 104 (ExpressionList -> Expression ExpressionRep .)
    COMMA           shift and go to state 245


state 187

    (106) ExpressionRep -> epsilon .

    COMMA           reduce using rule 106 (ExpressionRep -> epsilon .)
    PLUSEQ          reduce using rule 106 (ExpressionRep -> epsilon .)
    MINUSEQ         reduce using rule 106 (ExpressionRep -> epsilon .)
    TIMESEQ         reduce using rule 106 (ExpressionRep -> epsilon .)
    DIVIDEEQ        reduce using rule 106 (ExpressionRep -> epsilon .)
    MODEQ           reduce using rule 106 (ExpressionRep -> epsilon .)
    AMPEQ           reduce using rule 106 (ExpressionRep -> epsilon .)
    OREQ            reduce using rule 106 (ExpressionRep -> epsilon .)
    CAREQ           reduce using rule 106 (ExpressionRep -> epsilon .)
    LLEQ            reduce using rule 106 (ExpressionRep -> epsilon .)
    GGEQ            reduce using rule 106 (ExpressionRep -> epsilon .)
    EQUAL           reduce using rule 106 (ExpressionRep -> epsilon .)
    SEMICOL         reduce using rule 106 (ExpressionRep -> epsilon .)
    RPAREN          reduce using rule 106 (ExpressionRep -> epsilon .)
    LBRACE          reduce using rule 106 (ExpressionRep -> epsilon .)
    COLON           reduce using rule 106 (ExpressionRep -> epsilon .)


state 188

    (73) ExpressionListOpt -> EQUAL ExpressionList .

    SEMICOL         reduce using rule 73 (ExpressionListOpt -> EQUAL ExpressionList .)


state 189

    (61) TypeSpecRep -> TypeSpecRep TypeSpec SEMICOL .

    RPAREN          reduce using rule 61 (TypeSpecRep -> TypeSpecRep TypeSpec SEMICOL .)
    IDENTIFIER      reduce using rule 61 (TypeSpecRep -> TypeSpecRep TypeSpec SEMICOL .)


state 190

    (16) FieldDeclRep -> FieldDeclRep FieldDecl . SEMICOL

    SEMICOL         shift and go to state 246


state 191

    (18) FieldDecl -> IdentifierList . Type TagOpt
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 61
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    Type                           shift and go to state 247
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    TypeLit                        shift and go to state 55

state 192

    (15) StructType -> STRUCT LBRACE FieldDeclRep RBRACE .

    COMMA           reduce using rule 15 (StructType -> STRUCT LBRACE FieldDeclRep RBRACE .)
    RPAREN          reduce using rule 15 (StructType -> STRUCT LBRACE FieldDeclRep RBRACE .)
    LPAREN          reduce using rule 15 (StructType -> STRUCT LBRACE FieldDeclRep RBRACE .)
    EQUAL           reduce using rule 15 (StructType -> STRUCT LBRACE FieldDeclRep RBRACE .)
    SEMICOL         reduce using rule 15 (StructType -> STRUCT LBRACE FieldDeclRep RBRACE .)
    LBRACE          reduce using rule 15 (StructType -> STRUCT LBRACE FieldDeclRep RBRACE .)
    STRING          reduce using rule 15 (StructType -> STRUCT LBRACE FieldDeclRep RBRACE .)
    COLON           reduce using rule 15 (StructType -> STRUCT LBRACE FieldDeclRep RBRACE .)


state 193

    (100) Slice -> LBRACK ExpressionOpt . COLON ExpressionOpt RBRACK

    COLON           shift and go to state 248


state 194

    (114) ExpressionOpt -> epsilon .

    COLON           reduce using rule 114 (ExpressionOpt -> epsilon .)
    RBRACK          reduce using rule 114 (ExpressionOpt -> epsilon .)


state 195

    (99) Index -> LBRACK Expression . RBRACK
    (108) Expression -> Expression . AddOp Term
    (109) Expression -> Expression . AddOp UnaryExpr
    (113) ExpressionOpt -> Expression .
    (128) AddOp -> . PLUS
    (129) AddOp -> . MINUS
    (130) AddOp -> . OR
    (131) AddOp -> . CARET

    RBRACK          shift and go to state 249
    COLON           reduce using rule 113 (ExpressionOpt -> Expression .)
    PLUS            shift and go to state 174
    MINUS           shift and go to state 175
    OR              shift and go to state 173
    CARET           shift and go to state 171

    AddOp                          shift and go to state 172

state 196

    (103) ExpressionListTypeOpt -> epsilon .

    RPAREN          reduce using rule 103 (ExpressionListTypeOpt -> epsilon .)


state 197

    (101) Arguments -> LPAREN ExpressionListTypeOpt . RPAREN

    RPAREN          shift and go to state 250


state 198

    (102) ExpressionListTypeOpt -> ExpressionList .

    RPAREN          reduce using rule 102 (ExpressionListTypeOpt -> ExpressionList .)


state 199

    (98) Selector -> DOT IDENTIFIER .

    DOT             reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    LBRACK          reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    LPAREN          reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    TIMES           reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    DIVIDE          reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    MOD             reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    AMPERS          reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    LL              reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    GG              reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    AMPCAR          reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    PLUS            reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    MINUS           reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    OR              reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    CARET           reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    RBRACK          reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    COMMA           reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    SEMICOL         reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    RPAREN          reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    COLON           reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    PLUSPLUS        reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    MINUSMIN        reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    PLUSEQ          reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    MINUSEQ         reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    TIMESEQ         reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    DIVIDEEQ        reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    MODEQ           reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    AMPEQ           reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    OREQ            reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    CAREQ           reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    LLEQ            reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    GGEQ            reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    EQUAL           reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    LBRACE          reduce using rule 98 (Selector -> DOT IDENTIFIER .)


state 200

    (91) Conversion -> Type LPAREN Expression . RPAREN
    (108) Expression -> Expression . AddOp Term
    (109) Expression -> Expression . AddOp UnaryExpr
    (128) AddOp -> . PLUS
    (129) AddOp -> . MINUS
    (130) AddOp -> . OR
    (131) AddOp -> . CARET

    RPAREN          shift and go to state 251
    PLUS            shift and go to state 174
    MINUS           shift and go to state 175
    OR              shift and go to state 173
    CARET           shift and go to state 171

    AddOp                          shift and go to state 172

state 201

    (111) Term -> Term MulOp Term .
    (111) Term -> Term . MulOp Term
    (132) MulOp -> . TIMES
    (133) MulOp -> . DIVIDE
    (134) MulOp -> . MOD
    (135) MulOp -> . AMPERS
    (136) MulOp -> . LL
    (137) MulOp -> . GG
    (138) MulOp -> . AMPCAR

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for AMPERS resolved as shift
  ! shift/reduce conflict for LL resolved as shift
  ! shift/reduce conflict for GG resolved as shift
  ! shift/reduce conflict for AMPCAR resolved as shift
    PLUS            reduce using rule 111 (Term -> Term MulOp Term .)
    MINUS           reduce using rule 111 (Term -> Term MulOp Term .)
    OR              reduce using rule 111 (Term -> Term MulOp Term .)
    CARET           reduce using rule 111 (Term -> Term MulOp Term .)
    COMMA           reduce using rule 111 (Term -> Term MulOp Term .)
    COLON           reduce using rule 111 (Term -> Term MulOp Term .)
    PLUSPLUS        reduce using rule 111 (Term -> Term MulOp Term .)
    MINUSMIN        reduce using rule 111 (Term -> Term MulOp Term .)
    LBRACE          reduce using rule 111 (Term -> Term MulOp Term .)
    PLUSEQ          reduce using rule 111 (Term -> Term MulOp Term .)
    MINUSEQ         reduce using rule 111 (Term -> Term MulOp Term .)
    TIMESEQ         reduce using rule 111 (Term -> Term MulOp Term .)
    DIVIDEEQ        reduce using rule 111 (Term -> Term MulOp Term .)
    MODEQ           reduce using rule 111 (Term -> Term MulOp Term .)
    AMPEQ           reduce using rule 111 (Term -> Term MulOp Term .)
    OREQ            reduce using rule 111 (Term -> Term MulOp Term .)
    CAREQ           reduce using rule 111 (Term -> Term MulOp Term .)
    LLEQ            reduce using rule 111 (Term -> Term MulOp Term .)
    GGEQ            reduce using rule 111 (Term -> Term MulOp Term .)
    EQUAL           reduce using rule 111 (Term -> Term MulOp Term .)
    RPAREN          reduce using rule 111 (Term -> Term MulOp Term .)
    SEMICOL         reduce using rule 111 (Term -> Term MulOp Term .)
    RBRACK          reduce using rule 111 (Term -> Term MulOp Term .)
    TIMES           shift and go to state 162
    DIVIDE          shift and go to state 158
    MOD             shift and go to state 165
    AMPERS          shift and go to state 161
    LL              shift and go to state 160
    GG              shift and go to state 163
    AMPCAR          shift and go to state 159

  ! TIMES           [ reduce using rule 111 (Term -> Term MulOp Term .) ]
  ! DIVIDE          [ reduce using rule 111 (Term -> Term MulOp Term .) ]
  ! MOD             [ reduce using rule 111 (Term -> Term MulOp Term .) ]
  ! AMPERS          [ reduce using rule 111 (Term -> Term MulOp Term .) ]
  ! LL              [ reduce using rule 111 (Term -> Term MulOp Term .) ]
  ! GG              [ reduce using rule 111 (Term -> Term MulOp Term .) ]
  ! AMPCAR          [ reduce using rule 111 (Term -> Term MulOp Term .) ]

    MulOp                          shift and go to state 164

state 202

    (112) Term -> UnaryExpr . MulOp UnaryExpr
    (132) MulOp -> . TIMES
    (133) MulOp -> . DIVIDE
    (134) MulOp -> . MOD
    (135) MulOp -> . AMPERS
    (136) MulOp -> . LL
    (137) MulOp -> . GG
    (138) MulOp -> . AMPCAR

    TIMES           shift and go to state 162
    DIVIDE          shift and go to state 158
    MOD             shift and go to state 165
    AMPERS          shift and go to state 161
    LL              shift and go to state 160
    GG              shift and go to state 163
    AMPCAR          shift and go to state 159

    MulOp                          shift and go to state 166

state 203

    (112) Term -> UnaryExpr MulOp UnaryExpr .

    TIMES           reduce using rule 112 (Term -> UnaryExpr MulOp UnaryExpr .)
    DIVIDE          reduce using rule 112 (Term -> UnaryExpr MulOp UnaryExpr .)
    MOD             reduce using rule 112 (Term -> UnaryExpr MulOp UnaryExpr .)
    AMPERS          reduce using rule 112 (Term -> UnaryExpr MulOp UnaryExpr .)
    LL              reduce using rule 112 (Term -> UnaryExpr MulOp UnaryExpr .)
    GG              reduce using rule 112 (Term -> UnaryExpr MulOp UnaryExpr .)
    AMPCAR          reduce using rule 112 (Term -> UnaryExpr MulOp UnaryExpr .)
    PLUS            reduce using rule 112 (Term -> UnaryExpr MulOp UnaryExpr .)
    MINUS           reduce using rule 112 (Term -> UnaryExpr MulOp UnaryExpr .)
    OR              reduce using rule 112 (Term -> UnaryExpr MulOp UnaryExpr .)
    CARET           reduce using rule 112 (Term -> UnaryExpr MulOp UnaryExpr .)
    COMMA           reduce using rule 112 (Term -> UnaryExpr MulOp UnaryExpr .)
    COLON           reduce using rule 112 (Term -> UnaryExpr MulOp UnaryExpr .)
    PLUSPLUS        reduce using rule 112 (Term -> UnaryExpr MulOp UnaryExpr .)
    MINUSMIN        reduce using rule 112 (Term -> UnaryExpr MulOp UnaryExpr .)
    LBRACE          reduce using rule 112 (Term -> UnaryExpr MulOp UnaryExpr .)
    PLUSEQ          reduce using rule 112 (Term -> UnaryExpr MulOp UnaryExpr .)
    MINUSEQ         reduce using rule 112 (Term -> UnaryExpr MulOp UnaryExpr .)
    TIMESEQ         reduce using rule 112 (Term -> UnaryExpr MulOp UnaryExpr .)
    DIVIDEEQ        reduce using rule 112 (Term -> UnaryExpr MulOp UnaryExpr .)
    MODEQ           reduce using rule 112 (Term -> UnaryExpr MulOp UnaryExpr .)
    AMPEQ           reduce using rule 112 (Term -> UnaryExpr MulOp UnaryExpr .)
    OREQ            reduce using rule 112 (Term -> UnaryExpr MulOp UnaryExpr .)
    CAREQ           reduce using rule 112 (Term -> UnaryExpr MulOp UnaryExpr .)
    LLEQ            reduce using rule 112 (Term -> UnaryExpr MulOp UnaryExpr .)
    GGEQ            reduce using rule 112 (Term -> UnaryExpr MulOp UnaryExpr .)
    EQUAL           reduce using rule 112 (Term -> UnaryExpr MulOp UnaryExpr .)
    RPAREN          reduce using rule 112 (Term -> UnaryExpr MulOp UnaryExpr .)
    SEMICOL         reduce using rule 112 (Term -> UnaryExpr MulOp UnaryExpr .)
    RBRACK          reduce using rule 112 (Term -> UnaryExpr MulOp UnaryExpr .)


state 204

    (14) ElementType -> Type .

    EQUAL           reduce using rule 14 (ElementType -> Type .)
    SEMICOL         reduce using rule 14 (ElementType -> Type .)
    RPAREN          reduce using rule 14 (ElementType -> Type .)
    LBRACE          reduce using rule 14 (ElementType -> Type .)
    COMMA           reduce using rule 14 (ElementType -> Type .)
    LPAREN          reduce using rule 14 (ElementType -> Type .)
    STRING          reduce using rule 14 (ElementType -> Type .)
    COLON           reduce using rule 14 (ElementType -> Type .)


state 205

    (12) ArrayType -> LBRACK ArrayLength RBRACK ElementType .

    COMMA           reduce using rule 12 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    RPAREN          reduce using rule 12 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    LPAREN          reduce using rule 12 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    SEMICOL         reduce using rule 12 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    EQUAL           reduce using rule 12 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    LBRACE          reduce using rule 12 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    STRING          reduce using rule 12 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    COLON           reduce using rule 12 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)


state 206

    (22) PointerType -> TIMES . BaseType
    (141) UnaryOp -> TIMES .
    (23) BaseType -> . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            reduce using rule 141 (UnaryOp -> TIMES .)
    MINUS           reduce using rule 141 (UnaryOp -> TIMES .)
    TIMES           reduce using rule 141 (UnaryOp -> TIMES .)
    AMPERS          reduce using rule 141 (UnaryOp -> TIMES .)
    NOT             reduce using rule 141 (UnaryOp -> TIMES .)
    LPAREN          reduce using rule 141 (UnaryOp -> TIMES .)
    IDENTIFIER      reduce using rule 141 (UnaryOp -> TIMES .)
    INTEGER         reduce using rule 141 (UnaryOp -> TIMES .)
    FLOAT           reduce using rule 141 (UnaryOp -> TIMES .)
    IMAGINARY       reduce using rule 141 (UnaryOp -> TIMES .)
    RUNE            reduce using rule 141 (UnaryOp -> TIMES .)
    STRING          reduce using rule 141 (UnaryOp -> TIMES .)
    TYPEX           reduce using rule 141 (UnaryOp -> TIMES .)
    LBRACK          reduce using rule 141 (UnaryOp -> TIMES .)
    STRUCT          reduce using rule 141 (UnaryOp -> TIMES .)
    FUNC            reduce using rule 141 (UnaryOp -> TIMES .)

  ! LPAREN          [ shift and go to state 61 ]
  ! TYPEX           [ shift and go to state 57 ]
  ! LBRACK          [ shift and go to state 64 ]
  ! STRUCT          [ shift and go to state 63 ]
  ! TIMES           [ shift and go to state 60 ]
  ! FUNC            [ shift and go to state 52 ]

    StructType                     shift and go to state 58
    BaseType                       shift and go to state 88
    Type                           shift and go to state 87
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    TypeLit                        shift and go to state 55

state 207

    (83) Operand -> LPAREN Expression RPAREN .

    DOT             reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    LBRACK          reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    LPAREN          reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    TIMES           reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    DIVIDE          reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    MOD             reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    AMPERS          reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    LL              reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    GG              reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    AMPCAR          reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    PLUSPLUS        reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    MINUSMIN        reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    PLUS            reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    MINUS           reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    OR              reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    CARET           reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    COMMA           reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    LBRACE          reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    SEMICOL         reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    PLUSEQ          reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    MINUSEQ         reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    TIMESEQ         reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    DIVIDEEQ        reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    MODEQ           reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    AMPEQ           reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    OREQ            reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    CAREQ           reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    LLEQ            reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    GGEQ            reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    EQUAL           reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    RPAREN          reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    RBRACK          reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    COLON           reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)


state 208

    (108) Expression -> Expression AddOp Term .
    (111) Term -> Term . MulOp Term
    (132) MulOp -> . TIMES
    (133) MulOp -> . DIVIDE
    (134) MulOp -> . MOD
    (135) MulOp -> . AMPERS
    (136) MulOp -> . LL
    (137) MulOp -> . GG
    (138) MulOp -> . AMPCAR

    RBRACK          reduce using rule 108 (Expression -> Expression AddOp Term .)
    PLUS            reduce using rule 108 (Expression -> Expression AddOp Term .)
    MINUS           reduce using rule 108 (Expression -> Expression AddOp Term .)
    OR              reduce using rule 108 (Expression -> Expression AddOp Term .)
    CARET           reduce using rule 108 (Expression -> Expression AddOp Term .)
    COLON           reduce using rule 108 (Expression -> Expression AddOp Term .)
    COMMA           reduce using rule 108 (Expression -> Expression AddOp Term .)
    SEMICOL         reduce using rule 108 (Expression -> Expression AddOp Term .)
    RPAREN          reduce using rule 108 (Expression -> Expression AddOp Term .)
    LBRACE          reduce using rule 108 (Expression -> Expression AddOp Term .)
    PLUSEQ          reduce using rule 108 (Expression -> Expression AddOp Term .)
    MINUSEQ         reduce using rule 108 (Expression -> Expression AddOp Term .)
    TIMESEQ         reduce using rule 108 (Expression -> Expression AddOp Term .)
    DIVIDEEQ        reduce using rule 108 (Expression -> Expression AddOp Term .)
    MODEQ           reduce using rule 108 (Expression -> Expression AddOp Term .)
    AMPEQ           reduce using rule 108 (Expression -> Expression AddOp Term .)
    OREQ            reduce using rule 108 (Expression -> Expression AddOp Term .)
    CAREQ           reduce using rule 108 (Expression -> Expression AddOp Term .)
    LLEQ            reduce using rule 108 (Expression -> Expression AddOp Term .)
    GGEQ            reduce using rule 108 (Expression -> Expression AddOp Term .)
    EQUAL           reduce using rule 108 (Expression -> Expression AddOp Term .)
    PLUSPLUS        reduce using rule 108 (Expression -> Expression AddOp Term .)
    MINUSMIN        reduce using rule 108 (Expression -> Expression AddOp Term .)
    TIMES           shift and go to state 162
    DIVIDE          shift and go to state 158
    MOD             shift and go to state 165
    AMPERS          shift and go to state 161
    LL              shift and go to state 160
    GG              shift and go to state 163
    AMPCAR          shift and go to state 159

    MulOp                          shift and go to state 164

state 209

    (109) Expression -> Expression AddOp UnaryExpr .
    (112) Term -> UnaryExpr . MulOp UnaryExpr
    (132) MulOp -> . TIMES
    (133) MulOp -> . DIVIDE
    (134) MulOp -> . MOD
    (135) MulOp -> . AMPERS
    (136) MulOp -> . LL
    (137) MulOp -> . GG
    (138) MulOp -> . AMPCAR

    RBRACK          reduce using rule 109 (Expression -> Expression AddOp UnaryExpr .)
    PLUS            reduce using rule 109 (Expression -> Expression AddOp UnaryExpr .)
    MINUS           reduce using rule 109 (Expression -> Expression AddOp UnaryExpr .)
    OR              reduce using rule 109 (Expression -> Expression AddOp UnaryExpr .)
    CARET           reduce using rule 109 (Expression -> Expression AddOp UnaryExpr .)
    COLON           reduce using rule 109 (Expression -> Expression AddOp UnaryExpr .)
    COMMA           reduce using rule 109 (Expression -> Expression AddOp UnaryExpr .)
    SEMICOL         reduce using rule 109 (Expression -> Expression AddOp UnaryExpr .)
    RPAREN          reduce using rule 109 (Expression -> Expression AddOp UnaryExpr .)
    LBRACE          reduce using rule 109 (Expression -> Expression AddOp UnaryExpr .)
    PLUSEQ          reduce using rule 109 (Expression -> Expression AddOp UnaryExpr .)
    MINUSEQ         reduce using rule 109 (Expression -> Expression AddOp UnaryExpr .)
    TIMESEQ         reduce using rule 109 (Expression -> Expression AddOp UnaryExpr .)
    DIVIDEEQ        reduce using rule 109 (Expression -> Expression AddOp UnaryExpr .)
    MODEQ           reduce using rule 109 (Expression -> Expression AddOp UnaryExpr .)
    AMPEQ           reduce using rule 109 (Expression -> Expression AddOp UnaryExpr .)
    OREQ            reduce using rule 109 (Expression -> Expression AddOp UnaryExpr .)
    CAREQ           reduce using rule 109 (Expression -> Expression AddOp UnaryExpr .)
    LLEQ            reduce using rule 109 (Expression -> Expression AddOp UnaryExpr .)
    GGEQ            reduce using rule 109 (Expression -> Expression AddOp UnaryExpr .)
    EQUAL           reduce using rule 109 (Expression -> Expression AddOp UnaryExpr .)
    PLUSPLUS        reduce using rule 109 (Expression -> Expression AddOp UnaryExpr .)
    MINUSMIN        reduce using rule 109 (Expression -> Expression AddOp UnaryExpr .)
    TIMES           shift and go to state 162
    DIVIDE          shift and go to state 158
    MOD             shift and go to state 165
    AMPERS          shift and go to state 161
    LL              shift and go to state 160
    GG              shift and go to state 163
    AMPCAR          shift and go to state 159

    MulOp                          shift and go to state 166

state 210

    (149) Statement -> ContinueStmt .

    SEMICOL         reduce using rule 149 (Statement -> ContinueStmt .)


state 211

    (156) SimpleStmt -> ExpressionStmt .

    SEMICOL         reduce using rule 156 (SimpleStmt -> ExpressionStmt .)
    LBRACE          reduce using rule 156 (SimpleStmt -> ExpressionStmt .)


state 212

    (42) StatementRep -> StatementRep Statement . SEMICOL

    SEMICOL         shift and go to state 252


state 213

    (158) SimpleStmt -> Assignment .

    SEMICOL         reduce using rule 158 (SimpleStmt -> Assignment .)
    LBRACE          reduce using rule 158 (SimpleStmt -> Assignment .)


state 214

    (145) Statement -> LabeledStmt .

    SEMICOL         reduce using rule 145 (Statement -> LabeledStmt .)


state 215

    (185) SwitchStmt -> TypeSwitchStmt .

    SEMICOL         reduce using rule 185 (SwitchStmt -> TypeSwitchStmt .)


state 216

    (216) ReturnStmt -> RETURN . ExpressionListPureOpt
    (217) ExpressionListPureOpt -> . ExpressionList
    (218) ExpressionListPureOpt -> . epsilon
    (104) ExpressionList -> . Expression ExpressionRep
    (240) epsilon -> .
    (107) Expression -> . UnaryExpr
    (108) Expression -> . Expression AddOp Term
    (109) Expression -> . Expression AddOp UnaryExpr
    (110) Expression -> . Term
    (115) UnaryExpr -> . PrimaryExpr
    (116) UnaryExpr -> . UnaryOp UnaryExpr
    (111) Term -> . Term MulOp Term
    (112) Term -> . UnaryExpr MulOp UnaryExpr
    (92) PrimaryExpr -> . Operand
    (93) PrimaryExpr -> . Conversion
    (94) PrimaryExpr -> . PrimaryExpr Selector
    (95) PrimaryExpr -> . PrimaryExpr Index
    (96) PrimaryExpr -> . PrimaryExpr Slice
    (97) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (91) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (90) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . INTEGER
    (86) BasicLit -> . FLOAT
    (87) BasicLit -> . IMAGINARY
    (88) BasicLit -> . RUNE
    (89) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    SEMICOL         reduce using rule 240 (epsilon -> .)
    PLUS            shift and go to state 101
    MINUS           shift and go to state 98
    TIMES           shift and go to state 108
    AMPERS          shift and go to state 114
    NOT             shift and go to state 115
    LPAREN          shift and go to state 111
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 113
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 106
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    UnaryOp                        shift and go to state 93
    Conversion                     shift and go to state 92
    ExpressionListPureOpt          shift and go to state 253
    Literal                        shift and go to state 95
    Type                           shift and go to state 97
    OperandName                    shift and go to state 99
    BasicLit                       shift and go to state 100
    TypeName                       shift and go to state 56
    Term                           shift and go to state 105
    epsilon                        shift and go to state 254
    UnaryExpr                      shift and go to state 107
    Operand                        shift and go to state 109
    ExpressionList                 shift and go to state 255
    ArrayType                      shift and go to state 53
    Expression                     shift and go to state 136
    PointerType                    shift and go to state 66
    TypeLit                        shift and go to state 55
    PrimaryExpr                    shift and go to state 94
    FunctionType                   shift and go to state 67
    StructType                     shift and go to state 58

state 217

    (160) LabeledStmt -> Label . COLON Statement

    COLON           shift and go to state 256


state 218

    (184) SwitchStmt -> ExprSwitchStmt .

    SEMICOL         reduce using rule 184 (SwitchStmt -> ExprSwitchStmt .)


state 219

    (152) Statement -> IfStmt .

    SEMICOL         reduce using rule 152 (Statement -> IfStmt .)


state 220

    (157) SimpleStmt -> IncDecStmt .

    SEMICOL         reduce using rule 157 (SimpleStmt -> IncDecStmt .)
    LBRACE          reduce using rule 157 (SimpleStmt -> IncDecStmt .)


state 221

    (150) Statement -> GotoStmt .

    SEMICOL         reduce using rule 150 (Statement -> GotoStmt .)


state 222

    (204) ForStmt -> FOR . ConditionBlockOpt Block
    (205) ConditionBlockOpt -> . epsilon
    (206) ConditionBlockOpt -> . Condition
    (207) ConditionBlockOpt -> . ForClause
    (240) epsilon -> .
    (208) Condition -> . Expression
    (209) ForClause -> . SimpleStmt SEMICOL ConditionOpt SEMICOL SimpleStmt
    (107) Expression -> . UnaryExpr
    (108) Expression -> . Expression AddOp Term
    (109) Expression -> . Expression AddOp UnaryExpr
    (110) Expression -> . Term
    (155) SimpleStmt -> . epsilon
    (156) SimpleStmt -> . ExpressionStmt
    (157) SimpleStmt -> . IncDecStmt
    (158) SimpleStmt -> . Assignment
    (159) SimpleStmt -> . ShortVarDecl
    (115) UnaryExpr -> . PrimaryExpr
    (116) UnaryExpr -> . UnaryOp UnaryExpr
    (111) Term -> . Term MulOp Term
    (112) Term -> . UnaryExpr MulOp UnaryExpr
    (162) ExpressionStmt -> . Expression
    (163) IncDecStmt -> . Expression PLUSPLUS
    (164) IncDecStmt -> . Expression MINUSMIN
    (165) Assignment -> . ExpressionList assign_op ExpressionList
    (75) ShortVarDecl -> . IDENTIFIER COLONEQ Expression
    (92) PrimaryExpr -> . Operand
    (93) PrimaryExpr -> . Conversion
    (94) PrimaryExpr -> . PrimaryExpr Selector
    (95) PrimaryExpr -> . PrimaryExpr Index
    (96) PrimaryExpr -> . PrimaryExpr Slice
    (97) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (104) ExpressionList -> . Expression ExpressionRep
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (91) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (90) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . INTEGER
    (86) BasicLit -> . FLOAT
    (87) BasicLit -> . IMAGINARY
    (88) BasicLit -> . RUNE
    (89) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    LBRACE          reduce using rule 240 (epsilon -> .)
    SEMICOL         reduce using rule 240 (epsilon -> .)
    IDENTIFIER      shift and go to state 258
    PLUS            shift and go to state 101
    MINUS           shift and go to state 98
    TIMES           shift and go to state 108
    AMPERS          shift and go to state 114
    NOT             shift and go to state 115
    LPAREN          shift and go to state 111
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 113
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 106
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 92
    UnaryOp                        shift and go to state 93
    SimpleStmt                     shift and go to state 257
    ExpressionStmt                 shift and go to state 211
    PointerType                    shift and go to state 66
    Type                           shift and go to state 97
    OperandName                    shift and go to state 99
    Assignment                     shift and go to state 213
    TypeName                       shift and go to state 56
    IncDecStmt                     shift and go to state 220
    Condition                      shift and go to state 259
    Term                           shift and go to state 105
    epsilon                        shift and go to state 260
    UnaryExpr                      shift and go to state 107
    ConditionBlockOpt              shift and go to state 261
    PrimaryExpr                    shift and go to state 94
    ExpressionList                 shift and go to state 230
    ArrayType                      shift and go to state 53
    ForClause                      shift and go to state 262
    Expression                     shift and go to state 263
    ShortVarDecl                   shift and go to state 237
    Literal                        shift and go to state 95
    TypeLit                        shift and go to state 55
    BasicLit                       shift and go to state 100
    Operand                        shift and go to state 109
    FunctionType                   shift and go to state 67
    StructType                     shift and go to state 58

state 223

    (151) Statement -> Block .

    SEMICOL         reduce using rule 151 (Statement -> Block .)


state 224

    (153) Statement -> SwitchStmt .

    SEMICOL         reduce using rule 153 (Statement -> SwitchStmt .)


state 225

    (220) ContinueStmt -> CONTINUE . LabelOpt
    (221) LabelOpt -> . Label
    (222) LabelOpt -> . epsilon
    (161) Label -> . IDENTIFIER
    (240) epsilon -> .

    IDENTIFIER      shift and go to state 265
    SEMICOL         reduce using rule 240 (epsilon -> .)

    epsilon                        shift and go to state 264
    LabelOpt                       shift and go to state 266
    Label                          shift and go to state 267

state 226

    (186) ExprSwitchStmt -> SWITCH . ExpressionOpt LBRACE ExprCaseClauseRep RBRACE
    (192) TypeSwitchStmt -> SWITCH . SimpleStmtOpt TypeSwitchGuard LBRACE TypeCaseClauseOpt RBRACE
    (113) ExpressionOpt -> . Expression
    (114) ExpressionOpt -> . epsilon
    (179) SimpleStmtOpt -> . SimpleStmt SEMICOL
    (180) SimpleStmtOpt -> . epsilon
    (107) Expression -> . UnaryExpr
    (108) Expression -> . Expression AddOp Term
    (109) Expression -> . Expression AddOp UnaryExpr
    (110) Expression -> . Term
    (240) epsilon -> .
    (155) SimpleStmt -> . epsilon
    (156) SimpleStmt -> . ExpressionStmt
    (157) SimpleStmt -> . IncDecStmt
    (158) SimpleStmt -> . Assignment
    (159) SimpleStmt -> . ShortVarDecl
    (115) UnaryExpr -> . PrimaryExpr
    (116) UnaryExpr -> . UnaryOp UnaryExpr
    (111) Term -> . Term MulOp Term
    (112) Term -> . UnaryExpr MulOp UnaryExpr
    (162) ExpressionStmt -> . Expression
    (163) IncDecStmt -> . Expression PLUSPLUS
    (164) IncDecStmt -> . Expression MINUSMIN
    (165) Assignment -> . ExpressionList assign_op ExpressionList
    (75) ShortVarDecl -> . IDENTIFIER COLONEQ Expression
    (92) PrimaryExpr -> . Operand
    (93) PrimaryExpr -> . Conversion
    (94) PrimaryExpr -> . PrimaryExpr Selector
    (95) PrimaryExpr -> . PrimaryExpr Index
    (96) PrimaryExpr -> . PrimaryExpr Slice
    (97) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (104) ExpressionList -> . Expression ExpressionRep
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (91) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (90) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . INTEGER
    (86) BasicLit -> . FLOAT
    (87) BasicLit -> . IMAGINARY
    (88) BasicLit -> . RUNE
    (89) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for IMAGINARY resolved as shift
  ! shift/reduce conflict for RUNE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for TYPEX resolved as shift
  ! shift/reduce conflict for LBRACK resolved as shift
  ! shift/reduce conflict for STRUCT resolved as shift
  ! shift/reduce conflict for FUNC resolved as shift
    LBRACE          reduce using rule 240 (epsilon -> .)
    SEMICOL         reduce using rule 240 (epsilon -> .)
    IDENTIFIER      shift and go to state 258
    PLUS            shift and go to state 101
    MINUS           shift and go to state 98
    TIMES           shift and go to state 108
    AMPERS          shift and go to state 114
    NOT             shift and go to state 115
    LPAREN          shift and go to state 111
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 113
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 106
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

  ! IDENTIFIER      [ reduce using rule 240 (epsilon -> .) ]
  ! LPAREN          [ reduce using rule 240 (epsilon -> .) ]
  ! INTEGER         [ reduce using rule 240 (epsilon -> .) ]
  ! FLOAT           [ reduce using rule 240 (epsilon -> .) ]
  ! IMAGINARY       [ reduce using rule 240 (epsilon -> .) ]
  ! RUNE            [ reduce using rule 240 (epsilon -> .) ]
  ! STRING          [ reduce using rule 240 (epsilon -> .) ]
  ! TYPEX           [ reduce using rule 240 (epsilon -> .) ]
  ! LBRACK          [ reduce using rule 240 (epsilon -> .) ]
  ! STRUCT          [ reduce using rule 240 (epsilon -> .) ]
  ! TIMES           [ reduce using rule 240 (epsilon -> .) ]
  ! FUNC            [ reduce using rule 240 (epsilon -> .) ]

    Conversion                     shift and go to state 92
    UnaryOp                        shift and go to state 93
    SimpleStmt                     shift and go to state 268
    Type                           shift and go to state 97
    OperandName                    shift and go to state 99
    Assignment                     shift and go to state 213
    TypeName                       shift and go to state 56
    IncDecStmt                     shift and go to state 220
    ExpressionOpt                  shift and go to state 269
    Term                           shift and go to state 105
    epsilon                        shift and go to state 270
    UnaryExpr                      shift and go to state 107
    PrimaryExpr                    shift and go to state 94
    SimpleStmtOpt                  shift and go to state 271
    ExpressionList                 shift and go to state 230
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    Expression                     shift and go to state 272
    ShortVarDecl                   shift and go to state 237
    PointerType                    shift and go to state 66
    ExpressionStmt                 shift and go to state 211
    TypeLit                        shift and go to state 55
    BasicLit                       shift and go to state 100
    Operand                        shift and go to state 109
    FunctionType                   shift and go to state 67
    StructType                     shift and go to state 58

state 227

    (144) Statement -> Declaration .

    SEMICOL         reduce using rule 144 (Statement -> Declaration .)


state 228

    (161) Label -> IDENTIFIER .
    (75) ShortVarDecl -> IDENTIFIER . COLONEQ Expression
    (90) OperandName -> IDENTIFIER .

    COLON           reduce using rule 161 (Label -> IDENTIFIER .)
    COLONEQ         shift and go to state 273
    DOT             reduce using rule 90 (OperandName -> IDENTIFIER .)
    LBRACK          reduce using rule 90 (OperandName -> IDENTIFIER .)
    LPAREN          reduce using rule 90 (OperandName -> IDENTIFIER .)
    TIMES           reduce using rule 90 (OperandName -> IDENTIFIER .)
    DIVIDE          reduce using rule 90 (OperandName -> IDENTIFIER .)
    MOD             reduce using rule 90 (OperandName -> IDENTIFIER .)
    AMPERS          reduce using rule 90 (OperandName -> IDENTIFIER .)
    LL              reduce using rule 90 (OperandName -> IDENTIFIER .)
    GG              reduce using rule 90 (OperandName -> IDENTIFIER .)
    AMPCAR          reduce using rule 90 (OperandName -> IDENTIFIER .)
    PLUSPLUS        reduce using rule 90 (OperandName -> IDENTIFIER .)
    MINUSMIN        reduce using rule 90 (OperandName -> IDENTIFIER .)
    PLUS            reduce using rule 90 (OperandName -> IDENTIFIER .)
    MINUS           reduce using rule 90 (OperandName -> IDENTIFIER .)
    OR              reduce using rule 90 (OperandName -> IDENTIFIER .)
    CARET           reduce using rule 90 (OperandName -> IDENTIFIER .)
    COMMA           reduce using rule 90 (OperandName -> IDENTIFIER .)
    SEMICOL         reduce using rule 90 (OperandName -> IDENTIFIER .)
    PLUSEQ          reduce using rule 90 (OperandName -> IDENTIFIER .)
    MINUSEQ         reduce using rule 90 (OperandName -> IDENTIFIER .)
    TIMESEQ         reduce using rule 90 (OperandName -> IDENTIFIER .)
    DIVIDEEQ        reduce using rule 90 (OperandName -> IDENTIFIER .)
    MODEQ           reduce using rule 90 (OperandName -> IDENTIFIER .)
    AMPEQ           reduce using rule 90 (OperandName -> IDENTIFIER .)
    OREQ            reduce using rule 90 (OperandName -> IDENTIFIER .)
    CAREQ           reduce using rule 90 (OperandName -> IDENTIFIER .)
    LLEQ            reduce using rule 90 (OperandName -> IDENTIFIER .)
    GGEQ            reduce using rule 90 (OperandName -> IDENTIFIER .)
    EQUAL           reduce using rule 90 (OperandName -> IDENTIFIER .)


state 229

    (155) SimpleStmt -> epsilon .

    SEMICOL         reduce using rule 155 (SimpleStmt -> epsilon .)
    LBRACE          reduce using rule 155 (SimpleStmt -> epsilon .)


state 230

    (165) Assignment -> ExpressionList . assign_op ExpressionList
    (166) assign_op -> . AssignOp
    (167) AssignOp -> . PLUSEQ
    (168) AssignOp -> . MINUSEQ
    (169) AssignOp -> . TIMESEQ
    (170) AssignOp -> . DIVIDEEQ
    (171) AssignOp -> . MODEQ
    (172) AssignOp -> . AMPEQ
    (173) AssignOp -> . OREQ
    (174) AssignOp -> . CAREQ
    (175) AssignOp -> . LLEQ
    (176) AssignOp -> . GGEQ
    (177) AssignOp -> . EQUAL

    PLUSEQ          shift and go to state 278
    MINUSEQ         shift and go to state 283
    TIMESEQ         shift and go to state 277
    DIVIDEEQ        shift and go to state 286
    MODEQ           shift and go to state 279
    AMPEQ           shift and go to state 284
    OREQ            shift and go to state 282
    CAREQ           shift and go to state 276
    LLEQ            shift and go to state 281
    GGEQ            shift and go to state 280
    EQUAL           shift and go to state 275

    AssignOp                       shift and go to state 274
    assign_op                      shift and go to state 285

state 231

    (162) ExpressionStmt -> Expression .
    (163) IncDecStmt -> Expression . PLUSPLUS
    (164) IncDecStmt -> Expression . MINUSMIN
    (108) Expression -> Expression . AddOp Term
    (109) Expression -> Expression . AddOp UnaryExpr
    (104) ExpressionList -> Expression . ExpressionRep
    (128) AddOp -> . PLUS
    (129) AddOp -> . MINUS
    (130) AddOp -> . OR
    (131) AddOp -> . CARET
    (105) ExpressionRep -> . ExpressionRep COMMA Expression
    (106) ExpressionRep -> . epsilon
    (240) epsilon -> .

    SEMICOL         reduce using rule 162 (ExpressionStmt -> Expression .)
    LBRACE          reduce using rule 162 (ExpressionStmt -> Expression .)
    PLUSPLUS        shift and go to state 287
    MINUSMIN        shift and go to state 288
    PLUS            shift and go to state 174
    MINUS           shift and go to state 175
    OR              shift and go to state 173
    CARET           shift and go to state 171
    COMMA           reduce using rule 240 (epsilon -> .)
    PLUSEQ          reduce using rule 240 (epsilon -> .)
    MINUSEQ         reduce using rule 240 (epsilon -> .)
    TIMESEQ         reduce using rule 240 (epsilon -> .)
    DIVIDEEQ        reduce using rule 240 (epsilon -> .)
    MODEQ           reduce using rule 240 (epsilon -> .)
    AMPEQ           reduce using rule 240 (epsilon -> .)
    OREQ            reduce using rule 240 (epsilon -> .)
    CAREQ           reduce using rule 240 (epsilon -> .)
    LLEQ            reduce using rule 240 (epsilon -> .)
    GGEQ            reduce using rule 240 (epsilon -> .)
    EQUAL           reduce using rule 240 (epsilon -> .)

    AddOp                          shift and go to state 172
    ExpressionRep                  shift and go to state 186
    epsilon                        shift and go to state 187

state 232

    (219) BreakStmt -> BREAK . LabelOpt
    (221) LabelOpt -> . Label
    (222) LabelOpt -> . epsilon
    (161) Label -> . IDENTIFIER
    (240) epsilon -> .

    IDENTIFIER      shift and go to state 265
    SEMICOL         reduce using rule 240 (epsilon -> .)

    epsilon                        shift and go to state 264
    LabelOpt                       shift and go to state 289
    Label                          shift and go to state 267

state 233

    (147) Statement -> ReturnStmt .

    SEMICOL         reduce using rule 147 (Statement -> ReturnStmt .)


state 234

    (146) Statement -> SimpleStmt .

    SEMICOL         reduce using rule 146 (Statement -> SimpleStmt .)


state 235

    (154) Statement -> ForStmt .

    SEMICOL         reduce using rule 154 (Statement -> ForStmt .)


state 236

    (223) GotoStmt -> GOTO . Label
    (161) Label -> . IDENTIFIER

    IDENTIFIER      shift and go to state 265

    Label                          shift and go to state 290

state 237

    (159) SimpleStmt -> ShortVarDecl .

    SEMICOL         reduce using rule 159 (SimpleStmt -> ShortVarDecl .)
    LBRACE          reduce using rule 159 (SimpleStmt -> ShortVarDecl .)


state 238

    (178) IfStmt -> IF . Expression Block ElseOpt
    (107) Expression -> . UnaryExpr
    (108) Expression -> . Expression AddOp Term
    (109) Expression -> . Expression AddOp UnaryExpr
    (110) Expression -> . Term
    (115) UnaryExpr -> . PrimaryExpr
    (116) UnaryExpr -> . UnaryOp UnaryExpr
    (111) Term -> . Term MulOp Term
    (112) Term -> . UnaryExpr MulOp UnaryExpr
    (92) PrimaryExpr -> . Operand
    (93) PrimaryExpr -> . Conversion
    (94) PrimaryExpr -> . PrimaryExpr Selector
    (95) PrimaryExpr -> . PrimaryExpr Index
    (96) PrimaryExpr -> . PrimaryExpr Slice
    (97) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (91) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (90) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . INTEGER
    (86) BasicLit -> . FLOAT
    (87) BasicLit -> . IMAGINARY
    (88) BasicLit -> . RUNE
    (89) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 101
    MINUS           shift and go to state 98
    TIMES           shift and go to state 108
    AMPERS          shift and go to state 114
    NOT             shift and go to state 115
    LPAREN          shift and go to state 111
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 113
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 106
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 92
    UnaryOp                        shift and go to state 93
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    PointerType                    shift and go to state 66
    Type                           shift and go to state 97
    OperandName                    shift and go to state 99
    BasicLit                       shift and go to state 100
    TypeName                       shift and go to state 56
    Term                           shift and go to state 105
    UnaryExpr                      shift and go to state 107
    PrimaryExpr                    shift and go to state 94
    Expression                     shift and go to state 291
    TypeLit                        shift and go to state 55
    Operand                        shift and go to state 109
    FunctionType                   shift and go to state 67
    StructType                     shift and go to state 58

state 239

    (148) Statement -> BreakStmt .

    SEMICOL         reduce using rule 148 (Statement -> BreakStmt .)


state 240

    (40) Block -> LBRACE StatementList RBRACE .

    SEMICOL         reduce using rule 40 (Block -> LBRACE StatementList RBRACE .)
    ELSE            reduce using rule 40 (Block -> LBRACE StatementList RBRACE .)


state 241

    (38) ParameterDecl -> IdentifierList . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 61
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    Type                           shift and go to state 292
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    TypeLit                        shift and go to state 55

state 242

    (39) ParameterDecl -> Type .

    COMMA           reduce using rule 39 (ParameterDecl -> Type .)
    RPAREN          reduce using rule 39 (ParameterDecl -> Type .)


state 243

    (36) ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA ParameterDecl .

    COMMA           reduce using rule 36 (ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA ParameterDecl .)
    RPAREN          reduce using rule 36 (ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA ParameterDecl .)


state 244

    (37) ParameterDeclCommaRep -> ParameterDecl COMMA ParameterDecl .

    COMMA           reduce using rule 37 (ParameterDeclCommaRep -> ParameterDecl COMMA ParameterDecl .)
    RPAREN          reduce using rule 37 (ParameterDeclCommaRep -> ParameterDecl COMMA ParameterDecl .)


state 245

    (105) ExpressionRep -> ExpressionRep COMMA . Expression
    (107) Expression -> . UnaryExpr
    (108) Expression -> . Expression AddOp Term
    (109) Expression -> . Expression AddOp UnaryExpr
    (110) Expression -> . Term
    (115) UnaryExpr -> . PrimaryExpr
    (116) UnaryExpr -> . UnaryOp UnaryExpr
    (111) Term -> . Term MulOp Term
    (112) Term -> . UnaryExpr MulOp UnaryExpr
    (92) PrimaryExpr -> . Operand
    (93) PrimaryExpr -> . Conversion
    (94) PrimaryExpr -> . PrimaryExpr Selector
    (95) PrimaryExpr -> . PrimaryExpr Index
    (96) PrimaryExpr -> . PrimaryExpr Slice
    (97) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (91) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (90) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . INTEGER
    (86) BasicLit -> . FLOAT
    (87) BasicLit -> . IMAGINARY
    (88) BasicLit -> . RUNE
    (89) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 101
    MINUS           shift and go to state 98
    TIMES           shift and go to state 108
    AMPERS          shift and go to state 114
    NOT             shift and go to state 115
    LPAREN          shift and go to state 111
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 113
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 106
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    UnaryOp                        shift and go to state 93
    Conversion                     shift and go to state 92
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    Type                           shift and go to state 97
    OperandName                    shift and go to state 99
    TypeLit                        shift and go to state 55
    TypeName                       shift and go to state 56
    Term                           shift and go to state 105
    UnaryExpr                      shift and go to state 107
    PrimaryExpr                    shift and go to state 94
    Expression                     shift and go to state 293
    PointerType                    shift and go to state 66
    BasicLit                       shift and go to state 100
    Operand                        shift and go to state 109
    FunctionType                   shift and go to state 67
    StructType                     shift and go to state 58

state 246

    (16) FieldDeclRep -> FieldDeclRep FieldDecl SEMICOL .

    RBRACE          reduce using rule 16 (FieldDeclRep -> FieldDeclRep FieldDecl SEMICOL .)
    IDENTIFIER      reduce using rule 16 (FieldDeclRep -> FieldDeclRep FieldDecl SEMICOL .)


state 247

    (18) FieldDecl -> IdentifierList Type . TagOpt
    (19) TagOpt -> . Tag
    (20) TagOpt -> . epsilon
    (21) Tag -> . STRING
    (240) epsilon -> .

    STRING          shift and go to state 294
    SEMICOL         reduce using rule 240 (epsilon -> .)

    epsilon                        shift and go to state 295
    Tag                            shift and go to state 296
    TagOpt                         shift and go to state 297

state 248

    (100) Slice -> LBRACK ExpressionOpt COLON . ExpressionOpt RBRACK
    (113) ExpressionOpt -> . Expression
    (114) ExpressionOpt -> . epsilon
    (107) Expression -> . UnaryExpr
    (108) Expression -> . Expression AddOp Term
    (109) Expression -> . Expression AddOp UnaryExpr
    (110) Expression -> . Term
    (240) epsilon -> .
    (115) UnaryExpr -> . PrimaryExpr
    (116) UnaryExpr -> . UnaryOp UnaryExpr
    (111) Term -> . Term MulOp Term
    (112) Term -> . UnaryExpr MulOp UnaryExpr
    (92) PrimaryExpr -> . Operand
    (93) PrimaryExpr -> . Conversion
    (94) PrimaryExpr -> . PrimaryExpr Selector
    (95) PrimaryExpr -> . PrimaryExpr Index
    (96) PrimaryExpr -> . PrimaryExpr Slice
    (97) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (91) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (90) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . INTEGER
    (86) BasicLit -> . FLOAT
    (87) BasicLit -> . IMAGINARY
    (88) BasicLit -> . RUNE
    (89) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    RBRACK          reduce using rule 240 (epsilon -> .)
    PLUS            shift and go to state 101
    MINUS           shift and go to state 98
    TIMES           shift and go to state 108
    AMPERS          shift and go to state 114
    NOT             shift and go to state 115
    LPAREN          shift and go to state 111
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 113
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 106
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 92
    UnaryOp                        shift and go to state 93
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    Type                           shift and go to state 97
    OperandName                    shift and go to state 99
    BasicLit                       shift and go to state 100
    TypeName                       shift and go to state 56
    ExpressionOpt                  shift and go to state 298
    Term                           shift and go to state 105
    epsilon                        shift and go to state 194
    UnaryExpr                      shift and go to state 107
    PrimaryExpr                    shift and go to state 94
    Expression                     shift and go to state 299
    PointerType                    shift and go to state 66
    TypeLit                        shift and go to state 55
    Operand                        shift and go to state 109
    FunctionType                   shift and go to state 67
    StructType                     shift and go to state 58

state 249

    (99) Index -> LBRACK Expression RBRACK .

    DOT             reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    LBRACK          reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    LPAREN          reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    TIMES           reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    DIVIDE          reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    MOD             reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    AMPERS          reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    LL              reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    GG              reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    AMPCAR          reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    PLUS            reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    MINUS           reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    OR              reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    CARET           reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    RBRACK          reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    COMMA           reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    SEMICOL         reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    RPAREN          reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    COLON           reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    PLUSPLUS        reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    MINUSMIN        reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    PLUSEQ          reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    MINUSEQ         reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    TIMESEQ         reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    DIVIDEEQ        reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    MODEQ           reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    AMPEQ           reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    OREQ            reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    CAREQ           reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    LLEQ            reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    GGEQ            reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    EQUAL           reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    LBRACE          reduce using rule 99 (Index -> LBRACK Expression RBRACK .)


state 250

    (101) Arguments -> LPAREN ExpressionListTypeOpt RPAREN .

    DOT             reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LBRACK          reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LPAREN          reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    TIMES           reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    DIVIDE          reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    MOD             reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    AMPERS          reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LL              reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    GG              reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    AMPCAR          reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    PLUS            reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    MINUS           reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    OR              reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    CARET           reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    RBRACK          reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    COMMA           reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    SEMICOL         reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    RPAREN          reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    COLON           reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    PLUSPLUS        reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    MINUSMIN        reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    PLUSEQ          reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    MINUSEQ         reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    TIMESEQ         reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    DIVIDEEQ        reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    MODEQ           reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    AMPEQ           reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    OREQ            reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    CAREQ           reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LLEQ            reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    GGEQ            reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    EQUAL           reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LBRACE          reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)


state 251

    (91) Conversion -> Type LPAREN Expression RPAREN .

    DOT             reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    LBRACK          reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    LPAREN          reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    TIMES           reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    DIVIDE          reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    MOD             reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    AMPERS          reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    LL              reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    GG              reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    AMPCAR          reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    PLUS            reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    MINUS           reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    OR              reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    CARET           reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    COMMA           reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    SEMICOL         reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    RPAREN          reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    RBRACK          reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    COLON           reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    PLUSPLUS        reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    MINUSMIN        reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    PLUSEQ          reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    MINUSEQ         reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    TIMESEQ         reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    DIVIDEEQ        reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    MODEQ           reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    AMPEQ           reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    OREQ            reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    CAREQ           reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    LLEQ            reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    GGEQ            reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    EQUAL           reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    LBRACE          reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)


state 252

    (42) StatementRep -> StatementRep Statement SEMICOL .

    RETURN          reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    BREAK           reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    CONTINUE        reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    GOTO            reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    LBRACE          reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    IF              reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    FOR             reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    CONST           reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    TYPE            reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    VAR             reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    IDENTIFIER      reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    SWITCH          reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    PLUS            reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    MINUS           reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    TIMES           reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    AMPERS          reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    NOT             reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    LPAREN          reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    INTEGER         reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    FLOAT           reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    IMAGINARY       reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    RUNE            reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    STRING          reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    TYPEX           reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    LBRACK          reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    STRUCT          reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    FUNC            reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    SEMICOL         reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    RBRACE          reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    CASE            reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    DEFAULT         reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)


state 253

    (216) ReturnStmt -> RETURN ExpressionListPureOpt .

    SEMICOL         reduce using rule 216 (ReturnStmt -> RETURN ExpressionListPureOpt .)


state 254

    (218) ExpressionListPureOpt -> epsilon .

    SEMICOL         reduce using rule 218 (ExpressionListPureOpt -> epsilon .)


state 255

    (217) ExpressionListPureOpt -> ExpressionList .

    SEMICOL         reduce using rule 217 (ExpressionListPureOpt -> ExpressionList .)


state 256

    (160) LabeledStmt -> Label COLON . Statement
    (144) Statement -> . Declaration
    (145) Statement -> . LabeledStmt
    (146) Statement -> . SimpleStmt
    (147) Statement -> . ReturnStmt
    (148) Statement -> . BreakStmt
    (149) Statement -> . ContinueStmt
    (150) Statement -> . GotoStmt
    (151) Statement -> . Block
    (152) Statement -> . IfStmt
    (153) Statement -> . SwitchStmt
    (154) Statement -> . ForStmt
    (44) Declaration -> . ConstDecl
    (45) Declaration -> . TypeDecl
    (46) Declaration -> . VarDecl
    (160) LabeledStmt -> . Label COLON Statement
    (155) SimpleStmt -> . epsilon
    (156) SimpleStmt -> . ExpressionStmt
    (157) SimpleStmt -> . IncDecStmt
    (158) SimpleStmt -> . Assignment
    (159) SimpleStmt -> . ShortVarDecl
    (216) ReturnStmt -> . RETURN ExpressionListPureOpt
    (219) BreakStmt -> . BREAK LabelOpt
    (220) ContinueStmt -> . CONTINUE LabelOpt
    (223) GotoStmt -> . GOTO Label
    (40) Block -> . LBRACE StatementList RBRACE
    (178) IfStmt -> . IF Expression Block ElseOpt
    (184) SwitchStmt -> . ExprSwitchStmt
    (185) SwitchStmt -> . TypeSwitchStmt
    (204) ForStmt -> . FOR ConditionBlockOpt Block
    (49) ConstDecl -> . CONST ConstSpec
    (50) ConstDecl -> . CONST LPAREN ConstSpecRep RPAREN
    (59) TypeDecl -> . TYPE TypeSpec
    (60) TypeDecl -> . TYPE LPAREN TypeSpecRep RPAREN
    (67) VarDecl -> . VAR VarSpec
    (68) VarDecl -> . VAR LPAREN VarSpecRep RPAREN
    (161) Label -> . IDENTIFIER
    (240) epsilon -> .
    (162) ExpressionStmt -> . Expression
    (163) IncDecStmt -> . Expression PLUSPLUS
    (164) IncDecStmt -> . Expression MINUSMIN
    (165) Assignment -> . ExpressionList assign_op ExpressionList
    (75) ShortVarDecl -> . IDENTIFIER COLONEQ Expression
    (186) ExprSwitchStmt -> . SWITCH ExpressionOpt LBRACE ExprCaseClauseRep RBRACE
    (192) TypeSwitchStmt -> . SWITCH SimpleStmtOpt TypeSwitchGuard LBRACE TypeCaseClauseOpt RBRACE
    (107) Expression -> . UnaryExpr
    (108) Expression -> . Expression AddOp Term
    (109) Expression -> . Expression AddOp UnaryExpr
    (110) Expression -> . Term
    (104) ExpressionList -> . Expression ExpressionRep
    (115) UnaryExpr -> . PrimaryExpr
    (116) UnaryExpr -> . UnaryOp UnaryExpr
    (111) Term -> . Term MulOp Term
    (112) Term -> . UnaryExpr MulOp UnaryExpr
    (92) PrimaryExpr -> . Operand
    (93) PrimaryExpr -> . Conversion
    (94) PrimaryExpr -> . PrimaryExpr Selector
    (95) PrimaryExpr -> . PrimaryExpr Index
    (96) PrimaryExpr -> . PrimaryExpr Slice
    (97) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (91) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (90) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . INTEGER
    (86) BasicLit -> . FLOAT
    (87) BasicLit -> . IMAGINARY
    (88) BasicLit -> . RUNE
    (89) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    RETURN          shift and go to state 216
    BREAK           shift and go to state 232
    CONTINUE        shift and go to state 225
    GOTO            shift and go to state 236
    LBRACE          shift and go to state 124
    IF              shift and go to state 238
    FOR             shift and go to state 222
    CONST           shift and go to state 14
    TYPE            shift and go to state 23
    VAR             shift and go to state 21
    IDENTIFIER      shift and go to state 228
    SEMICOL         reduce using rule 240 (epsilon -> .)
    SWITCH          shift and go to state 226
    PLUS            shift and go to state 101
    MINUS           shift and go to state 98
    TIMES           shift and go to state 108
    AMPERS          shift and go to state 114
    NOT             shift and go to state 115
    LPAREN          shift and go to state 111
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 113
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 106
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    UnaryOp                        shift and go to state 93
    ContinueStmt                   shift and go to state 210
    Conversion                     shift and go to state 92
    SimpleStmt                     shift and go to state 234
    Label                          shift and go to state 217
    ExpressionStmt                 shift and go to state 211
    PointerType                    shift and go to state 66
    ForStmt                        shift and go to state 235
    ExprSwitchStmt                 shift and go to state 218
    Statement                      shift and go to state 300
    Type                           shift and go to state 97
    IfStmt                         shift and go to state 219
    OperandName                    shift and go to state 99
    ArrayType                      shift and go to state 53
    Assignment                     shift and go to state 213
    TypeName                       shift and go to state 56
    IncDecStmt                     shift and go to state 220
    Declaration                    shift and go to state 227
    FunctionType                   shift and go to state 67
    GotoStmt                       shift and go to state 221
    Term                           shift and go to state 105
    TypeDecl                       shift and go to state 19
    LabeledStmt                    shift and go to state 214
    epsilon                        shift and go to state 229
    UnaryExpr                      shift and go to state 107
    Operand                        shift and go to state 109
    ExpressionList                 shift and go to state 230
    Literal                        shift and go to state 95
    Expression                     shift and go to state 231
    ShortVarDecl                   shift and go to state 237
    Block                          shift and go to state 223
    TypeSwitchStmt                 shift and go to state 215
    BreakStmt                      shift and go to state 239
    SwitchStmt                     shift and go to state 224
    VarDecl                        shift and go to state 22
    TypeLit                        shift and go to state 55
    BasicLit                       shift and go to state 100
    PrimaryExpr                    shift and go to state 94
    ReturnStmt                     shift and go to state 233
    ConstDecl                      shift and go to state 18
    StructType                     shift and go to state 58

state 257

    (209) ForClause -> SimpleStmt . SEMICOL ConditionOpt SEMICOL SimpleStmt

    SEMICOL         shift and go to state 301


state 258

    (75) ShortVarDecl -> IDENTIFIER . COLONEQ Expression
    (90) OperandName -> IDENTIFIER .

    COLONEQ         shift and go to state 273
    DOT             reduce using rule 90 (OperandName -> IDENTIFIER .)
    LBRACK          reduce using rule 90 (OperandName -> IDENTIFIER .)
    LPAREN          reduce using rule 90 (OperandName -> IDENTIFIER .)
    TIMES           reduce using rule 90 (OperandName -> IDENTIFIER .)
    DIVIDE          reduce using rule 90 (OperandName -> IDENTIFIER .)
    MOD             reduce using rule 90 (OperandName -> IDENTIFIER .)
    AMPERS          reduce using rule 90 (OperandName -> IDENTIFIER .)
    LL              reduce using rule 90 (OperandName -> IDENTIFIER .)
    GG              reduce using rule 90 (OperandName -> IDENTIFIER .)
    AMPCAR          reduce using rule 90 (OperandName -> IDENTIFIER .)
    PLUSPLUS        reduce using rule 90 (OperandName -> IDENTIFIER .)
    MINUSMIN        reduce using rule 90 (OperandName -> IDENTIFIER .)
    PLUS            reduce using rule 90 (OperandName -> IDENTIFIER .)
    MINUS           reduce using rule 90 (OperandName -> IDENTIFIER .)
    OR              reduce using rule 90 (OperandName -> IDENTIFIER .)
    CARET           reduce using rule 90 (OperandName -> IDENTIFIER .)
    COMMA           reduce using rule 90 (OperandName -> IDENTIFIER .)
    LBRACE          reduce using rule 90 (OperandName -> IDENTIFIER .)
    SEMICOL         reduce using rule 90 (OperandName -> IDENTIFIER .)
    PLUSEQ          reduce using rule 90 (OperandName -> IDENTIFIER .)
    MINUSEQ         reduce using rule 90 (OperandName -> IDENTIFIER .)
    TIMESEQ         reduce using rule 90 (OperandName -> IDENTIFIER .)
    DIVIDEEQ        reduce using rule 90 (OperandName -> IDENTIFIER .)
    MODEQ           reduce using rule 90 (OperandName -> IDENTIFIER .)
    AMPEQ           reduce using rule 90 (OperandName -> IDENTIFIER .)
    OREQ            reduce using rule 90 (OperandName -> IDENTIFIER .)
    CAREQ           reduce using rule 90 (OperandName -> IDENTIFIER .)
    LLEQ            reduce using rule 90 (OperandName -> IDENTIFIER .)
    GGEQ            reduce using rule 90 (OperandName -> IDENTIFIER .)
    EQUAL           reduce using rule 90 (OperandName -> IDENTIFIER .)


state 259

    (206) ConditionBlockOpt -> Condition .

    LBRACE          reduce using rule 206 (ConditionBlockOpt -> Condition .)


state 260

    (205) ConditionBlockOpt -> epsilon .
    (155) SimpleStmt -> epsilon .

    LBRACE          reduce using rule 205 (ConditionBlockOpt -> epsilon .)
    SEMICOL         reduce using rule 155 (SimpleStmt -> epsilon .)


state 261

    (204) ForStmt -> FOR ConditionBlockOpt . Block
    (40) Block -> . LBRACE StatementList RBRACE

    LBRACE          shift and go to state 124

    Block                          shift and go to state 302

state 262

    (207) ConditionBlockOpt -> ForClause .

    LBRACE          reduce using rule 207 (ConditionBlockOpt -> ForClause .)


state 263

    (208) Condition -> Expression .
    (108) Expression -> Expression . AddOp Term
    (109) Expression -> Expression . AddOp UnaryExpr
    (162) ExpressionStmt -> Expression .
    (163) IncDecStmt -> Expression . PLUSPLUS
    (164) IncDecStmt -> Expression . MINUSMIN
    (104) ExpressionList -> Expression . ExpressionRep
    (128) AddOp -> . PLUS
    (129) AddOp -> . MINUS
    (130) AddOp -> . OR
    (131) AddOp -> . CARET
    (105) ExpressionRep -> . ExpressionRep COMMA Expression
    (106) ExpressionRep -> . epsilon
    (240) epsilon -> .

    LBRACE          reduce using rule 208 (Condition -> Expression .)
    SEMICOL         reduce using rule 162 (ExpressionStmt -> Expression .)
    PLUSPLUS        shift and go to state 287
    MINUSMIN        shift and go to state 288
    PLUS            shift and go to state 174
    MINUS           shift and go to state 175
    OR              shift and go to state 173
    CARET           shift and go to state 171
    COMMA           reduce using rule 240 (epsilon -> .)
    PLUSEQ          reduce using rule 240 (epsilon -> .)
    MINUSEQ         reduce using rule 240 (epsilon -> .)
    TIMESEQ         reduce using rule 240 (epsilon -> .)
    DIVIDEEQ        reduce using rule 240 (epsilon -> .)
    MODEQ           reduce using rule 240 (epsilon -> .)
    AMPEQ           reduce using rule 240 (epsilon -> .)
    OREQ            reduce using rule 240 (epsilon -> .)
    CAREQ           reduce using rule 240 (epsilon -> .)
    LLEQ            reduce using rule 240 (epsilon -> .)
    GGEQ            reduce using rule 240 (epsilon -> .)
    EQUAL           reduce using rule 240 (epsilon -> .)

    AddOp                          shift and go to state 172
    ExpressionRep                  shift and go to state 186
    epsilon                        shift and go to state 187

state 264

    (222) LabelOpt -> epsilon .

    SEMICOL         reduce using rule 222 (LabelOpt -> epsilon .)


state 265

    (161) Label -> IDENTIFIER .

    SEMICOL         reduce using rule 161 (Label -> IDENTIFIER .)


state 266

    (220) ContinueStmt -> CONTINUE LabelOpt .

    SEMICOL         reduce using rule 220 (ContinueStmt -> CONTINUE LabelOpt .)


state 267

    (221) LabelOpt -> Label .

    SEMICOL         reduce using rule 221 (LabelOpt -> Label .)


state 268

    (179) SimpleStmtOpt -> SimpleStmt . SEMICOL

    SEMICOL         shift and go to state 303


state 269

    (186) ExprSwitchStmt -> SWITCH ExpressionOpt . LBRACE ExprCaseClauseRep RBRACE

    LBRACE          shift and go to state 304


state 270

    (114) ExpressionOpt -> epsilon .
    (180) SimpleStmtOpt -> epsilon .
    (155) SimpleStmt -> epsilon .

    LBRACE          reduce using rule 114 (ExpressionOpt -> epsilon .)
    IDENTIFIER      reduce using rule 180 (SimpleStmtOpt -> epsilon .)
    LPAREN          reduce using rule 180 (SimpleStmtOpt -> epsilon .)
    INTEGER         reduce using rule 180 (SimpleStmtOpt -> epsilon .)
    FLOAT           reduce using rule 180 (SimpleStmtOpt -> epsilon .)
    IMAGINARY       reduce using rule 180 (SimpleStmtOpt -> epsilon .)
    RUNE            reduce using rule 180 (SimpleStmtOpt -> epsilon .)
    STRING          reduce using rule 180 (SimpleStmtOpt -> epsilon .)
    TYPEX           reduce using rule 180 (SimpleStmtOpt -> epsilon .)
    LBRACK          reduce using rule 180 (SimpleStmtOpt -> epsilon .)
    STRUCT          reduce using rule 180 (SimpleStmtOpt -> epsilon .)
    TIMES           reduce using rule 180 (SimpleStmtOpt -> epsilon .)
    FUNC            reduce using rule 180 (SimpleStmtOpt -> epsilon .)
    SEMICOL         reduce using rule 155 (SimpleStmt -> epsilon .)


state 271

    (192) TypeSwitchStmt -> SWITCH SimpleStmtOpt . TypeSwitchGuard LBRACE TypeCaseClauseOpt RBRACE
    (193) TypeSwitchGuard -> . IdentifierOpt PrimaryExpr DOT LPAREN TYPE RPAREN
    (194) IdentifierOpt -> . IDENTIFIER COLONEQ
    (195) IdentifierOpt -> . epsilon
    (240) epsilon -> .

  ! shift/reduce conflict for IDENTIFIER resolved as shift
    IDENTIFIER      shift and go to state 308
    LPAREN          reduce using rule 240 (epsilon -> .)
    INTEGER         reduce using rule 240 (epsilon -> .)
    FLOAT           reduce using rule 240 (epsilon -> .)
    IMAGINARY       reduce using rule 240 (epsilon -> .)
    RUNE            reduce using rule 240 (epsilon -> .)
    STRING          reduce using rule 240 (epsilon -> .)
    TYPEX           reduce using rule 240 (epsilon -> .)
    LBRACK          reduce using rule 240 (epsilon -> .)
    STRUCT          reduce using rule 240 (epsilon -> .)
    TIMES           reduce using rule 240 (epsilon -> .)
    FUNC            reduce using rule 240 (epsilon -> .)

  ! IDENTIFIER      [ reduce using rule 240 (epsilon -> .) ]

    epsilon                        shift and go to state 305
    TypeSwitchGuard                shift and go to state 306
    IdentifierOpt                  shift and go to state 307

state 272

    (113) ExpressionOpt -> Expression .
    (108) Expression -> Expression . AddOp Term
    (109) Expression -> Expression . AddOp UnaryExpr
    (162) ExpressionStmt -> Expression .
    (163) IncDecStmt -> Expression . PLUSPLUS
    (164) IncDecStmt -> Expression . MINUSMIN
    (104) ExpressionList -> Expression . ExpressionRep
    (128) AddOp -> . PLUS
    (129) AddOp -> . MINUS
    (130) AddOp -> . OR
    (131) AddOp -> . CARET
    (105) ExpressionRep -> . ExpressionRep COMMA Expression
    (106) ExpressionRep -> . epsilon
    (240) epsilon -> .

    LBRACE          reduce using rule 113 (ExpressionOpt -> Expression .)
    SEMICOL         reduce using rule 162 (ExpressionStmt -> Expression .)
    PLUSPLUS        shift and go to state 287
    MINUSMIN        shift and go to state 288
    PLUS            shift and go to state 174
    MINUS           shift and go to state 175
    OR              shift and go to state 173
    CARET           shift and go to state 171
    COMMA           reduce using rule 240 (epsilon -> .)
    PLUSEQ          reduce using rule 240 (epsilon -> .)
    MINUSEQ         reduce using rule 240 (epsilon -> .)
    TIMESEQ         reduce using rule 240 (epsilon -> .)
    DIVIDEEQ        reduce using rule 240 (epsilon -> .)
    MODEQ           reduce using rule 240 (epsilon -> .)
    AMPEQ           reduce using rule 240 (epsilon -> .)
    OREQ            reduce using rule 240 (epsilon -> .)
    CAREQ           reduce using rule 240 (epsilon -> .)
    LLEQ            reduce using rule 240 (epsilon -> .)
    GGEQ            reduce using rule 240 (epsilon -> .)
    EQUAL           reduce using rule 240 (epsilon -> .)

    AddOp                          shift and go to state 172
    ExpressionRep                  shift and go to state 186
    epsilon                        shift and go to state 187

state 273

    (75) ShortVarDecl -> IDENTIFIER COLONEQ . Expression
    (107) Expression -> . UnaryExpr
    (108) Expression -> . Expression AddOp Term
    (109) Expression -> . Expression AddOp UnaryExpr
    (110) Expression -> . Term
    (115) UnaryExpr -> . PrimaryExpr
    (116) UnaryExpr -> . UnaryOp UnaryExpr
    (111) Term -> . Term MulOp Term
    (112) Term -> . UnaryExpr MulOp UnaryExpr
    (92) PrimaryExpr -> . Operand
    (93) PrimaryExpr -> . Conversion
    (94) PrimaryExpr -> . PrimaryExpr Selector
    (95) PrimaryExpr -> . PrimaryExpr Index
    (96) PrimaryExpr -> . PrimaryExpr Slice
    (97) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (91) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (90) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . INTEGER
    (86) BasicLit -> . FLOAT
    (87) BasicLit -> . IMAGINARY
    (88) BasicLit -> . RUNE
    (89) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 101
    MINUS           shift and go to state 98
    TIMES           shift and go to state 108
    AMPERS          shift and go to state 114
    NOT             shift and go to state 115
    LPAREN          shift and go to state 111
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 113
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 106
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 92
    UnaryOp                        shift and go to state 93
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    Type                           shift and go to state 97
    OperandName                    shift and go to state 99
    BasicLit                       shift and go to state 100
    TypeName                       shift and go to state 56
    Term                           shift and go to state 105
    UnaryExpr                      shift and go to state 107
    PrimaryExpr                    shift and go to state 94
    Expression                     shift and go to state 309
    PointerType                    shift and go to state 66
    TypeLit                        shift and go to state 55
    Operand                        shift and go to state 109
    FunctionType                   shift and go to state 67
    StructType                     shift and go to state 58

state 274

    (166) assign_op -> AssignOp .

    PLUS            reduce using rule 166 (assign_op -> AssignOp .)
    MINUS           reduce using rule 166 (assign_op -> AssignOp .)
    TIMES           reduce using rule 166 (assign_op -> AssignOp .)
    AMPERS          reduce using rule 166 (assign_op -> AssignOp .)
    NOT             reduce using rule 166 (assign_op -> AssignOp .)
    LPAREN          reduce using rule 166 (assign_op -> AssignOp .)
    IDENTIFIER      reduce using rule 166 (assign_op -> AssignOp .)
    INTEGER         reduce using rule 166 (assign_op -> AssignOp .)
    FLOAT           reduce using rule 166 (assign_op -> AssignOp .)
    IMAGINARY       reduce using rule 166 (assign_op -> AssignOp .)
    RUNE            reduce using rule 166 (assign_op -> AssignOp .)
    STRING          reduce using rule 166 (assign_op -> AssignOp .)
    TYPEX           reduce using rule 166 (assign_op -> AssignOp .)
    LBRACK          reduce using rule 166 (assign_op -> AssignOp .)
    STRUCT          reduce using rule 166 (assign_op -> AssignOp .)
    FUNC            reduce using rule 166 (assign_op -> AssignOp .)


state 275

    (177) AssignOp -> EQUAL .

    PLUS            reduce using rule 177 (AssignOp -> EQUAL .)
    MINUS           reduce using rule 177 (AssignOp -> EQUAL .)
    TIMES           reduce using rule 177 (AssignOp -> EQUAL .)
    AMPERS          reduce using rule 177 (AssignOp -> EQUAL .)
    NOT             reduce using rule 177 (AssignOp -> EQUAL .)
    LPAREN          reduce using rule 177 (AssignOp -> EQUAL .)
    IDENTIFIER      reduce using rule 177 (AssignOp -> EQUAL .)
    INTEGER         reduce using rule 177 (AssignOp -> EQUAL .)
    FLOAT           reduce using rule 177 (AssignOp -> EQUAL .)
    IMAGINARY       reduce using rule 177 (AssignOp -> EQUAL .)
    RUNE            reduce using rule 177 (AssignOp -> EQUAL .)
    STRING          reduce using rule 177 (AssignOp -> EQUAL .)
    TYPEX           reduce using rule 177 (AssignOp -> EQUAL .)
    LBRACK          reduce using rule 177 (AssignOp -> EQUAL .)
    STRUCT          reduce using rule 177 (AssignOp -> EQUAL .)
    FUNC            reduce using rule 177 (AssignOp -> EQUAL .)


state 276

    (174) AssignOp -> CAREQ .

    PLUS            reduce using rule 174 (AssignOp -> CAREQ .)
    MINUS           reduce using rule 174 (AssignOp -> CAREQ .)
    TIMES           reduce using rule 174 (AssignOp -> CAREQ .)
    AMPERS          reduce using rule 174 (AssignOp -> CAREQ .)
    NOT             reduce using rule 174 (AssignOp -> CAREQ .)
    LPAREN          reduce using rule 174 (AssignOp -> CAREQ .)
    IDENTIFIER      reduce using rule 174 (AssignOp -> CAREQ .)
    INTEGER         reduce using rule 174 (AssignOp -> CAREQ .)
    FLOAT           reduce using rule 174 (AssignOp -> CAREQ .)
    IMAGINARY       reduce using rule 174 (AssignOp -> CAREQ .)
    RUNE            reduce using rule 174 (AssignOp -> CAREQ .)
    STRING          reduce using rule 174 (AssignOp -> CAREQ .)
    TYPEX           reduce using rule 174 (AssignOp -> CAREQ .)
    LBRACK          reduce using rule 174 (AssignOp -> CAREQ .)
    STRUCT          reduce using rule 174 (AssignOp -> CAREQ .)
    FUNC            reduce using rule 174 (AssignOp -> CAREQ .)


state 277

    (169) AssignOp -> TIMESEQ .

    PLUS            reduce using rule 169 (AssignOp -> TIMESEQ .)
    MINUS           reduce using rule 169 (AssignOp -> TIMESEQ .)
    TIMES           reduce using rule 169 (AssignOp -> TIMESEQ .)
    AMPERS          reduce using rule 169 (AssignOp -> TIMESEQ .)
    NOT             reduce using rule 169 (AssignOp -> TIMESEQ .)
    LPAREN          reduce using rule 169 (AssignOp -> TIMESEQ .)
    IDENTIFIER      reduce using rule 169 (AssignOp -> TIMESEQ .)
    INTEGER         reduce using rule 169 (AssignOp -> TIMESEQ .)
    FLOAT           reduce using rule 169 (AssignOp -> TIMESEQ .)
    IMAGINARY       reduce using rule 169 (AssignOp -> TIMESEQ .)
    RUNE            reduce using rule 169 (AssignOp -> TIMESEQ .)
    STRING          reduce using rule 169 (AssignOp -> TIMESEQ .)
    TYPEX           reduce using rule 169 (AssignOp -> TIMESEQ .)
    LBRACK          reduce using rule 169 (AssignOp -> TIMESEQ .)
    STRUCT          reduce using rule 169 (AssignOp -> TIMESEQ .)
    FUNC            reduce using rule 169 (AssignOp -> TIMESEQ .)


state 278

    (167) AssignOp -> PLUSEQ .

    PLUS            reduce using rule 167 (AssignOp -> PLUSEQ .)
    MINUS           reduce using rule 167 (AssignOp -> PLUSEQ .)
    TIMES           reduce using rule 167 (AssignOp -> PLUSEQ .)
    AMPERS          reduce using rule 167 (AssignOp -> PLUSEQ .)
    NOT             reduce using rule 167 (AssignOp -> PLUSEQ .)
    LPAREN          reduce using rule 167 (AssignOp -> PLUSEQ .)
    IDENTIFIER      reduce using rule 167 (AssignOp -> PLUSEQ .)
    INTEGER         reduce using rule 167 (AssignOp -> PLUSEQ .)
    FLOAT           reduce using rule 167 (AssignOp -> PLUSEQ .)
    IMAGINARY       reduce using rule 167 (AssignOp -> PLUSEQ .)
    RUNE            reduce using rule 167 (AssignOp -> PLUSEQ .)
    STRING          reduce using rule 167 (AssignOp -> PLUSEQ .)
    TYPEX           reduce using rule 167 (AssignOp -> PLUSEQ .)
    LBRACK          reduce using rule 167 (AssignOp -> PLUSEQ .)
    STRUCT          reduce using rule 167 (AssignOp -> PLUSEQ .)
    FUNC            reduce using rule 167 (AssignOp -> PLUSEQ .)


state 279

    (171) AssignOp -> MODEQ .

    PLUS            reduce using rule 171 (AssignOp -> MODEQ .)
    MINUS           reduce using rule 171 (AssignOp -> MODEQ .)
    TIMES           reduce using rule 171 (AssignOp -> MODEQ .)
    AMPERS          reduce using rule 171 (AssignOp -> MODEQ .)
    NOT             reduce using rule 171 (AssignOp -> MODEQ .)
    LPAREN          reduce using rule 171 (AssignOp -> MODEQ .)
    IDENTIFIER      reduce using rule 171 (AssignOp -> MODEQ .)
    INTEGER         reduce using rule 171 (AssignOp -> MODEQ .)
    FLOAT           reduce using rule 171 (AssignOp -> MODEQ .)
    IMAGINARY       reduce using rule 171 (AssignOp -> MODEQ .)
    RUNE            reduce using rule 171 (AssignOp -> MODEQ .)
    STRING          reduce using rule 171 (AssignOp -> MODEQ .)
    TYPEX           reduce using rule 171 (AssignOp -> MODEQ .)
    LBRACK          reduce using rule 171 (AssignOp -> MODEQ .)
    STRUCT          reduce using rule 171 (AssignOp -> MODEQ .)
    FUNC            reduce using rule 171 (AssignOp -> MODEQ .)


state 280

    (176) AssignOp -> GGEQ .

    PLUS            reduce using rule 176 (AssignOp -> GGEQ .)
    MINUS           reduce using rule 176 (AssignOp -> GGEQ .)
    TIMES           reduce using rule 176 (AssignOp -> GGEQ .)
    AMPERS          reduce using rule 176 (AssignOp -> GGEQ .)
    NOT             reduce using rule 176 (AssignOp -> GGEQ .)
    LPAREN          reduce using rule 176 (AssignOp -> GGEQ .)
    IDENTIFIER      reduce using rule 176 (AssignOp -> GGEQ .)
    INTEGER         reduce using rule 176 (AssignOp -> GGEQ .)
    FLOAT           reduce using rule 176 (AssignOp -> GGEQ .)
    IMAGINARY       reduce using rule 176 (AssignOp -> GGEQ .)
    RUNE            reduce using rule 176 (AssignOp -> GGEQ .)
    STRING          reduce using rule 176 (AssignOp -> GGEQ .)
    TYPEX           reduce using rule 176 (AssignOp -> GGEQ .)
    LBRACK          reduce using rule 176 (AssignOp -> GGEQ .)
    STRUCT          reduce using rule 176 (AssignOp -> GGEQ .)
    FUNC            reduce using rule 176 (AssignOp -> GGEQ .)


state 281

    (175) AssignOp -> LLEQ .

    PLUS            reduce using rule 175 (AssignOp -> LLEQ .)
    MINUS           reduce using rule 175 (AssignOp -> LLEQ .)
    TIMES           reduce using rule 175 (AssignOp -> LLEQ .)
    AMPERS          reduce using rule 175 (AssignOp -> LLEQ .)
    NOT             reduce using rule 175 (AssignOp -> LLEQ .)
    LPAREN          reduce using rule 175 (AssignOp -> LLEQ .)
    IDENTIFIER      reduce using rule 175 (AssignOp -> LLEQ .)
    INTEGER         reduce using rule 175 (AssignOp -> LLEQ .)
    FLOAT           reduce using rule 175 (AssignOp -> LLEQ .)
    IMAGINARY       reduce using rule 175 (AssignOp -> LLEQ .)
    RUNE            reduce using rule 175 (AssignOp -> LLEQ .)
    STRING          reduce using rule 175 (AssignOp -> LLEQ .)
    TYPEX           reduce using rule 175 (AssignOp -> LLEQ .)
    LBRACK          reduce using rule 175 (AssignOp -> LLEQ .)
    STRUCT          reduce using rule 175 (AssignOp -> LLEQ .)
    FUNC            reduce using rule 175 (AssignOp -> LLEQ .)


state 282

    (173) AssignOp -> OREQ .

    PLUS            reduce using rule 173 (AssignOp -> OREQ .)
    MINUS           reduce using rule 173 (AssignOp -> OREQ .)
    TIMES           reduce using rule 173 (AssignOp -> OREQ .)
    AMPERS          reduce using rule 173 (AssignOp -> OREQ .)
    NOT             reduce using rule 173 (AssignOp -> OREQ .)
    LPAREN          reduce using rule 173 (AssignOp -> OREQ .)
    IDENTIFIER      reduce using rule 173 (AssignOp -> OREQ .)
    INTEGER         reduce using rule 173 (AssignOp -> OREQ .)
    FLOAT           reduce using rule 173 (AssignOp -> OREQ .)
    IMAGINARY       reduce using rule 173 (AssignOp -> OREQ .)
    RUNE            reduce using rule 173 (AssignOp -> OREQ .)
    STRING          reduce using rule 173 (AssignOp -> OREQ .)
    TYPEX           reduce using rule 173 (AssignOp -> OREQ .)
    LBRACK          reduce using rule 173 (AssignOp -> OREQ .)
    STRUCT          reduce using rule 173 (AssignOp -> OREQ .)
    FUNC            reduce using rule 173 (AssignOp -> OREQ .)


state 283

    (168) AssignOp -> MINUSEQ .

    PLUS            reduce using rule 168 (AssignOp -> MINUSEQ .)
    MINUS           reduce using rule 168 (AssignOp -> MINUSEQ .)
    TIMES           reduce using rule 168 (AssignOp -> MINUSEQ .)
    AMPERS          reduce using rule 168 (AssignOp -> MINUSEQ .)
    NOT             reduce using rule 168 (AssignOp -> MINUSEQ .)
    LPAREN          reduce using rule 168 (AssignOp -> MINUSEQ .)
    IDENTIFIER      reduce using rule 168 (AssignOp -> MINUSEQ .)
    INTEGER         reduce using rule 168 (AssignOp -> MINUSEQ .)
    FLOAT           reduce using rule 168 (AssignOp -> MINUSEQ .)
    IMAGINARY       reduce using rule 168 (AssignOp -> MINUSEQ .)
    RUNE            reduce using rule 168 (AssignOp -> MINUSEQ .)
    STRING          reduce using rule 168 (AssignOp -> MINUSEQ .)
    TYPEX           reduce using rule 168 (AssignOp -> MINUSEQ .)
    LBRACK          reduce using rule 168 (AssignOp -> MINUSEQ .)
    STRUCT          reduce using rule 168 (AssignOp -> MINUSEQ .)
    FUNC            reduce using rule 168 (AssignOp -> MINUSEQ .)


state 284

    (172) AssignOp -> AMPEQ .

    PLUS            reduce using rule 172 (AssignOp -> AMPEQ .)
    MINUS           reduce using rule 172 (AssignOp -> AMPEQ .)
    TIMES           reduce using rule 172 (AssignOp -> AMPEQ .)
    AMPERS          reduce using rule 172 (AssignOp -> AMPEQ .)
    NOT             reduce using rule 172 (AssignOp -> AMPEQ .)
    LPAREN          reduce using rule 172 (AssignOp -> AMPEQ .)
    IDENTIFIER      reduce using rule 172 (AssignOp -> AMPEQ .)
    INTEGER         reduce using rule 172 (AssignOp -> AMPEQ .)
    FLOAT           reduce using rule 172 (AssignOp -> AMPEQ .)
    IMAGINARY       reduce using rule 172 (AssignOp -> AMPEQ .)
    RUNE            reduce using rule 172 (AssignOp -> AMPEQ .)
    STRING          reduce using rule 172 (AssignOp -> AMPEQ .)
    TYPEX           reduce using rule 172 (AssignOp -> AMPEQ .)
    LBRACK          reduce using rule 172 (AssignOp -> AMPEQ .)
    STRUCT          reduce using rule 172 (AssignOp -> AMPEQ .)
    FUNC            reduce using rule 172 (AssignOp -> AMPEQ .)


state 285

    (165) Assignment -> ExpressionList assign_op . ExpressionList
    (104) ExpressionList -> . Expression ExpressionRep
    (107) Expression -> . UnaryExpr
    (108) Expression -> . Expression AddOp Term
    (109) Expression -> . Expression AddOp UnaryExpr
    (110) Expression -> . Term
    (115) UnaryExpr -> . PrimaryExpr
    (116) UnaryExpr -> . UnaryOp UnaryExpr
    (111) Term -> . Term MulOp Term
    (112) Term -> . UnaryExpr MulOp UnaryExpr
    (92) PrimaryExpr -> . Operand
    (93) PrimaryExpr -> . Conversion
    (94) PrimaryExpr -> . PrimaryExpr Selector
    (95) PrimaryExpr -> . PrimaryExpr Index
    (96) PrimaryExpr -> . PrimaryExpr Slice
    (97) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (91) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (90) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . INTEGER
    (86) BasicLit -> . FLOAT
    (87) BasicLit -> . IMAGINARY
    (88) BasicLit -> . RUNE
    (89) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 101
    MINUS           shift and go to state 98
    TIMES           shift and go to state 108
    AMPERS          shift and go to state 114
    NOT             shift and go to state 115
    LPAREN          shift and go to state 111
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 113
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 106
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    UnaryOp                        shift and go to state 93
    Conversion                     shift and go to state 92
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    Type                           shift and go to state 97
    OperandName                    shift and go to state 99
    BasicLit                       shift and go to state 100
    TypeName                       shift and go to state 56
    Term                           shift and go to state 105
    UnaryExpr                      shift and go to state 107
    Operand                        shift and go to state 109
    ExpressionList                 shift and go to state 310
    Expression                     shift and go to state 136
    PointerType                    shift and go to state 66
    TypeLit                        shift and go to state 55
    PrimaryExpr                    shift and go to state 94
    FunctionType                   shift and go to state 67
    StructType                     shift and go to state 58

state 286

    (170) AssignOp -> DIVIDEEQ .

    PLUS            reduce using rule 170 (AssignOp -> DIVIDEEQ .)
    MINUS           reduce using rule 170 (AssignOp -> DIVIDEEQ .)
    TIMES           reduce using rule 170 (AssignOp -> DIVIDEEQ .)
    AMPERS          reduce using rule 170 (AssignOp -> DIVIDEEQ .)
    NOT             reduce using rule 170 (AssignOp -> DIVIDEEQ .)
    LPAREN          reduce using rule 170 (AssignOp -> DIVIDEEQ .)
    IDENTIFIER      reduce using rule 170 (AssignOp -> DIVIDEEQ .)
    INTEGER         reduce using rule 170 (AssignOp -> DIVIDEEQ .)
    FLOAT           reduce using rule 170 (AssignOp -> DIVIDEEQ .)
    IMAGINARY       reduce using rule 170 (AssignOp -> DIVIDEEQ .)
    RUNE            reduce using rule 170 (AssignOp -> DIVIDEEQ .)
    STRING          reduce using rule 170 (AssignOp -> DIVIDEEQ .)
    TYPEX           reduce using rule 170 (AssignOp -> DIVIDEEQ .)
    LBRACK          reduce using rule 170 (AssignOp -> DIVIDEEQ .)
    STRUCT          reduce using rule 170 (AssignOp -> DIVIDEEQ .)
    FUNC            reduce using rule 170 (AssignOp -> DIVIDEEQ .)


state 287

    (163) IncDecStmt -> Expression PLUSPLUS .

    SEMICOL         reduce using rule 163 (IncDecStmt -> Expression PLUSPLUS .)
    LBRACE          reduce using rule 163 (IncDecStmt -> Expression PLUSPLUS .)


state 288

    (164) IncDecStmt -> Expression MINUSMIN .

    SEMICOL         reduce using rule 164 (IncDecStmt -> Expression MINUSMIN .)
    LBRACE          reduce using rule 164 (IncDecStmt -> Expression MINUSMIN .)


state 289

    (219) BreakStmt -> BREAK LabelOpt .

    SEMICOL         reduce using rule 219 (BreakStmt -> BREAK LabelOpt .)


state 290

    (223) GotoStmt -> GOTO Label .

    SEMICOL         reduce using rule 223 (GotoStmt -> GOTO Label .)


state 291

    (178) IfStmt -> IF Expression . Block ElseOpt
    (108) Expression -> Expression . AddOp Term
    (109) Expression -> Expression . AddOp UnaryExpr
    (40) Block -> . LBRACE StatementList RBRACE
    (128) AddOp -> . PLUS
    (129) AddOp -> . MINUS
    (130) AddOp -> . OR
    (131) AddOp -> . CARET

    LBRACE          shift and go to state 124
    PLUS            shift and go to state 174
    MINUS           shift and go to state 175
    OR              shift and go to state 173
    CARET           shift and go to state 171

    AddOp                          shift and go to state 172
    Block                          shift and go to state 311

state 292

    (38) ParameterDecl -> IdentifierList Type .

    COMMA           reduce using rule 38 (ParameterDecl -> IdentifierList Type .)
    RPAREN          reduce using rule 38 (ParameterDecl -> IdentifierList Type .)


state 293

    (105) ExpressionRep -> ExpressionRep COMMA Expression .
    (108) Expression -> Expression . AddOp Term
    (109) Expression -> Expression . AddOp UnaryExpr
    (128) AddOp -> . PLUS
    (129) AddOp -> . MINUS
    (130) AddOp -> . OR
    (131) AddOp -> . CARET

    COMMA           reduce using rule 105 (ExpressionRep -> ExpressionRep COMMA Expression .)
    PLUSEQ          reduce using rule 105 (ExpressionRep -> ExpressionRep COMMA Expression .)
    MINUSEQ         reduce using rule 105 (ExpressionRep -> ExpressionRep COMMA Expression .)
    TIMESEQ         reduce using rule 105 (ExpressionRep -> ExpressionRep COMMA Expression .)
    DIVIDEEQ        reduce using rule 105 (ExpressionRep -> ExpressionRep COMMA Expression .)
    MODEQ           reduce using rule 105 (ExpressionRep -> ExpressionRep COMMA Expression .)
    AMPEQ           reduce using rule 105 (ExpressionRep -> ExpressionRep COMMA Expression .)
    OREQ            reduce using rule 105 (ExpressionRep -> ExpressionRep COMMA Expression .)
    CAREQ           reduce using rule 105 (ExpressionRep -> ExpressionRep COMMA Expression .)
    LLEQ            reduce using rule 105 (ExpressionRep -> ExpressionRep COMMA Expression .)
    GGEQ            reduce using rule 105 (ExpressionRep -> ExpressionRep COMMA Expression .)
    EQUAL           reduce using rule 105 (ExpressionRep -> ExpressionRep COMMA Expression .)
    SEMICOL         reduce using rule 105 (ExpressionRep -> ExpressionRep COMMA Expression .)
    RPAREN          reduce using rule 105 (ExpressionRep -> ExpressionRep COMMA Expression .)
    LBRACE          reduce using rule 105 (ExpressionRep -> ExpressionRep COMMA Expression .)
    COLON           reduce using rule 105 (ExpressionRep -> ExpressionRep COMMA Expression .)
    PLUS            shift and go to state 174
    MINUS           shift and go to state 175
    OR              shift and go to state 173
    CARET           shift and go to state 171

    AddOp                          shift and go to state 172

state 294

    (21) Tag -> STRING .

    SEMICOL         reduce using rule 21 (Tag -> STRING .)


state 295

    (20) TagOpt -> epsilon .

    SEMICOL         reduce using rule 20 (TagOpt -> epsilon .)


state 296

    (19) TagOpt -> Tag .

    SEMICOL         reduce using rule 19 (TagOpt -> Tag .)


state 297

    (18) FieldDecl -> IdentifierList Type TagOpt .

    SEMICOL         reduce using rule 18 (FieldDecl -> IdentifierList Type TagOpt .)


state 298

    (100) Slice -> LBRACK ExpressionOpt COLON ExpressionOpt . RBRACK

    RBRACK          shift and go to state 312


state 299

    (113) ExpressionOpt -> Expression .
    (108) Expression -> Expression . AddOp Term
    (109) Expression -> Expression . AddOp UnaryExpr
    (128) AddOp -> . PLUS
    (129) AddOp -> . MINUS
    (130) AddOp -> . OR
    (131) AddOp -> . CARET

    RBRACK          reduce using rule 113 (ExpressionOpt -> Expression .)
    PLUS            shift and go to state 174
    MINUS           shift and go to state 175
    OR              shift and go to state 173
    CARET           shift and go to state 171

    AddOp                          shift and go to state 172

state 300

    (160) LabeledStmt -> Label COLON Statement .

    SEMICOL         reduce using rule 160 (LabeledStmt -> Label COLON Statement .)


state 301

    (209) ForClause -> SimpleStmt SEMICOL . ConditionOpt SEMICOL SimpleStmt
    (210) ConditionOpt -> . epsilon
    (211) ConditionOpt -> . Condition
    (240) epsilon -> .
    (208) Condition -> . Expression
    (107) Expression -> . UnaryExpr
    (108) Expression -> . Expression AddOp Term
    (109) Expression -> . Expression AddOp UnaryExpr
    (110) Expression -> . Term
    (115) UnaryExpr -> . PrimaryExpr
    (116) UnaryExpr -> . UnaryOp UnaryExpr
    (111) Term -> . Term MulOp Term
    (112) Term -> . UnaryExpr MulOp UnaryExpr
    (92) PrimaryExpr -> . Operand
    (93) PrimaryExpr -> . Conversion
    (94) PrimaryExpr -> . PrimaryExpr Selector
    (95) PrimaryExpr -> . PrimaryExpr Index
    (96) PrimaryExpr -> . PrimaryExpr Slice
    (97) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (91) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (90) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . INTEGER
    (86) BasicLit -> . FLOAT
    (87) BasicLit -> . IMAGINARY
    (88) BasicLit -> . RUNE
    (89) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    SEMICOL         reduce using rule 240 (epsilon -> .)
    PLUS            shift and go to state 101
    MINUS           shift and go to state 98
    TIMES           shift and go to state 108
    AMPERS          shift and go to state 114
    NOT             shift and go to state 115
    LPAREN          shift and go to state 111
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 113
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 106
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 92
    UnaryOp                        shift and go to state 93
    Literal                        shift and go to state 95
    Type                           shift and go to state 97
    OperandName                    shift and go to state 99
    BasicLit                       shift and go to state 100
    TypeName                       shift and go to state 56
    Condition                      shift and go to state 313
    Term                           shift and go to state 105
    epsilon                        shift and go to state 314
    UnaryExpr                      shift and go to state 107
    PrimaryExpr                    shift and go to state 94
    ConditionOpt                   shift and go to state 315
    ArrayType                      shift and go to state 53
    Expression                     shift and go to state 316
    PointerType                    shift and go to state 66
    TypeLit                        shift and go to state 55
    Operand                        shift and go to state 109
    FunctionType                   shift and go to state 67
    StructType                     shift and go to state 58

state 302

    (204) ForStmt -> FOR ConditionBlockOpt Block .

    SEMICOL         reduce using rule 204 (ForStmt -> FOR ConditionBlockOpt Block .)


state 303

    (179) SimpleStmtOpt -> SimpleStmt SEMICOL .

    IDENTIFIER      reduce using rule 179 (SimpleStmtOpt -> SimpleStmt SEMICOL .)
    LPAREN          reduce using rule 179 (SimpleStmtOpt -> SimpleStmt SEMICOL .)
    INTEGER         reduce using rule 179 (SimpleStmtOpt -> SimpleStmt SEMICOL .)
    FLOAT           reduce using rule 179 (SimpleStmtOpt -> SimpleStmt SEMICOL .)
    IMAGINARY       reduce using rule 179 (SimpleStmtOpt -> SimpleStmt SEMICOL .)
    RUNE            reduce using rule 179 (SimpleStmtOpt -> SimpleStmt SEMICOL .)
    STRING          reduce using rule 179 (SimpleStmtOpt -> SimpleStmt SEMICOL .)
    TYPEX           reduce using rule 179 (SimpleStmtOpt -> SimpleStmt SEMICOL .)
    LBRACK          reduce using rule 179 (SimpleStmtOpt -> SimpleStmt SEMICOL .)
    STRUCT          reduce using rule 179 (SimpleStmtOpt -> SimpleStmt SEMICOL .)
    TIMES           reduce using rule 179 (SimpleStmtOpt -> SimpleStmt SEMICOL .)
    FUNC            reduce using rule 179 (SimpleStmtOpt -> SimpleStmt SEMICOL .)


state 304

    (186) ExprSwitchStmt -> SWITCH ExpressionOpt LBRACE . ExprCaseClauseRep RBRACE
    (187) ExprCaseClauseRep -> . ExprCaseClauseRep ExprCaseClause
    (188) ExprCaseClauseRep -> . epsilon
    (240) epsilon -> .

    RBRACE          reduce using rule 240 (epsilon -> .)
    CASE            reduce using rule 240 (epsilon -> .)
    DEFAULT         reduce using rule 240 (epsilon -> .)

    ExprCaseClauseRep              shift and go to state 318
    epsilon                        shift and go to state 317

state 305

    (195) IdentifierOpt -> epsilon .

    LPAREN          reduce using rule 195 (IdentifierOpt -> epsilon .)
    IDENTIFIER      reduce using rule 195 (IdentifierOpt -> epsilon .)
    INTEGER         reduce using rule 195 (IdentifierOpt -> epsilon .)
    FLOAT           reduce using rule 195 (IdentifierOpt -> epsilon .)
    IMAGINARY       reduce using rule 195 (IdentifierOpt -> epsilon .)
    RUNE            reduce using rule 195 (IdentifierOpt -> epsilon .)
    STRING          reduce using rule 195 (IdentifierOpt -> epsilon .)
    TYPEX           reduce using rule 195 (IdentifierOpt -> epsilon .)
    LBRACK          reduce using rule 195 (IdentifierOpt -> epsilon .)
    STRUCT          reduce using rule 195 (IdentifierOpt -> epsilon .)
    TIMES           reduce using rule 195 (IdentifierOpt -> epsilon .)
    FUNC            reduce using rule 195 (IdentifierOpt -> epsilon .)


state 306

    (192) TypeSwitchStmt -> SWITCH SimpleStmtOpt TypeSwitchGuard . LBRACE TypeCaseClauseOpt RBRACE

    LBRACE          shift and go to state 319


state 307

    (193) TypeSwitchGuard -> IdentifierOpt . PrimaryExpr DOT LPAREN TYPE RPAREN
    (92) PrimaryExpr -> . Operand
    (93) PrimaryExpr -> . Conversion
    (94) PrimaryExpr -> . PrimaryExpr Selector
    (95) PrimaryExpr -> . PrimaryExpr Index
    (96) PrimaryExpr -> . PrimaryExpr Slice
    (97) PrimaryExpr -> . PrimaryExpr Arguments
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (91) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (90) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . INTEGER
    (86) BasicLit -> . FLOAT
    (87) BasicLit -> . IMAGINARY
    (88) BasicLit -> . RUNE
    (89) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 111
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 113
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 106
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 92
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    Type                           shift and go to state 97
    OperandName                    shift and go to state 99
    TypeLit                        shift and go to state 55
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    PrimaryExpr                    shift and go to state 320
    PointerType                    shift and go to state 66
    BasicLit                       shift and go to state 100
    Operand                        shift and go to state 109
    FunctionType                   shift and go to state 67

state 308

    (194) IdentifierOpt -> IDENTIFIER . COLONEQ

    COLONEQ         shift and go to state 321


state 309

    (75) ShortVarDecl -> IDENTIFIER COLONEQ Expression .
    (108) Expression -> Expression . AddOp Term
    (109) Expression -> Expression . AddOp UnaryExpr
    (128) AddOp -> . PLUS
    (129) AddOp -> . MINUS
    (130) AddOp -> . OR
    (131) AddOp -> . CARET

    SEMICOL         reduce using rule 75 (ShortVarDecl -> IDENTIFIER COLONEQ Expression .)
    LBRACE          reduce using rule 75 (ShortVarDecl -> IDENTIFIER COLONEQ Expression .)
    PLUS            shift and go to state 174
    MINUS           shift and go to state 175
    OR              shift and go to state 173
    CARET           shift and go to state 171

    AddOp                          shift and go to state 172

state 310

    (165) Assignment -> ExpressionList assign_op ExpressionList .

    LBRACE          reduce using rule 165 (Assignment -> ExpressionList assign_op ExpressionList .)
    SEMICOL         reduce using rule 165 (Assignment -> ExpressionList assign_op ExpressionList .)


state 311

    (178) IfStmt -> IF Expression Block . ElseOpt
    (181) ElseOpt -> . ELSE IfStmt
    (182) ElseOpt -> . ELSE Block
    (183) ElseOpt -> . epsilon
    (240) epsilon -> .

    ELSE            shift and go to state 323
    SEMICOL         reduce using rule 240 (epsilon -> .)

    epsilon                        shift and go to state 322
    ElseOpt                        shift and go to state 324

state 312

    (100) Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .

    DOT             reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    LBRACK          reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    LPAREN          reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    TIMES           reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    DIVIDE          reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    MOD             reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    AMPERS          reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    LL              reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    GG              reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    AMPCAR          reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    PLUS            reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    MINUS           reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    OR              reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    CARET           reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    RBRACK          reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    COMMA           reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    SEMICOL         reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    RPAREN          reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    COLON           reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    PLUSPLUS        reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    MINUSMIN        reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    PLUSEQ          reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    MINUSEQ         reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    TIMESEQ         reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    DIVIDEEQ        reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    MODEQ           reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    AMPEQ           reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    OREQ            reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    CAREQ           reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    LLEQ            reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    GGEQ            reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    EQUAL           reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    LBRACE          reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)


state 313

    (211) ConditionOpt -> Condition .

    SEMICOL         reduce using rule 211 (ConditionOpt -> Condition .)


state 314

    (210) ConditionOpt -> epsilon .

    SEMICOL         reduce using rule 210 (ConditionOpt -> epsilon .)


state 315

    (209) ForClause -> SimpleStmt SEMICOL ConditionOpt . SEMICOL SimpleStmt

    SEMICOL         shift and go to state 325


state 316

    (208) Condition -> Expression .
    (108) Expression -> Expression . AddOp Term
    (109) Expression -> Expression . AddOp UnaryExpr
    (128) AddOp -> . PLUS
    (129) AddOp -> . MINUS
    (130) AddOp -> . OR
    (131) AddOp -> . CARET

    SEMICOL         reduce using rule 208 (Condition -> Expression .)
    PLUS            shift and go to state 174
    MINUS           shift and go to state 175
    OR              shift and go to state 173
    CARET           shift and go to state 171

    AddOp                          shift and go to state 172

state 317

    (188) ExprCaseClauseRep -> epsilon .

    RBRACE          reduce using rule 188 (ExprCaseClauseRep -> epsilon .)
    CASE            reduce using rule 188 (ExprCaseClauseRep -> epsilon .)
    DEFAULT         reduce using rule 188 (ExprCaseClauseRep -> epsilon .)


state 318

    (186) ExprSwitchStmt -> SWITCH ExpressionOpt LBRACE ExprCaseClauseRep . RBRACE
    (187) ExprCaseClauseRep -> ExprCaseClauseRep . ExprCaseClause
    (189) ExprCaseClause -> . ExprSwitchCase COLON StatementList
    (190) ExprSwitchCase -> . CASE ExpressionList
    (191) ExprSwitchCase -> . DEFAULT

    RBRACE          shift and go to state 327
    CASE            shift and go to state 326
    DEFAULT         shift and go to state 329

    ExprSwitchCase                 shift and go to state 328
    ExprCaseClause                 shift and go to state 330

state 319

    (192) TypeSwitchStmt -> SWITCH SimpleStmtOpt TypeSwitchGuard LBRACE . TypeCaseClauseOpt RBRACE
    (196) TypeCaseClauseOpt -> . TypeCaseClauseOpt TypeCaseClause
    (197) TypeCaseClauseOpt -> . epsilon
    (240) epsilon -> .

    RBRACE          reduce using rule 240 (epsilon -> .)
    CASE            reduce using rule 240 (epsilon -> .)
    DEFAULT         reduce using rule 240 (epsilon -> .)

    epsilon                        shift and go to state 331
    TypeCaseClauseOpt              shift and go to state 332

state 320

    (193) TypeSwitchGuard -> IdentifierOpt PrimaryExpr . DOT LPAREN TYPE RPAREN
    (94) PrimaryExpr -> PrimaryExpr . Selector
    (95) PrimaryExpr -> PrimaryExpr . Index
    (96) PrimaryExpr -> PrimaryExpr . Slice
    (97) PrimaryExpr -> PrimaryExpr . Arguments
    (98) Selector -> . DOT IDENTIFIER
    (99) Index -> . LBRACK Expression RBRACK
    (100) Slice -> . LBRACK ExpressionOpt COLON ExpressionOpt RBRACK
    (101) Arguments -> . LPAREN ExpressionListTypeOpt RPAREN

    DOT             shift and go to state 333
    LBRACK          shift and go to state 152
    LPAREN          shift and go to state 155

    Index                          shift and go to state 150
    Slice                          shift and go to state 151
    Selector                       shift and go to state 153
    Arguments                      shift and go to state 154

state 321

    (194) IdentifierOpt -> IDENTIFIER COLONEQ .

    LPAREN          reduce using rule 194 (IdentifierOpt -> IDENTIFIER COLONEQ .)
    IDENTIFIER      reduce using rule 194 (IdentifierOpt -> IDENTIFIER COLONEQ .)
    INTEGER         reduce using rule 194 (IdentifierOpt -> IDENTIFIER COLONEQ .)
    FLOAT           reduce using rule 194 (IdentifierOpt -> IDENTIFIER COLONEQ .)
    IMAGINARY       reduce using rule 194 (IdentifierOpt -> IDENTIFIER COLONEQ .)
    RUNE            reduce using rule 194 (IdentifierOpt -> IDENTIFIER COLONEQ .)
    STRING          reduce using rule 194 (IdentifierOpt -> IDENTIFIER COLONEQ .)
    TYPEX           reduce using rule 194 (IdentifierOpt -> IDENTIFIER COLONEQ .)
    LBRACK          reduce using rule 194 (IdentifierOpt -> IDENTIFIER COLONEQ .)
    STRUCT          reduce using rule 194 (IdentifierOpt -> IDENTIFIER COLONEQ .)
    TIMES           reduce using rule 194 (IdentifierOpt -> IDENTIFIER COLONEQ .)
    FUNC            reduce using rule 194 (IdentifierOpt -> IDENTIFIER COLONEQ .)


state 322

    (183) ElseOpt -> epsilon .

    SEMICOL         reduce using rule 183 (ElseOpt -> epsilon .)


state 323

    (181) ElseOpt -> ELSE . IfStmt
    (182) ElseOpt -> ELSE . Block
    (178) IfStmt -> . IF Expression Block ElseOpt
    (40) Block -> . LBRACE StatementList RBRACE

    IF              shift and go to state 238
    LBRACE          shift and go to state 124

    IfStmt                         shift and go to state 334
    Block                          shift and go to state 335

state 324

    (178) IfStmt -> IF Expression Block ElseOpt .

    SEMICOL         reduce using rule 178 (IfStmt -> IF Expression Block ElseOpt .)


state 325

    (209) ForClause -> SimpleStmt SEMICOL ConditionOpt SEMICOL . SimpleStmt
    (155) SimpleStmt -> . epsilon
    (156) SimpleStmt -> . ExpressionStmt
    (157) SimpleStmt -> . IncDecStmt
    (158) SimpleStmt -> . Assignment
    (159) SimpleStmt -> . ShortVarDecl
    (240) epsilon -> .
    (162) ExpressionStmt -> . Expression
    (163) IncDecStmt -> . Expression PLUSPLUS
    (164) IncDecStmt -> . Expression MINUSMIN
    (165) Assignment -> . ExpressionList assign_op ExpressionList
    (75) ShortVarDecl -> . IDENTIFIER COLONEQ Expression
    (107) Expression -> . UnaryExpr
    (108) Expression -> . Expression AddOp Term
    (109) Expression -> . Expression AddOp UnaryExpr
    (110) Expression -> . Term
    (104) ExpressionList -> . Expression ExpressionRep
    (115) UnaryExpr -> . PrimaryExpr
    (116) UnaryExpr -> . UnaryOp UnaryExpr
    (111) Term -> . Term MulOp Term
    (112) Term -> . UnaryExpr MulOp UnaryExpr
    (92) PrimaryExpr -> . Operand
    (93) PrimaryExpr -> . Conversion
    (94) PrimaryExpr -> . PrimaryExpr Selector
    (95) PrimaryExpr -> . PrimaryExpr Index
    (96) PrimaryExpr -> . PrimaryExpr Slice
    (97) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (91) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (90) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . INTEGER
    (86) BasicLit -> . FLOAT
    (87) BasicLit -> . IMAGINARY
    (88) BasicLit -> . RUNE
    (89) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    LBRACE          reduce using rule 240 (epsilon -> .)
    IDENTIFIER      shift and go to state 258
    PLUS            shift and go to state 101
    MINUS           shift and go to state 98
    TIMES           shift and go to state 108
    AMPERS          shift and go to state 114
    NOT             shift and go to state 115
    LPAREN          shift and go to state 111
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 113
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 106
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    UnaryOp                        shift and go to state 93
    Conversion                     shift and go to state 92
    SimpleStmt                     shift and go to state 336
    ExpressionStmt                 shift and go to state 211
    Type                           shift and go to state 97
    OperandName                    shift and go to state 99
    Assignment                     shift and go to state 213
    TypeName                       shift and go to state 56
    IncDecStmt                     shift and go to state 220
    Term                           shift and go to state 105
    epsilon                        shift and go to state 229
    UnaryExpr                      shift and go to state 107
    PrimaryExpr                    shift and go to state 94
    ExpressionList                 shift and go to state 230
    ArrayType                      shift and go to state 53
    Expression                     shift and go to state 231
    ShortVarDecl                   shift and go to state 237
    PointerType                    shift and go to state 66
    Literal                        shift and go to state 95
    TypeLit                        shift and go to state 55
    BasicLit                       shift and go to state 100
    Operand                        shift and go to state 109
    FunctionType                   shift and go to state 67
    StructType                     shift and go to state 58

state 326

    (190) ExprSwitchCase -> CASE . ExpressionList
    (104) ExpressionList -> . Expression ExpressionRep
    (107) Expression -> . UnaryExpr
    (108) Expression -> . Expression AddOp Term
    (109) Expression -> . Expression AddOp UnaryExpr
    (110) Expression -> . Term
    (115) UnaryExpr -> . PrimaryExpr
    (116) UnaryExpr -> . UnaryOp UnaryExpr
    (111) Term -> . Term MulOp Term
    (112) Term -> . UnaryExpr MulOp UnaryExpr
    (92) PrimaryExpr -> . Operand
    (93) PrimaryExpr -> . Conversion
    (94) PrimaryExpr -> . PrimaryExpr Selector
    (95) PrimaryExpr -> . PrimaryExpr Index
    (96) PrimaryExpr -> . PrimaryExpr Slice
    (97) PrimaryExpr -> . PrimaryExpr Arguments
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . TIMES
    (142) UnaryOp -> . AMPERS
    (143) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (91) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (90) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . INTEGER
    (86) BasicLit -> . FLOAT
    (87) BasicLit -> . IMAGINARY
    (88) BasicLit -> . RUNE
    (89) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 101
    MINUS           shift and go to state 98
    TIMES           shift and go to state 108
    AMPERS          shift and go to state 114
    NOT             shift and go to state 115
    LPAREN          shift and go to state 111
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 113
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 106
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    UnaryOp                        shift and go to state 93
    Conversion                     shift and go to state 92
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    Type                           shift and go to state 97
    OperandName                    shift and go to state 99
    TypeLit                        shift and go to state 55
    TypeName                       shift and go to state 56
    Term                           shift and go to state 105
    UnaryExpr                      shift and go to state 107
    PrimaryExpr                    shift and go to state 94
    ExpressionList                 shift and go to state 337
    Expression                     shift and go to state 136
    PointerType                    shift and go to state 66
    BasicLit                       shift and go to state 100
    Operand                        shift and go to state 109
    FunctionType                   shift and go to state 67
    StructType                     shift and go to state 58

state 327

    (186) ExprSwitchStmt -> SWITCH ExpressionOpt LBRACE ExprCaseClauseRep RBRACE .

    SEMICOL         reduce using rule 186 (ExprSwitchStmt -> SWITCH ExpressionOpt LBRACE ExprCaseClauseRep RBRACE .)


state 328

    (189) ExprCaseClause -> ExprSwitchCase . COLON StatementList

    COLON           shift and go to state 338


state 329

    (191) ExprSwitchCase -> DEFAULT .

    COLON           reduce using rule 191 (ExprSwitchCase -> DEFAULT .)


state 330

    (187) ExprCaseClauseRep -> ExprCaseClauseRep ExprCaseClause .

    RBRACE          reduce using rule 187 (ExprCaseClauseRep -> ExprCaseClauseRep ExprCaseClause .)
    CASE            reduce using rule 187 (ExprCaseClauseRep -> ExprCaseClauseRep ExprCaseClause .)
    DEFAULT         reduce using rule 187 (ExprCaseClauseRep -> ExprCaseClauseRep ExprCaseClause .)


state 331

    (197) TypeCaseClauseOpt -> epsilon .

    RBRACE          reduce using rule 197 (TypeCaseClauseOpt -> epsilon .)
    CASE            reduce using rule 197 (TypeCaseClauseOpt -> epsilon .)
    DEFAULT         reduce using rule 197 (TypeCaseClauseOpt -> epsilon .)


state 332

    (192) TypeSwitchStmt -> SWITCH SimpleStmtOpt TypeSwitchGuard LBRACE TypeCaseClauseOpt . RBRACE
    (196) TypeCaseClauseOpt -> TypeCaseClauseOpt . TypeCaseClause
    (198) TypeCaseClause -> . TypeSwitchCase COLON StatementList
    (199) TypeSwitchCase -> . CASE TypeList
    (200) TypeSwitchCase -> . DEFAULT

    RBRACE          shift and go to state 340
    CASE            shift and go to state 339
    DEFAULT         shift and go to state 343

    TypeSwitchCase                 shift and go to state 341
    TypeCaseClause                 shift and go to state 342

state 333

    (193) TypeSwitchGuard -> IdentifierOpt PrimaryExpr DOT . LPAREN TYPE RPAREN
    (98) Selector -> DOT . IDENTIFIER

    LPAREN          shift and go to state 344
    IDENTIFIER      shift and go to state 199


state 334

    (181) ElseOpt -> ELSE IfStmt .

    SEMICOL         reduce using rule 181 (ElseOpt -> ELSE IfStmt .)


state 335

    (182) ElseOpt -> ELSE Block .

    SEMICOL         reduce using rule 182 (ElseOpt -> ELSE Block .)


state 336

    (209) ForClause -> SimpleStmt SEMICOL ConditionOpt SEMICOL SimpleStmt .

    LBRACE          reduce using rule 209 (ForClause -> SimpleStmt SEMICOL ConditionOpt SEMICOL SimpleStmt .)


state 337

    (190) ExprSwitchCase -> CASE ExpressionList .

    COLON           reduce using rule 190 (ExprSwitchCase -> CASE ExpressionList .)


state 338

    (189) ExprCaseClause -> ExprSwitchCase COLON . StatementList
    (41) StatementList -> . StatementRep
    (42) StatementRep -> . StatementRep Statement SEMICOL
    (43) StatementRep -> . epsilon
    (240) epsilon -> .

    RETURN          reduce using rule 240 (epsilon -> .)
    BREAK           reduce using rule 240 (epsilon -> .)
    CONTINUE        reduce using rule 240 (epsilon -> .)
    GOTO            reduce using rule 240 (epsilon -> .)
    LBRACE          reduce using rule 240 (epsilon -> .)
    IF              reduce using rule 240 (epsilon -> .)
    FOR             reduce using rule 240 (epsilon -> .)
    CONST           reduce using rule 240 (epsilon -> .)
    TYPE            reduce using rule 240 (epsilon -> .)
    VAR             reduce using rule 240 (epsilon -> .)
    IDENTIFIER      reduce using rule 240 (epsilon -> .)
    SWITCH          reduce using rule 240 (epsilon -> .)
    PLUS            reduce using rule 240 (epsilon -> .)
    MINUS           reduce using rule 240 (epsilon -> .)
    TIMES           reduce using rule 240 (epsilon -> .)
    AMPERS          reduce using rule 240 (epsilon -> .)
    NOT             reduce using rule 240 (epsilon -> .)
    LPAREN          reduce using rule 240 (epsilon -> .)
    INTEGER         reduce using rule 240 (epsilon -> .)
    FLOAT           reduce using rule 240 (epsilon -> .)
    IMAGINARY       reduce using rule 240 (epsilon -> .)
    RUNE            reduce using rule 240 (epsilon -> .)
    STRING          reduce using rule 240 (epsilon -> .)
    TYPEX           reduce using rule 240 (epsilon -> .)
    LBRACK          reduce using rule 240 (epsilon -> .)
    STRUCT          reduce using rule 240 (epsilon -> .)
    FUNC            reduce using rule 240 (epsilon -> .)
    SEMICOL         reduce using rule 240 (epsilon -> .)
    RBRACE          reduce using rule 240 (epsilon -> .)
    CASE            reduce using rule 240 (epsilon -> .)
    DEFAULT         reduce using rule 240 (epsilon -> .)

    epsilon                        shift and go to state 179
    StatementRep                   shift and go to state 178
    StatementList                  shift and go to state 345

state 339

    (199) TypeSwitchCase -> CASE . TypeList
    (201) TypeList -> . Type TypeRep
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 61
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    TypeList                       shift and go to state 347
    Type                           shift and go to state 346
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    TypeLit                        shift and go to state 55

state 340

    (192) TypeSwitchStmt -> SWITCH SimpleStmtOpt TypeSwitchGuard LBRACE TypeCaseClauseOpt RBRACE .

    SEMICOL         reduce using rule 192 (TypeSwitchStmt -> SWITCH SimpleStmtOpt TypeSwitchGuard LBRACE TypeCaseClauseOpt RBRACE .)


state 341

    (198) TypeCaseClause -> TypeSwitchCase . COLON StatementList

    COLON           shift and go to state 348


state 342

    (196) TypeCaseClauseOpt -> TypeCaseClauseOpt TypeCaseClause .

    RBRACE          reduce using rule 196 (TypeCaseClauseOpt -> TypeCaseClauseOpt TypeCaseClause .)
    CASE            reduce using rule 196 (TypeCaseClauseOpt -> TypeCaseClauseOpt TypeCaseClause .)
    DEFAULT         reduce using rule 196 (TypeCaseClauseOpt -> TypeCaseClauseOpt TypeCaseClause .)


state 343

    (200) TypeSwitchCase -> DEFAULT .

    COLON           reduce using rule 200 (TypeSwitchCase -> DEFAULT .)


state 344

    (193) TypeSwitchGuard -> IdentifierOpt PrimaryExpr DOT LPAREN . TYPE RPAREN

    TYPE            shift and go to state 349


state 345

    (189) ExprCaseClause -> ExprSwitchCase COLON StatementList .

    RBRACE          reduce using rule 189 (ExprCaseClause -> ExprSwitchCase COLON StatementList .)
    CASE            reduce using rule 189 (ExprCaseClause -> ExprSwitchCase COLON StatementList .)
    DEFAULT         reduce using rule 189 (ExprCaseClause -> ExprSwitchCase COLON StatementList .)


state 346

    (201) TypeList -> Type . TypeRep
    (202) TypeRep -> . TypeRep COMMA Type
    (203) TypeRep -> . epsilon
    (240) epsilon -> .

    COMMA           reduce using rule 240 (epsilon -> .)
    COLON           reduce using rule 240 (epsilon -> .)

    epsilon                        shift and go to state 351
    TypeRep                        shift and go to state 350

state 347

    (199) TypeSwitchCase -> CASE TypeList .

    COLON           reduce using rule 199 (TypeSwitchCase -> CASE TypeList .)


state 348

    (198) TypeCaseClause -> TypeSwitchCase COLON . StatementList
    (41) StatementList -> . StatementRep
    (42) StatementRep -> . StatementRep Statement SEMICOL
    (43) StatementRep -> . epsilon
    (240) epsilon -> .

    RETURN          reduce using rule 240 (epsilon -> .)
    BREAK           reduce using rule 240 (epsilon -> .)
    CONTINUE        reduce using rule 240 (epsilon -> .)
    GOTO            reduce using rule 240 (epsilon -> .)
    LBRACE          reduce using rule 240 (epsilon -> .)
    IF              reduce using rule 240 (epsilon -> .)
    FOR             reduce using rule 240 (epsilon -> .)
    CONST           reduce using rule 240 (epsilon -> .)
    TYPE            reduce using rule 240 (epsilon -> .)
    VAR             reduce using rule 240 (epsilon -> .)
    IDENTIFIER      reduce using rule 240 (epsilon -> .)
    SWITCH          reduce using rule 240 (epsilon -> .)
    PLUS            reduce using rule 240 (epsilon -> .)
    MINUS           reduce using rule 240 (epsilon -> .)
    TIMES           reduce using rule 240 (epsilon -> .)
    AMPERS          reduce using rule 240 (epsilon -> .)
    NOT             reduce using rule 240 (epsilon -> .)
    LPAREN          reduce using rule 240 (epsilon -> .)
    INTEGER         reduce using rule 240 (epsilon -> .)
    FLOAT           reduce using rule 240 (epsilon -> .)
    IMAGINARY       reduce using rule 240 (epsilon -> .)
    RUNE            reduce using rule 240 (epsilon -> .)
    STRING          reduce using rule 240 (epsilon -> .)
    TYPEX           reduce using rule 240 (epsilon -> .)
    LBRACK          reduce using rule 240 (epsilon -> .)
    STRUCT          reduce using rule 240 (epsilon -> .)
    FUNC            reduce using rule 240 (epsilon -> .)
    SEMICOL         reduce using rule 240 (epsilon -> .)
    RBRACE          reduce using rule 240 (epsilon -> .)
    CASE            reduce using rule 240 (epsilon -> .)
    DEFAULT         reduce using rule 240 (epsilon -> .)

    epsilon                        shift and go to state 179
    StatementRep                   shift and go to state 178
    StatementList                  shift and go to state 352

state 349

    (193) TypeSwitchGuard -> IdentifierOpt PrimaryExpr DOT LPAREN TYPE . RPAREN

    RPAREN          shift and go to state 353


state 350

    (201) TypeList -> Type TypeRep .
    (202) TypeRep -> TypeRep . COMMA Type

    COLON           reduce using rule 201 (TypeList -> Type TypeRep .)
    COMMA           shift and go to state 354


state 351

    (203) TypeRep -> epsilon .

    COMMA           reduce using rule 203 (TypeRep -> epsilon .)
    COLON           reduce using rule 203 (TypeRep -> epsilon .)


state 352

    (198) TypeCaseClause -> TypeSwitchCase COLON StatementList .

    RBRACE          reduce using rule 198 (TypeCaseClause -> TypeSwitchCase COLON StatementList .)
    CASE            reduce using rule 198 (TypeCaseClause -> TypeSwitchCase COLON StatementList .)
    DEFAULT         reduce using rule 198 (TypeCaseClause -> TypeSwitchCase COLON StatementList .)


state 353

    (193) TypeSwitchGuard -> IdentifierOpt PrimaryExpr DOT LPAREN TYPE RPAREN .

    LBRACE          reduce using rule 193 (TypeSwitchGuard -> IdentifierOpt PrimaryExpr DOT LPAREN TYPE RPAREN .)


state 354

    (202) TypeRep -> TypeRep COMMA . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 61
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    Type                           shift and go to state 355
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    TypeLit                        shift and go to state 55

state 355

    (202) TypeRep -> TypeRep COMMA Type .

    COMMA           reduce using rule 202 (TypeRep -> TypeRep COMMA Type .)
    COLON           reduce using rule 202 (TypeRep -> TypeRep COMMA Type .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LPAREN in state 71 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 177 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 201 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 201 resolved as shift
WARNING: shift/reduce conflict for MOD in state 201 resolved as shift
WARNING: shift/reduce conflict for AMPERS in state 201 resolved as shift
WARNING: shift/reduce conflict for LL in state 201 resolved as shift
WARNING: shift/reduce conflict for GG in state 201 resolved as shift
WARNING: shift/reduce conflict for AMPCAR in state 201 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 226 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 226 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 226 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 226 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 226 resolved as shift
WARNING: shift/reduce conflict for IMAGINARY in state 226 resolved as shift
WARNING: shift/reduce conflict for RUNE in state 226 resolved as shift
WARNING: shift/reduce conflict for STRING in state 226 resolved as shift
WARNING: shift/reduce conflict for TYPEX in state 226 resolved as shift
WARNING: shift/reduce conflict for LBRACK in state 226 resolved as shift
WARNING: shift/reduce conflict for STRUCT in state 226 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 226 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 271 resolved as shift
