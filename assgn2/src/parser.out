Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CHAN
    CONSTANT
    DEFER
    FALLTHROUGH
    SELECT
    LMINUS
    AMPCAREQ
    GO
    DDD
    MAP
    INTERFACE

Grammar

Rule 0     S' -> start
Rule 1     start -> Source
Rule 2     Type -> TypeName
Rule 3     Type -> TypeLit
Rule 4     Type -> LPAREN Type RPAREN
Rule 5     TypeName -> TYPEX
Rule 6     TypeLit -> ArrayType
Rule 7     TypeLit -> StructType
Rule 8     TypeLit -> PointerType
Rule 9     TypeLit -> FunctionType
Rule 10    TypeOpt -> Type
Rule 11    TypeOpt -> epsilon
Rule 12    ArrayType -> LBRACK ArrayLength RBRACK ElementType
Rule 13    ArrayLength -> Expression
Rule 14    ElementType -> Type
Rule 15    StructType -> STRUCT LBRACE FieldDeclRep RBRACE
Rule 16    FieldDeclRep -> FieldDeclRep FieldDecl SEMICOL
Rule 17    FieldDeclRep -> epsilon
Rule 18    FieldDecl -> IdentifierList Type TagOpt
Rule 19    TagOpt -> Tag
Rule 20    TagOpt -> epsilon
Rule 21    Tag -> STRING
Rule 22    PointerType -> TIMES BaseType
Rule 23    BaseType -> Type
Rule 24    FunctionType -> FUNC Signature
Rule 25    Signature -> Parameters ResultOpt
Rule 26    ResultOpt -> Result
Rule 27    ResultOpt -> epsilon
Rule 28    Result -> Parameters
Rule 29    Result -> Type
Rule 30    Parameters -> LPAREN ParameterListOpt RPAREN
Rule 31    ParameterListOpt -> ParametersList
Rule 32    ParameterListOpt -> epsilon
Rule 33    ParametersList -> Type
Rule 34    ParametersList -> IdentifierList Type
Rule 35    ParametersList -> ParameterDeclCommaRep
Rule 36    ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA ParameterDecl
Rule 37    ParameterDeclCommaRep -> ParameterDecl COMMA ParameterDecl
Rule 38    ParameterDecl -> IdentifierList Type
Rule 39    ParameterDecl -> Type
Rule 40    Block -> LBRACE StatementList RBRACE
Rule 41    StatementList -> StatementRep
Rule 42    StatementRep -> StatementRep Statement SEMICOL
Rule 43    StatementRep -> epsilon
Rule 44    Declaration -> ConstDecl
Rule 45    Declaration -> TypeDecl
Rule 46    Declaration -> VarDecl
Rule 47    TopLevelDecl -> Declaration
Rule 48    TopLevelDecl -> FunctionDecl
Rule 49    ConstDecl -> CONST ConstSpec
Rule 50    ConstDecl -> CONST LPAREN ConstSpecRep RPAREN
Rule 51    ConstSpecRep -> ConstSpecRep ConstSpec SEMICOL
Rule 52    ConstSpecRep -> epsilon
Rule 53    ConstSpec -> IdentifierList TypeExprListOpt
Rule 54    TypeExprListOpt -> TypeOpt EQUAL ExpressionList
Rule 55    TypeExprListOpt -> epsilon
Rule 56    IdentifierList -> IDENTIFIER IdentifierRep
Rule 57    IdentifierRep -> IdentifierRep COMMA IDENTIFIER
Rule 58    IdentifierRep -> epsilon
Rule 59    TypeDecl -> TYPE TypeSpec
Rule 60    TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN
Rule 61    TypeSpecRep -> TypeSpecRep TypeSpec SEMICOL
Rule 62    TypeSpecRep -> epsilon
Rule 63    TypeSpec -> AliasDecl
Rule 64    TypeSpec -> TypeDef
Rule 65    AliasDecl -> IDENTIFIER EQUAL Type
Rule 66    TypeDef -> IDENTIFIER Type
Rule 67    VarDecl -> VAR VarSpec
Rule 68    VarDecl -> VAR LPAREN VarSpecRep RPAREN
Rule 69    VarSpecRep -> VarSpecRep VarSpec SEMICOL
Rule 70    VarSpecRep -> epsilon
Rule 71    VarSpec -> IdentifierList Type ExpressionListOpt
Rule 72    VarSpec -> IdentifierList EQUAL ExpressionList
Rule 73    ExpressionListOpt -> EQUAL ExpressionList
Rule 74    ExpressionListOpt -> epsilon
Rule 75    ShortVarDecl -> IDENTIFIER COLONEQ Expression
Rule 76    FunctionDecl -> FUNC FunctionName Function
Rule 77    FunctionDecl -> FUNC FunctionName Signature
Rule 78    FunctionName -> IDENTIFIER
Rule 79    Function -> Signature FunctionBody
Rule 80    FunctionBody -> Block
Rule 81    QualifiedIdent -> IDENTIFIER DOT TypeName
Rule 82    Operand -> Literal
Rule 83    Operand -> OperandName
Rule 84    Operand -> LPAREN Expression RPAREN
Rule 85    Literal -> BasicLit
Rule 86    BasicLit -> INTEGER
Rule 87    BasicLit -> FLOAT
Rule 88    BasicLit -> IMAGINARY
Rule 89    BasicLit -> RUNE
Rule 90    BasicLit -> STRING
Rule 91    OperandName -> IDENTIFIER
Rule 92    CompositeLit -> LiteralType LiteralValue
Rule 93    LiteralType -> ArrayType
Rule 94    LiteralType -> ElementType
Rule 95    LiteralType -> TypeName
Rule 96    LiteralValue -> LBRACE ElementListOpt RBRACE
Rule 97    ElementListOpt -> ElementList
Rule 98    ElementListOpt -> epsilon
Rule 99    ElementList -> KeyedElement KeyedElementCommaRep
Rule 100   KeyedElementCommaRep -> KeyedElementCommaRep COMMA KeyedElement
Rule 101   KeyedElementCommaRep -> epsilon
Rule 102   KeyedElement -> Key COLON Element
Rule 103   KeyedElement -> Element
Rule 104   Key -> FieldName
Rule 105   Key -> Expression
Rule 106   Key -> LiteralValue
Rule 107   FieldName -> IDENTIFIER
Rule 108   Element -> Expression
Rule 109   Element -> LiteralValue
Rule 110   Conversion -> Type LPAREN Expression RPAREN
Rule 111   PrimaryExpr -> Operand
Rule 112   PrimaryExpr -> Conversion
Rule 113   PrimaryExpr -> PrimaryExpr Selector
Rule 114   PrimaryExpr -> PrimaryExpr Index
Rule 115   PrimaryExpr -> PrimaryExpr Slice
Rule 116   PrimaryExpr -> PrimaryExpr TypeAssertion
Rule 117   PrimaryExpr -> PrimaryExpr Arguments
Rule 118   Selector -> DOT IDENTIFIER
Rule 119   Index -> LBRACK Expression RBRACK
Rule 120   Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK
Rule 121   Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK
Rule 122   TypeAssertion -> DOT LPAREN Type RPAREN
Rule 123   Arguments -> LPAREN ExpressionListTypeOpt RPAREN
Rule 124   ExpressionListTypeOpt -> ExpressionList
Rule 125   ExpressionListTypeOpt -> epsilon
Rule 126   ExpressionListCommaOpt -> COMMA ExpressionList
Rule 127   ExpressionListCommaOpt -> epsilon
Rule 128   ExpressionList -> Expression ExpressionRep
Rule 129   ExpressionRep -> ExpressionRep COMMA Expression
Rule 130   ExpressionRep -> epsilon
Rule 131   Expression -> UnaryExpr
Rule 132   Expression -> Expression BinaryOp Expression
Rule 133   ExpressionOpt -> Expression
Rule 134   ExpressionOpt -> epsilon
Rule 135   UnaryExpr -> PrimaryExpr
Rule 136   UnaryExpr -> UnaryOp UnaryExpr
Rule 137   BinaryOp -> OROR
Rule 138   BinaryOp -> AMPAMP
Rule 139   BinaryOp -> RelOp
Rule 140   BinaryOp -> AddOp
Rule 141   BinaryOp -> MulOp
Rule 142   RelOp -> EQEQ
Rule 143   RelOp -> NOTEQ
Rule 144   RelOp -> LESS
Rule 145   RelOp -> GREAT
Rule 146   RelOp -> LEQ
Rule 147   RelOp -> GEQ
Rule 148   AddOp -> PLUS
Rule 149   AddOp -> MINUS
Rule 150   AddOp -> OR
Rule 151   AddOp -> CARET
Rule 152   MulOp -> TIMES
Rule 153   MulOp -> DIVIDE
Rule 154   MulOp -> MOD
Rule 155   MulOp -> AMPERS
Rule 156   MulOp -> LL
Rule 157   MulOp -> GG
Rule 158   MulOp -> AMPCAR
Rule 159   UnaryOp -> PLUS
Rule 160   UnaryOp -> MINUS
Rule 161   UnaryOp -> TIMES
Rule 162   UnaryOp -> AMPERS
Rule 163   UnaryOp -> NOT
Rule 164   Statement -> Declaration
Rule 165   Statement -> LabeledStmt
Rule 166   Statement -> SimpleStmt
Rule 167   Statement -> ReturnStmt
Rule 168   Statement -> BreakStmt
Rule 169   Statement -> ContinueStmt
Rule 170   Statement -> GotoStmt
Rule 171   Statement -> Block
Rule 172   Statement -> IfStmt
Rule 173   Statement -> SwitchStmt
Rule 174   Statement -> ForStmt
Rule 175   SimpleStmt -> epsilon
Rule 176   SimpleStmt -> ExpressionStmt
Rule 177   SimpleStmt -> IncDecStmt
Rule 178   SimpleStmt -> Assignment
Rule 179   SimpleStmt -> ShortVarDecl
Rule 180   LabeledStmt -> Label COLON Statement
Rule 181   Label -> IDENTIFIER
Rule 182   ExpressionStmt -> Expression
Rule 183   IncDecStmt -> Expression PLUSPLUS
Rule 184   IncDecStmt -> Expression MINUSMIN
Rule 185   Assignment -> ExpressionList assign_op ExpressionList
Rule 186   assign_op -> AssignOp
Rule 187   AssignOp -> PLUSEQ
Rule 188   AssignOp -> MINUSEQ
Rule 189   AssignOp -> TIMESEQ
Rule 190   AssignOp -> DIVIDEEQ
Rule 191   AssignOp -> MODEQ
Rule 192   AssignOp -> AMPEQ
Rule 193   AssignOp -> OREQ
Rule 194   AssignOp -> CAREQ
Rule 195   AssignOp -> LLEQ
Rule 196   AssignOp -> GGEQ
Rule 197   AssignOp -> EQUAL
Rule 198   IfStmt -> IF Expression Block ElseOpt
Rule 199   SimpleStmtOpt -> SimpleStmt SEMICOL
Rule 200   SimpleStmtOpt -> epsilon
Rule 201   ElseOpt -> ELSE IfStmt
Rule 202   ElseOpt -> ELSE Block
Rule 203   ElseOpt -> epsilon
Rule 204   SwitchStmt -> ExprSwitchStmt
Rule 205   SwitchStmt -> TypeSwitchStmt
Rule 206   ExprSwitchStmt -> SWITCH ExpressionOpt LBRACE ExprCaseClauseRep RBRACE
Rule 207   ExprCaseClauseRep -> ExprCaseClauseRep ExprCaseClause
Rule 208   ExprCaseClauseRep -> epsilon
Rule 209   ExprCaseClause -> ExprSwitchCase COLON StatementList
Rule 210   ExprSwitchCase -> CASE ExpressionList
Rule 211   ExprSwitchCase -> DEFAULT
Rule 212   TypeSwitchStmt -> SWITCH SimpleStmtOpt TypeSwitchGuard LBRACE TypeCaseClauseOpt RBRACE
Rule 213   TypeSwitchGuard -> IdentifierOpt PrimaryExpr DOT LPAREN TYPE RPAREN
Rule 214   IdentifierOpt -> IDENTIFIER COLONEQ
Rule 215   IdentifierOpt -> epsilon
Rule 216   TypeCaseClauseOpt -> TypeCaseClauseOpt TypeCaseClause
Rule 217   TypeCaseClauseOpt -> epsilon
Rule 218   TypeCaseClause -> TypeSwitchCase COLON StatementList
Rule 219   TypeSwitchCase -> CASE TypeList
Rule 220   TypeSwitchCase -> DEFAULT
Rule 221   TypeList -> Type TypeRep
Rule 222   TypeRep -> TypeRep COMMA Type
Rule 223   TypeRep -> epsilon
Rule 224   ForStmt -> FOR ConditionBlockOpt Block
Rule 225   ConditionBlockOpt -> epsilon
Rule 226   ConditionBlockOpt -> Condition
Rule 227   ConditionBlockOpt -> ForClause
Rule 228   Condition -> Expression
Rule 229   ForClause -> SimpleStmt SEMICOL ConditionOpt SEMICOL SimpleStmt
Rule 230   ConditionOpt -> epsilon
Rule 231   ConditionOpt -> Condition
Rule 232   RangeClause -> ExpressionIdentListOpt RANGE Expression
Rule 233   ExpressionIdentListOpt -> epsilon
Rule 234   ExpressionIdentListOpt -> ExpressionIdentifier
Rule 235   ExpressionIdentifier -> ExpressionList EQUAL
Rule 236   ReturnStmt -> RETURN ExpressionListPureOpt
Rule 237   ExpressionListPureOpt -> ExpressionList
Rule 238   ExpressionListPureOpt -> epsilon
Rule 239   BreakStmt -> BREAK LabelOpt
Rule 240   ContinueStmt -> CONTINUE LabelOpt
Rule 241   LabelOpt -> Label
Rule 242   LabelOpt -> epsilon
Rule 243   GotoStmt -> GOTO Label
Rule 244   Source -> PackageClause SEMICOL ImportDeclRep TopLevelDeclRep
Rule 245   ImportDeclRep -> epsilon
Rule 246   ImportDeclRep -> ImportDeclRep ImportDecl SEMICOL
Rule 247   TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOL
Rule 248   TopLevelDeclRep -> epsilon
Rule 249   PackageClause -> PACKAGE PackageName
Rule 250   PackageName -> IDENTIFIER
Rule 251   ImportDecl -> IMPORT ImportSpec
Rule 252   ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN
Rule 253   ImportSpecRep -> ImportSpecRep ImportSpec SEMICOL
Rule 254   ImportSpecRep -> epsilon
Rule 255   ImportSpec -> PackageNameDotOpt ImportPath
Rule 256   PackageNameDotOpt -> DOT
Rule 257   PackageNameDotOpt -> PackageName
Rule 258   PackageNameDotOpt -> epsilon
Rule 259   ImportPath -> STRING
Rule 260   epsilon -> <empty>

Terminals, with rules where they appear

AMPAMP               : 138
AMPCAR               : 158
AMPCAREQ             : 
AMPEQ                : 192
AMPERS               : 155 162
BREAK                : 239
CAREQ                : 194
CARET                : 151
CASE                 : 210 219
CHAN                 : 
COLON                : 102 120 121 121 180 209 218
COLONEQ              : 75 214
COMMA                : 36 37 57 100 126 129 222
CONST                : 49 50
CONSTANT             : 
CONTINUE             : 240
DDD                  : 
DEFAULT              : 211 220
DEFER                : 
DIVIDE               : 153
DIVIDEEQ             : 190
DOT                  : 81 118 122 213 256
ELSE                 : 201 202
EQEQ                 : 142
EQUAL                : 54 65 72 73 197 235
FALLTHROUGH          : 
FLOAT                : 87
FOR                  : 224
FUNC                 : 24 76 77
GEQ                  : 147
GG                   : 157
GGEQ                 : 196
GO                   : 
GOTO                 : 243
GREAT                : 145
IDENTIFIER           : 56 57 65 66 75 78 81 91 107 118 181 214 250
IF                   : 198
IMAGINARY            : 88
IMPORT               : 251 252
INTEGER              : 86
INTERFACE            : 
LBRACE               : 15 40 96 206 212
LBRACK               : 12 119 120 121
LEQ                  : 146
LESS                 : 144
LL                   : 156
LLEQ                 : 195
LMINUS               : 
LPAREN               : 4 30 50 60 68 84 110 122 123 213 252
MAP                  : 
MINUS                : 149 160
MINUSEQ              : 188
MINUSMIN             : 184
MOD                  : 154
MODEQ                : 191
NOT                  : 163
NOTEQ                : 143
OR                   : 150
OREQ                 : 193
OROR                 : 137
PACKAGE              : 249
PLUS                 : 148 159
PLUSEQ               : 187
PLUSPLUS             : 183
RANGE                : 232
RBRACE               : 15 40 96 206 212
RBRACK               : 12 119 120 121
RETURN               : 236
RPAREN               : 4 30 50 60 68 84 110 122 123 213 252
RUNE                 : 89
SELECT               : 
SEMICOL              : 16 42 51 61 69 199 229 229 244 246 247 253
STRING               : 21 90 259
STRUCT               : 15
SWITCH               : 206 212
TIMES                : 22 152 161
TIMESEQ              : 189
TYPE                 : 59 60 213
TYPEX                : 5
VAR                  : 67 68
error                : 

Nonterminals, with rules where they appear

AddOp                : 140
AliasDecl            : 63
Arguments            : 117
ArrayLength          : 12
ArrayType            : 6 93
AssignOp             : 186
Assignment           : 178
BaseType             : 22
BasicLit             : 85
BinaryOp             : 132
Block                : 80 171 198 202 224
BreakStmt            : 168
CompositeLit         : 
Condition            : 226 231
ConditionBlockOpt    : 224
ConditionOpt         : 229
ConstDecl            : 44
ConstSpec            : 49 51
ConstSpecRep         : 50 51
ContinueStmt         : 169
Conversion           : 112
Declaration          : 47 164
Element              : 102 103
ElementList          : 97
ElementListOpt       : 96
ElementType          : 12 94
ElseOpt              : 198
ExprCaseClause       : 207
ExprCaseClauseRep    : 206 207
ExprSwitchCase       : 209
ExprSwitchStmt       : 204
Expression           : 13 75 84 105 108 110 119 121 121 128 129 132 132 133 182 183 184 198 228 232
ExpressionIdentListOpt : 232
ExpressionIdentifier : 234
ExpressionList       : 54 72 73 124 126 185 185 210 235 237
ExpressionListCommaOpt : 
ExpressionListOpt    : 71
ExpressionListPureOpt : 236
ExpressionListTypeOpt : 123
ExpressionOpt        : 120 120 121 206
ExpressionRep        : 128 129
ExpressionStmt       : 176
FieldDecl            : 16
FieldDeclRep         : 15 16
FieldName            : 104
ForClause            : 227
ForStmt              : 174
Function             : 76
FunctionBody         : 79
FunctionDecl         : 48
FunctionName         : 76 77
FunctionType         : 9
GotoStmt             : 170
IdentifierList       : 18 34 38 53 71 72
IdentifierOpt        : 213
IdentifierRep        : 56 57
IfStmt               : 172 201
ImportDecl           : 246
ImportDeclRep        : 244 246
ImportPath           : 255
ImportSpec           : 251 253
ImportSpecRep        : 252 253
IncDecStmt           : 177
Index                : 114
Key                  : 102
KeyedElement         : 99 100
KeyedElementCommaRep : 99 100
Label                : 180 241 243
LabelOpt             : 239 240
LabeledStmt          : 165
Literal              : 82
LiteralType          : 92
LiteralValue         : 92 106 109
MulOp                : 141
Operand              : 111
OperandName          : 83
PackageClause        : 244
PackageName          : 249 257
PackageNameDotOpt    : 255
ParameterDecl        : 36 37 37
ParameterDeclCommaRep : 35 36
ParameterListOpt     : 30
Parameters           : 25 28
ParametersList       : 31
PointerType          : 8
PrimaryExpr          : 113 114 115 116 117 135 213
QualifiedIdent       : 
RangeClause          : 
RelOp                : 139
Result               : 26
ResultOpt            : 25
ReturnStmt           : 167
Selector             : 113
ShortVarDecl         : 179
Signature            : 24 77 79
SimpleStmt           : 166 199 229 229
SimpleStmtOpt        : 212
Slice                : 115
Source               : 1
Statement            : 42 180
StatementList        : 40 209 218
StatementRep         : 41 42
StructType           : 7
SwitchStmt           : 173
Tag                  : 19
TagOpt               : 18
TopLevelDecl         : 247
TopLevelDeclRep      : 244 247
Type                 : 4 10 14 18 23 29 33 34 38 39 65 66 71 110 122 221 222
TypeAssertion        : 116
TypeCaseClause       : 216
TypeCaseClauseOpt    : 212 216
TypeDecl             : 45
TypeDef              : 64
TypeExprListOpt      : 53
TypeList             : 219
TypeLit              : 3
TypeName             : 2 81 95
TypeOpt              : 54
TypeRep              : 221 222
TypeSpec             : 59 61
TypeSpecRep          : 60 61
TypeSwitchCase       : 218
TypeSwitchGuard      : 212
TypeSwitchStmt       : 205
UnaryExpr            : 131 136
UnaryOp              : 136
VarDecl              : 46
VarSpec              : 67 69
VarSpecRep           : 68 69
assign_op            : 185
epsilon              : 11 17 20 27 32 43 52 55 58 62 70 74 98 101 125 127 130 134 175 200 203 208 215 217 223 225 230 233 238 242 245 248 254 258
start                : 0

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . Source
    (244) Source -> . PackageClause SEMICOL ImportDeclRep TopLevelDeclRep
    (249) PackageClause -> . PACKAGE PackageName

    PACKAGE         shift and go to state 2

    PackageClause                  shift and go to state 1
    Source                         shift and go to state 3
    start                          shift and go to state 4

state 1

    (244) Source -> PackageClause . SEMICOL ImportDeclRep TopLevelDeclRep

    SEMICOL         shift and go to state 5


state 2

    (249) PackageClause -> PACKAGE . PackageName
    (250) PackageName -> . IDENTIFIER

    IDENTIFIER      shift and go to state 7

    PackageName                    shift and go to state 6

state 3

    (1) start -> Source .

    $end            reduce using rule 1 (start -> Source .)


state 4

    (0) S' -> start .



state 5

    (244) Source -> PackageClause SEMICOL . ImportDeclRep TopLevelDeclRep
    (245) ImportDeclRep -> . epsilon
    (246) ImportDeclRep -> . ImportDeclRep ImportDecl SEMICOL
    (260) epsilon -> .

    IMPORT          reduce using rule 260 (epsilon -> .)
    FUNC            reduce using rule 260 (epsilon -> .)
    CONST           reduce using rule 260 (epsilon -> .)
    TYPE            reduce using rule 260 (epsilon -> .)
    VAR             reduce using rule 260 (epsilon -> .)
    $end            reduce using rule 260 (epsilon -> .)

    ImportDeclRep                  shift and go to state 9
    epsilon                        shift and go to state 8

state 6

    (249) PackageClause -> PACKAGE PackageName .

    SEMICOL         reduce using rule 249 (PackageClause -> PACKAGE PackageName .)


state 7

    (250) PackageName -> IDENTIFIER .

    STRING          reduce using rule 250 (PackageName -> IDENTIFIER .)
    SEMICOL         reduce using rule 250 (PackageName -> IDENTIFIER .)


state 8

    (245) ImportDeclRep -> epsilon .

    IMPORT          reduce using rule 245 (ImportDeclRep -> epsilon .)
    FUNC            reduce using rule 245 (ImportDeclRep -> epsilon .)
    CONST           reduce using rule 245 (ImportDeclRep -> epsilon .)
    TYPE            reduce using rule 245 (ImportDeclRep -> epsilon .)
    VAR             reduce using rule 245 (ImportDeclRep -> epsilon .)
    $end            reduce using rule 245 (ImportDeclRep -> epsilon .)


state 9

    (244) Source -> PackageClause SEMICOL ImportDeclRep . TopLevelDeclRep
    (246) ImportDeclRep -> ImportDeclRep . ImportDecl SEMICOL
    (247) TopLevelDeclRep -> . TopLevelDeclRep TopLevelDecl SEMICOL
    (248) TopLevelDeclRep -> . epsilon
    (251) ImportDecl -> . IMPORT ImportSpec
    (252) ImportDecl -> . IMPORT LPAREN ImportSpecRep RPAREN
    (260) epsilon -> .

    IMPORT          shift and go to state 13
    FUNC            reduce using rule 260 (epsilon -> .)
    CONST           reduce using rule 260 (epsilon -> .)
    TYPE            reduce using rule 260 (epsilon -> .)
    VAR             reduce using rule 260 (epsilon -> .)
    $end            reduce using rule 260 (epsilon -> .)

    TopLevelDeclRep                shift and go to state 10
    epsilon                        shift and go to state 11
    ImportDecl                     shift and go to state 12

state 10

    (244) Source -> PackageClause SEMICOL ImportDeclRep TopLevelDeclRep .
    (247) TopLevelDeclRep -> TopLevelDeclRep . TopLevelDecl SEMICOL
    (47) TopLevelDecl -> . Declaration
    (48) TopLevelDecl -> . FunctionDecl
    (44) Declaration -> . ConstDecl
    (45) Declaration -> . TypeDecl
    (46) Declaration -> . VarDecl
    (76) FunctionDecl -> . FUNC FunctionName Function
    (77) FunctionDecl -> . FUNC FunctionName Signature
    (49) ConstDecl -> . CONST ConstSpec
    (50) ConstDecl -> . CONST LPAREN ConstSpecRep RPAREN
    (59) TypeDecl -> . TYPE TypeSpec
    (60) TypeDecl -> . TYPE LPAREN TypeSpecRep RPAREN
    (67) VarDecl -> . VAR VarSpec
    (68) VarDecl -> . VAR LPAREN VarSpecRep RPAREN

    $end            reduce using rule 244 (Source -> PackageClause SEMICOL ImportDeclRep TopLevelDeclRep .)
    FUNC            shift and go to state 20
    CONST           shift and go to state 14
    TYPE            shift and go to state 23
    VAR             shift and go to state 21

    TypeDecl                       shift and go to state 19
    VarDecl                        shift and go to state 22
    FunctionDecl                   shift and go to state 15
    TopLevelDecl                   shift and go to state 16
    Declaration                    shift and go to state 17
    ConstDecl                      shift and go to state 18

state 11

    (248) TopLevelDeclRep -> epsilon .

    FUNC            reduce using rule 248 (TopLevelDeclRep -> epsilon .)
    CONST           reduce using rule 248 (TopLevelDeclRep -> epsilon .)
    TYPE            reduce using rule 248 (TopLevelDeclRep -> epsilon .)
    VAR             reduce using rule 248 (TopLevelDeclRep -> epsilon .)
    $end            reduce using rule 248 (TopLevelDeclRep -> epsilon .)


state 12

    (246) ImportDeclRep -> ImportDeclRep ImportDecl . SEMICOL

    SEMICOL         shift and go to state 24


state 13

    (251) ImportDecl -> IMPORT . ImportSpec
    (252) ImportDecl -> IMPORT . LPAREN ImportSpecRep RPAREN
    (255) ImportSpec -> . PackageNameDotOpt ImportPath
    (256) PackageNameDotOpt -> . DOT
    (257) PackageNameDotOpt -> . PackageName
    (258) PackageNameDotOpt -> . epsilon
    (250) PackageName -> . IDENTIFIER
    (260) epsilon -> .

    LPAREN          shift and go to state 25
    DOT             shift and go to state 30
    IDENTIFIER      shift and go to state 7
    STRING          reduce using rule 260 (epsilon -> .)

    ImportSpec                     shift and go to state 26
    epsilon                        shift and go to state 27
    PackageName                    shift and go to state 28
    PackageNameDotOpt              shift and go to state 29

state 14

    (49) ConstDecl -> CONST . ConstSpec
    (50) ConstDecl -> CONST . LPAREN ConstSpecRep RPAREN
    (53) ConstSpec -> . IdentifierList TypeExprListOpt
    (56) IdentifierList -> . IDENTIFIER IdentifierRep

    LPAREN          shift and go to state 32
    IDENTIFIER      shift and go to state 34

    ConstSpec                      shift and go to state 31
    IdentifierList                 shift and go to state 33

state 15

    (48) TopLevelDecl -> FunctionDecl .

    SEMICOL         reduce using rule 48 (TopLevelDecl -> FunctionDecl .)


state 16

    (247) TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl . SEMICOL

    SEMICOL         shift and go to state 35


state 17

    (47) TopLevelDecl -> Declaration .

    SEMICOL         reduce using rule 47 (TopLevelDecl -> Declaration .)


state 18

    (44) Declaration -> ConstDecl .

    SEMICOL         reduce using rule 44 (Declaration -> ConstDecl .)


state 19

    (45) Declaration -> TypeDecl .

    SEMICOL         reduce using rule 45 (Declaration -> TypeDecl .)


state 20

    (76) FunctionDecl -> FUNC . FunctionName Function
    (77) FunctionDecl -> FUNC . FunctionName Signature
    (78) FunctionName -> . IDENTIFIER

    IDENTIFIER      shift and go to state 36

    FunctionName                   shift and go to state 37

state 21

    (67) VarDecl -> VAR . VarSpec
    (68) VarDecl -> VAR . LPAREN VarSpecRep RPAREN
    (71) VarSpec -> . IdentifierList Type ExpressionListOpt
    (72) VarSpec -> . IdentifierList EQUAL ExpressionList
    (56) IdentifierList -> . IDENTIFIER IdentifierRep

    LPAREN          shift and go to state 39
    IDENTIFIER      shift and go to state 34

    VarSpec                        shift and go to state 38
    IdentifierList                 shift and go to state 40

state 22

    (46) Declaration -> VarDecl .

    SEMICOL         reduce using rule 46 (Declaration -> VarDecl .)


state 23

    (59) TypeDecl -> TYPE . TypeSpec
    (60) TypeDecl -> TYPE . LPAREN TypeSpecRep RPAREN
    (63) TypeSpec -> . AliasDecl
    (64) TypeSpec -> . TypeDef
    (65) AliasDecl -> . IDENTIFIER EQUAL Type
    (66) TypeDef -> . IDENTIFIER Type

    LPAREN          shift and go to state 43
    IDENTIFIER      shift and go to state 45

    TypeSpec                       shift and go to state 44
    TypeDef                        shift and go to state 41
    AliasDecl                      shift and go to state 42

state 24

    (246) ImportDeclRep -> ImportDeclRep ImportDecl SEMICOL .

    IMPORT          reduce using rule 246 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOL .)
    FUNC            reduce using rule 246 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOL .)
    CONST           reduce using rule 246 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOL .)
    TYPE            reduce using rule 246 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOL .)
    VAR             reduce using rule 246 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOL .)
    $end            reduce using rule 246 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOL .)


state 25

    (252) ImportDecl -> IMPORT LPAREN . ImportSpecRep RPAREN
    (253) ImportSpecRep -> . ImportSpecRep ImportSpec SEMICOL
    (254) ImportSpecRep -> . epsilon
    (260) epsilon -> .

    RPAREN          reduce using rule 260 (epsilon -> .)
    DOT             reduce using rule 260 (epsilon -> .)
    IDENTIFIER      reduce using rule 260 (epsilon -> .)
    STRING          reduce using rule 260 (epsilon -> .)

    epsilon                        shift and go to state 46
    ImportSpecRep                  shift and go to state 47

state 26

    (251) ImportDecl -> IMPORT ImportSpec .

    SEMICOL         reduce using rule 251 (ImportDecl -> IMPORT ImportSpec .)


state 27

    (258) PackageNameDotOpt -> epsilon .

    STRING          reduce using rule 258 (PackageNameDotOpt -> epsilon .)


state 28

    (257) PackageNameDotOpt -> PackageName .

    STRING          reduce using rule 257 (PackageNameDotOpt -> PackageName .)


state 29

    (255) ImportSpec -> PackageNameDotOpt . ImportPath
    (259) ImportPath -> . STRING

    STRING          shift and go to state 49

    ImportPath                     shift and go to state 48

state 30

    (256) PackageNameDotOpt -> DOT .

    STRING          reduce using rule 256 (PackageNameDotOpt -> DOT .)


state 31

    (49) ConstDecl -> CONST ConstSpec .

    SEMICOL         reduce using rule 49 (ConstDecl -> CONST ConstSpec .)


state 32

    (50) ConstDecl -> CONST LPAREN . ConstSpecRep RPAREN
    (51) ConstSpecRep -> . ConstSpecRep ConstSpec SEMICOL
    (52) ConstSpecRep -> . epsilon
    (260) epsilon -> .

    RPAREN          reduce using rule 260 (epsilon -> .)
    IDENTIFIER      reduce using rule 260 (epsilon -> .)

    ConstSpecRep                   shift and go to state 50
    epsilon                        shift and go to state 51

state 33

    (53) ConstSpec -> IdentifierList . TypeExprListOpt
    (54) TypeExprListOpt -> . TypeOpt EQUAL ExpressionList
    (55) TypeExprListOpt -> . epsilon
    (10) TypeOpt -> . Type
    (11) TypeOpt -> . epsilon
    (260) epsilon -> .
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    SEMICOL         reduce using rule 260 (epsilon -> .)
    EQUAL           reduce using rule 260 (epsilon -> .)
    LPAREN          shift and go to state 61
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    TypeOpt                        shift and go to state 62
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    TypeLit                        shift and go to state 55
    TypeExprListOpt                shift and go to state 65
    epsilon                        shift and go to state 59
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    Type                           shift and go to state 54

state 34

    (56) IdentifierList -> IDENTIFIER . IdentifierRep
    (57) IdentifierRep -> . IdentifierRep COMMA IDENTIFIER
    (58) IdentifierRep -> . epsilon
    (260) epsilon -> .

    COMMA           reduce using rule 260 (epsilon -> .)
    LPAREN          reduce using rule 260 (epsilon -> .)
    TYPEX           reduce using rule 260 (epsilon -> .)
    LBRACK          reduce using rule 260 (epsilon -> .)
    STRUCT          reduce using rule 260 (epsilon -> .)
    TIMES           reduce using rule 260 (epsilon -> .)
    FUNC            reduce using rule 260 (epsilon -> .)
    EQUAL           reduce using rule 260 (epsilon -> .)
    SEMICOL         reduce using rule 260 (epsilon -> .)

    epsilon                        shift and go to state 68
    IdentifierRep                  shift and go to state 69

state 35

    (247) TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOL .

    FUNC            reduce using rule 247 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOL .)
    CONST           reduce using rule 247 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOL .)
    TYPE            reduce using rule 247 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOL .)
    VAR             reduce using rule 247 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOL .)
    $end            reduce using rule 247 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOL .)


state 36

    (78) FunctionName -> IDENTIFIER .

    LPAREN          reduce using rule 78 (FunctionName -> IDENTIFIER .)


state 37

    (76) FunctionDecl -> FUNC FunctionName . Function
    (77) FunctionDecl -> FUNC FunctionName . Signature
    (79) Function -> . Signature FunctionBody
    (25) Signature -> . Parameters ResultOpt
    (30) Parameters -> . LPAREN ParameterListOpt RPAREN

    LPAREN          shift and go to state 73

    Function                       shift and go to state 70
    Parameters                     shift and go to state 71
    Signature                      shift and go to state 72

state 38

    (67) VarDecl -> VAR VarSpec .

    SEMICOL         reduce using rule 67 (VarDecl -> VAR VarSpec .)


state 39

    (68) VarDecl -> VAR LPAREN . VarSpecRep RPAREN
    (69) VarSpecRep -> . VarSpecRep VarSpec SEMICOL
    (70) VarSpecRep -> . epsilon
    (260) epsilon -> .

    RPAREN          reduce using rule 260 (epsilon -> .)
    IDENTIFIER      reduce using rule 260 (epsilon -> .)

    VarSpecRep                     shift and go to state 74
    epsilon                        shift and go to state 75

state 40

    (71) VarSpec -> IdentifierList . Type ExpressionListOpt
    (72) VarSpec -> IdentifierList . EQUAL ExpressionList
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    EQUAL           shift and go to state 76
    LPAREN          shift and go to state 61
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    Type                           shift and go to state 77
    TypeLit                        shift and go to state 55
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67

state 41

    (64) TypeSpec -> TypeDef .

    SEMICOL         reduce using rule 64 (TypeSpec -> TypeDef .)


state 42

    (63) TypeSpec -> AliasDecl .

    SEMICOL         reduce using rule 63 (TypeSpec -> AliasDecl .)


state 43

    (60) TypeDecl -> TYPE LPAREN . TypeSpecRep RPAREN
    (61) TypeSpecRep -> . TypeSpecRep TypeSpec SEMICOL
    (62) TypeSpecRep -> . epsilon
    (260) epsilon -> .

    RPAREN          reduce using rule 260 (epsilon -> .)
    IDENTIFIER      reduce using rule 260 (epsilon -> .)

    TypeSpecRep                    shift and go to state 78
    epsilon                        shift and go to state 79

state 44

    (59) TypeDecl -> TYPE TypeSpec .

    SEMICOL         reduce using rule 59 (TypeDecl -> TYPE TypeSpec .)


state 45

    (65) AliasDecl -> IDENTIFIER . EQUAL Type
    (66) TypeDef -> IDENTIFIER . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    EQUAL           shift and go to state 80
    LPAREN          shift and go to state 61
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    Type                           shift and go to state 81
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    TypeLit                        shift and go to state 55

state 46

    (254) ImportSpecRep -> epsilon .

    RPAREN          reduce using rule 254 (ImportSpecRep -> epsilon .)
    DOT             reduce using rule 254 (ImportSpecRep -> epsilon .)
    IDENTIFIER      reduce using rule 254 (ImportSpecRep -> epsilon .)
    STRING          reduce using rule 254 (ImportSpecRep -> epsilon .)


state 47

    (252) ImportDecl -> IMPORT LPAREN ImportSpecRep . RPAREN
    (253) ImportSpecRep -> ImportSpecRep . ImportSpec SEMICOL
    (255) ImportSpec -> . PackageNameDotOpt ImportPath
    (256) PackageNameDotOpt -> . DOT
    (257) PackageNameDotOpt -> . PackageName
    (258) PackageNameDotOpt -> . epsilon
    (250) PackageName -> . IDENTIFIER
    (260) epsilon -> .

    RPAREN          shift and go to state 82
    DOT             shift and go to state 30
    IDENTIFIER      shift and go to state 7
    STRING          reduce using rule 260 (epsilon -> .)

    ImportSpec                     shift and go to state 83
    epsilon                        shift and go to state 27
    PackageName                    shift and go to state 28
    PackageNameDotOpt              shift and go to state 29

state 48

    (255) ImportSpec -> PackageNameDotOpt ImportPath .

    SEMICOL         reduce using rule 255 (ImportSpec -> PackageNameDotOpt ImportPath .)


state 49

    (259) ImportPath -> STRING .

    SEMICOL         reduce using rule 259 (ImportPath -> STRING .)


state 50

    (50) ConstDecl -> CONST LPAREN ConstSpecRep . RPAREN
    (51) ConstSpecRep -> ConstSpecRep . ConstSpec SEMICOL
    (53) ConstSpec -> . IdentifierList TypeExprListOpt
    (56) IdentifierList -> . IDENTIFIER IdentifierRep

    RPAREN          shift and go to state 85
    IDENTIFIER      shift and go to state 34

    ConstSpec                      shift and go to state 84
    IdentifierList                 shift and go to state 33

state 51

    (52) ConstSpecRep -> epsilon .

    RPAREN          reduce using rule 52 (ConstSpecRep -> epsilon .)
    IDENTIFIER      reduce using rule 52 (ConstSpecRep -> epsilon .)


state 52

    (24) FunctionType -> FUNC . Signature
    (25) Signature -> . Parameters ResultOpt
    (30) Parameters -> . LPAREN ParameterListOpt RPAREN

    LPAREN          shift and go to state 73

    Parameters                     shift and go to state 71
    Signature                      shift and go to state 86

state 53

    (6) TypeLit -> ArrayType .

    COMMA           reduce using rule 6 (TypeLit -> ArrayType .)
    COLON           reduce using rule 6 (TypeLit -> ArrayType .)
    RPAREN          reduce using rule 6 (TypeLit -> ArrayType .)
    LPAREN          reduce using rule 6 (TypeLit -> ArrayType .)
    EQUAL           reduce using rule 6 (TypeLit -> ArrayType .)
    SEMICOL         reduce using rule 6 (TypeLit -> ArrayType .)
    LBRACE          reduce using rule 6 (TypeLit -> ArrayType .)
    STRING          reduce using rule 6 (TypeLit -> ArrayType .)


state 54

    (10) TypeOpt -> Type .

    EQUAL           reduce using rule 10 (TypeOpt -> Type .)


state 55

    (3) Type -> TypeLit .

    LPAREN          reduce using rule 3 (Type -> TypeLit .)
    RPAREN          reduce using rule 3 (Type -> TypeLit .)
    EQUAL           reduce using rule 3 (Type -> TypeLit .)
    SEMICOL         reduce using rule 3 (Type -> TypeLit .)
    LBRACE          reduce using rule 3 (Type -> TypeLit .)
    COMMA           reduce using rule 3 (Type -> TypeLit .)
    STRING          reduce using rule 3 (Type -> TypeLit .)
    COLON           reduce using rule 3 (Type -> TypeLit .)


state 56

    (2) Type -> TypeName .

    LPAREN          reduce using rule 2 (Type -> TypeName .)
    RPAREN          reduce using rule 2 (Type -> TypeName .)
    EQUAL           reduce using rule 2 (Type -> TypeName .)
    SEMICOL         reduce using rule 2 (Type -> TypeName .)
    LBRACE          reduce using rule 2 (Type -> TypeName .)
    COMMA           reduce using rule 2 (Type -> TypeName .)
    STRING          reduce using rule 2 (Type -> TypeName .)
    COLON           reduce using rule 2 (Type -> TypeName .)


state 57

    (5) TypeName -> TYPEX .

    LPAREN          reduce using rule 5 (TypeName -> TYPEX .)
    COMMA           reduce using rule 5 (TypeName -> TYPEX .)
    RPAREN          reduce using rule 5 (TypeName -> TYPEX .)
    SEMICOL         reduce using rule 5 (TypeName -> TYPEX .)
    COLON           reduce using rule 5 (TypeName -> TYPEX .)
    EQUAL           reduce using rule 5 (TypeName -> TYPEX .)
    LBRACE          reduce using rule 5 (TypeName -> TYPEX .)
    STRING          reduce using rule 5 (TypeName -> TYPEX .)


state 58

    (7) TypeLit -> StructType .

    COMMA           reduce using rule 7 (TypeLit -> StructType .)
    COLON           reduce using rule 7 (TypeLit -> StructType .)
    RPAREN          reduce using rule 7 (TypeLit -> StructType .)
    LPAREN          reduce using rule 7 (TypeLit -> StructType .)
    EQUAL           reduce using rule 7 (TypeLit -> StructType .)
    SEMICOL         reduce using rule 7 (TypeLit -> StructType .)
    LBRACE          reduce using rule 7 (TypeLit -> StructType .)
    STRING          reduce using rule 7 (TypeLit -> StructType .)


state 59

    (55) TypeExprListOpt -> epsilon .
    (11) TypeOpt -> epsilon .

    SEMICOL         reduce using rule 55 (TypeExprListOpt -> epsilon .)
    EQUAL           reduce using rule 11 (TypeOpt -> epsilon .)


state 60

    (22) PointerType -> TIMES . BaseType
    (23) BaseType -> . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 61
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    BaseType                       shift and go to state 88
    Type                           shift and go to state 87
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    TypeLit                        shift and go to state 55

state 61

    (4) Type -> LPAREN . Type RPAREN
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 61
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    Type                           shift and go to state 89
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    TypeLit                        shift and go to state 55

state 62

    (54) TypeExprListOpt -> TypeOpt . EQUAL ExpressionList

    EQUAL           shift and go to state 90


state 63

    (15) StructType -> STRUCT . LBRACE FieldDeclRep RBRACE

    LBRACE          shift and go to state 91


state 64

    (12) ArrayType -> LBRACK . ArrayLength RBRACK ElementType
    (13) ArrayLength -> . Expression
    (131) Expression -> . UnaryExpr
    (132) Expression -> . Expression BinaryOp Expression
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (111) PrimaryExpr -> . Operand
    (112) PrimaryExpr -> . Conversion
    (113) PrimaryExpr -> . PrimaryExpr Selector
    (114) PrimaryExpr -> . PrimaryExpr Index
    (115) PrimaryExpr -> . PrimaryExpr Slice
    (116) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (117) PrimaryExpr -> . PrimaryExpr Arguments
    (159) UnaryOp -> . PLUS
    (160) UnaryOp -> . MINUS
    (161) UnaryOp -> . TIMES
    (162) UnaryOp -> . AMPERS
    (163) UnaryOp -> . NOT
    (82) Operand -> . Literal
    (83) Operand -> . OperandName
    (84) Operand -> . LPAREN Expression RPAREN
    (110) Conversion -> . Type LPAREN Expression RPAREN
    (85) Literal -> . BasicLit
    (91) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (86) BasicLit -> . INTEGER
    (87) BasicLit -> . FLOAT
    (88) BasicLit -> . IMAGINARY
    (89) BasicLit -> . RUNE
    (90) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 101
    MINUS           shift and go to state 97
    TIMES           shift and go to state 107
    AMPERS          shift and go to state 112
    NOT             shift and go to state 98
    LPAREN          shift and go to state 109
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 111
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 105
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 92
    UnaryOp                        shift and go to state 93
    PrimaryExpr                    shift and go to state 94
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    Type                           shift and go to state 100
    OperandName                    shift and go to state 99
    TypeLit                        shift and go to state 55
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    UnaryExpr                      shift and go to state 106
    ArrayLength                    shift and go to state 108
    Expression                     shift and go to state 110
    PointerType                    shift and go to state 66
    BasicLit                       shift and go to state 113
    Operand                        shift and go to state 114
    FunctionType                   shift and go to state 67

state 65

    (53) ConstSpec -> IdentifierList TypeExprListOpt .

    SEMICOL         reduce using rule 53 (ConstSpec -> IdentifierList TypeExprListOpt .)


state 66

    (8) TypeLit -> PointerType .

    COMMA           reduce using rule 8 (TypeLit -> PointerType .)
    COLON           reduce using rule 8 (TypeLit -> PointerType .)
    RPAREN          reduce using rule 8 (TypeLit -> PointerType .)
    LPAREN          reduce using rule 8 (TypeLit -> PointerType .)
    EQUAL           reduce using rule 8 (TypeLit -> PointerType .)
    SEMICOL         reduce using rule 8 (TypeLit -> PointerType .)
    LBRACE          reduce using rule 8 (TypeLit -> PointerType .)
    STRING          reduce using rule 8 (TypeLit -> PointerType .)


state 67

    (9) TypeLit -> FunctionType .

    COMMA           reduce using rule 9 (TypeLit -> FunctionType .)
    COLON           reduce using rule 9 (TypeLit -> FunctionType .)
    RPAREN          reduce using rule 9 (TypeLit -> FunctionType .)
    LPAREN          reduce using rule 9 (TypeLit -> FunctionType .)
    EQUAL           reduce using rule 9 (TypeLit -> FunctionType .)
    SEMICOL         reduce using rule 9 (TypeLit -> FunctionType .)
    LBRACE          reduce using rule 9 (TypeLit -> FunctionType .)
    STRING          reduce using rule 9 (TypeLit -> FunctionType .)


state 68

    (58) IdentifierRep -> epsilon .

    COMMA           reduce using rule 58 (IdentifierRep -> epsilon .)
    LPAREN          reduce using rule 58 (IdentifierRep -> epsilon .)
    TYPEX           reduce using rule 58 (IdentifierRep -> epsilon .)
    LBRACK          reduce using rule 58 (IdentifierRep -> epsilon .)
    STRUCT          reduce using rule 58 (IdentifierRep -> epsilon .)
    TIMES           reduce using rule 58 (IdentifierRep -> epsilon .)
    FUNC            reduce using rule 58 (IdentifierRep -> epsilon .)
    EQUAL           reduce using rule 58 (IdentifierRep -> epsilon .)
    SEMICOL         reduce using rule 58 (IdentifierRep -> epsilon .)


state 69

    (56) IdentifierList -> IDENTIFIER IdentifierRep .
    (57) IdentifierRep -> IdentifierRep . COMMA IDENTIFIER

    LPAREN          reduce using rule 56 (IdentifierList -> IDENTIFIER IdentifierRep .)
    TYPEX           reduce using rule 56 (IdentifierList -> IDENTIFIER IdentifierRep .)
    LBRACK          reduce using rule 56 (IdentifierList -> IDENTIFIER IdentifierRep .)
    STRUCT          reduce using rule 56 (IdentifierList -> IDENTIFIER IdentifierRep .)
    TIMES           reduce using rule 56 (IdentifierList -> IDENTIFIER IdentifierRep .)
    FUNC            reduce using rule 56 (IdentifierList -> IDENTIFIER IdentifierRep .)
    EQUAL           reduce using rule 56 (IdentifierList -> IDENTIFIER IdentifierRep .)
    SEMICOL         reduce using rule 56 (IdentifierList -> IDENTIFIER IdentifierRep .)
    COMMA           shift and go to state 115


state 70

    (76) FunctionDecl -> FUNC FunctionName Function .

    SEMICOL         reduce using rule 76 (FunctionDecl -> FUNC FunctionName Function .)


state 71

    (25) Signature -> Parameters . ResultOpt
    (26) ResultOpt -> . Result
    (27) ResultOpt -> . epsilon
    (28) Result -> . Parameters
    (29) Result -> . Type
    (260) epsilon -> .
    (30) Parameters -> . LPAREN ParameterListOpt RPAREN
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

  ! shift/reduce conflict for LPAREN resolved as shift
    EQUAL           reduce using rule 260 (epsilon -> .)
    SEMICOL         reduce using rule 260 (epsilon -> .)
    RPAREN          reduce using rule 260 (epsilon -> .)
    LBRACE          reduce using rule 260 (epsilon -> .)
    COMMA           reduce using rule 260 (epsilon -> .)
    STRING          reduce using rule 260 (epsilon -> .)
    COLON           reduce using rule 260 (epsilon -> .)
    LPAREN          shift and go to state 120
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

  ! LPAREN          [ reduce using rule 260 (epsilon -> .) ]

    StructType                     shift and go to state 58
    Parameters                     shift and go to state 116
    epsilon                        shift and go to state 119
    ResultOpt                      shift and go to state 118
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    TypeLit                        shift and go to state 55
    Result                         shift and go to state 121
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    Type                           shift and go to state 117

state 72

    (77) FunctionDecl -> FUNC FunctionName Signature .
    (79) Function -> Signature . FunctionBody
    (80) FunctionBody -> . Block
    (40) Block -> . LBRACE StatementList RBRACE

    SEMICOL         reduce using rule 77 (FunctionDecl -> FUNC FunctionName Signature .)
    LBRACE          shift and go to state 123

    FunctionBody                   shift and go to state 122
    Block                          shift and go to state 124

state 73

    (30) Parameters -> LPAREN . ParameterListOpt RPAREN
    (31) ParameterListOpt -> . ParametersList
    (32) ParameterListOpt -> . epsilon
    (33) ParametersList -> . Type
    (34) ParametersList -> . IdentifierList Type
    (35) ParametersList -> . ParameterDeclCommaRep
    (260) epsilon -> .
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (56) IdentifierList -> . IDENTIFIER IdentifierRep
    (36) ParameterDeclCommaRep -> . ParameterDeclCommaRep COMMA ParameterDecl
    (37) ParameterDeclCommaRep -> . ParameterDecl COMMA ParameterDecl
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (38) ParameterDecl -> . IdentifierList Type
    (39) ParameterDecl -> . Type
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    RPAREN          reduce using rule 260 (epsilon -> .)
    LPAREN          shift and go to state 61
    IDENTIFIER      shift and go to state 34
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    epsilon                        shift and go to state 131
    ParameterListOpt               shift and go to state 125
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    TypeLit                        shift and go to state 55
    IdentifierList                 shift and go to state 126
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    ParametersList                 shift and go to state 129
    Type                           shift and go to state 128
    ParameterDeclCommaRep          shift and go to state 127
    ParameterDecl                  shift and go to state 130

state 74

    (68) VarDecl -> VAR LPAREN VarSpecRep . RPAREN
    (69) VarSpecRep -> VarSpecRep . VarSpec SEMICOL
    (71) VarSpec -> . IdentifierList Type ExpressionListOpt
    (72) VarSpec -> . IdentifierList EQUAL ExpressionList
    (56) IdentifierList -> . IDENTIFIER IdentifierRep

    RPAREN          shift and go to state 132
    IDENTIFIER      shift and go to state 34

    VarSpec                        shift and go to state 133
    IdentifierList                 shift and go to state 40

state 75

    (70) VarSpecRep -> epsilon .

    RPAREN          reduce using rule 70 (VarSpecRep -> epsilon .)
    IDENTIFIER      reduce using rule 70 (VarSpecRep -> epsilon .)


state 76

    (72) VarSpec -> IdentifierList EQUAL . ExpressionList
    (128) ExpressionList -> . Expression ExpressionRep
    (131) Expression -> . UnaryExpr
    (132) Expression -> . Expression BinaryOp Expression
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (111) PrimaryExpr -> . Operand
    (112) PrimaryExpr -> . Conversion
    (113) PrimaryExpr -> . PrimaryExpr Selector
    (114) PrimaryExpr -> . PrimaryExpr Index
    (115) PrimaryExpr -> . PrimaryExpr Slice
    (116) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (117) PrimaryExpr -> . PrimaryExpr Arguments
    (159) UnaryOp -> . PLUS
    (160) UnaryOp -> . MINUS
    (161) UnaryOp -> . TIMES
    (162) UnaryOp -> . AMPERS
    (163) UnaryOp -> . NOT
    (82) Operand -> . Literal
    (83) Operand -> . OperandName
    (84) Operand -> . LPAREN Expression RPAREN
    (110) Conversion -> . Type LPAREN Expression RPAREN
    (85) Literal -> . BasicLit
    (91) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (86) BasicLit -> . INTEGER
    (87) BasicLit -> . FLOAT
    (88) BasicLit -> . IMAGINARY
    (89) BasicLit -> . RUNE
    (90) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 101
    MINUS           shift and go to state 97
    TIMES           shift and go to state 107
    AMPERS          shift and go to state 112
    NOT             shift and go to state 98
    LPAREN          shift and go to state 109
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 111
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 105
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    UnaryOp                        shift and go to state 93
    PrimaryExpr                    shift and go to state 94
    Conversion                     shift and go to state 92
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    Type                           shift and go to state 100
    OperandName                    shift and go to state 99
    BasicLit                       shift and go to state 113
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    UnaryExpr                      shift and go to state 106
    ExpressionList                 shift and go to state 134
    Expression                     shift and go to state 135
    PointerType                    shift and go to state 66
    TypeLit                        shift and go to state 55
    Operand                        shift and go to state 114
    FunctionType                   shift and go to state 67

state 77

    (71) VarSpec -> IdentifierList Type . ExpressionListOpt
    (73) ExpressionListOpt -> . EQUAL ExpressionList
    (74) ExpressionListOpt -> . epsilon
    (260) epsilon -> .

    EQUAL           shift and go to state 136
    SEMICOL         reduce using rule 260 (epsilon -> .)

    ExpressionListOpt              shift and go to state 138
    epsilon                        shift and go to state 137

state 78

    (60) TypeDecl -> TYPE LPAREN TypeSpecRep . RPAREN
    (61) TypeSpecRep -> TypeSpecRep . TypeSpec SEMICOL
    (63) TypeSpec -> . AliasDecl
    (64) TypeSpec -> . TypeDef
    (65) AliasDecl -> . IDENTIFIER EQUAL Type
    (66) TypeDef -> . IDENTIFIER Type

    RPAREN          shift and go to state 139
    IDENTIFIER      shift and go to state 45

    TypeDef                        shift and go to state 41
    AliasDecl                      shift and go to state 42
    TypeSpec                       shift and go to state 140

state 79

    (62) TypeSpecRep -> epsilon .

    RPAREN          reduce using rule 62 (TypeSpecRep -> epsilon .)
    IDENTIFIER      reduce using rule 62 (TypeSpecRep -> epsilon .)


state 80

    (65) AliasDecl -> IDENTIFIER EQUAL . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 61
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    Type                           shift and go to state 141
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    TypeLit                        shift and go to state 55

state 81

    (66) TypeDef -> IDENTIFIER Type .

    SEMICOL         reduce using rule 66 (TypeDef -> IDENTIFIER Type .)


state 82

    (252) ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN .

    SEMICOL         reduce using rule 252 (ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN .)


state 83

    (253) ImportSpecRep -> ImportSpecRep ImportSpec . SEMICOL

    SEMICOL         shift and go to state 142


state 84

    (51) ConstSpecRep -> ConstSpecRep ConstSpec . SEMICOL

    SEMICOL         shift and go to state 143


state 85

    (50) ConstDecl -> CONST LPAREN ConstSpecRep RPAREN .

    SEMICOL         reduce using rule 50 (ConstDecl -> CONST LPAREN ConstSpecRep RPAREN .)


state 86

    (24) FunctionType -> FUNC Signature .

    STRING          reduce using rule 24 (FunctionType -> FUNC Signature .)
    SEMICOL         reduce using rule 24 (FunctionType -> FUNC Signature .)
    LPAREN          reduce using rule 24 (FunctionType -> FUNC Signature .)
    EQUAL           reduce using rule 24 (FunctionType -> FUNC Signature .)
    RPAREN          reduce using rule 24 (FunctionType -> FUNC Signature .)
    COMMA           reduce using rule 24 (FunctionType -> FUNC Signature .)
    LBRACE          reduce using rule 24 (FunctionType -> FUNC Signature .)
    COLON           reduce using rule 24 (FunctionType -> FUNC Signature .)


state 87

    (23) BaseType -> Type .

    LPAREN          reduce using rule 23 (BaseType -> Type .)
    RPAREN          reduce using rule 23 (BaseType -> Type .)
    EQUAL           reduce using rule 23 (BaseType -> Type .)
    SEMICOL         reduce using rule 23 (BaseType -> Type .)
    LBRACE          reduce using rule 23 (BaseType -> Type .)
    COMMA           reduce using rule 23 (BaseType -> Type .)
    STRING          reduce using rule 23 (BaseType -> Type .)
    COLON           reduce using rule 23 (BaseType -> Type .)


state 88

    (22) PointerType -> TIMES BaseType .

    RPAREN          reduce using rule 22 (PointerType -> TIMES BaseType .)
    LPAREN          reduce using rule 22 (PointerType -> TIMES BaseType .)
    EQUAL           reduce using rule 22 (PointerType -> TIMES BaseType .)
    SEMICOL         reduce using rule 22 (PointerType -> TIMES BaseType .)
    LBRACE          reduce using rule 22 (PointerType -> TIMES BaseType .)
    COMMA           reduce using rule 22 (PointerType -> TIMES BaseType .)
    STRING          reduce using rule 22 (PointerType -> TIMES BaseType .)
    COLON           reduce using rule 22 (PointerType -> TIMES BaseType .)


state 89

    (4) Type -> LPAREN Type . RPAREN

    RPAREN          shift and go to state 144


state 90

    (54) TypeExprListOpt -> TypeOpt EQUAL . ExpressionList
    (128) ExpressionList -> . Expression ExpressionRep
    (131) Expression -> . UnaryExpr
    (132) Expression -> . Expression BinaryOp Expression
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (111) PrimaryExpr -> . Operand
    (112) PrimaryExpr -> . Conversion
    (113) PrimaryExpr -> . PrimaryExpr Selector
    (114) PrimaryExpr -> . PrimaryExpr Index
    (115) PrimaryExpr -> . PrimaryExpr Slice
    (116) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (117) PrimaryExpr -> . PrimaryExpr Arguments
    (159) UnaryOp -> . PLUS
    (160) UnaryOp -> . MINUS
    (161) UnaryOp -> . TIMES
    (162) UnaryOp -> . AMPERS
    (163) UnaryOp -> . NOT
    (82) Operand -> . Literal
    (83) Operand -> . OperandName
    (84) Operand -> . LPAREN Expression RPAREN
    (110) Conversion -> . Type LPAREN Expression RPAREN
    (85) Literal -> . BasicLit
    (91) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (86) BasicLit -> . INTEGER
    (87) BasicLit -> . FLOAT
    (88) BasicLit -> . IMAGINARY
    (89) BasicLit -> . RUNE
    (90) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 101
    MINUS           shift and go to state 97
    TIMES           shift and go to state 107
    AMPERS          shift and go to state 112
    NOT             shift and go to state 98
    LPAREN          shift and go to state 109
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 111
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 105
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    UnaryOp                        shift and go to state 93
    PrimaryExpr                    shift and go to state 94
    Conversion                     shift and go to state 92
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    Expression                     shift and go to state 135
    Type                           shift and go to state 100
    OperandName                    shift and go to state 99
    BasicLit                       shift and go to state 113
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    UnaryExpr                      shift and go to state 106
    ExpressionList                 shift and go to state 145
    PointerType                    shift and go to state 66
    TypeLit                        shift and go to state 55
    Operand                        shift and go to state 114
    FunctionType                   shift and go to state 67

state 91

    (15) StructType -> STRUCT LBRACE . FieldDeclRep RBRACE
    (16) FieldDeclRep -> . FieldDeclRep FieldDecl SEMICOL
    (17) FieldDeclRep -> . epsilon
    (260) epsilon -> .

    RBRACE          reduce using rule 260 (epsilon -> .)
    IDENTIFIER      reduce using rule 260 (epsilon -> .)

    FieldDeclRep                   shift and go to state 146
    epsilon                        shift and go to state 147

state 92

    (112) PrimaryExpr -> Conversion .

    DOT             reduce using rule 112 (PrimaryExpr -> Conversion .)
    LBRACK          reduce using rule 112 (PrimaryExpr -> Conversion .)
    LPAREN          reduce using rule 112 (PrimaryExpr -> Conversion .)
    RPAREN          reduce using rule 112 (PrimaryExpr -> Conversion .)
    OROR            reduce using rule 112 (PrimaryExpr -> Conversion .)
    AMPAMP          reduce using rule 112 (PrimaryExpr -> Conversion .)
    EQEQ            reduce using rule 112 (PrimaryExpr -> Conversion .)
    NOTEQ           reduce using rule 112 (PrimaryExpr -> Conversion .)
    LESS            reduce using rule 112 (PrimaryExpr -> Conversion .)
    GREAT           reduce using rule 112 (PrimaryExpr -> Conversion .)
    LEQ             reduce using rule 112 (PrimaryExpr -> Conversion .)
    GEQ             reduce using rule 112 (PrimaryExpr -> Conversion .)
    PLUS            reduce using rule 112 (PrimaryExpr -> Conversion .)
    MINUS           reduce using rule 112 (PrimaryExpr -> Conversion .)
    OR              reduce using rule 112 (PrimaryExpr -> Conversion .)
    CARET           reduce using rule 112 (PrimaryExpr -> Conversion .)
    TIMES           reduce using rule 112 (PrimaryExpr -> Conversion .)
    DIVIDE          reduce using rule 112 (PrimaryExpr -> Conversion .)
    MOD             reduce using rule 112 (PrimaryExpr -> Conversion .)
    AMPERS          reduce using rule 112 (PrimaryExpr -> Conversion .)
    LL              reduce using rule 112 (PrimaryExpr -> Conversion .)
    GG              reduce using rule 112 (PrimaryExpr -> Conversion .)
    AMPCAR          reduce using rule 112 (PrimaryExpr -> Conversion .)
    COLON           reduce using rule 112 (PrimaryExpr -> Conversion .)
    RBRACK          reduce using rule 112 (PrimaryExpr -> Conversion .)
    SEMICOL         reduce using rule 112 (PrimaryExpr -> Conversion .)
    LBRACE          reduce using rule 112 (PrimaryExpr -> Conversion .)
    COMMA           reduce using rule 112 (PrimaryExpr -> Conversion .)
    PLUSPLUS        reduce using rule 112 (PrimaryExpr -> Conversion .)
    MINUSMIN        reduce using rule 112 (PrimaryExpr -> Conversion .)
    PLUSEQ          reduce using rule 112 (PrimaryExpr -> Conversion .)
    MINUSEQ         reduce using rule 112 (PrimaryExpr -> Conversion .)
    TIMESEQ         reduce using rule 112 (PrimaryExpr -> Conversion .)
    DIVIDEEQ        reduce using rule 112 (PrimaryExpr -> Conversion .)
    MODEQ           reduce using rule 112 (PrimaryExpr -> Conversion .)
    AMPEQ           reduce using rule 112 (PrimaryExpr -> Conversion .)
    OREQ            reduce using rule 112 (PrimaryExpr -> Conversion .)
    CAREQ           reduce using rule 112 (PrimaryExpr -> Conversion .)
    LLEQ            reduce using rule 112 (PrimaryExpr -> Conversion .)
    GGEQ            reduce using rule 112 (PrimaryExpr -> Conversion .)
    EQUAL           reduce using rule 112 (PrimaryExpr -> Conversion .)


state 93

    (136) UnaryExpr -> UnaryOp . UnaryExpr
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (111) PrimaryExpr -> . Operand
    (112) PrimaryExpr -> . Conversion
    (113) PrimaryExpr -> . PrimaryExpr Selector
    (114) PrimaryExpr -> . PrimaryExpr Index
    (115) PrimaryExpr -> . PrimaryExpr Slice
    (116) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (117) PrimaryExpr -> . PrimaryExpr Arguments
    (159) UnaryOp -> . PLUS
    (160) UnaryOp -> . MINUS
    (161) UnaryOp -> . TIMES
    (162) UnaryOp -> . AMPERS
    (163) UnaryOp -> . NOT
    (82) Operand -> . Literal
    (83) Operand -> . OperandName
    (84) Operand -> . LPAREN Expression RPAREN
    (110) Conversion -> . Type LPAREN Expression RPAREN
    (85) Literal -> . BasicLit
    (91) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (86) BasicLit -> . INTEGER
    (87) BasicLit -> . FLOAT
    (88) BasicLit -> . IMAGINARY
    (89) BasicLit -> . RUNE
    (90) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 101
    MINUS           shift and go to state 97
    TIMES           shift and go to state 107
    AMPERS          shift and go to state 112
    NOT             shift and go to state 98
    LPAREN          shift and go to state 109
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 111
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 105
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 92
    UnaryOp                        shift and go to state 93
    PrimaryExpr                    shift and go to state 94
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    Type                           shift and go to state 100
    OperandName                    shift and go to state 99
    BasicLit                       shift and go to state 113
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    UnaryExpr                      shift and go to state 148
    PointerType                    shift and go to state 66
    TypeLit                        shift and go to state 55
    Operand                        shift and go to state 114
    FunctionType                   shift and go to state 67

state 94

    (135) UnaryExpr -> PrimaryExpr .
    (113) PrimaryExpr -> PrimaryExpr . Selector
    (114) PrimaryExpr -> PrimaryExpr . Index
    (115) PrimaryExpr -> PrimaryExpr . Slice
    (116) PrimaryExpr -> PrimaryExpr . TypeAssertion
    (117) PrimaryExpr -> PrimaryExpr . Arguments
    (118) Selector -> . DOT IDENTIFIER
    (119) Index -> . LBRACK Expression RBRACK
    (120) Slice -> . LBRACK ExpressionOpt COLON ExpressionOpt RBRACK
    (121) Slice -> . LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK
    (122) TypeAssertion -> . DOT LPAREN Type RPAREN
    (123) Arguments -> . LPAREN ExpressionListTypeOpt RPAREN

    RPAREN          reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    OROR            reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    AMPAMP          reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    EQEQ            reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    NOTEQ           reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    LESS            reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    GREAT           reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    LEQ             reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    GEQ             reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    PLUS            reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    MINUS           reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    OR              reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    CARET           reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    TIMES           reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    DIVIDE          reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    MOD             reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    AMPERS          reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    LL              reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    GG              reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    AMPCAR          reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    COMMA           reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    SEMICOL         reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    LBRACE          reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    PLUSPLUS        reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    MINUSMIN        reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    PLUSEQ          reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    MINUSEQ         reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    TIMESEQ         reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    DIVIDEEQ        reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    MODEQ           reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    AMPEQ           reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    OREQ            reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    CAREQ           reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    LLEQ            reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    GGEQ            reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    EQUAL           reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    RBRACK          reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    COLON           reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    DOT             shift and go to state 156
    LBRACK          shift and go to state 151
    LPAREN          shift and go to state 155

    Index                          shift and go to state 149
    Slice                          shift and go to state 150
    Selector                       shift and go to state 152
    TypeAssertion                  shift and go to state 153
    Arguments                      shift and go to state 154

state 95

    (82) Operand -> Literal .

    DOT             reduce using rule 82 (Operand -> Literal .)
    LBRACK          reduce using rule 82 (Operand -> Literal .)
    LPAREN          reduce using rule 82 (Operand -> Literal .)
    OROR            reduce using rule 82 (Operand -> Literal .)
    AMPAMP          reduce using rule 82 (Operand -> Literal .)
    EQEQ            reduce using rule 82 (Operand -> Literal .)
    NOTEQ           reduce using rule 82 (Operand -> Literal .)
    LESS            reduce using rule 82 (Operand -> Literal .)
    GREAT           reduce using rule 82 (Operand -> Literal .)
    LEQ             reduce using rule 82 (Operand -> Literal .)
    GEQ             reduce using rule 82 (Operand -> Literal .)
    PLUS            reduce using rule 82 (Operand -> Literal .)
    MINUS           reduce using rule 82 (Operand -> Literal .)
    OR              reduce using rule 82 (Operand -> Literal .)
    CARET           reduce using rule 82 (Operand -> Literal .)
    TIMES           reduce using rule 82 (Operand -> Literal .)
    DIVIDE          reduce using rule 82 (Operand -> Literal .)
    MOD             reduce using rule 82 (Operand -> Literal .)
    AMPERS          reduce using rule 82 (Operand -> Literal .)
    LL              reduce using rule 82 (Operand -> Literal .)
    GG              reduce using rule 82 (Operand -> Literal .)
    AMPCAR          reduce using rule 82 (Operand -> Literal .)
    COMMA           reduce using rule 82 (Operand -> Literal .)
    SEMICOL         reduce using rule 82 (Operand -> Literal .)
    PLUSPLUS        reduce using rule 82 (Operand -> Literal .)
    MINUSMIN        reduce using rule 82 (Operand -> Literal .)
    LBRACE          reduce using rule 82 (Operand -> Literal .)
    PLUSEQ          reduce using rule 82 (Operand -> Literal .)
    MINUSEQ         reduce using rule 82 (Operand -> Literal .)
    TIMESEQ         reduce using rule 82 (Operand -> Literal .)
    DIVIDEEQ        reduce using rule 82 (Operand -> Literal .)
    MODEQ           reduce using rule 82 (Operand -> Literal .)
    AMPEQ           reduce using rule 82 (Operand -> Literal .)
    OREQ            reduce using rule 82 (Operand -> Literal .)
    CAREQ           reduce using rule 82 (Operand -> Literal .)
    LLEQ            reduce using rule 82 (Operand -> Literal .)
    GGEQ            reduce using rule 82 (Operand -> Literal .)
    EQUAL           reduce using rule 82 (Operand -> Literal .)
    RPAREN          reduce using rule 82 (Operand -> Literal .)
    COLON           reduce using rule 82 (Operand -> Literal .)
    RBRACK          reduce using rule 82 (Operand -> Literal .)


state 96

    (89) BasicLit -> RUNE .

    DOT             reduce using rule 89 (BasicLit -> RUNE .)
    LBRACK          reduce using rule 89 (BasicLit -> RUNE .)
    LPAREN          reduce using rule 89 (BasicLit -> RUNE .)
    OROR            reduce using rule 89 (BasicLit -> RUNE .)
    AMPAMP          reduce using rule 89 (BasicLit -> RUNE .)
    EQEQ            reduce using rule 89 (BasicLit -> RUNE .)
    NOTEQ           reduce using rule 89 (BasicLit -> RUNE .)
    LESS            reduce using rule 89 (BasicLit -> RUNE .)
    GREAT           reduce using rule 89 (BasicLit -> RUNE .)
    LEQ             reduce using rule 89 (BasicLit -> RUNE .)
    GEQ             reduce using rule 89 (BasicLit -> RUNE .)
    PLUS            reduce using rule 89 (BasicLit -> RUNE .)
    MINUS           reduce using rule 89 (BasicLit -> RUNE .)
    OR              reduce using rule 89 (BasicLit -> RUNE .)
    CARET           reduce using rule 89 (BasicLit -> RUNE .)
    TIMES           reduce using rule 89 (BasicLit -> RUNE .)
    DIVIDE          reduce using rule 89 (BasicLit -> RUNE .)
    MOD             reduce using rule 89 (BasicLit -> RUNE .)
    AMPERS          reduce using rule 89 (BasicLit -> RUNE .)
    LL              reduce using rule 89 (BasicLit -> RUNE .)
    GG              reduce using rule 89 (BasicLit -> RUNE .)
    AMPCAR          reduce using rule 89 (BasicLit -> RUNE .)
    SEMICOL         reduce using rule 89 (BasicLit -> RUNE .)
    LBRACE          reduce using rule 89 (BasicLit -> RUNE .)
    COMMA           reduce using rule 89 (BasicLit -> RUNE .)
    RPAREN          reduce using rule 89 (BasicLit -> RUNE .)
    PLUSPLUS        reduce using rule 89 (BasicLit -> RUNE .)
    MINUSMIN        reduce using rule 89 (BasicLit -> RUNE .)
    PLUSEQ          reduce using rule 89 (BasicLit -> RUNE .)
    MINUSEQ         reduce using rule 89 (BasicLit -> RUNE .)
    TIMESEQ         reduce using rule 89 (BasicLit -> RUNE .)
    DIVIDEEQ        reduce using rule 89 (BasicLit -> RUNE .)
    MODEQ           reduce using rule 89 (BasicLit -> RUNE .)
    AMPEQ           reduce using rule 89 (BasicLit -> RUNE .)
    OREQ            reduce using rule 89 (BasicLit -> RUNE .)
    CAREQ           reduce using rule 89 (BasicLit -> RUNE .)
    LLEQ            reduce using rule 89 (BasicLit -> RUNE .)
    GGEQ            reduce using rule 89 (BasicLit -> RUNE .)
    EQUAL           reduce using rule 89 (BasicLit -> RUNE .)
    RBRACK          reduce using rule 89 (BasicLit -> RUNE .)
    COLON           reduce using rule 89 (BasicLit -> RUNE .)


state 97

    (160) UnaryOp -> MINUS .

    PLUS            reduce using rule 160 (UnaryOp -> MINUS .)
    MINUS           reduce using rule 160 (UnaryOp -> MINUS .)
    TIMES           reduce using rule 160 (UnaryOp -> MINUS .)
    AMPERS          reduce using rule 160 (UnaryOp -> MINUS .)
    NOT             reduce using rule 160 (UnaryOp -> MINUS .)
    LPAREN          reduce using rule 160 (UnaryOp -> MINUS .)
    IDENTIFIER      reduce using rule 160 (UnaryOp -> MINUS .)
    INTEGER         reduce using rule 160 (UnaryOp -> MINUS .)
    FLOAT           reduce using rule 160 (UnaryOp -> MINUS .)
    IMAGINARY       reduce using rule 160 (UnaryOp -> MINUS .)
    RUNE            reduce using rule 160 (UnaryOp -> MINUS .)
    STRING          reduce using rule 160 (UnaryOp -> MINUS .)
    TYPEX           reduce using rule 160 (UnaryOp -> MINUS .)
    LBRACK          reduce using rule 160 (UnaryOp -> MINUS .)
    STRUCT          reduce using rule 160 (UnaryOp -> MINUS .)
    FUNC            reduce using rule 160 (UnaryOp -> MINUS .)


state 98

    (163) UnaryOp -> NOT .

    PLUS            reduce using rule 163 (UnaryOp -> NOT .)
    MINUS           reduce using rule 163 (UnaryOp -> NOT .)
    TIMES           reduce using rule 163 (UnaryOp -> NOT .)
    AMPERS          reduce using rule 163 (UnaryOp -> NOT .)
    NOT             reduce using rule 163 (UnaryOp -> NOT .)
    LPAREN          reduce using rule 163 (UnaryOp -> NOT .)
    IDENTIFIER      reduce using rule 163 (UnaryOp -> NOT .)
    INTEGER         reduce using rule 163 (UnaryOp -> NOT .)
    FLOAT           reduce using rule 163 (UnaryOp -> NOT .)
    IMAGINARY       reduce using rule 163 (UnaryOp -> NOT .)
    RUNE            reduce using rule 163 (UnaryOp -> NOT .)
    STRING          reduce using rule 163 (UnaryOp -> NOT .)
    TYPEX           reduce using rule 163 (UnaryOp -> NOT .)
    LBRACK          reduce using rule 163 (UnaryOp -> NOT .)
    STRUCT          reduce using rule 163 (UnaryOp -> NOT .)
    FUNC            reduce using rule 163 (UnaryOp -> NOT .)


state 99

    (83) Operand -> OperandName .

    DOT             reduce using rule 83 (Operand -> OperandName .)
    LBRACK          reduce using rule 83 (Operand -> OperandName .)
    LPAREN          reduce using rule 83 (Operand -> OperandName .)
    OROR            reduce using rule 83 (Operand -> OperandName .)
    AMPAMP          reduce using rule 83 (Operand -> OperandName .)
    EQEQ            reduce using rule 83 (Operand -> OperandName .)
    NOTEQ           reduce using rule 83 (Operand -> OperandName .)
    LESS            reduce using rule 83 (Operand -> OperandName .)
    GREAT           reduce using rule 83 (Operand -> OperandName .)
    LEQ             reduce using rule 83 (Operand -> OperandName .)
    GEQ             reduce using rule 83 (Operand -> OperandName .)
    PLUS            reduce using rule 83 (Operand -> OperandName .)
    MINUS           reduce using rule 83 (Operand -> OperandName .)
    OR              reduce using rule 83 (Operand -> OperandName .)
    CARET           reduce using rule 83 (Operand -> OperandName .)
    TIMES           reduce using rule 83 (Operand -> OperandName .)
    DIVIDE          reduce using rule 83 (Operand -> OperandName .)
    MOD             reduce using rule 83 (Operand -> OperandName .)
    AMPERS          reduce using rule 83 (Operand -> OperandName .)
    LL              reduce using rule 83 (Operand -> OperandName .)
    GG              reduce using rule 83 (Operand -> OperandName .)
    AMPCAR          reduce using rule 83 (Operand -> OperandName .)
    COMMA           reduce using rule 83 (Operand -> OperandName .)
    SEMICOL         reduce using rule 83 (Operand -> OperandName .)
    PLUSPLUS        reduce using rule 83 (Operand -> OperandName .)
    MINUSMIN        reduce using rule 83 (Operand -> OperandName .)
    LBRACE          reduce using rule 83 (Operand -> OperandName .)
    PLUSEQ          reduce using rule 83 (Operand -> OperandName .)
    MINUSEQ         reduce using rule 83 (Operand -> OperandName .)
    TIMESEQ         reduce using rule 83 (Operand -> OperandName .)
    DIVIDEEQ        reduce using rule 83 (Operand -> OperandName .)
    MODEQ           reduce using rule 83 (Operand -> OperandName .)
    AMPEQ           reduce using rule 83 (Operand -> OperandName .)
    OREQ            reduce using rule 83 (Operand -> OperandName .)
    CAREQ           reduce using rule 83 (Operand -> OperandName .)
    LLEQ            reduce using rule 83 (Operand -> OperandName .)
    GGEQ            reduce using rule 83 (Operand -> OperandName .)
    EQUAL           reduce using rule 83 (Operand -> OperandName .)
    RPAREN          reduce using rule 83 (Operand -> OperandName .)
    COLON           reduce using rule 83 (Operand -> OperandName .)
    RBRACK          reduce using rule 83 (Operand -> OperandName .)


state 100

    (110) Conversion -> Type . LPAREN Expression RPAREN

    LPAREN          shift and go to state 157


state 101

    (159) UnaryOp -> PLUS .

    PLUS            reduce using rule 159 (UnaryOp -> PLUS .)
    MINUS           reduce using rule 159 (UnaryOp -> PLUS .)
    TIMES           reduce using rule 159 (UnaryOp -> PLUS .)
    AMPERS          reduce using rule 159 (UnaryOp -> PLUS .)
    NOT             reduce using rule 159 (UnaryOp -> PLUS .)
    LPAREN          reduce using rule 159 (UnaryOp -> PLUS .)
    IDENTIFIER      reduce using rule 159 (UnaryOp -> PLUS .)
    INTEGER         reduce using rule 159 (UnaryOp -> PLUS .)
    FLOAT           reduce using rule 159 (UnaryOp -> PLUS .)
    IMAGINARY       reduce using rule 159 (UnaryOp -> PLUS .)
    RUNE            reduce using rule 159 (UnaryOp -> PLUS .)
    STRING          reduce using rule 159 (UnaryOp -> PLUS .)
    TYPEX           reduce using rule 159 (UnaryOp -> PLUS .)
    LBRACK          reduce using rule 159 (UnaryOp -> PLUS .)
    STRUCT          reduce using rule 159 (UnaryOp -> PLUS .)
    FUNC            reduce using rule 159 (UnaryOp -> PLUS .)


state 102

    (86) BasicLit -> INTEGER .

    DOT             reduce using rule 86 (BasicLit -> INTEGER .)
    LBRACK          reduce using rule 86 (BasicLit -> INTEGER .)
    LPAREN          reduce using rule 86 (BasicLit -> INTEGER .)
    OROR            reduce using rule 86 (BasicLit -> INTEGER .)
    AMPAMP          reduce using rule 86 (BasicLit -> INTEGER .)
    EQEQ            reduce using rule 86 (BasicLit -> INTEGER .)
    NOTEQ           reduce using rule 86 (BasicLit -> INTEGER .)
    LESS            reduce using rule 86 (BasicLit -> INTEGER .)
    GREAT           reduce using rule 86 (BasicLit -> INTEGER .)
    LEQ             reduce using rule 86 (BasicLit -> INTEGER .)
    GEQ             reduce using rule 86 (BasicLit -> INTEGER .)
    PLUS            reduce using rule 86 (BasicLit -> INTEGER .)
    MINUS           reduce using rule 86 (BasicLit -> INTEGER .)
    OR              reduce using rule 86 (BasicLit -> INTEGER .)
    CARET           reduce using rule 86 (BasicLit -> INTEGER .)
    TIMES           reduce using rule 86 (BasicLit -> INTEGER .)
    DIVIDE          reduce using rule 86 (BasicLit -> INTEGER .)
    MOD             reduce using rule 86 (BasicLit -> INTEGER .)
    AMPERS          reduce using rule 86 (BasicLit -> INTEGER .)
    LL              reduce using rule 86 (BasicLit -> INTEGER .)
    GG              reduce using rule 86 (BasicLit -> INTEGER .)
    AMPCAR          reduce using rule 86 (BasicLit -> INTEGER .)
    SEMICOL         reduce using rule 86 (BasicLit -> INTEGER .)
    LBRACE          reduce using rule 86 (BasicLit -> INTEGER .)
    COMMA           reduce using rule 86 (BasicLit -> INTEGER .)
    RPAREN          reduce using rule 86 (BasicLit -> INTEGER .)
    PLUSPLUS        reduce using rule 86 (BasicLit -> INTEGER .)
    MINUSMIN        reduce using rule 86 (BasicLit -> INTEGER .)
    PLUSEQ          reduce using rule 86 (BasicLit -> INTEGER .)
    MINUSEQ         reduce using rule 86 (BasicLit -> INTEGER .)
    TIMESEQ         reduce using rule 86 (BasicLit -> INTEGER .)
    DIVIDEEQ        reduce using rule 86 (BasicLit -> INTEGER .)
    MODEQ           reduce using rule 86 (BasicLit -> INTEGER .)
    AMPEQ           reduce using rule 86 (BasicLit -> INTEGER .)
    OREQ            reduce using rule 86 (BasicLit -> INTEGER .)
    CAREQ           reduce using rule 86 (BasicLit -> INTEGER .)
    LLEQ            reduce using rule 86 (BasicLit -> INTEGER .)
    GGEQ            reduce using rule 86 (BasicLit -> INTEGER .)
    EQUAL           reduce using rule 86 (BasicLit -> INTEGER .)
    RBRACK          reduce using rule 86 (BasicLit -> INTEGER .)
    COLON           reduce using rule 86 (BasicLit -> INTEGER .)


state 103

    (88) BasicLit -> IMAGINARY .

    DOT             reduce using rule 88 (BasicLit -> IMAGINARY .)
    LBRACK          reduce using rule 88 (BasicLit -> IMAGINARY .)
    LPAREN          reduce using rule 88 (BasicLit -> IMAGINARY .)
    OROR            reduce using rule 88 (BasicLit -> IMAGINARY .)
    AMPAMP          reduce using rule 88 (BasicLit -> IMAGINARY .)
    EQEQ            reduce using rule 88 (BasicLit -> IMAGINARY .)
    NOTEQ           reduce using rule 88 (BasicLit -> IMAGINARY .)
    LESS            reduce using rule 88 (BasicLit -> IMAGINARY .)
    GREAT           reduce using rule 88 (BasicLit -> IMAGINARY .)
    LEQ             reduce using rule 88 (BasicLit -> IMAGINARY .)
    GEQ             reduce using rule 88 (BasicLit -> IMAGINARY .)
    PLUS            reduce using rule 88 (BasicLit -> IMAGINARY .)
    MINUS           reduce using rule 88 (BasicLit -> IMAGINARY .)
    OR              reduce using rule 88 (BasicLit -> IMAGINARY .)
    CARET           reduce using rule 88 (BasicLit -> IMAGINARY .)
    TIMES           reduce using rule 88 (BasicLit -> IMAGINARY .)
    DIVIDE          reduce using rule 88 (BasicLit -> IMAGINARY .)
    MOD             reduce using rule 88 (BasicLit -> IMAGINARY .)
    AMPERS          reduce using rule 88 (BasicLit -> IMAGINARY .)
    LL              reduce using rule 88 (BasicLit -> IMAGINARY .)
    GG              reduce using rule 88 (BasicLit -> IMAGINARY .)
    AMPCAR          reduce using rule 88 (BasicLit -> IMAGINARY .)
    SEMICOL         reduce using rule 88 (BasicLit -> IMAGINARY .)
    LBRACE          reduce using rule 88 (BasicLit -> IMAGINARY .)
    COMMA           reduce using rule 88 (BasicLit -> IMAGINARY .)
    RPAREN          reduce using rule 88 (BasicLit -> IMAGINARY .)
    PLUSPLUS        reduce using rule 88 (BasicLit -> IMAGINARY .)
    MINUSMIN        reduce using rule 88 (BasicLit -> IMAGINARY .)
    PLUSEQ          reduce using rule 88 (BasicLit -> IMAGINARY .)
    MINUSEQ         reduce using rule 88 (BasicLit -> IMAGINARY .)
    TIMESEQ         reduce using rule 88 (BasicLit -> IMAGINARY .)
    DIVIDEEQ        reduce using rule 88 (BasicLit -> IMAGINARY .)
    MODEQ           reduce using rule 88 (BasicLit -> IMAGINARY .)
    AMPEQ           reduce using rule 88 (BasicLit -> IMAGINARY .)
    OREQ            reduce using rule 88 (BasicLit -> IMAGINARY .)
    CAREQ           reduce using rule 88 (BasicLit -> IMAGINARY .)
    LLEQ            reduce using rule 88 (BasicLit -> IMAGINARY .)
    GGEQ            reduce using rule 88 (BasicLit -> IMAGINARY .)
    EQUAL           reduce using rule 88 (BasicLit -> IMAGINARY .)
    RBRACK          reduce using rule 88 (BasicLit -> IMAGINARY .)
    COLON           reduce using rule 88 (BasicLit -> IMAGINARY .)


state 104

    (91) OperandName -> IDENTIFIER .

    DOT             reduce using rule 91 (OperandName -> IDENTIFIER .)
    LBRACK          reduce using rule 91 (OperandName -> IDENTIFIER .)
    LPAREN          reduce using rule 91 (OperandName -> IDENTIFIER .)
    OROR            reduce using rule 91 (OperandName -> IDENTIFIER .)
    AMPAMP          reduce using rule 91 (OperandName -> IDENTIFIER .)
    EQEQ            reduce using rule 91 (OperandName -> IDENTIFIER .)
    NOTEQ           reduce using rule 91 (OperandName -> IDENTIFIER .)
    LESS            reduce using rule 91 (OperandName -> IDENTIFIER .)
    GREAT           reduce using rule 91 (OperandName -> IDENTIFIER .)
    LEQ             reduce using rule 91 (OperandName -> IDENTIFIER .)
    GEQ             reduce using rule 91 (OperandName -> IDENTIFIER .)
    PLUS            reduce using rule 91 (OperandName -> IDENTIFIER .)
    MINUS           reduce using rule 91 (OperandName -> IDENTIFIER .)
    OR              reduce using rule 91 (OperandName -> IDENTIFIER .)
    CARET           reduce using rule 91 (OperandName -> IDENTIFIER .)
    TIMES           reduce using rule 91 (OperandName -> IDENTIFIER .)
    DIVIDE          reduce using rule 91 (OperandName -> IDENTIFIER .)
    MOD             reduce using rule 91 (OperandName -> IDENTIFIER .)
    AMPERS          reduce using rule 91 (OperandName -> IDENTIFIER .)
    LL              reduce using rule 91 (OperandName -> IDENTIFIER .)
    GG              reduce using rule 91 (OperandName -> IDENTIFIER .)
    AMPCAR          reduce using rule 91 (OperandName -> IDENTIFIER .)
    RBRACK          reduce using rule 91 (OperandName -> IDENTIFIER .)
    COMMA           reduce using rule 91 (OperandName -> IDENTIFIER .)
    SEMICOL         reduce using rule 91 (OperandName -> IDENTIFIER .)
    RPAREN          reduce using rule 91 (OperandName -> IDENTIFIER .)
    COLON           reduce using rule 91 (OperandName -> IDENTIFIER .)
    PLUSPLUS        reduce using rule 91 (OperandName -> IDENTIFIER .)
    MINUSMIN        reduce using rule 91 (OperandName -> IDENTIFIER .)
    PLUSEQ          reduce using rule 91 (OperandName -> IDENTIFIER .)
    MINUSEQ         reduce using rule 91 (OperandName -> IDENTIFIER .)
    TIMESEQ         reduce using rule 91 (OperandName -> IDENTIFIER .)
    DIVIDEEQ        reduce using rule 91 (OperandName -> IDENTIFIER .)
    MODEQ           reduce using rule 91 (OperandName -> IDENTIFIER .)
    AMPEQ           reduce using rule 91 (OperandName -> IDENTIFIER .)
    OREQ            reduce using rule 91 (OperandName -> IDENTIFIER .)
    CAREQ           reduce using rule 91 (OperandName -> IDENTIFIER .)
    LLEQ            reduce using rule 91 (OperandName -> IDENTIFIER .)
    GGEQ            reduce using rule 91 (OperandName -> IDENTIFIER .)
    EQUAL           reduce using rule 91 (OperandName -> IDENTIFIER .)
    LBRACE          reduce using rule 91 (OperandName -> IDENTIFIER .)


state 105

    (90) BasicLit -> STRING .

    DOT             reduce using rule 90 (BasicLit -> STRING .)
    LBRACK          reduce using rule 90 (BasicLit -> STRING .)
    LPAREN          reduce using rule 90 (BasicLit -> STRING .)
    OROR            reduce using rule 90 (BasicLit -> STRING .)
    AMPAMP          reduce using rule 90 (BasicLit -> STRING .)
    EQEQ            reduce using rule 90 (BasicLit -> STRING .)
    NOTEQ           reduce using rule 90 (BasicLit -> STRING .)
    LESS            reduce using rule 90 (BasicLit -> STRING .)
    GREAT           reduce using rule 90 (BasicLit -> STRING .)
    LEQ             reduce using rule 90 (BasicLit -> STRING .)
    GEQ             reduce using rule 90 (BasicLit -> STRING .)
    PLUS            reduce using rule 90 (BasicLit -> STRING .)
    MINUS           reduce using rule 90 (BasicLit -> STRING .)
    OR              reduce using rule 90 (BasicLit -> STRING .)
    CARET           reduce using rule 90 (BasicLit -> STRING .)
    TIMES           reduce using rule 90 (BasicLit -> STRING .)
    DIVIDE          reduce using rule 90 (BasicLit -> STRING .)
    MOD             reduce using rule 90 (BasicLit -> STRING .)
    AMPERS          reduce using rule 90 (BasicLit -> STRING .)
    LL              reduce using rule 90 (BasicLit -> STRING .)
    GG              reduce using rule 90 (BasicLit -> STRING .)
    AMPCAR          reduce using rule 90 (BasicLit -> STRING .)
    SEMICOL         reduce using rule 90 (BasicLit -> STRING .)
    LBRACE          reduce using rule 90 (BasicLit -> STRING .)
    COMMA           reduce using rule 90 (BasicLit -> STRING .)
    RPAREN          reduce using rule 90 (BasicLit -> STRING .)
    PLUSPLUS        reduce using rule 90 (BasicLit -> STRING .)
    MINUSMIN        reduce using rule 90 (BasicLit -> STRING .)
    PLUSEQ          reduce using rule 90 (BasicLit -> STRING .)
    MINUSEQ         reduce using rule 90 (BasicLit -> STRING .)
    TIMESEQ         reduce using rule 90 (BasicLit -> STRING .)
    DIVIDEEQ        reduce using rule 90 (BasicLit -> STRING .)
    MODEQ           reduce using rule 90 (BasicLit -> STRING .)
    AMPEQ           reduce using rule 90 (BasicLit -> STRING .)
    OREQ            reduce using rule 90 (BasicLit -> STRING .)
    CAREQ           reduce using rule 90 (BasicLit -> STRING .)
    LLEQ            reduce using rule 90 (BasicLit -> STRING .)
    GGEQ            reduce using rule 90 (BasicLit -> STRING .)
    EQUAL           reduce using rule 90 (BasicLit -> STRING .)
    RBRACK          reduce using rule 90 (BasicLit -> STRING .)
    COLON           reduce using rule 90 (BasicLit -> STRING .)


state 106

    (131) Expression -> UnaryExpr .

    LBRACE          reduce using rule 131 (Expression -> UnaryExpr .)
    OROR            reduce using rule 131 (Expression -> UnaryExpr .)
    AMPAMP          reduce using rule 131 (Expression -> UnaryExpr .)
    EQEQ            reduce using rule 131 (Expression -> UnaryExpr .)
    NOTEQ           reduce using rule 131 (Expression -> UnaryExpr .)
    LESS            reduce using rule 131 (Expression -> UnaryExpr .)
    GREAT           reduce using rule 131 (Expression -> UnaryExpr .)
    LEQ             reduce using rule 131 (Expression -> UnaryExpr .)
    GEQ             reduce using rule 131 (Expression -> UnaryExpr .)
    PLUS            reduce using rule 131 (Expression -> UnaryExpr .)
    MINUS           reduce using rule 131 (Expression -> UnaryExpr .)
    OR              reduce using rule 131 (Expression -> UnaryExpr .)
    CARET           reduce using rule 131 (Expression -> UnaryExpr .)
    TIMES           reduce using rule 131 (Expression -> UnaryExpr .)
    DIVIDE          reduce using rule 131 (Expression -> UnaryExpr .)
    MOD             reduce using rule 131 (Expression -> UnaryExpr .)
    AMPERS          reduce using rule 131 (Expression -> UnaryExpr .)
    LL              reduce using rule 131 (Expression -> UnaryExpr .)
    GG              reduce using rule 131 (Expression -> UnaryExpr .)
    AMPCAR          reduce using rule 131 (Expression -> UnaryExpr .)
    PLUSPLUS        reduce using rule 131 (Expression -> UnaryExpr .)
    MINUSMIN        reduce using rule 131 (Expression -> UnaryExpr .)
    COMMA           reduce using rule 131 (Expression -> UnaryExpr .)
    PLUSEQ          reduce using rule 131 (Expression -> UnaryExpr .)
    MINUSEQ         reduce using rule 131 (Expression -> UnaryExpr .)
    TIMESEQ         reduce using rule 131 (Expression -> UnaryExpr .)
    DIVIDEEQ        reduce using rule 131 (Expression -> UnaryExpr .)
    MODEQ           reduce using rule 131 (Expression -> UnaryExpr .)
    AMPEQ           reduce using rule 131 (Expression -> UnaryExpr .)
    OREQ            reduce using rule 131 (Expression -> UnaryExpr .)
    CAREQ           reduce using rule 131 (Expression -> UnaryExpr .)
    LLEQ            reduce using rule 131 (Expression -> UnaryExpr .)
    GGEQ            reduce using rule 131 (Expression -> UnaryExpr .)
    EQUAL           reduce using rule 131 (Expression -> UnaryExpr .)
    SEMICOL         reduce using rule 131 (Expression -> UnaryExpr .)
    RBRACK          reduce using rule 131 (Expression -> UnaryExpr .)
    RPAREN          reduce using rule 131 (Expression -> UnaryExpr .)
    COLON           reduce using rule 131 (Expression -> UnaryExpr .)


state 107

    (161) UnaryOp -> TIMES .
    (22) PointerType -> TIMES . BaseType
    (23) BaseType -> . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            reduce using rule 161 (UnaryOp -> TIMES .)
    MINUS           reduce using rule 161 (UnaryOp -> TIMES .)
    TIMES           reduce using rule 161 (UnaryOp -> TIMES .)
    AMPERS          reduce using rule 161 (UnaryOp -> TIMES .)
    NOT             reduce using rule 161 (UnaryOp -> TIMES .)
    LPAREN          reduce using rule 161 (UnaryOp -> TIMES .)
    IDENTIFIER      reduce using rule 161 (UnaryOp -> TIMES .)
    INTEGER         reduce using rule 161 (UnaryOp -> TIMES .)
    FLOAT           reduce using rule 161 (UnaryOp -> TIMES .)
    IMAGINARY       reduce using rule 161 (UnaryOp -> TIMES .)
    RUNE            reduce using rule 161 (UnaryOp -> TIMES .)
    STRING          reduce using rule 161 (UnaryOp -> TIMES .)
    TYPEX           reduce using rule 161 (UnaryOp -> TIMES .)
    LBRACK          reduce using rule 161 (UnaryOp -> TIMES .)
    STRUCT          reduce using rule 161 (UnaryOp -> TIMES .)
    FUNC            reduce using rule 161 (UnaryOp -> TIMES .)

  ! LPAREN          [ shift and go to state 61 ]
  ! TYPEX           [ shift and go to state 57 ]
  ! LBRACK          [ shift and go to state 64 ]
  ! STRUCT          [ shift and go to state 63 ]
  ! TIMES           [ shift and go to state 60 ]
  ! FUNC            [ shift and go to state 52 ]

    StructType                     shift and go to state 58
    BaseType                       shift and go to state 88
    Type                           shift and go to state 87
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    TypeLit                        shift and go to state 55

state 108

    (12) ArrayType -> LBRACK ArrayLength . RBRACK ElementType

    RBRACK          shift and go to state 158


state 109

    (84) Operand -> LPAREN . Expression RPAREN
    (4) Type -> LPAREN . Type RPAREN
    (131) Expression -> . UnaryExpr
    (132) Expression -> . Expression BinaryOp Expression
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (111) PrimaryExpr -> . Operand
    (112) PrimaryExpr -> . Conversion
    (113) PrimaryExpr -> . PrimaryExpr Selector
    (114) PrimaryExpr -> . PrimaryExpr Index
    (115) PrimaryExpr -> . PrimaryExpr Slice
    (116) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (117) PrimaryExpr -> . PrimaryExpr Arguments
    (159) UnaryOp -> . PLUS
    (160) UnaryOp -> . MINUS
    (161) UnaryOp -> . TIMES
    (162) UnaryOp -> . AMPERS
    (163) UnaryOp -> . NOT
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature
    (82) Operand -> . Literal
    (83) Operand -> . OperandName
    (84) Operand -> . LPAREN Expression RPAREN
    (110) Conversion -> . Type LPAREN Expression RPAREN
    (85) Literal -> . BasicLit
    (91) OperandName -> . IDENTIFIER
    (86) BasicLit -> . INTEGER
    (87) BasicLit -> . FLOAT
    (88) BasicLit -> . IMAGINARY
    (89) BasicLit -> . RUNE
    (90) BasicLit -> . STRING

    LPAREN          shift and go to state 160
    TYPEX           shift and go to state 57
    PLUS            shift and go to state 101
    MINUS           shift and go to state 97
    TIMES           shift and go to state 107
    AMPERS          shift and go to state 112
    NOT             shift and go to state 98
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 111
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 105

    Conversion                     shift and go to state 92
    UnaryOp                        shift and go to state 93
    PrimaryExpr                    shift and go to state 94
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    TypeLit                        shift and go to state 55
    OperandName                    shift and go to state 99
    Type                           shift and go to state 159
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    UnaryExpr                      shift and go to state 106
    Expression                     shift and go to state 161
    PointerType                    shift and go to state 66
    BasicLit                       shift and go to state 113
    Operand                        shift and go to state 114
    FunctionType                   shift and go to state 67

state 110

    (13) ArrayLength -> Expression .
    (132) Expression -> Expression . BinaryOp Expression
    (137) BinaryOp -> . OROR
    (138) BinaryOp -> . AMPAMP
    (139) BinaryOp -> . RelOp
    (140) BinaryOp -> . AddOp
    (141) BinaryOp -> . MulOp
    (142) RelOp -> . EQEQ
    (143) RelOp -> . NOTEQ
    (144) RelOp -> . LESS
    (145) RelOp -> . GREAT
    (146) RelOp -> . LEQ
    (147) RelOp -> . GEQ
    (148) AddOp -> . PLUS
    (149) AddOp -> . MINUS
    (150) AddOp -> . OR
    (151) AddOp -> . CARET
    (152) MulOp -> . TIMES
    (153) MulOp -> . DIVIDE
    (154) MulOp -> . MOD
    (155) MulOp -> . AMPERS
    (156) MulOp -> . LL
    (157) MulOp -> . GG
    (158) MulOp -> . AMPCAR

    RBRACK          reduce using rule 13 (ArrayLength -> Expression .)
    OROR            shift and go to state 162
    AMPAMP          shift and go to state 168
    EQEQ            shift and go to state 167
    NOTEQ           shift and go to state 173
    LESS            shift and go to state 166
    GREAT           shift and go to state 164
    LEQ             shift and go to state 182
    GEQ             shift and go to state 171
    PLUS            shift and go to state 174
    MINUS           shift and go to state 170
    OR              shift and go to state 183
    CARET           shift and go to state 163
    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 177
    MOD             shift and go to state 184
    AMPERS          shift and go to state 181
    LL              shift and go to state 172
    GG              shift and go to state 179
    AMPCAR          shift and go to state 165

    AddOp                          shift and go to state 176
    MulOp                          shift and go to state 169
    RelOp                          shift and go to state 180
    BinaryOp                       shift and go to state 175

state 111

    (87) BasicLit -> FLOAT .

    DOT             reduce using rule 87 (BasicLit -> FLOAT .)
    LBRACK          reduce using rule 87 (BasicLit -> FLOAT .)
    LPAREN          reduce using rule 87 (BasicLit -> FLOAT .)
    OROR            reduce using rule 87 (BasicLit -> FLOAT .)
    AMPAMP          reduce using rule 87 (BasicLit -> FLOAT .)
    EQEQ            reduce using rule 87 (BasicLit -> FLOAT .)
    NOTEQ           reduce using rule 87 (BasicLit -> FLOAT .)
    LESS            reduce using rule 87 (BasicLit -> FLOAT .)
    GREAT           reduce using rule 87 (BasicLit -> FLOAT .)
    LEQ             reduce using rule 87 (BasicLit -> FLOAT .)
    GEQ             reduce using rule 87 (BasicLit -> FLOAT .)
    PLUS            reduce using rule 87 (BasicLit -> FLOAT .)
    MINUS           reduce using rule 87 (BasicLit -> FLOAT .)
    OR              reduce using rule 87 (BasicLit -> FLOAT .)
    CARET           reduce using rule 87 (BasicLit -> FLOAT .)
    TIMES           reduce using rule 87 (BasicLit -> FLOAT .)
    DIVIDE          reduce using rule 87 (BasicLit -> FLOAT .)
    MOD             reduce using rule 87 (BasicLit -> FLOAT .)
    AMPERS          reduce using rule 87 (BasicLit -> FLOAT .)
    LL              reduce using rule 87 (BasicLit -> FLOAT .)
    GG              reduce using rule 87 (BasicLit -> FLOAT .)
    AMPCAR          reduce using rule 87 (BasicLit -> FLOAT .)
    SEMICOL         reduce using rule 87 (BasicLit -> FLOAT .)
    LBRACE          reduce using rule 87 (BasicLit -> FLOAT .)
    COMMA           reduce using rule 87 (BasicLit -> FLOAT .)
    RPAREN          reduce using rule 87 (BasicLit -> FLOAT .)
    PLUSPLUS        reduce using rule 87 (BasicLit -> FLOAT .)
    MINUSMIN        reduce using rule 87 (BasicLit -> FLOAT .)
    PLUSEQ          reduce using rule 87 (BasicLit -> FLOAT .)
    MINUSEQ         reduce using rule 87 (BasicLit -> FLOAT .)
    TIMESEQ         reduce using rule 87 (BasicLit -> FLOAT .)
    DIVIDEEQ        reduce using rule 87 (BasicLit -> FLOAT .)
    MODEQ           reduce using rule 87 (BasicLit -> FLOAT .)
    AMPEQ           reduce using rule 87 (BasicLit -> FLOAT .)
    OREQ            reduce using rule 87 (BasicLit -> FLOAT .)
    CAREQ           reduce using rule 87 (BasicLit -> FLOAT .)
    LLEQ            reduce using rule 87 (BasicLit -> FLOAT .)
    GGEQ            reduce using rule 87 (BasicLit -> FLOAT .)
    EQUAL           reduce using rule 87 (BasicLit -> FLOAT .)
    RBRACK          reduce using rule 87 (BasicLit -> FLOAT .)
    COLON           reduce using rule 87 (BasicLit -> FLOAT .)


state 112

    (162) UnaryOp -> AMPERS .

    PLUS            reduce using rule 162 (UnaryOp -> AMPERS .)
    MINUS           reduce using rule 162 (UnaryOp -> AMPERS .)
    TIMES           reduce using rule 162 (UnaryOp -> AMPERS .)
    AMPERS          reduce using rule 162 (UnaryOp -> AMPERS .)
    NOT             reduce using rule 162 (UnaryOp -> AMPERS .)
    LPAREN          reduce using rule 162 (UnaryOp -> AMPERS .)
    IDENTIFIER      reduce using rule 162 (UnaryOp -> AMPERS .)
    INTEGER         reduce using rule 162 (UnaryOp -> AMPERS .)
    FLOAT           reduce using rule 162 (UnaryOp -> AMPERS .)
    IMAGINARY       reduce using rule 162 (UnaryOp -> AMPERS .)
    RUNE            reduce using rule 162 (UnaryOp -> AMPERS .)
    STRING          reduce using rule 162 (UnaryOp -> AMPERS .)
    TYPEX           reduce using rule 162 (UnaryOp -> AMPERS .)
    LBRACK          reduce using rule 162 (UnaryOp -> AMPERS .)
    STRUCT          reduce using rule 162 (UnaryOp -> AMPERS .)
    FUNC            reduce using rule 162 (UnaryOp -> AMPERS .)


state 113

    (85) Literal -> BasicLit .

    DOT             reduce using rule 85 (Literal -> BasicLit .)
    LBRACK          reduce using rule 85 (Literal -> BasicLit .)
    LPAREN          reduce using rule 85 (Literal -> BasicLit .)
    PLUSPLUS        reduce using rule 85 (Literal -> BasicLit .)
    MINUSMIN        reduce using rule 85 (Literal -> BasicLit .)
    OROR            reduce using rule 85 (Literal -> BasicLit .)
    AMPAMP          reduce using rule 85 (Literal -> BasicLit .)
    EQEQ            reduce using rule 85 (Literal -> BasicLit .)
    NOTEQ           reduce using rule 85 (Literal -> BasicLit .)
    LESS            reduce using rule 85 (Literal -> BasicLit .)
    GREAT           reduce using rule 85 (Literal -> BasicLit .)
    LEQ             reduce using rule 85 (Literal -> BasicLit .)
    GEQ             reduce using rule 85 (Literal -> BasicLit .)
    PLUS            reduce using rule 85 (Literal -> BasicLit .)
    MINUS           reduce using rule 85 (Literal -> BasicLit .)
    OR              reduce using rule 85 (Literal -> BasicLit .)
    CARET           reduce using rule 85 (Literal -> BasicLit .)
    TIMES           reduce using rule 85 (Literal -> BasicLit .)
    DIVIDE          reduce using rule 85 (Literal -> BasicLit .)
    MOD             reduce using rule 85 (Literal -> BasicLit .)
    AMPERS          reduce using rule 85 (Literal -> BasicLit .)
    LL              reduce using rule 85 (Literal -> BasicLit .)
    GG              reduce using rule 85 (Literal -> BasicLit .)
    AMPCAR          reduce using rule 85 (Literal -> BasicLit .)
    COMMA           reduce using rule 85 (Literal -> BasicLit .)
    LBRACE          reduce using rule 85 (Literal -> BasicLit .)
    SEMICOL         reduce using rule 85 (Literal -> BasicLit .)
    PLUSEQ          reduce using rule 85 (Literal -> BasicLit .)
    MINUSEQ         reduce using rule 85 (Literal -> BasicLit .)
    TIMESEQ         reduce using rule 85 (Literal -> BasicLit .)
    DIVIDEEQ        reduce using rule 85 (Literal -> BasicLit .)
    MODEQ           reduce using rule 85 (Literal -> BasicLit .)
    AMPEQ           reduce using rule 85 (Literal -> BasicLit .)
    OREQ            reduce using rule 85 (Literal -> BasicLit .)
    CAREQ           reduce using rule 85 (Literal -> BasicLit .)
    LLEQ            reduce using rule 85 (Literal -> BasicLit .)
    GGEQ            reduce using rule 85 (Literal -> BasicLit .)
    EQUAL           reduce using rule 85 (Literal -> BasicLit .)
    RPAREN          reduce using rule 85 (Literal -> BasicLit .)
    RBRACK          reduce using rule 85 (Literal -> BasicLit .)
    COLON           reduce using rule 85 (Literal -> BasicLit .)


state 114

    (111) PrimaryExpr -> Operand .

    DOT             reduce using rule 111 (PrimaryExpr -> Operand .)
    LBRACK          reduce using rule 111 (PrimaryExpr -> Operand .)
    LPAREN          reduce using rule 111 (PrimaryExpr -> Operand .)
    RPAREN          reduce using rule 111 (PrimaryExpr -> Operand .)
    OROR            reduce using rule 111 (PrimaryExpr -> Operand .)
    AMPAMP          reduce using rule 111 (PrimaryExpr -> Operand .)
    EQEQ            reduce using rule 111 (PrimaryExpr -> Operand .)
    NOTEQ           reduce using rule 111 (PrimaryExpr -> Operand .)
    LESS            reduce using rule 111 (PrimaryExpr -> Operand .)
    GREAT           reduce using rule 111 (PrimaryExpr -> Operand .)
    LEQ             reduce using rule 111 (PrimaryExpr -> Operand .)
    GEQ             reduce using rule 111 (PrimaryExpr -> Operand .)
    PLUS            reduce using rule 111 (PrimaryExpr -> Operand .)
    MINUS           reduce using rule 111 (PrimaryExpr -> Operand .)
    OR              reduce using rule 111 (PrimaryExpr -> Operand .)
    CARET           reduce using rule 111 (PrimaryExpr -> Operand .)
    TIMES           reduce using rule 111 (PrimaryExpr -> Operand .)
    DIVIDE          reduce using rule 111 (PrimaryExpr -> Operand .)
    MOD             reduce using rule 111 (PrimaryExpr -> Operand .)
    AMPERS          reduce using rule 111 (PrimaryExpr -> Operand .)
    LL              reduce using rule 111 (PrimaryExpr -> Operand .)
    GG              reduce using rule 111 (PrimaryExpr -> Operand .)
    AMPCAR          reduce using rule 111 (PrimaryExpr -> Operand .)
    COLON           reduce using rule 111 (PrimaryExpr -> Operand .)
    RBRACK          reduce using rule 111 (PrimaryExpr -> Operand .)
    SEMICOL         reduce using rule 111 (PrimaryExpr -> Operand .)
    LBRACE          reduce using rule 111 (PrimaryExpr -> Operand .)
    COMMA           reduce using rule 111 (PrimaryExpr -> Operand .)
    PLUSPLUS        reduce using rule 111 (PrimaryExpr -> Operand .)
    MINUSMIN        reduce using rule 111 (PrimaryExpr -> Operand .)
    PLUSEQ          reduce using rule 111 (PrimaryExpr -> Operand .)
    MINUSEQ         reduce using rule 111 (PrimaryExpr -> Operand .)
    TIMESEQ         reduce using rule 111 (PrimaryExpr -> Operand .)
    DIVIDEEQ        reduce using rule 111 (PrimaryExpr -> Operand .)
    MODEQ           reduce using rule 111 (PrimaryExpr -> Operand .)
    AMPEQ           reduce using rule 111 (PrimaryExpr -> Operand .)
    OREQ            reduce using rule 111 (PrimaryExpr -> Operand .)
    CAREQ           reduce using rule 111 (PrimaryExpr -> Operand .)
    LLEQ            reduce using rule 111 (PrimaryExpr -> Operand .)
    GGEQ            reduce using rule 111 (PrimaryExpr -> Operand .)
    EQUAL           reduce using rule 111 (PrimaryExpr -> Operand .)


state 115

    (57) IdentifierRep -> IdentifierRep COMMA . IDENTIFIER

    IDENTIFIER      shift and go to state 185


state 116

    (28) Result -> Parameters .

    EQUAL           reduce using rule 28 (Result -> Parameters .)
    SEMICOL         reduce using rule 28 (Result -> Parameters .)
    RPAREN          reduce using rule 28 (Result -> Parameters .)
    LBRACE          reduce using rule 28 (Result -> Parameters .)
    COMMA           reduce using rule 28 (Result -> Parameters .)
    LPAREN          reduce using rule 28 (Result -> Parameters .)
    STRING          reduce using rule 28 (Result -> Parameters .)
    COLON           reduce using rule 28 (Result -> Parameters .)


state 117

    (29) Result -> Type .

    EQUAL           reduce using rule 29 (Result -> Type .)
    SEMICOL         reduce using rule 29 (Result -> Type .)
    RPAREN          reduce using rule 29 (Result -> Type .)
    LBRACE          reduce using rule 29 (Result -> Type .)
    COMMA           reduce using rule 29 (Result -> Type .)
    LPAREN          reduce using rule 29 (Result -> Type .)
    STRING          reduce using rule 29 (Result -> Type .)
    COLON           reduce using rule 29 (Result -> Type .)


state 118

    (25) Signature -> Parameters ResultOpt .

    LBRACE          reduce using rule 25 (Signature -> Parameters ResultOpt .)
    SEMICOL         reduce using rule 25 (Signature -> Parameters ResultOpt .)
    EQUAL           reduce using rule 25 (Signature -> Parameters ResultOpt .)
    RPAREN          reduce using rule 25 (Signature -> Parameters ResultOpt .)
    COMMA           reduce using rule 25 (Signature -> Parameters ResultOpt .)
    LPAREN          reduce using rule 25 (Signature -> Parameters ResultOpt .)
    STRING          reduce using rule 25 (Signature -> Parameters ResultOpt .)
    COLON           reduce using rule 25 (Signature -> Parameters ResultOpt .)


state 119

    (27) ResultOpt -> epsilon .

    EQUAL           reduce using rule 27 (ResultOpt -> epsilon .)
    SEMICOL         reduce using rule 27 (ResultOpt -> epsilon .)
    RPAREN          reduce using rule 27 (ResultOpt -> epsilon .)
    LBRACE          reduce using rule 27 (ResultOpt -> epsilon .)
    COMMA           reduce using rule 27 (ResultOpt -> epsilon .)
    LPAREN          reduce using rule 27 (ResultOpt -> epsilon .)
    STRING          reduce using rule 27 (ResultOpt -> epsilon .)
    COLON           reduce using rule 27 (ResultOpt -> epsilon .)


state 120

    (30) Parameters -> LPAREN . ParameterListOpt RPAREN
    (4) Type -> LPAREN . Type RPAREN
    (31) ParameterListOpt -> . ParametersList
    (32) ParameterListOpt -> . epsilon
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (33) ParametersList -> . Type
    (34) ParametersList -> . IdentifierList Type
    (35) ParametersList -> . ParameterDeclCommaRep
    (260) epsilon -> .
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (56) IdentifierList -> . IDENTIFIER IdentifierRep
    (36) ParameterDeclCommaRep -> . ParameterDeclCommaRep COMMA ParameterDecl
    (37) ParameterDeclCommaRep -> . ParameterDecl COMMA ParameterDecl
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature
    (38) ParameterDecl -> . IdentifierList Type
    (39) ParameterDecl -> . Type

    LPAREN          shift and go to state 61
    RPAREN          reduce using rule 260 (epsilon -> .)
    TYPEX           shift and go to state 57
    IDENTIFIER      shift and go to state 34
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    TypeLit                        shift and go to state 55
    IdentifierList                 shift and go to state 126
    ParameterListOpt               shift and go to state 125
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    epsilon                        shift and go to state 131
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    ParametersList                 shift and go to state 129
    Type                           shift and go to state 186
    ParameterDeclCommaRep          shift and go to state 127
    ParameterDecl                  shift and go to state 130

state 121

    (26) ResultOpt -> Result .

    EQUAL           reduce using rule 26 (ResultOpt -> Result .)
    SEMICOL         reduce using rule 26 (ResultOpt -> Result .)
    RPAREN          reduce using rule 26 (ResultOpt -> Result .)
    LBRACE          reduce using rule 26 (ResultOpt -> Result .)
    COMMA           reduce using rule 26 (ResultOpt -> Result .)
    LPAREN          reduce using rule 26 (ResultOpt -> Result .)
    STRING          reduce using rule 26 (ResultOpt -> Result .)
    COLON           reduce using rule 26 (ResultOpt -> Result .)


state 122

    (79) Function -> Signature FunctionBody .

    SEMICOL         reduce using rule 79 (Function -> Signature FunctionBody .)


state 123

    (40) Block -> LBRACE . StatementList RBRACE
    (41) StatementList -> . StatementRep
    (42) StatementRep -> . StatementRep Statement SEMICOL
    (43) StatementRep -> . epsilon
    (260) epsilon -> .

    RETURN          reduce using rule 260 (epsilon -> .)
    BREAK           reduce using rule 260 (epsilon -> .)
    CONTINUE        reduce using rule 260 (epsilon -> .)
    GOTO            reduce using rule 260 (epsilon -> .)
    LBRACE          reduce using rule 260 (epsilon -> .)
    IF              reduce using rule 260 (epsilon -> .)
    FOR             reduce using rule 260 (epsilon -> .)
    CONST           reduce using rule 260 (epsilon -> .)
    TYPE            reduce using rule 260 (epsilon -> .)
    VAR             reduce using rule 260 (epsilon -> .)
    IDENTIFIER      reduce using rule 260 (epsilon -> .)
    SWITCH          reduce using rule 260 (epsilon -> .)
    PLUS            reduce using rule 260 (epsilon -> .)
    MINUS           reduce using rule 260 (epsilon -> .)
    TIMES           reduce using rule 260 (epsilon -> .)
    AMPERS          reduce using rule 260 (epsilon -> .)
    NOT             reduce using rule 260 (epsilon -> .)
    LPAREN          reduce using rule 260 (epsilon -> .)
    INTEGER         reduce using rule 260 (epsilon -> .)
    FLOAT           reduce using rule 260 (epsilon -> .)
    IMAGINARY       reduce using rule 260 (epsilon -> .)
    RUNE            reduce using rule 260 (epsilon -> .)
    STRING          reduce using rule 260 (epsilon -> .)
    TYPEX           reduce using rule 260 (epsilon -> .)
    LBRACK          reduce using rule 260 (epsilon -> .)
    STRUCT          reduce using rule 260 (epsilon -> .)
    FUNC            reduce using rule 260 (epsilon -> .)
    SEMICOL         reduce using rule 260 (epsilon -> .)
    RBRACE          reduce using rule 260 (epsilon -> .)

    epsilon                        shift and go to state 188
    StatementRep                   shift and go to state 187
    StatementList                  shift and go to state 189

state 124

    (80) FunctionBody -> Block .

    SEMICOL         reduce using rule 80 (FunctionBody -> Block .)


state 125

    (30) Parameters -> LPAREN ParameterListOpt . RPAREN

    RPAREN          shift and go to state 190


state 126

    (34) ParametersList -> IdentifierList . Type
    (38) ParameterDecl -> IdentifierList . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 61
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    Type                           shift and go to state 191
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    TypeLit                        shift and go to state 55

state 127

    (35) ParametersList -> ParameterDeclCommaRep .
    (36) ParameterDeclCommaRep -> ParameterDeclCommaRep . COMMA ParameterDecl

    RPAREN          reduce using rule 35 (ParametersList -> ParameterDeclCommaRep .)
    COMMA           shift and go to state 192


state 128

    (33) ParametersList -> Type .
    (39) ParameterDecl -> Type .

    RPAREN          reduce using rule 33 (ParametersList -> Type .)
    COMMA           reduce using rule 39 (ParameterDecl -> Type .)


state 129

    (31) ParameterListOpt -> ParametersList .

    RPAREN          reduce using rule 31 (ParameterListOpt -> ParametersList .)


state 130

    (37) ParameterDeclCommaRep -> ParameterDecl . COMMA ParameterDecl

    COMMA           shift and go to state 193


state 131

    (32) ParameterListOpt -> epsilon .

    RPAREN          reduce using rule 32 (ParameterListOpt -> epsilon .)


state 132

    (68) VarDecl -> VAR LPAREN VarSpecRep RPAREN .

    SEMICOL         reduce using rule 68 (VarDecl -> VAR LPAREN VarSpecRep RPAREN .)


state 133

    (69) VarSpecRep -> VarSpecRep VarSpec . SEMICOL

    SEMICOL         shift and go to state 194


state 134

    (72) VarSpec -> IdentifierList EQUAL ExpressionList .

    SEMICOL         reduce using rule 72 (VarSpec -> IdentifierList EQUAL ExpressionList .)


state 135

    (128) ExpressionList -> Expression . ExpressionRep
    (132) Expression -> Expression . BinaryOp Expression
    (129) ExpressionRep -> . ExpressionRep COMMA Expression
    (130) ExpressionRep -> . epsilon
    (137) BinaryOp -> . OROR
    (138) BinaryOp -> . AMPAMP
    (139) BinaryOp -> . RelOp
    (140) BinaryOp -> . AddOp
    (141) BinaryOp -> . MulOp
    (260) epsilon -> .
    (142) RelOp -> . EQEQ
    (143) RelOp -> . NOTEQ
    (144) RelOp -> . LESS
    (145) RelOp -> . GREAT
    (146) RelOp -> . LEQ
    (147) RelOp -> . GEQ
    (148) AddOp -> . PLUS
    (149) AddOp -> . MINUS
    (150) AddOp -> . OR
    (151) AddOp -> . CARET
    (152) MulOp -> . TIMES
    (153) MulOp -> . DIVIDE
    (154) MulOp -> . MOD
    (155) MulOp -> . AMPERS
    (156) MulOp -> . LL
    (157) MulOp -> . GG
    (158) MulOp -> . AMPCAR

    OROR            shift and go to state 162
    AMPAMP          shift and go to state 168
    COMMA           reduce using rule 260 (epsilon -> .)
    SEMICOL         reduce using rule 260 (epsilon -> .)
    RPAREN          reduce using rule 260 (epsilon -> .)
    LBRACE          reduce using rule 260 (epsilon -> .)
    COLON           reduce using rule 260 (epsilon -> .)
    EQEQ            shift and go to state 167
    NOTEQ           shift and go to state 173
    LESS            shift and go to state 166
    GREAT           shift and go to state 164
    LEQ             shift and go to state 182
    GEQ             shift and go to state 171
    PLUS            shift and go to state 174
    MINUS           shift and go to state 170
    OR              shift and go to state 183
    CARET           shift and go to state 163
    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 177
    MOD             shift and go to state 184
    AMPERS          shift and go to state 181
    LL              shift and go to state 172
    GG              shift and go to state 179
    AMPCAR          shift and go to state 165

    AddOp                          shift and go to state 176
    ExpressionRep                  shift and go to state 195
    RelOp                          shift and go to state 180
    epsilon                        shift and go to state 196
    BinaryOp                       shift and go to state 175
    MulOp                          shift and go to state 169

state 136

    (73) ExpressionListOpt -> EQUAL . ExpressionList
    (128) ExpressionList -> . Expression ExpressionRep
    (131) Expression -> . UnaryExpr
    (132) Expression -> . Expression BinaryOp Expression
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (111) PrimaryExpr -> . Operand
    (112) PrimaryExpr -> . Conversion
    (113) PrimaryExpr -> . PrimaryExpr Selector
    (114) PrimaryExpr -> . PrimaryExpr Index
    (115) PrimaryExpr -> . PrimaryExpr Slice
    (116) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (117) PrimaryExpr -> . PrimaryExpr Arguments
    (159) UnaryOp -> . PLUS
    (160) UnaryOp -> . MINUS
    (161) UnaryOp -> . TIMES
    (162) UnaryOp -> . AMPERS
    (163) UnaryOp -> . NOT
    (82) Operand -> . Literal
    (83) Operand -> . OperandName
    (84) Operand -> . LPAREN Expression RPAREN
    (110) Conversion -> . Type LPAREN Expression RPAREN
    (85) Literal -> . BasicLit
    (91) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (86) BasicLit -> . INTEGER
    (87) BasicLit -> . FLOAT
    (88) BasicLit -> . IMAGINARY
    (89) BasicLit -> . RUNE
    (90) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 101
    MINUS           shift and go to state 97
    TIMES           shift and go to state 107
    AMPERS          shift and go to state 112
    NOT             shift and go to state 98
    LPAREN          shift and go to state 109
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 111
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 105
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    UnaryOp                        shift and go to state 93
    PrimaryExpr                    shift and go to state 94
    Conversion                     shift and go to state 92
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    Type                           shift and go to state 100
    OperandName                    shift and go to state 99
    BasicLit                       shift and go to state 113
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    UnaryExpr                      shift and go to state 106
    ExpressionList                 shift and go to state 197
    Expression                     shift and go to state 135
    PointerType                    shift and go to state 66
    TypeLit                        shift and go to state 55
    Operand                        shift and go to state 114
    FunctionType                   shift and go to state 67

state 137

    (74) ExpressionListOpt -> epsilon .

    SEMICOL         reduce using rule 74 (ExpressionListOpt -> epsilon .)


state 138

    (71) VarSpec -> IdentifierList Type ExpressionListOpt .

    SEMICOL         reduce using rule 71 (VarSpec -> IdentifierList Type ExpressionListOpt .)


state 139

    (60) TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN .

    SEMICOL         reduce using rule 60 (TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN .)


state 140

    (61) TypeSpecRep -> TypeSpecRep TypeSpec . SEMICOL

    SEMICOL         shift and go to state 198


state 141

    (65) AliasDecl -> IDENTIFIER EQUAL Type .

    SEMICOL         reduce using rule 65 (AliasDecl -> IDENTIFIER EQUAL Type .)


state 142

    (253) ImportSpecRep -> ImportSpecRep ImportSpec SEMICOL .

    RPAREN          reduce using rule 253 (ImportSpecRep -> ImportSpecRep ImportSpec SEMICOL .)
    DOT             reduce using rule 253 (ImportSpecRep -> ImportSpecRep ImportSpec SEMICOL .)
    IDENTIFIER      reduce using rule 253 (ImportSpecRep -> ImportSpecRep ImportSpec SEMICOL .)
    STRING          reduce using rule 253 (ImportSpecRep -> ImportSpecRep ImportSpec SEMICOL .)


state 143

    (51) ConstSpecRep -> ConstSpecRep ConstSpec SEMICOL .

    RPAREN          reduce using rule 51 (ConstSpecRep -> ConstSpecRep ConstSpec SEMICOL .)
    IDENTIFIER      reduce using rule 51 (ConstSpecRep -> ConstSpecRep ConstSpec SEMICOL .)


state 144

    (4) Type -> LPAREN Type RPAREN .

    LPAREN          reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    RPAREN          reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    EQUAL           reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    SEMICOL         reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    LBRACE          reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    COMMA           reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    STRING          reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    COLON           reduce using rule 4 (Type -> LPAREN Type RPAREN .)


state 145

    (54) TypeExprListOpt -> TypeOpt EQUAL ExpressionList .

    SEMICOL         reduce using rule 54 (TypeExprListOpt -> TypeOpt EQUAL ExpressionList .)


state 146

    (15) StructType -> STRUCT LBRACE FieldDeclRep . RBRACE
    (16) FieldDeclRep -> FieldDeclRep . FieldDecl SEMICOL
    (18) FieldDecl -> . IdentifierList Type TagOpt
    (56) IdentifierList -> . IDENTIFIER IdentifierRep

    RBRACE          shift and go to state 201
    IDENTIFIER      shift and go to state 34

    FieldDecl                      shift and go to state 199
    IdentifierList                 shift and go to state 200

state 147

    (17) FieldDeclRep -> epsilon .

    RBRACE          reduce using rule 17 (FieldDeclRep -> epsilon .)
    IDENTIFIER      reduce using rule 17 (FieldDeclRep -> epsilon .)


state 148

    (136) UnaryExpr -> UnaryOp UnaryExpr .

    RPAREN          reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    OROR            reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    AMPAMP          reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    EQEQ            reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    NOTEQ           reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    LESS            reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    GREAT           reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    LEQ             reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    GEQ             reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    PLUS            reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    MINUS           reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    OR              reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    CARET           reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    TIMES           reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    DIVIDE          reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    MOD             reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    AMPERS          reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    LL              reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    GG              reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    AMPCAR          reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    COMMA           reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    SEMICOL         reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    LBRACE          reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    PLUSPLUS        reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    MINUSMIN        reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    PLUSEQ          reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    MINUSEQ         reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    TIMESEQ         reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    DIVIDEEQ        reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    MODEQ           reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    AMPEQ           reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    OREQ            reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    CAREQ           reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    LLEQ            reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    GGEQ            reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    EQUAL           reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    RBRACK          reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    COLON           reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)


state 149

    (114) PrimaryExpr -> PrimaryExpr Index .

    DOT             reduce using rule 114 (PrimaryExpr -> PrimaryExpr Index .)
    LBRACK          reduce using rule 114 (PrimaryExpr -> PrimaryExpr Index .)
    LPAREN          reduce using rule 114 (PrimaryExpr -> PrimaryExpr Index .)
    RPAREN          reduce using rule 114 (PrimaryExpr -> PrimaryExpr Index .)
    OROR            reduce using rule 114 (PrimaryExpr -> PrimaryExpr Index .)
    AMPAMP          reduce using rule 114 (PrimaryExpr -> PrimaryExpr Index .)
    EQEQ            reduce using rule 114 (PrimaryExpr -> PrimaryExpr Index .)
    NOTEQ           reduce using rule 114 (PrimaryExpr -> PrimaryExpr Index .)
    LESS            reduce using rule 114 (PrimaryExpr -> PrimaryExpr Index .)
    GREAT           reduce using rule 114 (PrimaryExpr -> PrimaryExpr Index .)
    LEQ             reduce using rule 114 (PrimaryExpr -> PrimaryExpr Index .)
    GEQ             reduce using rule 114 (PrimaryExpr -> PrimaryExpr Index .)
    PLUS            reduce using rule 114 (PrimaryExpr -> PrimaryExpr Index .)
    MINUS           reduce using rule 114 (PrimaryExpr -> PrimaryExpr Index .)
    OR              reduce using rule 114 (PrimaryExpr -> PrimaryExpr Index .)
    CARET           reduce using rule 114 (PrimaryExpr -> PrimaryExpr Index .)
    TIMES           reduce using rule 114 (PrimaryExpr -> PrimaryExpr Index .)
    DIVIDE          reduce using rule 114 (PrimaryExpr -> PrimaryExpr Index .)
    MOD             reduce using rule 114 (PrimaryExpr -> PrimaryExpr Index .)
    AMPERS          reduce using rule 114 (PrimaryExpr -> PrimaryExpr Index .)
    LL              reduce using rule 114 (PrimaryExpr -> PrimaryExpr Index .)
    GG              reduce using rule 114 (PrimaryExpr -> PrimaryExpr Index .)
    AMPCAR          reduce using rule 114 (PrimaryExpr -> PrimaryExpr Index .)
    COLON           reduce using rule 114 (PrimaryExpr -> PrimaryExpr Index .)
    RBRACK          reduce using rule 114 (PrimaryExpr -> PrimaryExpr Index .)
    SEMICOL         reduce using rule 114 (PrimaryExpr -> PrimaryExpr Index .)
    LBRACE          reduce using rule 114 (PrimaryExpr -> PrimaryExpr Index .)
    COMMA           reduce using rule 114 (PrimaryExpr -> PrimaryExpr Index .)
    PLUSPLUS        reduce using rule 114 (PrimaryExpr -> PrimaryExpr Index .)
    MINUSMIN        reduce using rule 114 (PrimaryExpr -> PrimaryExpr Index .)
    PLUSEQ          reduce using rule 114 (PrimaryExpr -> PrimaryExpr Index .)
    MINUSEQ         reduce using rule 114 (PrimaryExpr -> PrimaryExpr Index .)
    TIMESEQ         reduce using rule 114 (PrimaryExpr -> PrimaryExpr Index .)
    DIVIDEEQ        reduce using rule 114 (PrimaryExpr -> PrimaryExpr Index .)
    MODEQ           reduce using rule 114 (PrimaryExpr -> PrimaryExpr Index .)
    AMPEQ           reduce using rule 114 (PrimaryExpr -> PrimaryExpr Index .)
    OREQ            reduce using rule 114 (PrimaryExpr -> PrimaryExpr Index .)
    CAREQ           reduce using rule 114 (PrimaryExpr -> PrimaryExpr Index .)
    LLEQ            reduce using rule 114 (PrimaryExpr -> PrimaryExpr Index .)
    GGEQ            reduce using rule 114 (PrimaryExpr -> PrimaryExpr Index .)
    EQUAL           reduce using rule 114 (PrimaryExpr -> PrimaryExpr Index .)


state 150

    (115) PrimaryExpr -> PrimaryExpr Slice .

    DOT             reduce using rule 115 (PrimaryExpr -> PrimaryExpr Slice .)
    LBRACK          reduce using rule 115 (PrimaryExpr -> PrimaryExpr Slice .)
    LPAREN          reduce using rule 115 (PrimaryExpr -> PrimaryExpr Slice .)
    RPAREN          reduce using rule 115 (PrimaryExpr -> PrimaryExpr Slice .)
    OROR            reduce using rule 115 (PrimaryExpr -> PrimaryExpr Slice .)
    AMPAMP          reduce using rule 115 (PrimaryExpr -> PrimaryExpr Slice .)
    EQEQ            reduce using rule 115 (PrimaryExpr -> PrimaryExpr Slice .)
    NOTEQ           reduce using rule 115 (PrimaryExpr -> PrimaryExpr Slice .)
    LESS            reduce using rule 115 (PrimaryExpr -> PrimaryExpr Slice .)
    GREAT           reduce using rule 115 (PrimaryExpr -> PrimaryExpr Slice .)
    LEQ             reduce using rule 115 (PrimaryExpr -> PrimaryExpr Slice .)
    GEQ             reduce using rule 115 (PrimaryExpr -> PrimaryExpr Slice .)
    PLUS            reduce using rule 115 (PrimaryExpr -> PrimaryExpr Slice .)
    MINUS           reduce using rule 115 (PrimaryExpr -> PrimaryExpr Slice .)
    OR              reduce using rule 115 (PrimaryExpr -> PrimaryExpr Slice .)
    CARET           reduce using rule 115 (PrimaryExpr -> PrimaryExpr Slice .)
    TIMES           reduce using rule 115 (PrimaryExpr -> PrimaryExpr Slice .)
    DIVIDE          reduce using rule 115 (PrimaryExpr -> PrimaryExpr Slice .)
    MOD             reduce using rule 115 (PrimaryExpr -> PrimaryExpr Slice .)
    AMPERS          reduce using rule 115 (PrimaryExpr -> PrimaryExpr Slice .)
    LL              reduce using rule 115 (PrimaryExpr -> PrimaryExpr Slice .)
    GG              reduce using rule 115 (PrimaryExpr -> PrimaryExpr Slice .)
    AMPCAR          reduce using rule 115 (PrimaryExpr -> PrimaryExpr Slice .)
    COLON           reduce using rule 115 (PrimaryExpr -> PrimaryExpr Slice .)
    RBRACK          reduce using rule 115 (PrimaryExpr -> PrimaryExpr Slice .)
    SEMICOL         reduce using rule 115 (PrimaryExpr -> PrimaryExpr Slice .)
    LBRACE          reduce using rule 115 (PrimaryExpr -> PrimaryExpr Slice .)
    COMMA           reduce using rule 115 (PrimaryExpr -> PrimaryExpr Slice .)
    PLUSPLUS        reduce using rule 115 (PrimaryExpr -> PrimaryExpr Slice .)
    MINUSMIN        reduce using rule 115 (PrimaryExpr -> PrimaryExpr Slice .)
    PLUSEQ          reduce using rule 115 (PrimaryExpr -> PrimaryExpr Slice .)
    MINUSEQ         reduce using rule 115 (PrimaryExpr -> PrimaryExpr Slice .)
    TIMESEQ         reduce using rule 115 (PrimaryExpr -> PrimaryExpr Slice .)
    DIVIDEEQ        reduce using rule 115 (PrimaryExpr -> PrimaryExpr Slice .)
    MODEQ           reduce using rule 115 (PrimaryExpr -> PrimaryExpr Slice .)
    AMPEQ           reduce using rule 115 (PrimaryExpr -> PrimaryExpr Slice .)
    OREQ            reduce using rule 115 (PrimaryExpr -> PrimaryExpr Slice .)
    CAREQ           reduce using rule 115 (PrimaryExpr -> PrimaryExpr Slice .)
    LLEQ            reduce using rule 115 (PrimaryExpr -> PrimaryExpr Slice .)
    GGEQ            reduce using rule 115 (PrimaryExpr -> PrimaryExpr Slice .)
    EQUAL           reduce using rule 115 (PrimaryExpr -> PrimaryExpr Slice .)


state 151

    (119) Index -> LBRACK . Expression RBRACK
    (120) Slice -> LBRACK . ExpressionOpt COLON ExpressionOpt RBRACK
    (121) Slice -> LBRACK . ExpressionOpt COLON Expression COLON Expression RBRACK
    (131) Expression -> . UnaryExpr
    (132) Expression -> . Expression BinaryOp Expression
    (133) ExpressionOpt -> . Expression
    (134) ExpressionOpt -> . epsilon
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (260) epsilon -> .
    (111) PrimaryExpr -> . Operand
    (112) PrimaryExpr -> . Conversion
    (113) PrimaryExpr -> . PrimaryExpr Selector
    (114) PrimaryExpr -> . PrimaryExpr Index
    (115) PrimaryExpr -> . PrimaryExpr Slice
    (116) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (117) PrimaryExpr -> . PrimaryExpr Arguments
    (159) UnaryOp -> . PLUS
    (160) UnaryOp -> . MINUS
    (161) UnaryOp -> . TIMES
    (162) UnaryOp -> . AMPERS
    (163) UnaryOp -> . NOT
    (82) Operand -> . Literal
    (83) Operand -> . OperandName
    (84) Operand -> . LPAREN Expression RPAREN
    (110) Conversion -> . Type LPAREN Expression RPAREN
    (85) Literal -> . BasicLit
    (91) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (86) BasicLit -> . INTEGER
    (87) BasicLit -> . FLOAT
    (88) BasicLit -> . IMAGINARY
    (89) BasicLit -> . RUNE
    (90) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    COLON           reduce using rule 260 (epsilon -> .)
    PLUS            shift and go to state 101
    MINUS           shift and go to state 97
    TIMES           shift and go to state 107
    AMPERS          shift and go to state 112
    NOT             shift and go to state 98
    LPAREN          shift and go to state 109
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 111
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 105
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 92
    UnaryOp                        shift and go to state 93
    PrimaryExpr                    shift and go to state 94
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    Type                           shift and go to state 100
    OperandName                    shift and go to state 99
    BasicLit                       shift and go to state 113
    TypeName                       shift and go to state 56
    ExpressionOpt                  shift and go to state 202
    StructType                     shift and go to state 58
    epsilon                        shift and go to state 203
    UnaryExpr                      shift and go to state 106
    Expression                     shift and go to state 204
    PointerType                    shift and go to state 66
    TypeLit                        shift and go to state 55
    Operand                        shift and go to state 114
    FunctionType                   shift and go to state 67

state 152

    (113) PrimaryExpr -> PrimaryExpr Selector .

    DOT             reduce using rule 113 (PrimaryExpr -> PrimaryExpr Selector .)
    LBRACK          reduce using rule 113 (PrimaryExpr -> PrimaryExpr Selector .)
    LPAREN          reduce using rule 113 (PrimaryExpr -> PrimaryExpr Selector .)
    RPAREN          reduce using rule 113 (PrimaryExpr -> PrimaryExpr Selector .)
    OROR            reduce using rule 113 (PrimaryExpr -> PrimaryExpr Selector .)
    AMPAMP          reduce using rule 113 (PrimaryExpr -> PrimaryExpr Selector .)
    EQEQ            reduce using rule 113 (PrimaryExpr -> PrimaryExpr Selector .)
    NOTEQ           reduce using rule 113 (PrimaryExpr -> PrimaryExpr Selector .)
    LESS            reduce using rule 113 (PrimaryExpr -> PrimaryExpr Selector .)
    GREAT           reduce using rule 113 (PrimaryExpr -> PrimaryExpr Selector .)
    LEQ             reduce using rule 113 (PrimaryExpr -> PrimaryExpr Selector .)
    GEQ             reduce using rule 113 (PrimaryExpr -> PrimaryExpr Selector .)
    PLUS            reduce using rule 113 (PrimaryExpr -> PrimaryExpr Selector .)
    MINUS           reduce using rule 113 (PrimaryExpr -> PrimaryExpr Selector .)
    OR              reduce using rule 113 (PrimaryExpr -> PrimaryExpr Selector .)
    CARET           reduce using rule 113 (PrimaryExpr -> PrimaryExpr Selector .)
    TIMES           reduce using rule 113 (PrimaryExpr -> PrimaryExpr Selector .)
    DIVIDE          reduce using rule 113 (PrimaryExpr -> PrimaryExpr Selector .)
    MOD             reduce using rule 113 (PrimaryExpr -> PrimaryExpr Selector .)
    AMPERS          reduce using rule 113 (PrimaryExpr -> PrimaryExpr Selector .)
    LL              reduce using rule 113 (PrimaryExpr -> PrimaryExpr Selector .)
    GG              reduce using rule 113 (PrimaryExpr -> PrimaryExpr Selector .)
    AMPCAR          reduce using rule 113 (PrimaryExpr -> PrimaryExpr Selector .)
    COLON           reduce using rule 113 (PrimaryExpr -> PrimaryExpr Selector .)
    RBRACK          reduce using rule 113 (PrimaryExpr -> PrimaryExpr Selector .)
    SEMICOL         reduce using rule 113 (PrimaryExpr -> PrimaryExpr Selector .)
    LBRACE          reduce using rule 113 (PrimaryExpr -> PrimaryExpr Selector .)
    COMMA           reduce using rule 113 (PrimaryExpr -> PrimaryExpr Selector .)
    PLUSPLUS        reduce using rule 113 (PrimaryExpr -> PrimaryExpr Selector .)
    MINUSMIN        reduce using rule 113 (PrimaryExpr -> PrimaryExpr Selector .)
    PLUSEQ          reduce using rule 113 (PrimaryExpr -> PrimaryExpr Selector .)
    MINUSEQ         reduce using rule 113 (PrimaryExpr -> PrimaryExpr Selector .)
    TIMESEQ         reduce using rule 113 (PrimaryExpr -> PrimaryExpr Selector .)
    DIVIDEEQ        reduce using rule 113 (PrimaryExpr -> PrimaryExpr Selector .)
    MODEQ           reduce using rule 113 (PrimaryExpr -> PrimaryExpr Selector .)
    AMPEQ           reduce using rule 113 (PrimaryExpr -> PrimaryExpr Selector .)
    OREQ            reduce using rule 113 (PrimaryExpr -> PrimaryExpr Selector .)
    CAREQ           reduce using rule 113 (PrimaryExpr -> PrimaryExpr Selector .)
    LLEQ            reduce using rule 113 (PrimaryExpr -> PrimaryExpr Selector .)
    GGEQ            reduce using rule 113 (PrimaryExpr -> PrimaryExpr Selector .)
    EQUAL           reduce using rule 113 (PrimaryExpr -> PrimaryExpr Selector .)


state 153

    (116) PrimaryExpr -> PrimaryExpr TypeAssertion .

    DOT             reduce using rule 116 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LBRACK          reduce using rule 116 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LPAREN          reduce using rule 116 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    RPAREN          reduce using rule 116 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    OROR            reduce using rule 116 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    AMPAMP          reduce using rule 116 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    EQEQ            reduce using rule 116 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    NOTEQ           reduce using rule 116 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LESS            reduce using rule 116 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    GREAT           reduce using rule 116 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LEQ             reduce using rule 116 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    GEQ             reduce using rule 116 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    PLUS            reduce using rule 116 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    MINUS           reduce using rule 116 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    OR              reduce using rule 116 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    CARET           reduce using rule 116 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    TIMES           reduce using rule 116 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    DIVIDE          reduce using rule 116 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    MOD             reduce using rule 116 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    AMPERS          reduce using rule 116 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LL              reduce using rule 116 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    GG              reduce using rule 116 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    AMPCAR          reduce using rule 116 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    COLON           reduce using rule 116 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    RBRACK          reduce using rule 116 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    SEMICOL         reduce using rule 116 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LBRACE          reduce using rule 116 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    COMMA           reduce using rule 116 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    PLUSPLUS        reduce using rule 116 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    MINUSMIN        reduce using rule 116 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    PLUSEQ          reduce using rule 116 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    MINUSEQ         reduce using rule 116 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    TIMESEQ         reduce using rule 116 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    DIVIDEEQ        reduce using rule 116 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    MODEQ           reduce using rule 116 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    AMPEQ           reduce using rule 116 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    OREQ            reduce using rule 116 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    CAREQ           reduce using rule 116 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LLEQ            reduce using rule 116 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    GGEQ            reduce using rule 116 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    EQUAL           reduce using rule 116 (PrimaryExpr -> PrimaryExpr TypeAssertion .)


state 154

    (117) PrimaryExpr -> PrimaryExpr Arguments .

    DOT             reduce using rule 117 (PrimaryExpr -> PrimaryExpr Arguments .)
    LBRACK          reduce using rule 117 (PrimaryExpr -> PrimaryExpr Arguments .)
    LPAREN          reduce using rule 117 (PrimaryExpr -> PrimaryExpr Arguments .)
    RPAREN          reduce using rule 117 (PrimaryExpr -> PrimaryExpr Arguments .)
    OROR            reduce using rule 117 (PrimaryExpr -> PrimaryExpr Arguments .)
    AMPAMP          reduce using rule 117 (PrimaryExpr -> PrimaryExpr Arguments .)
    EQEQ            reduce using rule 117 (PrimaryExpr -> PrimaryExpr Arguments .)
    NOTEQ           reduce using rule 117 (PrimaryExpr -> PrimaryExpr Arguments .)
    LESS            reduce using rule 117 (PrimaryExpr -> PrimaryExpr Arguments .)
    GREAT           reduce using rule 117 (PrimaryExpr -> PrimaryExpr Arguments .)
    LEQ             reduce using rule 117 (PrimaryExpr -> PrimaryExpr Arguments .)
    GEQ             reduce using rule 117 (PrimaryExpr -> PrimaryExpr Arguments .)
    PLUS            reduce using rule 117 (PrimaryExpr -> PrimaryExpr Arguments .)
    MINUS           reduce using rule 117 (PrimaryExpr -> PrimaryExpr Arguments .)
    OR              reduce using rule 117 (PrimaryExpr -> PrimaryExpr Arguments .)
    CARET           reduce using rule 117 (PrimaryExpr -> PrimaryExpr Arguments .)
    TIMES           reduce using rule 117 (PrimaryExpr -> PrimaryExpr Arguments .)
    DIVIDE          reduce using rule 117 (PrimaryExpr -> PrimaryExpr Arguments .)
    MOD             reduce using rule 117 (PrimaryExpr -> PrimaryExpr Arguments .)
    AMPERS          reduce using rule 117 (PrimaryExpr -> PrimaryExpr Arguments .)
    LL              reduce using rule 117 (PrimaryExpr -> PrimaryExpr Arguments .)
    GG              reduce using rule 117 (PrimaryExpr -> PrimaryExpr Arguments .)
    AMPCAR          reduce using rule 117 (PrimaryExpr -> PrimaryExpr Arguments .)
    COLON           reduce using rule 117 (PrimaryExpr -> PrimaryExpr Arguments .)
    RBRACK          reduce using rule 117 (PrimaryExpr -> PrimaryExpr Arguments .)
    SEMICOL         reduce using rule 117 (PrimaryExpr -> PrimaryExpr Arguments .)
    LBRACE          reduce using rule 117 (PrimaryExpr -> PrimaryExpr Arguments .)
    COMMA           reduce using rule 117 (PrimaryExpr -> PrimaryExpr Arguments .)
    PLUSPLUS        reduce using rule 117 (PrimaryExpr -> PrimaryExpr Arguments .)
    MINUSMIN        reduce using rule 117 (PrimaryExpr -> PrimaryExpr Arguments .)
    PLUSEQ          reduce using rule 117 (PrimaryExpr -> PrimaryExpr Arguments .)
    MINUSEQ         reduce using rule 117 (PrimaryExpr -> PrimaryExpr Arguments .)
    TIMESEQ         reduce using rule 117 (PrimaryExpr -> PrimaryExpr Arguments .)
    DIVIDEEQ        reduce using rule 117 (PrimaryExpr -> PrimaryExpr Arguments .)
    MODEQ           reduce using rule 117 (PrimaryExpr -> PrimaryExpr Arguments .)
    AMPEQ           reduce using rule 117 (PrimaryExpr -> PrimaryExpr Arguments .)
    OREQ            reduce using rule 117 (PrimaryExpr -> PrimaryExpr Arguments .)
    CAREQ           reduce using rule 117 (PrimaryExpr -> PrimaryExpr Arguments .)
    LLEQ            reduce using rule 117 (PrimaryExpr -> PrimaryExpr Arguments .)
    GGEQ            reduce using rule 117 (PrimaryExpr -> PrimaryExpr Arguments .)
    EQUAL           reduce using rule 117 (PrimaryExpr -> PrimaryExpr Arguments .)


state 155

    (123) Arguments -> LPAREN . ExpressionListTypeOpt RPAREN
    (124) ExpressionListTypeOpt -> . ExpressionList
    (125) ExpressionListTypeOpt -> . epsilon
    (128) ExpressionList -> . Expression ExpressionRep
    (260) epsilon -> .
    (131) Expression -> . UnaryExpr
    (132) Expression -> . Expression BinaryOp Expression
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (111) PrimaryExpr -> . Operand
    (112) PrimaryExpr -> . Conversion
    (113) PrimaryExpr -> . PrimaryExpr Selector
    (114) PrimaryExpr -> . PrimaryExpr Index
    (115) PrimaryExpr -> . PrimaryExpr Slice
    (116) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (117) PrimaryExpr -> . PrimaryExpr Arguments
    (159) UnaryOp -> . PLUS
    (160) UnaryOp -> . MINUS
    (161) UnaryOp -> . TIMES
    (162) UnaryOp -> . AMPERS
    (163) UnaryOp -> . NOT
    (82) Operand -> . Literal
    (83) Operand -> . OperandName
    (84) Operand -> . LPAREN Expression RPAREN
    (110) Conversion -> . Type LPAREN Expression RPAREN
    (85) Literal -> . BasicLit
    (91) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (86) BasicLit -> . INTEGER
    (87) BasicLit -> . FLOAT
    (88) BasicLit -> . IMAGINARY
    (89) BasicLit -> . RUNE
    (90) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    RPAREN          reduce using rule 260 (epsilon -> .)
    PLUS            shift and go to state 101
    MINUS           shift and go to state 97
    TIMES           shift and go to state 107
    AMPERS          shift and go to state 112
    NOT             shift and go to state 98
    LPAREN          shift and go to state 109
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 111
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 105
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    UnaryOp                        shift and go to state 93
    Conversion                     shift and go to state 92
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    Operand                        shift and go to state 114
    Type                           shift and go to state 100
    OperandName                    shift and go to state 99
    BasicLit                       shift and go to state 113
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    epsilon                        shift and go to state 205
    UnaryExpr                      shift and go to state 106
    ExpressionList                 shift and go to state 206
    Expression                     shift and go to state 135
    PointerType                    shift and go to state 66
    TypeLit                        shift and go to state 55
    PrimaryExpr                    shift and go to state 94
    FunctionType                   shift and go to state 67
    ExpressionListTypeOpt          shift and go to state 207

state 156

    (118) Selector -> DOT . IDENTIFIER
    (122) TypeAssertion -> DOT . LPAREN Type RPAREN

    IDENTIFIER      shift and go to state 208
    LPAREN          shift and go to state 209


state 157

    (110) Conversion -> Type LPAREN . Expression RPAREN
    (131) Expression -> . UnaryExpr
    (132) Expression -> . Expression BinaryOp Expression
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (111) PrimaryExpr -> . Operand
    (112) PrimaryExpr -> . Conversion
    (113) PrimaryExpr -> . PrimaryExpr Selector
    (114) PrimaryExpr -> . PrimaryExpr Index
    (115) PrimaryExpr -> . PrimaryExpr Slice
    (116) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (117) PrimaryExpr -> . PrimaryExpr Arguments
    (159) UnaryOp -> . PLUS
    (160) UnaryOp -> . MINUS
    (161) UnaryOp -> . TIMES
    (162) UnaryOp -> . AMPERS
    (163) UnaryOp -> . NOT
    (82) Operand -> . Literal
    (83) Operand -> . OperandName
    (84) Operand -> . LPAREN Expression RPAREN
    (110) Conversion -> . Type LPAREN Expression RPAREN
    (85) Literal -> . BasicLit
    (91) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (86) BasicLit -> . INTEGER
    (87) BasicLit -> . FLOAT
    (88) BasicLit -> . IMAGINARY
    (89) BasicLit -> . RUNE
    (90) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 101
    MINUS           shift and go to state 97
    TIMES           shift and go to state 107
    AMPERS          shift and go to state 112
    NOT             shift and go to state 98
    LPAREN          shift and go to state 109
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 111
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 105
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 92
    UnaryOp                        shift and go to state 93
    PrimaryExpr                    shift and go to state 94
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    Type                           shift and go to state 100
    OperandName                    shift and go to state 99
    BasicLit                       shift and go to state 113
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    UnaryExpr                      shift and go to state 106
    Expression                     shift and go to state 210
    PointerType                    shift and go to state 66
    TypeLit                        shift and go to state 55
    Operand                        shift and go to state 114
    FunctionType                   shift and go to state 67

state 158

    (12) ArrayType -> LBRACK ArrayLength RBRACK . ElementType
    (14) ElementType -> . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 61
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    TypeLit                        shift and go to state 55
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    ElementType                    shift and go to state 212
    Type                           shift and go to state 211

state 159

    (4) Type -> LPAREN Type . RPAREN
    (110) Conversion -> Type . LPAREN Expression RPAREN

    RPAREN          shift and go to state 144
    LPAREN          shift and go to state 157


state 160

    (4) Type -> LPAREN . Type RPAREN
    (84) Operand -> LPAREN . Expression RPAREN
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (131) Expression -> . UnaryExpr
    (132) Expression -> . Expression BinaryOp Expression
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature
    (111) PrimaryExpr -> . Operand
    (112) PrimaryExpr -> . Conversion
    (113) PrimaryExpr -> . PrimaryExpr Selector
    (114) PrimaryExpr -> . PrimaryExpr Index
    (115) PrimaryExpr -> . PrimaryExpr Slice
    (116) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (117) PrimaryExpr -> . PrimaryExpr Arguments
    (159) UnaryOp -> . PLUS
    (160) UnaryOp -> . MINUS
    (161) UnaryOp -> . TIMES
    (162) UnaryOp -> . AMPERS
    (163) UnaryOp -> . NOT
    (82) Operand -> . Literal
    (83) Operand -> . OperandName
    (84) Operand -> . LPAREN Expression RPAREN
    (110) Conversion -> . Type LPAREN Expression RPAREN
    (85) Literal -> . BasicLit
    (91) OperandName -> . IDENTIFIER
    (86) BasicLit -> . INTEGER
    (87) BasicLit -> . FLOAT
    (88) BasicLit -> . IMAGINARY
    (89) BasicLit -> . RUNE
    (90) BasicLit -> . STRING

    LPAREN          shift and go to state 160
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 213
    FUNC            shift and go to state 52
    PLUS            shift and go to state 101
    MINUS           shift and go to state 97
    AMPERS          shift and go to state 112
    NOT             shift and go to state 98
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 111
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 105

    Conversion                     shift and go to state 92
    UnaryOp                        shift and go to state 93
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    Type                           shift and go to state 159
    OperandName                    shift and go to state 99
    TypeLit                        shift and go to state 55
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    UnaryExpr                      shift and go to state 106
    PrimaryExpr                    shift and go to state 94
    Expression                     shift and go to state 161
    PointerType                    shift and go to state 66
    BasicLit                       shift and go to state 113
    Operand                        shift and go to state 114
    FunctionType                   shift and go to state 67

state 161

    (84) Operand -> LPAREN Expression . RPAREN
    (132) Expression -> Expression . BinaryOp Expression
    (137) BinaryOp -> . OROR
    (138) BinaryOp -> . AMPAMP
    (139) BinaryOp -> . RelOp
    (140) BinaryOp -> . AddOp
    (141) BinaryOp -> . MulOp
    (142) RelOp -> . EQEQ
    (143) RelOp -> . NOTEQ
    (144) RelOp -> . LESS
    (145) RelOp -> . GREAT
    (146) RelOp -> . LEQ
    (147) RelOp -> . GEQ
    (148) AddOp -> . PLUS
    (149) AddOp -> . MINUS
    (150) AddOp -> . OR
    (151) AddOp -> . CARET
    (152) MulOp -> . TIMES
    (153) MulOp -> . DIVIDE
    (154) MulOp -> . MOD
    (155) MulOp -> . AMPERS
    (156) MulOp -> . LL
    (157) MulOp -> . GG
    (158) MulOp -> . AMPCAR

    RPAREN          shift and go to state 214
    OROR            shift and go to state 162
    AMPAMP          shift and go to state 168
    EQEQ            shift and go to state 167
    NOTEQ           shift and go to state 173
    LESS            shift and go to state 166
    GREAT           shift and go to state 164
    LEQ             shift and go to state 182
    GEQ             shift and go to state 171
    PLUS            shift and go to state 174
    MINUS           shift and go to state 170
    OR              shift and go to state 183
    CARET           shift and go to state 163
    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 177
    MOD             shift and go to state 184
    AMPERS          shift and go to state 181
    LL              shift and go to state 172
    GG              shift and go to state 179
    AMPCAR          shift and go to state 165

    AddOp                          shift and go to state 176
    MulOp                          shift and go to state 169
    RelOp                          shift and go to state 180
    BinaryOp                       shift and go to state 175

state 162

    (137) BinaryOp -> OROR .

    PLUS            reduce using rule 137 (BinaryOp -> OROR .)
    MINUS           reduce using rule 137 (BinaryOp -> OROR .)
    TIMES           reduce using rule 137 (BinaryOp -> OROR .)
    AMPERS          reduce using rule 137 (BinaryOp -> OROR .)
    NOT             reduce using rule 137 (BinaryOp -> OROR .)
    LPAREN          reduce using rule 137 (BinaryOp -> OROR .)
    IDENTIFIER      reduce using rule 137 (BinaryOp -> OROR .)
    INTEGER         reduce using rule 137 (BinaryOp -> OROR .)
    FLOAT           reduce using rule 137 (BinaryOp -> OROR .)
    IMAGINARY       reduce using rule 137 (BinaryOp -> OROR .)
    RUNE            reduce using rule 137 (BinaryOp -> OROR .)
    STRING          reduce using rule 137 (BinaryOp -> OROR .)
    TYPEX           reduce using rule 137 (BinaryOp -> OROR .)
    LBRACK          reduce using rule 137 (BinaryOp -> OROR .)
    STRUCT          reduce using rule 137 (BinaryOp -> OROR .)
    FUNC            reduce using rule 137 (BinaryOp -> OROR .)


state 163

    (151) AddOp -> CARET .

    PLUS            reduce using rule 151 (AddOp -> CARET .)
    MINUS           reduce using rule 151 (AddOp -> CARET .)
    TIMES           reduce using rule 151 (AddOp -> CARET .)
    AMPERS          reduce using rule 151 (AddOp -> CARET .)
    NOT             reduce using rule 151 (AddOp -> CARET .)
    LPAREN          reduce using rule 151 (AddOp -> CARET .)
    IDENTIFIER      reduce using rule 151 (AddOp -> CARET .)
    INTEGER         reduce using rule 151 (AddOp -> CARET .)
    FLOAT           reduce using rule 151 (AddOp -> CARET .)
    IMAGINARY       reduce using rule 151 (AddOp -> CARET .)
    RUNE            reduce using rule 151 (AddOp -> CARET .)
    STRING          reduce using rule 151 (AddOp -> CARET .)
    TYPEX           reduce using rule 151 (AddOp -> CARET .)
    LBRACK          reduce using rule 151 (AddOp -> CARET .)
    STRUCT          reduce using rule 151 (AddOp -> CARET .)
    FUNC            reduce using rule 151 (AddOp -> CARET .)


state 164

    (145) RelOp -> GREAT .

    PLUS            reduce using rule 145 (RelOp -> GREAT .)
    MINUS           reduce using rule 145 (RelOp -> GREAT .)
    TIMES           reduce using rule 145 (RelOp -> GREAT .)
    AMPERS          reduce using rule 145 (RelOp -> GREAT .)
    NOT             reduce using rule 145 (RelOp -> GREAT .)
    LPAREN          reduce using rule 145 (RelOp -> GREAT .)
    IDENTIFIER      reduce using rule 145 (RelOp -> GREAT .)
    INTEGER         reduce using rule 145 (RelOp -> GREAT .)
    FLOAT           reduce using rule 145 (RelOp -> GREAT .)
    IMAGINARY       reduce using rule 145 (RelOp -> GREAT .)
    RUNE            reduce using rule 145 (RelOp -> GREAT .)
    STRING          reduce using rule 145 (RelOp -> GREAT .)
    TYPEX           reduce using rule 145 (RelOp -> GREAT .)
    LBRACK          reduce using rule 145 (RelOp -> GREAT .)
    STRUCT          reduce using rule 145 (RelOp -> GREAT .)
    FUNC            reduce using rule 145 (RelOp -> GREAT .)


state 165

    (158) MulOp -> AMPCAR .

    PLUS            reduce using rule 158 (MulOp -> AMPCAR .)
    MINUS           reduce using rule 158 (MulOp -> AMPCAR .)
    TIMES           reduce using rule 158 (MulOp -> AMPCAR .)
    AMPERS          reduce using rule 158 (MulOp -> AMPCAR .)
    NOT             reduce using rule 158 (MulOp -> AMPCAR .)
    LPAREN          reduce using rule 158 (MulOp -> AMPCAR .)
    IDENTIFIER      reduce using rule 158 (MulOp -> AMPCAR .)
    INTEGER         reduce using rule 158 (MulOp -> AMPCAR .)
    FLOAT           reduce using rule 158 (MulOp -> AMPCAR .)
    IMAGINARY       reduce using rule 158 (MulOp -> AMPCAR .)
    RUNE            reduce using rule 158 (MulOp -> AMPCAR .)
    STRING          reduce using rule 158 (MulOp -> AMPCAR .)
    TYPEX           reduce using rule 158 (MulOp -> AMPCAR .)
    LBRACK          reduce using rule 158 (MulOp -> AMPCAR .)
    STRUCT          reduce using rule 158 (MulOp -> AMPCAR .)
    FUNC            reduce using rule 158 (MulOp -> AMPCAR .)


state 166

    (144) RelOp -> LESS .

    PLUS            reduce using rule 144 (RelOp -> LESS .)
    MINUS           reduce using rule 144 (RelOp -> LESS .)
    TIMES           reduce using rule 144 (RelOp -> LESS .)
    AMPERS          reduce using rule 144 (RelOp -> LESS .)
    NOT             reduce using rule 144 (RelOp -> LESS .)
    LPAREN          reduce using rule 144 (RelOp -> LESS .)
    IDENTIFIER      reduce using rule 144 (RelOp -> LESS .)
    INTEGER         reduce using rule 144 (RelOp -> LESS .)
    FLOAT           reduce using rule 144 (RelOp -> LESS .)
    IMAGINARY       reduce using rule 144 (RelOp -> LESS .)
    RUNE            reduce using rule 144 (RelOp -> LESS .)
    STRING          reduce using rule 144 (RelOp -> LESS .)
    TYPEX           reduce using rule 144 (RelOp -> LESS .)
    LBRACK          reduce using rule 144 (RelOp -> LESS .)
    STRUCT          reduce using rule 144 (RelOp -> LESS .)
    FUNC            reduce using rule 144 (RelOp -> LESS .)


state 167

    (142) RelOp -> EQEQ .

    PLUS            reduce using rule 142 (RelOp -> EQEQ .)
    MINUS           reduce using rule 142 (RelOp -> EQEQ .)
    TIMES           reduce using rule 142 (RelOp -> EQEQ .)
    AMPERS          reduce using rule 142 (RelOp -> EQEQ .)
    NOT             reduce using rule 142 (RelOp -> EQEQ .)
    LPAREN          reduce using rule 142 (RelOp -> EQEQ .)
    IDENTIFIER      reduce using rule 142 (RelOp -> EQEQ .)
    INTEGER         reduce using rule 142 (RelOp -> EQEQ .)
    FLOAT           reduce using rule 142 (RelOp -> EQEQ .)
    IMAGINARY       reduce using rule 142 (RelOp -> EQEQ .)
    RUNE            reduce using rule 142 (RelOp -> EQEQ .)
    STRING          reduce using rule 142 (RelOp -> EQEQ .)
    TYPEX           reduce using rule 142 (RelOp -> EQEQ .)
    LBRACK          reduce using rule 142 (RelOp -> EQEQ .)
    STRUCT          reduce using rule 142 (RelOp -> EQEQ .)
    FUNC            reduce using rule 142 (RelOp -> EQEQ .)


state 168

    (138) BinaryOp -> AMPAMP .

    PLUS            reduce using rule 138 (BinaryOp -> AMPAMP .)
    MINUS           reduce using rule 138 (BinaryOp -> AMPAMP .)
    TIMES           reduce using rule 138 (BinaryOp -> AMPAMP .)
    AMPERS          reduce using rule 138 (BinaryOp -> AMPAMP .)
    NOT             reduce using rule 138 (BinaryOp -> AMPAMP .)
    LPAREN          reduce using rule 138 (BinaryOp -> AMPAMP .)
    IDENTIFIER      reduce using rule 138 (BinaryOp -> AMPAMP .)
    INTEGER         reduce using rule 138 (BinaryOp -> AMPAMP .)
    FLOAT           reduce using rule 138 (BinaryOp -> AMPAMP .)
    IMAGINARY       reduce using rule 138 (BinaryOp -> AMPAMP .)
    RUNE            reduce using rule 138 (BinaryOp -> AMPAMP .)
    STRING          reduce using rule 138 (BinaryOp -> AMPAMP .)
    TYPEX           reduce using rule 138 (BinaryOp -> AMPAMP .)
    LBRACK          reduce using rule 138 (BinaryOp -> AMPAMP .)
    STRUCT          reduce using rule 138 (BinaryOp -> AMPAMP .)
    FUNC            reduce using rule 138 (BinaryOp -> AMPAMP .)


state 169

    (141) BinaryOp -> MulOp .

    PLUS            reduce using rule 141 (BinaryOp -> MulOp .)
    MINUS           reduce using rule 141 (BinaryOp -> MulOp .)
    TIMES           reduce using rule 141 (BinaryOp -> MulOp .)
    AMPERS          reduce using rule 141 (BinaryOp -> MulOp .)
    NOT             reduce using rule 141 (BinaryOp -> MulOp .)
    LPAREN          reduce using rule 141 (BinaryOp -> MulOp .)
    IDENTIFIER      reduce using rule 141 (BinaryOp -> MulOp .)
    INTEGER         reduce using rule 141 (BinaryOp -> MulOp .)
    FLOAT           reduce using rule 141 (BinaryOp -> MulOp .)
    IMAGINARY       reduce using rule 141 (BinaryOp -> MulOp .)
    RUNE            reduce using rule 141 (BinaryOp -> MulOp .)
    STRING          reduce using rule 141 (BinaryOp -> MulOp .)
    TYPEX           reduce using rule 141 (BinaryOp -> MulOp .)
    LBRACK          reduce using rule 141 (BinaryOp -> MulOp .)
    STRUCT          reduce using rule 141 (BinaryOp -> MulOp .)
    FUNC            reduce using rule 141 (BinaryOp -> MulOp .)


state 170

    (149) AddOp -> MINUS .

    PLUS            reduce using rule 149 (AddOp -> MINUS .)
    MINUS           reduce using rule 149 (AddOp -> MINUS .)
    TIMES           reduce using rule 149 (AddOp -> MINUS .)
    AMPERS          reduce using rule 149 (AddOp -> MINUS .)
    NOT             reduce using rule 149 (AddOp -> MINUS .)
    LPAREN          reduce using rule 149 (AddOp -> MINUS .)
    IDENTIFIER      reduce using rule 149 (AddOp -> MINUS .)
    INTEGER         reduce using rule 149 (AddOp -> MINUS .)
    FLOAT           reduce using rule 149 (AddOp -> MINUS .)
    IMAGINARY       reduce using rule 149 (AddOp -> MINUS .)
    RUNE            reduce using rule 149 (AddOp -> MINUS .)
    STRING          reduce using rule 149 (AddOp -> MINUS .)
    TYPEX           reduce using rule 149 (AddOp -> MINUS .)
    LBRACK          reduce using rule 149 (AddOp -> MINUS .)
    STRUCT          reduce using rule 149 (AddOp -> MINUS .)
    FUNC            reduce using rule 149 (AddOp -> MINUS .)


state 171

    (147) RelOp -> GEQ .

    PLUS            reduce using rule 147 (RelOp -> GEQ .)
    MINUS           reduce using rule 147 (RelOp -> GEQ .)
    TIMES           reduce using rule 147 (RelOp -> GEQ .)
    AMPERS          reduce using rule 147 (RelOp -> GEQ .)
    NOT             reduce using rule 147 (RelOp -> GEQ .)
    LPAREN          reduce using rule 147 (RelOp -> GEQ .)
    IDENTIFIER      reduce using rule 147 (RelOp -> GEQ .)
    INTEGER         reduce using rule 147 (RelOp -> GEQ .)
    FLOAT           reduce using rule 147 (RelOp -> GEQ .)
    IMAGINARY       reduce using rule 147 (RelOp -> GEQ .)
    RUNE            reduce using rule 147 (RelOp -> GEQ .)
    STRING          reduce using rule 147 (RelOp -> GEQ .)
    TYPEX           reduce using rule 147 (RelOp -> GEQ .)
    LBRACK          reduce using rule 147 (RelOp -> GEQ .)
    STRUCT          reduce using rule 147 (RelOp -> GEQ .)
    FUNC            reduce using rule 147 (RelOp -> GEQ .)


state 172

    (156) MulOp -> LL .

    PLUS            reduce using rule 156 (MulOp -> LL .)
    MINUS           reduce using rule 156 (MulOp -> LL .)
    TIMES           reduce using rule 156 (MulOp -> LL .)
    AMPERS          reduce using rule 156 (MulOp -> LL .)
    NOT             reduce using rule 156 (MulOp -> LL .)
    LPAREN          reduce using rule 156 (MulOp -> LL .)
    IDENTIFIER      reduce using rule 156 (MulOp -> LL .)
    INTEGER         reduce using rule 156 (MulOp -> LL .)
    FLOAT           reduce using rule 156 (MulOp -> LL .)
    IMAGINARY       reduce using rule 156 (MulOp -> LL .)
    RUNE            reduce using rule 156 (MulOp -> LL .)
    STRING          reduce using rule 156 (MulOp -> LL .)
    TYPEX           reduce using rule 156 (MulOp -> LL .)
    LBRACK          reduce using rule 156 (MulOp -> LL .)
    STRUCT          reduce using rule 156 (MulOp -> LL .)
    FUNC            reduce using rule 156 (MulOp -> LL .)


state 173

    (143) RelOp -> NOTEQ .

    PLUS            reduce using rule 143 (RelOp -> NOTEQ .)
    MINUS           reduce using rule 143 (RelOp -> NOTEQ .)
    TIMES           reduce using rule 143 (RelOp -> NOTEQ .)
    AMPERS          reduce using rule 143 (RelOp -> NOTEQ .)
    NOT             reduce using rule 143 (RelOp -> NOTEQ .)
    LPAREN          reduce using rule 143 (RelOp -> NOTEQ .)
    IDENTIFIER      reduce using rule 143 (RelOp -> NOTEQ .)
    INTEGER         reduce using rule 143 (RelOp -> NOTEQ .)
    FLOAT           reduce using rule 143 (RelOp -> NOTEQ .)
    IMAGINARY       reduce using rule 143 (RelOp -> NOTEQ .)
    RUNE            reduce using rule 143 (RelOp -> NOTEQ .)
    STRING          reduce using rule 143 (RelOp -> NOTEQ .)
    TYPEX           reduce using rule 143 (RelOp -> NOTEQ .)
    LBRACK          reduce using rule 143 (RelOp -> NOTEQ .)
    STRUCT          reduce using rule 143 (RelOp -> NOTEQ .)
    FUNC            reduce using rule 143 (RelOp -> NOTEQ .)


state 174

    (148) AddOp -> PLUS .

    PLUS            reduce using rule 148 (AddOp -> PLUS .)
    MINUS           reduce using rule 148 (AddOp -> PLUS .)
    TIMES           reduce using rule 148 (AddOp -> PLUS .)
    AMPERS          reduce using rule 148 (AddOp -> PLUS .)
    NOT             reduce using rule 148 (AddOp -> PLUS .)
    LPAREN          reduce using rule 148 (AddOp -> PLUS .)
    IDENTIFIER      reduce using rule 148 (AddOp -> PLUS .)
    INTEGER         reduce using rule 148 (AddOp -> PLUS .)
    FLOAT           reduce using rule 148 (AddOp -> PLUS .)
    IMAGINARY       reduce using rule 148 (AddOp -> PLUS .)
    RUNE            reduce using rule 148 (AddOp -> PLUS .)
    STRING          reduce using rule 148 (AddOp -> PLUS .)
    TYPEX           reduce using rule 148 (AddOp -> PLUS .)
    LBRACK          reduce using rule 148 (AddOp -> PLUS .)
    STRUCT          reduce using rule 148 (AddOp -> PLUS .)
    FUNC            reduce using rule 148 (AddOp -> PLUS .)


state 175

    (132) Expression -> Expression BinaryOp . Expression
    (131) Expression -> . UnaryExpr
    (132) Expression -> . Expression BinaryOp Expression
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (111) PrimaryExpr -> . Operand
    (112) PrimaryExpr -> . Conversion
    (113) PrimaryExpr -> . PrimaryExpr Selector
    (114) PrimaryExpr -> . PrimaryExpr Index
    (115) PrimaryExpr -> . PrimaryExpr Slice
    (116) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (117) PrimaryExpr -> . PrimaryExpr Arguments
    (159) UnaryOp -> . PLUS
    (160) UnaryOp -> . MINUS
    (161) UnaryOp -> . TIMES
    (162) UnaryOp -> . AMPERS
    (163) UnaryOp -> . NOT
    (82) Operand -> . Literal
    (83) Operand -> . OperandName
    (84) Operand -> . LPAREN Expression RPAREN
    (110) Conversion -> . Type LPAREN Expression RPAREN
    (85) Literal -> . BasicLit
    (91) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (86) BasicLit -> . INTEGER
    (87) BasicLit -> . FLOAT
    (88) BasicLit -> . IMAGINARY
    (89) BasicLit -> . RUNE
    (90) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 101
    MINUS           shift and go to state 97
    TIMES           shift and go to state 107
    AMPERS          shift and go to state 112
    NOT             shift and go to state 98
    LPAREN          shift and go to state 109
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 111
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 105
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 92
    UnaryOp                        shift and go to state 93
    PrimaryExpr                    shift and go to state 94
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    Type                           shift and go to state 100
    OperandName                    shift and go to state 99
    BasicLit                       shift and go to state 113
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    UnaryExpr                      shift and go to state 106
    Expression                     shift and go to state 215
    PointerType                    shift and go to state 66
    TypeLit                        shift and go to state 55
    Operand                        shift and go to state 114
    FunctionType                   shift and go to state 67

state 176

    (140) BinaryOp -> AddOp .

    PLUS            reduce using rule 140 (BinaryOp -> AddOp .)
    MINUS           reduce using rule 140 (BinaryOp -> AddOp .)
    TIMES           reduce using rule 140 (BinaryOp -> AddOp .)
    AMPERS          reduce using rule 140 (BinaryOp -> AddOp .)
    NOT             reduce using rule 140 (BinaryOp -> AddOp .)
    LPAREN          reduce using rule 140 (BinaryOp -> AddOp .)
    IDENTIFIER      reduce using rule 140 (BinaryOp -> AddOp .)
    INTEGER         reduce using rule 140 (BinaryOp -> AddOp .)
    FLOAT           reduce using rule 140 (BinaryOp -> AddOp .)
    IMAGINARY       reduce using rule 140 (BinaryOp -> AddOp .)
    RUNE            reduce using rule 140 (BinaryOp -> AddOp .)
    STRING          reduce using rule 140 (BinaryOp -> AddOp .)
    TYPEX           reduce using rule 140 (BinaryOp -> AddOp .)
    LBRACK          reduce using rule 140 (BinaryOp -> AddOp .)
    STRUCT          reduce using rule 140 (BinaryOp -> AddOp .)
    FUNC            reduce using rule 140 (BinaryOp -> AddOp .)


state 177

    (153) MulOp -> DIVIDE .

    PLUS            reduce using rule 153 (MulOp -> DIVIDE .)
    MINUS           reduce using rule 153 (MulOp -> DIVIDE .)
    TIMES           reduce using rule 153 (MulOp -> DIVIDE .)
    AMPERS          reduce using rule 153 (MulOp -> DIVIDE .)
    NOT             reduce using rule 153 (MulOp -> DIVIDE .)
    LPAREN          reduce using rule 153 (MulOp -> DIVIDE .)
    IDENTIFIER      reduce using rule 153 (MulOp -> DIVIDE .)
    INTEGER         reduce using rule 153 (MulOp -> DIVIDE .)
    FLOAT           reduce using rule 153 (MulOp -> DIVIDE .)
    IMAGINARY       reduce using rule 153 (MulOp -> DIVIDE .)
    RUNE            reduce using rule 153 (MulOp -> DIVIDE .)
    STRING          reduce using rule 153 (MulOp -> DIVIDE .)
    TYPEX           reduce using rule 153 (MulOp -> DIVIDE .)
    LBRACK          reduce using rule 153 (MulOp -> DIVIDE .)
    STRUCT          reduce using rule 153 (MulOp -> DIVIDE .)
    FUNC            reduce using rule 153 (MulOp -> DIVIDE .)


state 178

    (152) MulOp -> TIMES .

    PLUS            reduce using rule 152 (MulOp -> TIMES .)
    MINUS           reduce using rule 152 (MulOp -> TIMES .)
    TIMES           reduce using rule 152 (MulOp -> TIMES .)
    AMPERS          reduce using rule 152 (MulOp -> TIMES .)
    NOT             reduce using rule 152 (MulOp -> TIMES .)
    LPAREN          reduce using rule 152 (MulOp -> TIMES .)
    IDENTIFIER      reduce using rule 152 (MulOp -> TIMES .)
    INTEGER         reduce using rule 152 (MulOp -> TIMES .)
    FLOAT           reduce using rule 152 (MulOp -> TIMES .)
    IMAGINARY       reduce using rule 152 (MulOp -> TIMES .)
    RUNE            reduce using rule 152 (MulOp -> TIMES .)
    STRING          reduce using rule 152 (MulOp -> TIMES .)
    TYPEX           reduce using rule 152 (MulOp -> TIMES .)
    LBRACK          reduce using rule 152 (MulOp -> TIMES .)
    STRUCT          reduce using rule 152 (MulOp -> TIMES .)
    FUNC            reduce using rule 152 (MulOp -> TIMES .)


state 179

    (157) MulOp -> GG .

    PLUS            reduce using rule 157 (MulOp -> GG .)
    MINUS           reduce using rule 157 (MulOp -> GG .)
    TIMES           reduce using rule 157 (MulOp -> GG .)
    AMPERS          reduce using rule 157 (MulOp -> GG .)
    NOT             reduce using rule 157 (MulOp -> GG .)
    LPAREN          reduce using rule 157 (MulOp -> GG .)
    IDENTIFIER      reduce using rule 157 (MulOp -> GG .)
    INTEGER         reduce using rule 157 (MulOp -> GG .)
    FLOAT           reduce using rule 157 (MulOp -> GG .)
    IMAGINARY       reduce using rule 157 (MulOp -> GG .)
    RUNE            reduce using rule 157 (MulOp -> GG .)
    STRING          reduce using rule 157 (MulOp -> GG .)
    TYPEX           reduce using rule 157 (MulOp -> GG .)
    LBRACK          reduce using rule 157 (MulOp -> GG .)
    STRUCT          reduce using rule 157 (MulOp -> GG .)
    FUNC            reduce using rule 157 (MulOp -> GG .)


state 180

    (139) BinaryOp -> RelOp .

    PLUS            reduce using rule 139 (BinaryOp -> RelOp .)
    MINUS           reduce using rule 139 (BinaryOp -> RelOp .)
    TIMES           reduce using rule 139 (BinaryOp -> RelOp .)
    AMPERS          reduce using rule 139 (BinaryOp -> RelOp .)
    NOT             reduce using rule 139 (BinaryOp -> RelOp .)
    LPAREN          reduce using rule 139 (BinaryOp -> RelOp .)
    IDENTIFIER      reduce using rule 139 (BinaryOp -> RelOp .)
    INTEGER         reduce using rule 139 (BinaryOp -> RelOp .)
    FLOAT           reduce using rule 139 (BinaryOp -> RelOp .)
    IMAGINARY       reduce using rule 139 (BinaryOp -> RelOp .)
    RUNE            reduce using rule 139 (BinaryOp -> RelOp .)
    STRING          reduce using rule 139 (BinaryOp -> RelOp .)
    TYPEX           reduce using rule 139 (BinaryOp -> RelOp .)
    LBRACK          reduce using rule 139 (BinaryOp -> RelOp .)
    STRUCT          reduce using rule 139 (BinaryOp -> RelOp .)
    FUNC            reduce using rule 139 (BinaryOp -> RelOp .)


state 181

    (155) MulOp -> AMPERS .

    PLUS            reduce using rule 155 (MulOp -> AMPERS .)
    MINUS           reduce using rule 155 (MulOp -> AMPERS .)
    TIMES           reduce using rule 155 (MulOp -> AMPERS .)
    AMPERS          reduce using rule 155 (MulOp -> AMPERS .)
    NOT             reduce using rule 155 (MulOp -> AMPERS .)
    LPAREN          reduce using rule 155 (MulOp -> AMPERS .)
    IDENTIFIER      reduce using rule 155 (MulOp -> AMPERS .)
    INTEGER         reduce using rule 155 (MulOp -> AMPERS .)
    FLOAT           reduce using rule 155 (MulOp -> AMPERS .)
    IMAGINARY       reduce using rule 155 (MulOp -> AMPERS .)
    RUNE            reduce using rule 155 (MulOp -> AMPERS .)
    STRING          reduce using rule 155 (MulOp -> AMPERS .)
    TYPEX           reduce using rule 155 (MulOp -> AMPERS .)
    LBRACK          reduce using rule 155 (MulOp -> AMPERS .)
    STRUCT          reduce using rule 155 (MulOp -> AMPERS .)
    FUNC            reduce using rule 155 (MulOp -> AMPERS .)


state 182

    (146) RelOp -> LEQ .

    PLUS            reduce using rule 146 (RelOp -> LEQ .)
    MINUS           reduce using rule 146 (RelOp -> LEQ .)
    TIMES           reduce using rule 146 (RelOp -> LEQ .)
    AMPERS          reduce using rule 146 (RelOp -> LEQ .)
    NOT             reduce using rule 146 (RelOp -> LEQ .)
    LPAREN          reduce using rule 146 (RelOp -> LEQ .)
    IDENTIFIER      reduce using rule 146 (RelOp -> LEQ .)
    INTEGER         reduce using rule 146 (RelOp -> LEQ .)
    FLOAT           reduce using rule 146 (RelOp -> LEQ .)
    IMAGINARY       reduce using rule 146 (RelOp -> LEQ .)
    RUNE            reduce using rule 146 (RelOp -> LEQ .)
    STRING          reduce using rule 146 (RelOp -> LEQ .)
    TYPEX           reduce using rule 146 (RelOp -> LEQ .)
    LBRACK          reduce using rule 146 (RelOp -> LEQ .)
    STRUCT          reduce using rule 146 (RelOp -> LEQ .)
    FUNC            reduce using rule 146 (RelOp -> LEQ .)


state 183

    (150) AddOp -> OR .

    PLUS            reduce using rule 150 (AddOp -> OR .)
    MINUS           reduce using rule 150 (AddOp -> OR .)
    TIMES           reduce using rule 150 (AddOp -> OR .)
    AMPERS          reduce using rule 150 (AddOp -> OR .)
    NOT             reduce using rule 150 (AddOp -> OR .)
    LPAREN          reduce using rule 150 (AddOp -> OR .)
    IDENTIFIER      reduce using rule 150 (AddOp -> OR .)
    INTEGER         reduce using rule 150 (AddOp -> OR .)
    FLOAT           reduce using rule 150 (AddOp -> OR .)
    IMAGINARY       reduce using rule 150 (AddOp -> OR .)
    RUNE            reduce using rule 150 (AddOp -> OR .)
    STRING          reduce using rule 150 (AddOp -> OR .)
    TYPEX           reduce using rule 150 (AddOp -> OR .)
    LBRACK          reduce using rule 150 (AddOp -> OR .)
    STRUCT          reduce using rule 150 (AddOp -> OR .)
    FUNC            reduce using rule 150 (AddOp -> OR .)


state 184

    (154) MulOp -> MOD .

    PLUS            reduce using rule 154 (MulOp -> MOD .)
    MINUS           reduce using rule 154 (MulOp -> MOD .)
    TIMES           reduce using rule 154 (MulOp -> MOD .)
    AMPERS          reduce using rule 154 (MulOp -> MOD .)
    NOT             reduce using rule 154 (MulOp -> MOD .)
    LPAREN          reduce using rule 154 (MulOp -> MOD .)
    IDENTIFIER      reduce using rule 154 (MulOp -> MOD .)
    INTEGER         reduce using rule 154 (MulOp -> MOD .)
    FLOAT           reduce using rule 154 (MulOp -> MOD .)
    IMAGINARY       reduce using rule 154 (MulOp -> MOD .)
    RUNE            reduce using rule 154 (MulOp -> MOD .)
    STRING          reduce using rule 154 (MulOp -> MOD .)
    TYPEX           reduce using rule 154 (MulOp -> MOD .)
    LBRACK          reduce using rule 154 (MulOp -> MOD .)
    STRUCT          reduce using rule 154 (MulOp -> MOD .)
    FUNC            reduce using rule 154 (MulOp -> MOD .)


state 185

    (57) IdentifierRep -> IdentifierRep COMMA IDENTIFIER .

    COMMA           reduce using rule 57 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    LPAREN          reduce using rule 57 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    TYPEX           reduce using rule 57 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    LBRACK          reduce using rule 57 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    STRUCT          reduce using rule 57 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    TIMES           reduce using rule 57 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    FUNC            reduce using rule 57 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    EQUAL           reduce using rule 57 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    SEMICOL         reduce using rule 57 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)


state 186

    (4) Type -> LPAREN Type . RPAREN
    (33) ParametersList -> Type .
    (39) ParameterDecl -> Type .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 144
    COMMA           reduce using rule 39 (ParameterDecl -> Type .)

  ! RPAREN          [ reduce using rule 33 (ParametersList -> Type .) ]


state 187

    (41) StatementList -> StatementRep .
    (42) StatementRep -> StatementRep . Statement SEMICOL
    (164) Statement -> . Declaration
    (165) Statement -> . LabeledStmt
    (166) Statement -> . SimpleStmt
    (167) Statement -> . ReturnStmt
    (168) Statement -> . BreakStmt
    (169) Statement -> . ContinueStmt
    (170) Statement -> . GotoStmt
    (171) Statement -> . Block
    (172) Statement -> . IfStmt
    (173) Statement -> . SwitchStmt
    (174) Statement -> . ForStmt
    (44) Declaration -> . ConstDecl
    (45) Declaration -> . TypeDecl
    (46) Declaration -> . VarDecl
    (180) LabeledStmt -> . Label COLON Statement
    (175) SimpleStmt -> . epsilon
    (176) SimpleStmt -> . ExpressionStmt
    (177) SimpleStmt -> . IncDecStmt
    (178) SimpleStmt -> . Assignment
    (179) SimpleStmt -> . ShortVarDecl
    (236) ReturnStmt -> . RETURN ExpressionListPureOpt
    (239) BreakStmt -> . BREAK LabelOpt
    (240) ContinueStmt -> . CONTINUE LabelOpt
    (243) GotoStmt -> . GOTO Label
    (40) Block -> . LBRACE StatementList RBRACE
    (198) IfStmt -> . IF Expression Block ElseOpt
    (204) SwitchStmt -> . ExprSwitchStmt
    (205) SwitchStmt -> . TypeSwitchStmt
    (224) ForStmt -> . FOR ConditionBlockOpt Block
    (49) ConstDecl -> . CONST ConstSpec
    (50) ConstDecl -> . CONST LPAREN ConstSpecRep RPAREN
    (59) TypeDecl -> . TYPE TypeSpec
    (60) TypeDecl -> . TYPE LPAREN TypeSpecRep RPAREN
    (67) VarDecl -> . VAR VarSpec
    (68) VarDecl -> . VAR LPAREN VarSpecRep RPAREN
    (181) Label -> . IDENTIFIER
    (260) epsilon -> .
    (182) ExpressionStmt -> . Expression
    (183) IncDecStmt -> . Expression PLUSPLUS
    (184) IncDecStmt -> . Expression MINUSMIN
    (185) Assignment -> . ExpressionList assign_op ExpressionList
    (75) ShortVarDecl -> . IDENTIFIER COLONEQ Expression
    (206) ExprSwitchStmt -> . SWITCH ExpressionOpt LBRACE ExprCaseClauseRep RBRACE
    (212) TypeSwitchStmt -> . SWITCH SimpleStmtOpt TypeSwitchGuard LBRACE TypeCaseClauseOpt RBRACE
    (131) Expression -> . UnaryExpr
    (132) Expression -> . Expression BinaryOp Expression
    (128) ExpressionList -> . Expression ExpressionRep
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (111) PrimaryExpr -> . Operand
    (112) PrimaryExpr -> . Conversion
    (113) PrimaryExpr -> . PrimaryExpr Selector
    (114) PrimaryExpr -> . PrimaryExpr Index
    (115) PrimaryExpr -> . PrimaryExpr Slice
    (116) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (117) PrimaryExpr -> . PrimaryExpr Arguments
    (159) UnaryOp -> . PLUS
    (160) UnaryOp -> . MINUS
    (161) UnaryOp -> . TIMES
    (162) UnaryOp -> . AMPERS
    (163) UnaryOp -> . NOT
    (82) Operand -> . Literal
    (83) Operand -> . OperandName
    (84) Operand -> . LPAREN Expression RPAREN
    (110) Conversion -> . Type LPAREN Expression RPAREN
    (85) Literal -> . BasicLit
    (91) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (86) BasicLit -> . INTEGER
    (87) BasicLit -> . FLOAT
    (88) BasicLit -> . IMAGINARY
    (89) BasicLit -> . RUNE
    (90) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    RBRACE          reduce using rule 41 (StatementList -> StatementRep .)
    CASE            reduce using rule 41 (StatementList -> StatementRep .)
    DEFAULT         reduce using rule 41 (StatementList -> StatementRep .)
    RETURN          shift and go to state 222
    BREAK           shift and go to state 238
    CONTINUE        shift and go to state 231
    GOTO            shift and go to state 242
    LBRACE          shift and go to state 123
    IF              shift and go to state 244
    FOR             shift and go to state 228
    CONST           shift and go to state 14
    TYPE            shift and go to state 23
    VAR             shift and go to state 21
    IDENTIFIER      shift and go to state 234
    SEMICOL         reduce using rule 260 (epsilon -> .)
    SWITCH          shift and go to state 232
    PLUS            shift and go to state 101
    MINUS           shift and go to state 97
    TIMES           shift and go to state 107
    AMPERS          shift and go to state 112
    NOT             shift and go to state 98
    LPAREN          shift and go to state 109
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 111
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 105
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    UnaryOp                        shift and go to state 93
    ContinueStmt                   shift and go to state 216
    Conversion                     shift and go to state 92
    SimpleStmt                     shift and go to state 240
    Label                          shift and go to state 223
    ExpressionStmt                 shift and go to state 217
    PointerType                    shift and go to state 66
    ForStmt                        shift and go to state 241
    ExprSwitchStmt                 shift and go to state 224
    Statement                      shift and go to state 218
    Type                           shift and go to state 100
    IfStmt                         shift and go to state 225
    OperandName                    shift and go to state 99
    ArrayType                      shift and go to state 53
    Assignment                     shift and go to state 219
    TypeName                       shift and go to state 56
    IncDecStmt                     shift and go to state 226
    Declaration                    shift and go to state 233
    FunctionType                   shift and go to state 67
    GotoStmt                       shift and go to state 227
    StructType                     shift and go to state 58
    TypeDecl                       shift and go to state 19
    LabeledStmt                    shift and go to state 220
    epsilon                        shift and go to state 235
    UnaryExpr                      shift and go to state 106
    Operand                        shift and go to state 114
    ExpressionList                 shift and go to state 236
    Literal                        shift and go to state 95
    Expression                     shift and go to state 237
    ShortVarDecl                   shift and go to state 243
    Block                          shift and go to state 229
    TypeSwitchStmt                 shift and go to state 221
    BreakStmt                      shift and go to state 245
    SwitchStmt                     shift and go to state 230
    VarDecl                        shift and go to state 22
    TypeLit                        shift and go to state 55
    BasicLit                       shift and go to state 113
    PrimaryExpr                    shift and go to state 94
    ReturnStmt                     shift and go to state 239
    ConstDecl                      shift and go to state 18

state 188

    (43) StatementRep -> epsilon .

    RETURN          reduce using rule 43 (StatementRep -> epsilon .)
    BREAK           reduce using rule 43 (StatementRep -> epsilon .)
    CONTINUE        reduce using rule 43 (StatementRep -> epsilon .)
    GOTO            reduce using rule 43 (StatementRep -> epsilon .)
    LBRACE          reduce using rule 43 (StatementRep -> epsilon .)
    IF              reduce using rule 43 (StatementRep -> epsilon .)
    FOR             reduce using rule 43 (StatementRep -> epsilon .)
    CONST           reduce using rule 43 (StatementRep -> epsilon .)
    TYPE            reduce using rule 43 (StatementRep -> epsilon .)
    VAR             reduce using rule 43 (StatementRep -> epsilon .)
    IDENTIFIER      reduce using rule 43 (StatementRep -> epsilon .)
    SWITCH          reduce using rule 43 (StatementRep -> epsilon .)
    PLUS            reduce using rule 43 (StatementRep -> epsilon .)
    MINUS           reduce using rule 43 (StatementRep -> epsilon .)
    TIMES           reduce using rule 43 (StatementRep -> epsilon .)
    AMPERS          reduce using rule 43 (StatementRep -> epsilon .)
    NOT             reduce using rule 43 (StatementRep -> epsilon .)
    LPAREN          reduce using rule 43 (StatementRep -> epsilon .)
    INTEGER         reduce using rule 43 (StatementRep -> epsilon .)
    FLOAT           reduce using rule 43 (StatementRep -> epsilon .)
    IMAGINARY       reduce using rule 43 (StatementRep -> epsilon .)
    RUNE            reduce using rule 43 (StatementRep -> epsilon .)
    STRING          reduce using rule 43 (StatementRep -> epsilon .)
    TYPEX           reduce using rule 43 (StatementRep -> epsilon .)
    LBRACK          reduce using rule 43 (StatementRep -> epsilon .)
    STRUCT          reduce using rule 43 (StatementRep -> epsilon .)
    FUNC            reduce using rule 43 (StatementRep -> epsilon .)
    SEMICOL         reduce using rule 43 (StatementRep -> epsilon .)
    RBRACE          reduce using rule 43 (StatementRep -> epsilon .)
    CASE            reduce using rule 43 (StatementRep -> epsilon .)
    DEFAULT         reduce using rule 43 (StatementRep -> epsilon .)


state 189

    (40) Block -> LBRACE StatementList . RBRACE

    RBRACE          shift and go to state 246


state 190

    (30) Parameters -> LPAREN ParameterListOpt RPAREN .

    LPAREN          reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    TYPEX           reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    LBRACK          reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    STRUCT          reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    TIMES           reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    FUNC            reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    EQUAL           reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    SEMICOL         reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    RPAREN          reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    LBRACE          reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    COMMA           reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    STRING          reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    COLON           reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)


state 191

    (34) ParametersList -> IdentifierList Type .
    (38) ParameterDecl -> IdentifierList Type .

    RPAREN          reduce using rule 34 (ParametersList -> IdentifierList Type .)
    COMMA           reduce using rule 38 (ParameterDecl -> IdentifierList Type .)


state 192

    (36) ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA . ParameterDecl
    (38) ParameterDecl -> . IdentifierList Type
    (39) ParameterDecl -> . Type
    (56) IdentifierList -> . IDENTIFIER IdentifierRep
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    IDENTIFIER      shift and go to state 34
    LPAREN          shift and go to state 61
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    ParameterDecl                  shift and go to state 249
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    TypeLit                        shift and go to state 55
    IdentifierList                 shift and go to state 247
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    Type                           shift and go to state 248

state 193

    (37) ParameterDeclCommaRep -> ParameterDecl COMMA . ParameterDecl
    (38) ParameterDecl -> . IdentifierList Type
    (39) ParameterDecl -> . Type
    (56) IdentifierList -> . IDENTIFIER IdentifierRep
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    IDENTIFIER      shift and go to state 34
    LPAREN          shift and go to state 61
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    TypeLit                        shift and go to state 55
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    IdentifierList                 shift and go to state 247
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    Type                           shift and go to state 248
    ParameterDecl                  shift and go to state 250

state 194

    (69) VarSpecRep -> VarSpecRep VarSpec SEMICOL .

    RPAREN          reduce using rule 69 (VarSpecRep -> VarSpecRep VarSpec SEMICOL .)
    IDENTIFIER      reduce using rule 69 (VarSpecRep -> VarSpecRep VarSpec SEMICOL .)


state 195

    (128) ExpressionList -> Expression ExpressionRep .
    (129) ExpressionRep -> ExpressionRep . COMMA Expression

    PLUSEQ          reduce using rule 128 (ExpressionList -> Expression ExpressionRep .)
    MINUSEQ         reduce using rule 128 (ExpressionList -> Expression ExpressionRep .)
    TIMESEQ         reduce using rule 128 (ExpressionList -> Expression ExpressionRep .)
    DIVIDEEQ        reduce using rule 128 (ExpressionList -> Expression ExpressionRep .)
    MODEQ           reduce using rule 128 (ExpressionList -> Expression ExpressionRep .)
    AMPEQ           reduce using rule 128 (ExpressionList -> Expression ExpressionRep .)
    OREQ            reduce using rule 128 (ExpressionList -> Expression ExpressionRep .)
    CAREQ           reduce using rule 128 (ExpressionList -> Expression ExpressionRep .)
    LLEQ            reduce using rule 128 (ExpressionList -> Expression ExpressionRep .)
    GGEQ            reduce using rule 128 (ExpressionList -> Expression ExpressionRep .)
    EQUAL           reduce using rule 128 (ExpressionList -> Expression ExpressionRep .)
    SEMICOL         reduce using rule 128 (ExpressionList -> Expression ExpressionRep .)
    LBRACE          reduce using rule 128 (ExpressionList -> Expression ExpressionRep .)
    COLON           reduce using rule 128 (ExpressionList -> Expression ExpressionRep .)
    RPAREN          reduce using rule 128 (ExpressionList -> Expression ExpressionRep .)
    COMMA           shift and go to state 251


state 196

    (130) ExpressionRep -> epsilon .

    COMMA           reduce using rule 130 (ExpressionRep -> epsilon .)
    PLUSEQ          reduce using rule 130 (ExpressionRep -> epsilon .)
    MINUSEQ         reduce using rule 130 (ExpressionRep -> epsilon .)
    TIMESEQ         reduce using rule 130 (ExpressionRep -> epsilon .)
    DIVIDEEQ        reduce using rule 130 (ExpressionRep -> epsilon .)
    MODEQ           reduce using rule 130 (ExpressionRep -> epsilon .)
    AMPEQ           reduce using rule 130 (ExpressionRep -> epsilon .)
    OREQ            reduce using rule 130 (ExpressionRep -> epsilon .)
    CAREQ           reduce using rule 130 (ExpressionRep -> epsilon .)
    LLEQ            reduce using rule 130 (ExpressionRep -> epsilon .)
    GGEQ            reduce using rule 130 (ExpressionRep -> epsilon .)
    EQUAL           reduce using rule 130 (ExpressionRep -> epsilon .)
    SEMICOL         reduce using rule 130 (ExpressionRep -> epsilon .)
    RPAREN          reduce using rule 130 (ExpressionRep -> epsilon .)
    LBRACE          reduce using rule 130 (ExpressionRep -> epsilon .)
    COLON           reduce using rule 130 (ExpressionRep -> epsilon .)


state 197

    (73) ExpressionListOpt -> EQUAL ExpressionList .

    SEMICOL         reduce using rule 73 (ExpressionListOpt -> EQUAL ExpressionList .)


state 198

    (61) TypeSpecRep -> TypeSpecRep TypeSpec SEMICOL .

    RPAREN          reduce using rule 61 (TypeSpecRep -> TypeSpecRep TypeSpec SEMICOL .)
    IDENTIFIER      reduce using rule 61 (TypeSpecRep -> TypeSpecRep TypeSpec SEMICOL .)


state 199

    (16) FieldDeclRep -> FieldDeclRep FieldDecl . SEMICOL

    SEMICOL         shift and go to state 252


state 200

    (18) FieldDecl -> IdentifierList . Type TagOpt
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 61
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    Type                           shift and go to state 253
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    TypeLit                        shift and go to state 55

state 201

    (15) StructType -> STRUCT LBRACE FieldDeclRep RBRACE .

    LPAREN          reduce using rule 15 (StructType -> STRUCT LBRACE FieldDeclRep RBRACE .)
    EQUAL           reduce using rule 15 (StructType -> STRUCT LBRACE FieldDeclRep RBRACE .)
    SEMICOL         reduce using rule 15 (StructType -> STRUCT LBRACE FieldDeclRep RBRACE .)
    RPAREN          reduce using rule 15 (StructType -> STRUCT LBRACE FieldDeclRep RBRACE .)
    LBRACE          reduce using rule 15 (StructType -> STRUCT LBRACE FieldDeclRep RBRACE .)
    COMMA           reduce using rule 15 (StructType -> STRUCT LBRACE FieldDeclRep RBRACE .)
    STRING          reduce using rule 15 (StructType -> STRUCT LBRACE FieldDeclRep RBRACE .)
    COLON           reduce using rule 15 (StructType -> STRUCT LBRACE FieldDeclRep RBRACE .)


state 202

    (120) Slice -> LBRACK ExpressionOpt . COLON ExpressionOpt RBRACK
    (121) Slice -> LBRACK ExpressionOpt . COLON Expression COLON Expression RBRACK

    COLON           shift and go to state 254


state 203

    (134) ExpressionOpt -> epsilon .

    COLON           reduce using rule 134 (ExpressionOpt -> epsilon .)
    RBRACK          reduce using rule 134 (ExpressionOpt -> epsilon .)


state 204

    (119) Index -> LBRACK Expression . RBRACK
    (132) Expression -> Expression . BinaryOp Expression
    (133) ExpressionOpt -> Expression .
    (137) BinaryOp -> . OROR
    (138) BinaryOp -> . AMPAMP
    (139) BinaryOp -> . RelOp
    (140) BinaryOp -> . AddOp
    (141) BinaryOp -> . MulOp
    (142) RelOp -> . EQEQ
    (143) RelOp -> . NOTEQ
    (144) RelOp -> . LESS
    (145) RelOp -> . GREAT
    (146) RelOp -> . LEQ
    (147) RelOp -> . GEQ
    (148) AddOp -> . PLUS
    (149) AddOp -> . MINUS
    (150) AddOp -> . OR
    (151) AddOp -> . CARET
    (152) MulOp -> . TIMES
    (153) MulOp -> . DIVIDE
    (154) MulOp -> . MOD
    (155) MulOp -> . AMPERS
    (156) MulOp -> . LL
    (157) MulOp -> . GG
    (158) MulOp -> . AMPCAR

    RBRACK          shift and go to state 255
    COLON           reduce using rule 133 (ExpressionOpt -> Expression .)
    OROR            shift and go to state 162
    AMPAMP          shift and go to state 168
    EQEQ            shift and go to state 167
    NOTEQ           shift and go to state 173
    LESS            shift and go to state 166
    GREAT           shift and go to state 164
    LEQ             shift and go to state 182
    GEQ             shift and go to state 171
    PLUS            shift and go to state 174
    MINUS           shift and go to state 170
    OR              shift and go to state 183
    CARET           shift and go to state 163
    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 177
    MOD             shift and go to state 184
    AMPERS          shift and go to state 181
    LL              shift and go to state 172
    GG              shift and go to state 179
    AMPCAR          shift and go to state 165

    AddOp                          shift and go to state 176
    MulOp                          shift and go to state 169
    RelOp                          shift and go to state 180
    BinaryOp                       shift and go to state 175

state 205

    (125) ExpressionListTypeOpt -> epsilon .

    RPAREN          reduce using rule 125 (ExpressionListTypeOpt -> epsilon .)


state 206

    (124) ExpressionListTypeOpt -> ExpressionList .

    RPAREN          reduce using rule 124 (ExpressionListTypeOpt -> ExpressionList .)


state 207

    (123) Arguments -> LPAREN ExpressionListTypeOpt . RPAREN

    RPAREN          shift and go to state 256


state 208

    (118) Selector -> DOT IDENTIFIER .

    DOT             reduce using rule 118 (Selector -> DOT IDENTIFIER .)
    LBRACK          reduce using rule 118 (Selector -> DOT IDENTIFIER .)
    LPAREN          reduce using rule 118 (Selector -> DOT IDENTIFIER .)
    OROR            reduce using rule 118 (Selector -> DOT IDENTIFIER .)
    AMPAMP          reduce using rule 118 (Selector -> DOT IDENTIFIER .)
    EQEQ            reduce using rule 118 (Selector -> DOT IDENTIFIER .)
    NOTEQ           reduce using rule 118 (Selector -> DOT IDENTIFIER .)
    LESS            reduce using rule 118 (Selector -> DOT IDENTIFIER .)
    GREAT           reduce using rule 118 (Selector -> DOT IDENTIFIER .)
    LEQ             reduce using rule 118 (Selector -> DOT IDENTIFIER .)
    GEQ             reduce using rule 118 (Selector -> DOT IDENTIFIER .)
    PLUS            reduce using rule 118 (Selector -> DOT IDENTIFIER .)
    MINUS           reduce using rule 118 (Selector -> DOT IDENTIFIER .)
    OR              reduce using rule 118 (Selector -> DOT IDENTIFIER .)
    CARET           reduce using rule 118 (Selector -> DOT IDENTIFIER .)
    TIMES           reduce using rule 118 (Selector -> DOT IDENTIFIER .)
    DIVIDE          reduce using rule 118 (Selector -> DOT IDENTIFIER .)
    MOD             reduce using rule 118 (Selector -> DOT IDENTIFIER .)
    AMPERS          reduce using rule 118 (Selector -> DOT IDENTIFIER .)
    LL              reduce using rule 118 (Selector -> DOT IDENTIFIER .)
    GG              reduce using rule 118 (Selector -> DOT IDENTIFIER .)
    AMPCAR          reduce using rule 118 (Selector -> DOT IDENTIFIER .)
    RBRACK          reduce using rule 118 (Selector -> DOT IDENTIFIER .)
    COMMA           reduce using rule 118 (Selector -> DOT IDENTIFIER .)
    SEMICOL         reduce using rule 118 (Selector -> DOT IDENTIFIER .)
    RPAREN          reduce using rule 118 (Selector -> DOT IDENTIFIER .)
    COLON           reduce using rule 118 (Selector -> DOT IDENTIFIER .)
    PLUSPLUS        reduce using rule 118 (Selector -> DOT IDENTIFIER .)
    MINUSMIN        reduce using rule 118 (Selector -> DOT IDENTIFIER .)
    PLUSEQ          reduce using rule 118 (Selector -> DOT IDENTIFIER .)
    MINUSEQ         reduce using rule 118 (Selector -> DOT IDENTIFIER .)
    TIMESEQ         reduce using rule 118 (Selector -> DOT IDENTIFIER .)
    DIVIDEEQ        reduce using rule 118 (Selector -> DOT IDENTIFIER .)
    MODEQ           reduce using rule 118 (Selector -> DOT IDENTIFIER .)
    AMPEQ           reduce using rule 118 (Selector -> DOT IDENTIFIER .)
    OREQ            reduce using rule 118 (Selector -> DOT IDENTIFIER .)
    CAREQ           reduce using rule 118 (Selector -> DOT IDENTIFIER .)
    LLEQ            reduce using rule 118 (Selector -> DOT IDENTIFIER .)
    GGEQ            reduce using rule 118 (Selector -> DOT IDENTIFIER .)
    EQUAL           reduce using rule 118 (Selector -> DOT IDENTIFIER .)
    LBRACE          reduce using rule 118 (Selector -> DOT IDENTIFIER .)


state 209

    (122) TypeAssertion -> DOT LPAREN . Type RPAREN
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 61
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    Type                           shift and go to state 257
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    TypeLit                        shift and go to state 55

state 210

    (110) Conversion -> Type LPAREN Expression . RPAREN
    (132) Expression -> Expression . BinaryOp Expression
    (137) BinaryOp -> . OROR
    (138) BinaryOp -> . AMPAMP
    (139) BinaryOp -> . RelOp
    (140) BinaryOp -> . AddOp
    (141) BinaryOp -> . MulOp
    (142) RelOp -> . EQEQ
    (143) RelOp -> . NOTEQ
    (144) RelOp -> . LESS
    (145) RelOp -> . GREAT
    (146) RelOp -> . LEQ
    (147) RelOp -> . GEQ
    (148) AddOp -> . PLUS
    (149) AddOp -> . MINUS
    (150) AddOp -> . OR
    (151) AddOp -> . CARET
    (152) MulOp -> . TIMES
    (153) MulOp -> . DIVIDE
    (154) MulOp -> . MOD
    (155) MulOp -> . AMPERS
    (156) MulOp -> . LL
    (157) MulOp -> . GG
    (158) MulOp -> . AMPCAR

    RPAREN          shift and go to state 258
    OROR            shift and go to state 162
    AMPAMP          shift and go to state 168
    EQEQ            shift and go to state 167
    NOTEQ           shift and go to state 173
    LESS            shift and go to state 166
    GREAT           shift and go to state 164
    LEQ             shift and go to state 182
    GEQ             shift and go to state 171
    PLUS            shift and go to state 174
    MINUS           shift and go to state 170
    OR              shift and go to state 183
    CARET           shift and go to state 163
    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 177
    MOD             shift and go to state 184
    AMPERS          shift and go to state 181
    LL              shift and go to state 172
    GG              shift and go to state 179
    AMPCAR          shift and go to state 165

    AddOp                          shift and go to state 176
    RelOp                          shift and go to state 180
    BinaryOp                       shift and go to state 175
    MulOp                          shift and go to state 169

state 211

    (14) ElementType -> Type .

    EQUAL           reduce using rule 14 (ElementType -> Type .)
    SEMICOL         reduce using rule 14 (ElementType -> Type .)
    RPAREN          reduce using rule 14 (ElementType -> Type .)
    LBRACE          reduce using rule 14 (ElementType -> Type .)
    COMMA           reduce using rule 14 (ElementType -> Type .)
    LPAREN          reduce using rule 14 (ElementType -> Type .)
    STRING          reduce using rule 14 (ElementType -> Type .)
    COLON           reduce using rule 14 (ElementType -> Type .)


state 212

    (12) ArrayType -> LBRACK ArrayLength RBRACK ElementType .

    RPAREN          reduce using rule 12 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    COMMA           reduce using rule 12 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    SEMICOL         reduce using rule 12 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    LPAREN          reduce using rule 12 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    COLON           reduce using rule 12 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    EQUAL           reduce using rule 12 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    STRING          reduce using rule 12 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    LBRACE          reduce using rule 12 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)


state 213

    (22) PointerType -> TIMES . BaseType
    (161) UnaryOp -> TIMES .
    (23) BaseType -> . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            reduce using rule 161 (UnaryOp -> TIMES .)
    MINUS           reduce using rule 161 (UnaryOp -> TIMES .)
    TIMES           reduce using rule 161 (UnaryOp -> TIMES .)
    AMPERS          reduce using rule 161 (UnaryOp -> TIMES .)
    NOT             reduce using rule 161 (UnaryOp -> TIMES .)
    LPAREN          reduce using rule 161 (UnaryOp -> TIMES .)
    IDENTIFIER      reduce using rule 161 (UnaryOp -> TIMES .)
    INTEGER         reduce using rule 161 (UnaryOp -> TIMES .)
    FLOAT           reduce using rule 161 (UnaryOp -> TIMES .)
    IMAGINARY       reduce using rule 161 (UnaryOp -> TIMES .)
    RUNE            reduce using rule 161 (UnaryOp -> TIMES .)
    STRING          reduce using rule 161 (UnaryOp -> TIMES .)
    TYPEX           reduce using rule 161 (UnaryOp -> TIMES .)
    LBRACK          reduce using rule 161 (UnaryOp -> TIMES .)
    STRUCT          reduce using rule 161 (UnaryOp -> TIMES .)
    FUNC            reduce using rule 161 (UnaryOp -> TIMES .)

  ! LPAREN          [ shift and go to state 61 ]
  ! TYPEX           [ shift and go to state 57 ]
  ! LBRACK          [ shift and go to state 64 ]
  ! STRUCT          [ shift and go to state 63 ]
  ! TIMES           [ shift and go to state 60 ]
  ! FUNC            [ shift and go to state 52 ]

    StructType                     shift and go to state 58
    BaseType                       shift and go to state 88
    Type                           shift and go to state 87
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    TypeLit                        shift and go to state 55

state 214

    (84) Operand -> LPAREN Expression RPAREN .

    DOT             reduce using rule 84 (Operand -> LPAREN Expression RPAREN .)
    LBRACK          reduce using rule 84 (Operand -> LPAREN Expression RPAREN .)
    LPAREN          reduce using rule 84 (Operand -> LPAREN Expression RPAREN .)
    OROR            reduce using rule 84 (Operand -> LPAREN Expression RPAREN .)
    AMPAMP          reduce using rule 84 (Operand -> LPAREN Expression RPAREN .)
    EQEQ            reduce using rule 84 (Operand -> LPAREN Expression RPAREN .)
    NOTEQ           reduce using rule 84 (Operand -> LPAREN Expression RPAREN .)
    LESS            reduce using rule 84 (Operand -> LPAREN Expression RPAREN .)
    GREAT           reduce using rule 84 (Operand -> LPAREN Expression RPAREN .)
    LEQ             reduce using rule 84 (Operand -> LPAREN Expression RPAREN .)
    GEQ             reduce using rule 84 (Operand -> LPAREN Expression RPAREN .)
    PLUS            reduce using rule 84 (Operand -> LPAREN Expression RPAREN .)
    MINUS           reduce using rule 84 (Operand -> LPAREN Expression RPAREN .)
    OR              reduce using rule 84 (Operand -> LPAREN Expression RPAREN .)
    CARET           reduce using rule 84 (Operand -> LPAREN Expression RPAREN .)
    TIMES           reduce using rule 84 (Operand -> LPAREN Expression RPAREN .)
    DIVIDE          reduce using rule 84 (Operand -> LPAREN Expression RPAREN .)
    MOD             reduce using rule 84 (Operand -> LPAREN Expression RPAREN .)
    AMPERS          reduce using rule 84 (Operand -> LPAREN Expression RPAREN .)
    LL              reduce using rule 84 (Operand -> LPAREN Expression RPAREN .)
    GG              reduce using rule 84 (Operand -> LPAREN Expression RPAREN .)
    AMPCAR          reduce using rule 84 (Operand -> LPAREN Expression RPAREN .)
    COMMA           reduce using rule 84 (Operand -> LPAREN Expression RPAREN .)
    SEMICOL         reduce using rule 84 (Operand -> LPAREN Expression RPAREN .)
    PLUSPLUS        reduce using rule 84 (Operand -> LPAREN Expression RPAREN .)
    MINUSMIN        reduce using rule 84 (Operand -> LPAREN Expression RPAREN .)
    LBRACE          reduce using rule 84 (Operand -> LPAREN Expression RPAREN .)
    PLUSEQ          reduce using rule 84 (Operand -> LPAREN Expression RPAREN .)
    MINUSEQ         reduce using rule 84 (Operand -> LPAREN Expression RPAREN .)
    TIMESEQ         reduce using rule 84 (Operand -> LPAREN Expression RPAREN .)
    DIVIDEEQ        reduce using rule 84 (Operand -> LPAREN Expression RPAREN .)
    MODEQ           reduce using rule 84 (Operand -> LPAREN Expression RPAREN .)
    AMPEQ           reduce using rule 84 (Operand -> LPAREN Expression RPAREN .)
    OREQ            reduce using rule 84 (Operand -> LPAREN Expression RPAREN .)
    CAREQ           reduce using rule 84 (Operand -> LPAREN Expression RPAREN .)
    LLEQ            reduce using rule 84 (Operand -> LPAREN Expression RPAREN .)
    GGEQ            reduce using rule 84 (Operand -> LPAREN Expression RPAREN .)
    EQUAL           reduce using rule 84 (Operand -> LPAREN Expression RPAREN .)
    RPAREN          reduce using rule 84 (Operand -> LPAREN Expression RPAREN .)
    COLON           reduce using rule 84 (Operand -> LPAREN Expression RPAREN .)
    RBRACK          reduce using rule 84 (Operand -> LPAREN Expression RPAREN .)


state 215

    (132) Expression -> Expression BinaryOp Expression .
    (132) Expression -> Expression . BinaryOp Expression
    (137) BinaryOp -> . OROR
    (138) BinaryOp -> . AMPAMP
    (139) BinaryOp -> . RelOp
    (140) BinaryOp -> . AddOp
    (141) BinaryOp -> . MulOp
    (142) RelOp -> . EQEQ
    (143) RelOp -> . NOTEQ
    (144) RelOp -> . LESS
    (145) RelOp -> . GREAT
    (146) RelOp -> . LEQ
    (147) RelOp -> . GEQ
    (148) AddOp -> . PLUS
    (149) AddOp -> . MINUS
    (150) AddOp -> . OR
    (151) AddOp -> . CARET
    (152) MulOp -> . TIMES
    (153) MulOp -> . DIVIDE
    (154) MulOp -> . MOD
    (155) MulOp -> . AMPERS
    (156) MulOp -> . LL
    (157) MulOp -> . GG
    (158) MulOp -> . AMPCAR

  ! shift/reduce conflict for OROR resolved as shift
  ! shift/reduce conflict for AMPAMP resolved as shift
  ! shift/reduce conflict for EQEQ resolved as shift
  ! shift/reduce conflict for NOTEQ resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREAT resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for CARET resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for AMPERS resolved as shift
  ! shift/reduce conflict for LL resolved as shift
  ! shift/reduce conflict for GG resolved as shift
  ! shift/reduce conflict for AMPCAR resolved as shift
    LBRACE          reduce using rule 132 (Expression -> Expression BinaryOp Expression .)
    PLUSPLUS        reduce using rule 132 (Expression -> Expression BinaryOp Expression .)
    MINUSMIN        reduce using rule 132 (Expression -> Expression BinaryOp Expression .)
    COMMA           reduce using rule 132 (Expression -> Expression BinaryOp Expression .)
    PLUSEQ          reduce using rule 132 (Expression -> Expression BinaryOp Expression .)
    MINUSEQ         reduce using rule 132 (Expression -> Expression BinaryOp Expression .)
    TIMESEQ         reduce using rule 132 (Expression -> Expression BinaryOp Expression .)
    DIVIDEEQ        reduce using rule 132 (Expression -> Expression BinaryOp Expression .)
    MODEQ           reduce using rule 132 (Expression -> Expression BinaryOp Expression .)
    AMPEQ           reduce using rule 132 (Expression -> Expression BinaryOp Expression .)
    OREQ            reduce using rule 132 (Expression -> Expression BinaryOp Expression .)
    CAREQ           reduce using rule 132 (Expression -> Expression BinaryOp Expression .)
    LLEQ            reduce using rule 132 (Expression -> Expression BinaryOp Expression .)
    GGEQ            reduce using rule 132 (Expression -> Expression BinaryOp Expression .)
    EQUAL           reduce using rule 132 (Expression -> Expression BinaryOp Expression .)
    SEMICOL         reduce using rule 132 (Expression -> Expression BinaryOp Expression .)
    RBRACK          reduce using rule 132 (Expression -> Expression BinaryOp Expression .)
    RPAREN          reduce using rule 132 (Expression -> Expression BinaryOp Expression .)
    COLON           reduce using rule 132 (Expression -> Expression BinaryOp Expression .)
    OROR            shift and go to state 162
    AMPAMP          shift and go to state 168
    EQEQ            shift and go to state 167
    NOTEQ           shift and go to state 173
    LESS            shift and go to state 166
    GREAT           shift and go to state 164
    LEQ             shift and go to state 182
    GEQ             shift and go to state 171
    PLUS            shift and go to state 174
    MINUS           shift and go to state 170
    OR              shift and go to state 183
    CARET           shift and go to state 163
    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 177
    MOD             shift and go to state 184
    AMPERS          shift and go to state 181
    LL              shift and go to state 172
    GG              shift and go to state 179
    AMPCAR          shift and go to state 165

  ! OROR            [ reduce using rule 132 (Expression -> Expression BinaryOp Expression .) ]
  ! AMPAMP          [ reduce using rule 132 (Expression -> Expression BinaryOp Expression .) ]
  ! EQEQ            [ reduce using rule 132 (Expression -> Expression BinaryOp Expression .) ]
  ! NOTEQ           [ reduce using rule 132 (Expression -> Expression BinaryOp Expression .) ]
  ! LESS            [ reduce using rule 132 (Expression -> Expression BinaryOp Expression .) ]
  ! GREAT           [ reduce using rule 132 (Expression -> Expression BinaryOp Expression .) ]
  ! LEQ             [ reduce using rule 132 (Expression -> Expression BinaryOp Expression .) ]
  ! GEQ             [ reduce using rule 132 (Expression -> Expression BinaryOp Expression .) ]
  ! PLUS            [ reduce using rule 132 (Expression -> Expression BinaryOp Expression .) ]
  ! MINUS           [ reduce using rule 132 (Expression -> Expression BinaryOp Expression .) ]
  ! OR              [ reduce using rule 132 (Expression -> Expression BinaryOp Expression .) ]
  ! CARET           [ reduce using rule 132 (Expression -> Expression BinaryOp Expression .) ]
  ! TIMES           [ reduce using rule 132 (Expression -> Expression BinaryOp Expression .) ]
  ! DIVIDE          [ reduce using rule 132 (Expression -> Expression BinaryOp Expression .) ]
  ! MOD             [ reduce using rule 132 (Expression -> Expression BinaryOp Expression .) ]
  ! AMPERS          [ reduce using rule 132 (Expression -> Expression BinaryOp Expression .) ]
  ! LL              [ reduce using rule 132 (Expression -> Expression BinaryOp Expression .) ]
  ! GG              [ reduce using rule 132 (Expression -> Expression BinaryOp Expression .) ]
  ! AMPCAR          [ reduce using rule 132 (Expression -> Expression BinaryOp Expression .) ]

    AddOp                          shift and go to state 176
    MulOp                          shift and go to state 169
    RelOp                          shift and go to state 180
    BinaryOp                       shift and go to state 175

state 216

    (169) Statement -> ContinueStmt .

    SEMICOL         reduce using rule 169 (Statement -> ContinueStmt .)


state 217

    (176) SimpleStmt -> ExpressionStmt .

    SEMICOL         reduce using rule 176 (SimpleStmt -> ExpressionStmt .)
    LBRACE          reduce using rule 176 (SimpleStmt -> ExpressionStmt .)


state 218

    (42) StatementRep -> StatementRep Statement . SEMICOL

    SEMICOL         shift and go to state 259


state 219

    (178) SimpleStmt -> Assignment .

    SEMICOL         reduce using rule 178 (SimpleStmt -> Assignment .)
    LBRACE          reduce using rule 178 (SimpleStmt -> Assignment .)


state 220

    (165) Statement -> LabeledStmt .

    SEMICOL         reduce using rule 165 (Statement -> LabeledStmt .)


state 221

    (205) SwitchStmt -> TypeSwitchStmt .

    SEMICOL         reduce using rule 205 (SwitchStmt -> TypeSwitchStmt .)


state 222

    (236) ReturnStmt -> RETURN . ExpressionListPureOpt
    (237) ExpressionListPureOpt -> . ExpressionList
    (238) ExpressionListPureOpt -> . epsilon
    (128) ExpressionList -> . Expression ExpressionRep
    (260) epsilon -> .
    (131) Expression -> . UnaryExpr
    (132) Expression -> . Expression BinaryOp Expression
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (111) PrimaryExpr -> . Operand
    (112) PrimaryExpr -> . Conversion
    (113) PrimaryExpr -> . PrimaryExpr Selector
    (114) PrimaryExpr -> . PrimaryExpr Index
    (115) PrimaryExpr -> . PrimaryExpr Slice
    (116) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (117) PrimaryExpr -> . PrimaryExpr Arguments
    (159) UnaryOp -> . PLUS
    (160) UnaryOp -> . MINUS
    (161) UnaryOp -> . TIMES
    (162) UnaryOp -> . AMPERS
    (163) UnaryOp -> . NOT
    (82) Operand -> . Literal
    (83) Operand -> . OperandName
    (84) Operand -> . LPAREN Expression RPAREN
    (110) Conversion -> . Type LPAREN Expression RPAREN
    (85) Literal -> . BasicLit
    (91) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (86) BasicLit -> . INTEGER
    (87) BasicLit -> . FLOAT
    (88) BasicLit -> . IMAGINARY
    (89) BasicLit -> . RUNE
    (90) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    SEMICOL         reduce using rule 260 (epsilon -> .)
    PLUS            shift and go to state 101
    MINUS           shift and go to state 97
    TIMES           shift and go to state 107
    AMPERS          shift and go to state 112
    NOT             shift and go to state 98
    LPAREN          shift and go to state 109
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 111
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 105
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    UnaryOp                        shift and go to state 93
    PrimaryExpr                    shift and go to state 94
    Conversion                     shift and go to state 92
    ExpressionListPureOpt          shift and go to state 260
    Literal                        shift and go to state 95
    Type                           shift and go to state 100
    OperandName                    shift and go to state 99
    BasicLit                       shift and go to state 113
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    epsilon                        shift and go to state 261
    UnaryExpr                      shift and go to state 106
    ExpressionList                 shift and go to state 262
    ArrayType                      shift and go to state 53
    Expression                     shift and go to state 135
    PointerType                    shift and go to state 66
    TypeLit                        shift and go to state 55
    Operand                        shift and go to state 114
    FunctionType                   shift and go to state 67

state 223

    (180) LabeledStmt -> Label . COLON Statement

    COLON           shift and go to state 263


state 224

    (204) SwitchStmt -> ExprSwitchStmt .

    SEMICOL         reduce using rule 204 (SwitchStmt -> ExprSwitchStmt .)


state 225

    (172) Statement -> IfStmt .

    SEMICOL         reduce using rule 172 (Statement -> IfStmt .)


state 226

    (177) SimpleStmt -> IncDecStmt .

    SEMICOL         reduce using rule 177 (SimpleStmt -> IncDecStmt .)
    LBRACE          reduce using rule 177 (SimpleStmt -> IncDecStmt .)


state 227

    (170) Statement -> GotoStmt .

    SEMICOL         reduce using rule 170 (Statement -> GotoStmt .)


state 228

    (224) ForStmt -> FOR . ConditionBlockOpt Block
    (225) ConditionBlockOpt -> . epsilon
    (226) ConditionBlockOpt -> . Condition
    (227) ConditionBlockOpt -> . ForClause
    (260) epsilon -> .
    (228) Condition -> . Expression
    (229) ForClause -> . SimpleStmt SEMICOL ConditionOpt SEMICOL SimpleStmt
    (131) Expression -> . UnaryExpr
    (132) Expression -> . Expression BinaryOp Expression
    (175) SimpleStmt -> . epsilon
    (176) SimpleStmt -> . ExpressionStmt
    (177) SimpleStmt -> . IncDecStmt
    (178) SimpleStmt -> . Assignment
    (179) SimpleStmt -> . ShortVarDecl
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (182) ExpressionStmt -> . Expression
    (183) IncDecStmt -> . Expression PLUSPLUS
    (184) IncDecStmt -> . Expression MINUSMIN
    (185) Assignment -> . ExpressionList assign_op ExpressionList
    (75) ShortVarDecl -> . IDENTIFIER COLONEQ Expression
    (111) PrimaryExpr -> . Operand
    (112) PrimaryExpr -> . Conversion
    (113) PrimaryExpr -> . PrimaryExpr Selector
    (114) PrimaryExpr -> . PrimaryExpr Index
    (115) PrimaryExpr -> . PrimaryExpr Slice
    (116) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (117) PrimaryExpr -> . PrimaryExpr Arguments
    (159) UnaryOp -> . PLUS
    (160) UnaryOp -> . MINUS
    (161) UnaryOp -> . TIMES
    (162) UnaryOp -> . AMPERS
    (163) UnaryOp -> . NOT
    (128) ExpressionList -> . Expression ExpressionRep
    (82) Operand -> . Literal
    (83) Operand -> . OperandName
    (84) Operand -> . LPAREN Expression RPAREN
    (110) Conversion -> . Type LPAREN Expression RPAREN
    (85) Literal -> . BasicLit
    (91) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (86) BasicLit -> . INTEGER
    (87) BasicLit -> . FLOAT
    (88) BasicLit -> . IMAGINARY
    (89) BasicLit -> . RUNE
    (90) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    LBRACE          reduce using rule 260 (epsilon -> .)
    SEMICOL         reduce using rule 260 (epsilon -> .)
    IDENTIFIER      shift and go to state 265
    PLUS            shift and go to state 101
    MINUS           shift and go to state 97
    TIMES           shift and go to state 107
    AMPERS          shift and go to state 112
    NOT             shift and go to state 98
    LPAREN          shift and go to state 109
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 111
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 105
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 92
    UnaryOp                        shift and go to state 93
    SimpleStmt                     shift and go to state 264
    ExpressionStmt                 shift and go to state 217
    PointerType                    shift and go to state 66
    Type                           shift and go to state 100
    OperandName                    shift and go to state 99
    Assignment                     shift and go to state 219
    TypeName                       shift and go to state 56
    IncDecStmt                     shift and go to state 226
    Condition                      shift and go to state 266
    StructType                     shift and go to state 58
    epsilon                        shift and go to state 267
    UnaryExpr                      shift and go to state 106
    ConditionBlockOpt              shift and go to state 268
    PrimaryExpr                    shift and go to state 94
    ExpressionList                 shift and go to state 236
    ArrayType                      shift and go to state 53
    ForClause                      shift and go to state 269
    Expression                     shift and go to state 270
    ShortVarDecl                   shift and go to state 243
    Literal                        shift and go to state 95
    TypeLit                        shift and go to state 55
    BasicLit                       shift and go to state 113
    Operand                        shift and go to state 114
    FunctionType                   shift and go to state 67

state 229

    (171) Statement -> Block .

    SEMICOL         reduce using rule 171 (Statement -> Block .)


state 230

    (173) Statement -> SwitchStmt .

    SEMICOL         reduce using rule 173 (Statement -> SwitchStmt .)


state 231

    (240) ContinueStmt -> CONTINUE . LabelOpt
    (241) LabelOpt -> . Label
    (242) LabelOpt -> . epsilon
    (181) Label -> . IDENTIFIER
    (260) epsilon -> .

    IDENTIFIER      shift and go to state 272
    SEMICOL         reduce using rule 260 (epsilon -> .)

    epsilon                        shift and go to state 271
    LabelOpt                       shift and go to state 273
    Label                          shift and go to state 274

state 232

    (206) ExprSwitchStmt -> SWITCH . ExpressionOpt LBRACE ExprCaseClauseRep RBRACE
    (212) TypeSwitchStmt -> SWITCH . SimpleStmtOpt TypeSwitchGuard LBRACE TypeCaseClauseOpt RBRACE
    (133) ExpressionOpt -> . Expression
    (134) ExpressionOpt -> . epsilon
    (199) SimpleStmtOpt -> . SimpleStmt SEMICOL
    (200) SimpleStmtOpt -> . epsilon
    (131) Expression -> . UnaryExpr
    (132) Expression -> . Expression BinaryOp Expression
    (260) epsilon -> .
    (175) SimpleStmt -> . epsilon
    (176) SimpleStmt -> . ExpressionStmt
    (177) SimpleStmt -> . IncDecStmt
    (178) SimpleStmt -> . Assignment
    (179) SimpleStmt -> . ShortVarDecl
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (182) ExpressionStmt -> . Expression
    (183) IncDecStmt -> . Expression PLUSPLUS
    (184) IncDecStmt -> . Expression MINUSMIN
    (185) Assignment -> . ExpressionList assign_op ExpressionList
    (75) ShortVarDecl -> . IDENTIFIER COLONEQ Expression
    (111) PrimaryExpr -> . Operand
    (112) PrimaryExpr -> . Conversion
    (113) PrimaryExpr -> . PrimaryExpr Selector
    (114) PrimaryExpr -> . PrimaryExpr Index
    (115) PrimaryExpr -> . PrimaryExpr Slice
    (116) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (117) PrimaryExpr -> . PrimaryExpr Arguments
    (159) UnaryOp -> . PLUS
    (160) UnaryOp -> . MINUS
    (161) UnaryOp -> . TIMES
    (162) UnaryOp -> . AMPERS
    (163) UnaryOp -> . NOT
    (128) ExpressionList -> . Expression ExpressionRep
    (82) Operand -> . Literal
    (83) Operand -> . OperandName
    (84) Operand -> . LPAREN Expression RPAREN
    (110) Conversion -> . Type LPAREN Expression RPAREN
    (85) Literal -> . BasicLit
    (91) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (86) BasicLit -> . INTEGER
    (87) BasicLit -> . FLOAT
    (88) BasicLit -> . IMAGINARY
    (89) BasicLit -> . RUNE
    (90) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for IMAGINARY resolved as shift
  ! shift/reduce conflict for RUNE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for TYPEX resolved as shift
  ! shift/reduce conflict for LBRACK resolved as shift
  ! shift/reduce conflict for STRUCT resolved as shift
  ! shift/reduce conflict for FUNC resolved as shift
    LBRACE          reduce using rule 260 (epsilon -> .)
    SEMICOL         reduce using rule 260 (epsilon -> .)
    IDENTIFIER      shift and go to state 265
    PLUS            shift and go to state 101
    MINUS           shift and go to state 97
    TIMES           shift and go to state 107
    AMPERS          shift and go to state 112
    NOT             shift and go to state 98
    LPAREN          shift and go to state 109
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 111
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 105
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

  ! IDENTIFIER      [ reduce using rule 260 (epsilon -> .) ]
  ! LPAREN          [ reduce using rule 260 (epsilon -> .) ]
  ! INTEGER         [ reduce using rule 260 (epsilon -> .) ]
  ! FLOAT           [ reduce using rule 260 (epsilon -> .) ]
  ! IMAGINARY       [ reduce using rule 260 (epsilon -> .) ]
  ! RUNE            [ reduce using rule 260 (epsilon -> .) ]
  ! STRING          [ reduce using rule 260 (epsilon -> .) ]
  ! TYPEX           [ reduce using rule 260 (epsilon -> .) ]
  ! LBRACK          [ reduce using rule 260 (epsilon -> .) ]
  ! STRUCT          [ reduce using rule 260 (epsilon -> .) ]
  ! TIMES           [ reduce using rule 260 (epsilon -> .) ]
  ! FUNC            [ reduce using rule 260 (epsilon -> .) ]

    Conversion                     shift and go to state 92
    UnaryOp                        shift and go to state 93
    SimpleStmt                     shift and go to state 275
    ExpressionStmt                 shift and go to state 217
    Type                           shift and go to state 100
    OperandName                    shift and go to state 99
    Assignment                     shift and go to state 219
    TypeName                       shift and go to state 56
    IncDecStmt                     shift and go to state 226
    ExpressionOpt                  shift and go to state 276
    StructType                     shift and go to state 58
    epsilon                        shift and go to state 277
    UnaryExpr                      shift and go to state 106
    PrimaryExpr                    shift and go to state 94
    SimpleStmtOpt                  shift and go to state 278
    ExpressionList                 shift and go to state 236
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    Expression                     shift and go to state 279
    ShortVarDecl                   shift and go to state 243
    PointerType                    shift and go to state 66
    TypeLit                        shift and go to state 55
    BasicLit                       shift and go to state 113
    Operand                        shift and go to state 114
    FunctionType                   shift and go to state 67

state 233

    (164) Statement -> Declaration .

    SEMICOL         reduce using rule 164 (Statement -> Declaration .)


state 234

    (181) Label -> IDENTIFIER .
    (75) ShortVarDecl -> IDENTIFIER . COLONEQ Expression
    (91) OperandName -> IDENTIFIER .

    COLON           reduce using rule 181 (Label -> IDENTIFIER .)
    COLONEQ         shift and go to state 280
    DOT             reduce using rule 91 (OperandName -> IDENTIFIER .)
    LBRACK          reduce using rule 91 (OperandName -> IDENTIFIER .)
    LPAREN          reduce using rule 91 (OperandName -> IDENTIFIER .)
    PLUSPLUS        reduce using rule 91 (OperandName -> IDENTIFIER .)
    MINUSMIN        reduce using rule 91 (OperandName -> IDENTIFIER .)
    OROR            reduce using rule 91 (OperandName -> IDENTIFIER .)
    AMPAMP          reduce using rule 91 (OperandName -> IDENTIFIER .)
    EQEQ            reduce using rule 91 (OperandName -> IDENTIFIER .)
    NOTEQ           reduce using rule 91 (OperandName -> IDENTIFIER .)
    LESS            reduce using rule 91 (OperandName -> IDENTIFIER .)
    GREAT           reduce using rule 91 (OperandName -> IDENTIFIER .)
    LEQ             reduce using rule 91 (OperandName -> IDENTIFIER .)
    GEQ             reduce using rule 91 (OperandName -> IDENTIFIER .)
    PLUS            reduce using rule 91 (OperandName -> IDENTIFIER .)
    MINUS           reduce using rule 91 (OperandName -> IDENTIFIER .)
    OR              reduce using rule 91 (OperandName -> IDENTIFIER .)
    CARET           reduce using rule 91 (OperandName -> IDENTIFIER .)
    TIMES           reduce using rule 91 (OperandName -> IDENTIFIER .)
    DIVIDE          reduce using rule 91 (OperandName -> IDENTIFIER .)
    MOD             reduce using rule 91 (OperandName -> IDENTIFIER .)
    AMPERS          reduce using rule 91 (OperandName -> IDENTIFIER .)
    LL              reduce using rule 91 (OperandName -> IDENTIFIER .)
    GG              reduce using rule 91 (OperandName -> IDENTIFIER .)
    AMPCAR          reduce using rule 91 (OperandName -> IDENTIFIER .)
    COMMA           reduce using rule 91 (OperandName -> IDENTIFIER .)
    SEMICOL         reduce using rule 91 (OperandName -> IDENTIFIER .)
    PLUSEQ          reduce using rule 91 (OperandName -> IDENTIFIER .)
    MINUSEQ         reduce using rule 91 (OperandName -> IDENTIFIER .)
    TIMESEQ         reduce using rule 91 (OperandName -> IDENTIFIER .)
    DIVIDEEQ        reduce using rule 91 (OperandName -> IDENTIFIER .)
    MODEQ           reduce using rule 91 (OperandName -> IDENTIFIER .)
    AMPEQ           reduce using rule 91 (OperandName -> IDENTIFIER .)
    OREQ            reduce using rule 91 (OperandName -> IDENTIFIER .)
    CAREQ           reduce using rule 91 (OperandName -> IDENTIFIER .)
    LLEQ            reduce using rule 91 (OperandName -> IDENTIFIER .)
    GGEQ            reduce using rule 91 (OperandName -> IDENTIFIER .)
    EQUAL           reduce using rule 91 (OperandName -> IDENTIFIER .)


state 235

    (175) SimpleStmt -> epsilon .

    SEMICOL         reduce using rule 175 (SimpleStmt -> epsilon .)
    LBRACE          reduce using rule 175 (SimpleStmt -> epsilon .)


state 236

    (185) Assignment -> ExpressionList . assign_op ExpressionList
    (186) assign_op -> . AssignOp
    (187) AssignOp -> . PLUSEQ
    (188) AssignOp -> . MINUSEQ
    (189) AssignOp -> . TIMESEQ
    (190) AssignOp -> . DIVIDEEQ
    (191) AssignOp -> . MODEQ
    (192) AssignOp -> . AMPEQ
    (193) AssignOp -> . OREQ
    (194) AssignOp -> . CAREQ
    (195) AssignOp -> . LLEQ
    (196) AssignOp -> . GGEQ
    (197) AssignOp -> . EQUAL

    PLUSEQ          shift and go to state 285
    MINUSEQ         shift and go to state 290
    TIMESEQ         shift and go to state 284
    DIVIDEEQ        shift and go to state 293
    MODEQ           shift and go to state 286
    AMPEQ           shift and go to state 291
    OREQ            shift and go to state 289
    CAREQ           shift and go to state 283
    LLEQ            shift and go to state 288
    GGEQ            shift and go to state 287
    EQUAL           shift and go to state 282

    AssignOp                       shift and go to state 281
    assign_op                      shift and go to state 292

state 237

    (182) ExpressionStmt -> Expression .
    (183) IncDecStmt -> Expression . PLUSPLUS
    (184) IncDecStmt -> Expression . MINUSMIN
    (132) Expression -> Expression . BinaryOp Expression
    (128) ExpressionList -> Expression . ExpressionRep
    (137) BinaryOp -> . OROR
    (138) BinaryOp -> . AMPAMP
    (139) BinaryOp -> . RelOp
    (140) BinaryOp -> . AddOp
    (141) BinaryOp -> . MulOp
    (129) ExpressionRep -> . ExpressionRep COMMA Expression
    (130) ExpressionRep -> . epsilon
    (142) RelOp -> . EQEQ
    (143) RelOp -> . NOTEQ
    (144) RelOp -> . LESS
    (145) RelOp -> . GREAT
    (146) RelOp -> . LEQ
    (147) RelOp -> . GEQ
    (148) AddOp -> . PLUS
    (149) AddOp -> . MINUS
    (150) AddOp -> . OR
    (151) AddOp -> . CARET
    (152) MulOp -> . TIMES
    (153) MulOp -> . DIVIDE
    (154) MulOp -> . MOD
    (155) MulOp -> . AMPERS
    (156) MulOp -> . LL
    (157) MulOp -> . GG
    (158) MulOp -> . AMPCAR
    (260) epsilon -> .

    LBRACE          reduce using rule 182 (ExpressionStmt -> Expression .)
    SEMICOL         reduce using rule 182 (ExpressionStmt -> Expression .)
    PLUSPLUS        shift and go to state 294
    MINUSMIN        shift and go to state 295
    OROR            shift and go to state 162
    AMPAMP          shift and go to state 168
    EQEQ            shift and go to state 167
    NOTEQ           shift and go to state 173
    LESS            shift and go to state 166
    GREAT           shift and go to state 164
    LEQ             shift and go to state 182
    GEQ             shift and go to state 171
    PLUS            shift and go to state 174
    MINUS           shift and go to state 170
    OR              shift and go to state 183
    CARET           shift and go to state 163
    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 177
    MOD             shift and go to state 184
    AMPERS          shift and go to state 181
    LL              shift and go to state 172
    GG              shift and go to state 179
    AMPCAR          shift and go to state 165
    COMMA           reduce using rule 260 (epsilon -> .)
    PLUSEQ          reduce using rule 260 (epsilon -> .)
    MINUSEQ         reduce using rule 260 (epsilon -> .)
    TIMESEQ         reduce using rule 260 (epsilon -> .)
    DIVIDEEQ        reduce using rule 260 (epsilon -> .)
    MODEQ           reduce using rule 260 (epsilon -> .)
    AMPEQ           reduce using rule 260 (epsilon -> .)
    OREQ            reduce using rule 260 (epsilon -> .)
    CAREQ           reduce using rule 260 (epsilon -> .)
    LLEQ            reduce using rule 260 (epsilon -> .)
    GGEQ            reduce using rule 260 (epsilon -> .)
    EQUAL           reduce using rule 260 (epsilon -> .)

    AddOp                          shift and go to state 176
    ExpressionRep                  shift and go to state 195
    RelOp                          shift and go to state 180
    epsilon                        shift and go to state 196
    BinaryOp                       shift and go to state 175
    MulOp                          shift and go to state 169

state 238

    (239) BreakStmt -> BREAK . LabelOpt
    (241) LabelOpt -> . Label
    (242) LabelOpt -> . epsilon
    (181) Label -> . IDENTIFIER
    (260) epsilon -> .

    IDENTIFIER      shift and go to state 272
    SEMICOL         reduce using rule 260 (epsilon -> .)

    epsilon                        shift and go to state 271
    LabelOpt                       shift and go to state 296
    Label                          shift and go to state 274

state 239

    (167) Statement -> ReturnStmt .

    SEMICOL         reduce using rule 167 (Statement -> ReturnStmt .)


state 240

    (166) Statement -> SimpleStmt .

    SEMICOL         reduce using rule 166 (Statement -> SimpleStmt .)


state 241

    (174) Statement -> ForStmt .

    SEMICOL         reduce using rule 174 (Statement -> ForStmt .)


state 242

    (243) GotoStmt -> GOTO . Label
    (181) Label -> . IDENTIFIER

    IDENTIFIER      shift and go to state 272

    Label                          shift and go to state 297

state 243

    (179) SimpleStmt -> ShortVarDecl .

    SEMICOL         reduce using rule 179 (SimpleStmt -> ShortVarDecl .)
    LBRACE          reduce using rule 179 (SimpleStmt -> ShortVarDecl .)


state 244

    (198) IfStmt -> IF . Expression Block ElseOpt
    (131) Expression -> . UnaryExpr
    (132) Expression -> . Expression BinaryOp Expression
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (111) PrimaryExpr -> . Operand
    (112) PrimaryExpr -> . Conversion
    (113) PrimaryExpr -> . PrimaryExpr Selector
    (114) PrimaryExpr -> . PrimaryExpr Index
    (115) PrimaryExpr -> . PrimaryExpr Slice
    (116) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (117) PrimaryExpr -> . PrimaryExpr Arguments
    (159) UnaryOp -> . PLUS
    (160) UnaryOp -> . MINUS
    (161) UnaryOp -> . TIMES
    (162) UnaryOp -> . AMPERS
    (163) UnaryOp -> . NOT
    (82) Operand -> . Literal
    (83) Operand -> . OperandName
    (84) Operand -> . LPAREN Expression RPAREN
    (110) Conversion -> . Type LPAREN Expression RPAREN
    (85) Literal -> . BasicLit
    (91) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (86) BasicLit -> . INTEGER
    (87) BasicLit -> . FLOAT
    (88) BasicLit -> . IMAGINARY
    (89) BasicLit -> . RUNE
    (90) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 101
    MINUS           shift and go to state 97
    TIMES           shift and go to state 107
    AMPERS          shift and go to state 112
    NOT             shift and go to state 98
    LPAREN          shift and go to state 109
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 111
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 105
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 92
    UnaryOp                        shift and go to state 93
    PrimaryExpr                    shift and go to state 94
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    PointerType                    shift and go to state 66
    Type                           shift and go to state 100
    OperandName                    shift and go to state 99
    BasicLit                       shift and go to state 113
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    UnaryExpr                      shift and go to state 106
    Expression                     shift and go to state 298
    TypeLit                        shift and go to state 55
    Operand                        shift and go to state 114
    FunctionType                   shift and go to state 67

state 245

    (168) Statement -> BreakStmt .

    SEMICOL         reduce using rule 168 (Statement -> BreakStmt .)


state 246

    (40) Block -> LBRACE StatementList RBRACE .

    ELSE            reduce using rule 40 (Block -> LBRACE StatementList RBRACE .)
    SEMICOL         reduce using rule 40 (Block -> LBRACE StatementList RBRACE .)


state 247

    (38) ParameterDecl -> IdentifierList . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 61
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    Type                           shift and go to state 299
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    TypeLit                        shift and go to state 55

state 248

    (39) ParameterDecl -> Type .

    COMMA           reduce using rule 39 (ParameterDecl -> Type .)
    RPAREN          reduce using rule 39 (ParameterDecl -> Type .)


state 249

    (36) ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA ParameterDecl .

    COMMA           reduce using rule 36 (ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA ParameterDecl .)
    RPAREN          reduce using rule 36 (ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA ParameterDecl .)


state 250

    (37) ParameterDeclCommaRep -> ParameterDecl COMMA ParameterDecl .

    COMMA           reduce using rule 37 (ParameterDeclCommaRep -> ParameterDecl COMMA ParameterDecl .)
    RPAREN          reduce using rule 37 (ParameterDeclCommaRep -> ParameterDecl COMMA ParameterDecl .)


state 251

    (129) ExpressionRep -> ExpressionRep COMMA . Expression
    (131) Expression -> . UnaryExpr
    (132) Expression -> . Expression BinaryOp Expression
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (111) PrimaryExpr -> . Operand
    (112) PrimaryExpr -> . Conversion
    (113) PrimaryExpr -> . PrimaryExpr Selector
    (114) PrimaryExpr -> . PrimaryExpr Index
    (115) PrimaryExpr -> . PrimaryExpr Slice
    (116) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (117) PrimaryExpr -> . PrimaryExpr Arguments
    (159) UnaryOp -> . PLUS
    (160) UnaryOp -> . MINUS
    (161) UnaryOp -> . TIMES
    (162) UnaryOp -> . AMPERS
    (163) UnaryOp -> . NOT
    (82) Operand -> . Literal
    (83) Operand -> . OperandName
    (84) Operand -> . LPAREN Expression RPAREN
    (110) Conversion -> . Type LPAREN Expression RPAREN
    (85) Literal -> . BasicLit
    (91) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (86) BasicLit -> . INTEGER
    (87) BasicLit -> . FLOAT
    (88) BasicLit -> . IMAGINARY
    (89) BasicLit -> . RUNE
    (90) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 101
    MINUS           shift and go to state 97
    TIMES           shift and go to state 107
    AMPERS          shift and go to state 112
    NOT             shift and go to state 98
    LPAREN          shift and go to state 109
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 111
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 105
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    UnaryOp                        shift and go to state 93
    PrimaryExpr                    shift and go to state 94
    Conversion                     shift and go to state 92
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    Type                           shift and go to state 100
    OperandName                    shift and go to state 99
    BasicLit                       shift and go to state 113
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    UnaryExpr                      shift and go to state 106
    Expression                     shift and go to state 300
    PointerType                    shift and go to state 66
    TypeLit                        shift and go to state 55
    Operand                        shift and go to state 114
    FunctionType                   shift and go to state 67

state 252

    (16) FieldDeclRep -> FieldDeclRep FieldDecl SEMICOL .

    RBRACE          reduce using rule 16 (FieldDeclRep -> FieldDeclRep FieldDecl SEMICOL .)
    IDENTIFIER      reduce using rule 16 (FieldDeclRep -> FieldDeclRep FieldDecl SEMICOL .)


state 253

    (18) FieldDecl -> IdentifierList Type . TagOpt
    (19) TagOpt -> . Tag
    (20) TagOpt -> . epsilon
    (21) Tag -> . STRING
    (260) epsilon -> .

    STRING          shift and go to state 301
    SEMICOL         reduce using rule 260 (epsilon -> .)

    epsilon                        shift and go to state 302
    Tag                            shift and go to state 303
    TagOpt                         shift and go to state 304

state 254

    (120) Slice -> LBRACK ExpressionOpt COLON . ExpressionOpt RBRACK
    (121) Slice -> LBRACK ExpressionOpt COLON . Expression COLON Expression RBRACK
    (133) ExpressionOpt -> . Expression
    (134) ExpressionOpt -> . epsilon
    (131) Expression -> . UnaryExpr
    (132) Expression -> . Expression BinaryOp Expression
    (260) epsilon -> .
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (111) PrimaryExpr -> . Operand
    (112) PrimaryExpr -> . Conversion
    (113) PrimaryExpr -> . PrimaryExpr Selector
    (114) PrimaryExpr -> . PrimaryExpr Index
    (115) PrimaryExpr -> . PrimaryExpr Slice
    (116) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (117) PrimaryExpr -> . PrimaryExpr Arguments
    (159) UnaryOp -> . PLUS
    (160) UnaryOp -> . MINUS
    (161) UnaryOp -> . TIMES
    (162) UnaryOp -> . AMPERS
    (163) UnaryOp -> . NOT
    (82) Operand -> . Literal
    (83) Operand -> . OperandName
    (84) Operand -> . LPAREN Expression RPAREN
    (110) Conversion -> . Type LPAREN Expression RPAREN
    (85) Literal -> . BasicLit
    (91) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (86) BasicLit -> . INTEGER
    (87) BasicLit -> . FLOAT
    (88) BasicLit -> . IMAGINARY
    (89) BasicLit -> . RUNE
    (90) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    RBRACK          reduce using rule 260 (epsilon -> .)
    PLUS            shift and go to state 101
    MINUS           shift and go to state 97
    TIMES           shift and go to state 107
    AMPERS          shift and go to state 112
    NOT             shift and go to state 98
    LPAREN          shift and go to state 109
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 111
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 105
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 92
    UnaryOp                        shift and go to state 93
    PrimaryExpr                    shift and go to state 94
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    Type                           shift and go to state 100
    OperandName                    shift and go to state 99
    BasicLit                       shift and go to state 113
    TypeName                       shift and go to state 56
    ExpressionOpt                  shift and go to state 305
    StructType                     shift and go to state 58
    epsilon                        shift and go to state 203
    UnaryExpr                      shift and go to state 106
    Expression                     shift and go to state 306
    PointerType                    shift and go to state 66
    TypeLit                        shift and go to state 55
    Operand                        shift and go to state 114
    FunctionType                   shift and go to state 67

state 255

    (119) Index -> LBRACK Expression RBRACK .

    DOT             reduce using rule 119 (Index -> LBRACK Expression RBRACK .)
    LBRACK          reduce using rule 119 (Index -> LBRACK Expression RBRACK .)
    LPAREN          reduce using rule 119 (Index -> LBRACK Expression RBRACK .)
    OROR            reduce using rule 119 (Index -> LBRACK Expression RBRACK .)
    AMPAMP          reduce using rule 119 (Index -> LBRACK Expression RBRACK .)
    EQEQ            reduce using rule 119 (Index -> LBRACK Expression RBRACK .)
    NOTEQ           reduce using rule 119 (Index -> LBRACK Expression RBRACK .)
    LESS            reduce using rule 119 (Index -> LBRACK Expression RBRACK .)
    GREAT           reduce using rule 119 (Index -> LBRACK Expression RBRACK .)
    LEQ             reduce using rule 119 (Index -> LBRACK Expression RBRACK .)
    GEQ             reduce using rule 119 (Index -> LBRACK Expression RBRACK .)
    PLUS            reduce using rule 119 (Index -> LBRACK Expression RBRACK .)
    MINUS           reduce using rule 119 (Index -> LBRACK Expression RBRACK .)
    OR              reduce using rule 119 (Index -> LBRACK Expression RBRACK .)
    CARET           reduce using rule 119 (Index -> LBRACK Expression RBRACK .)
    TIMES           reduce using rule 119 (Index -> LBRACK Expression RBRACK .)
    DIVIDE          reduce using rule 119 (Index -> LBRACK Expression RBRACK .)
    MOD             reduce using rule 119 (Index -> LBRACK Expression RBRACK .)
    AMPERS          reduce using rule 119 (Index -> LBRACK Expression RBRACK .)
    LL              reduce using rule 119 (Index -> LBRACK Expression RBRACK .)
    GG              reduce using rule 119 (Index -> LBRACK Expression RBRACK .)
    AMPCAR          reduce using rule 119 (Index -> LBRACK Expression RBRACK .)
    RBRACK          reduce using rule 119 (Index -> LBRACK Expression RBRACK .)
    COMMA           reduce using rule 119 (Index -> LBRACK Expression RBRACK .)
    SEMICOL         reduce using rule 119 (Index -> LBRACK Expression RBRACK .)
    RPAREN          reduce using rule 119 (Index -> LBRACK Expression RBRACK .)
    COLON           reduce using rule 119 (Index -> LBRACK Expression RBRACK .)
    PLUSPLUS        reduce using rule 119 (Index -> LBRACK Expression RBRACK .)
    MINUSMIN        reduce using rule 119 (Index -> LBRACK Expression RBRACK .)
    PLUSEQ          reduce using rule 119 (Index -> LBRACK Expression RBRACK .)
    MINUSEQ         reduce using rule 119 (Index -> LBRACK Expression RBRACK .)
    TIMESEQ         reduce using rule 119 (Index -> LBRACK Expression RBRACK .)
    DIVIDEEQ        reduce using rule 119 (Index -> LBRACK Expression RBRACK .)
    MODEQ           reduce using rule 119 (Index -> LBRACK Expression RBRACK .)
    AMPEQ           reduce using rule 119 (Index -> LBRACK Expression RBRACK .)
    OREQ            reduce using rule 119 (Index -> LBRACK Expression RBRACK .)
    CAREQ           reduce using rule 119 (Index -> LBRACK Expression RBRACK .)
    LLEQ            reduce using rule 119 (Index -> LBRACK Expression RBRACK .)
    GGEQ            reduce using rule 119 (Index -> LBRACK Expression RBRACK .)
    EQUAL           reduce using rule 119 (Index -> LBRACK Expression RBRACK .)
    LBRACE          reduce using rule 119 (Index -> LBRACK Expression RBRACK .)


state 256

    (123) Arguments -> LPAREN ExpressionListTypeOpt RPAREN .

    DOT             reduce using rule 123 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LBRACK          reduce using rule 123 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LPAREN          reduce using rule 123 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    OROR            reduce using rule 123 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    AMPAMP          reduce using rule 123 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    EQEQ            reduce using rule 123 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    NOTEQ           reduce using rule 123 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LESS            reduce using rule 123 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    GREAT           reduce using rule 123 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LEQ             reduce using rule 123 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    GEQ             reduce using rule 123 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    PLUS            reduce using rule 123 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    MINUS           reduce using rule 123 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    OR              reduce using rule 123 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    CARET           reduce using rule 123 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    TIMES           reduce using rule 123 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    DIVIDE          reduce using rule 123 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    MOD             reduce using rule 123 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    AMPERS          reduce using rule 123 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LL              reduce using rule 123 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    GG              reduce using rule 123 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    AMPCAR          reduce using rule 123 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    RBRACK          reduce using rule 123 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    COMMA           reduce using rule 123 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    SEMICOL         reduce using rule 123 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    RPAREN          reduce using rule 123 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    COLON           reduce using rule 123 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    PLUSPLUS        reduce using rule 123 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    MINUSMIN        reduce using rule 123 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    PLUSEQ          reduce using rule 123 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    MINUSEQ         reduce using rule 123 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    TIMESEQ         reduce using rule 123 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    DIVIDEEQ        reduce using rule 123 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    MODEQ           reduce using rule 123 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    AMPEQ           reduce using rule 123 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    OREQ            reduce using rule 123 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    CAREQ           reduce using rule 123 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LLEQ            reduce using rule 123 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    GGEQ            reduce using rule 123 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    EQUAL           reduce using rule 123 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LBRACE          reduce using rule 123 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)


state 257

    (122) TypeAssertion -> DOT LPAREN Type . RPAREN

    RPAREN          shift and go to state 307


state 258

    (110) Conversion -> Type LPAREN Expression RPAREN .

    DOT             reduce using rule 110 (Conversion -> Type LPAREN Expression RPAREN .)
    LBRACK          reduce using rule 110 (Conversion -> Type LPAREN Expression RPAREN .)
    LPAREN          reduce using rule 110 (Conversion -> Type LPAREN Expression RPAREN .)
    RPAREN          reduce using rule 110 (Conversion -> Type LPAREN Expression RPAREN .)
    OROR            reduce using rule 110 (Conversion -> Type LPAREN Expression RPAREN .)
    AMPAMP          reduce using rule 110 (Conversion -> Type LPAREN Expression RPAREN .)
    EQEQ            reduce using rule 110 (Conversion -> Type LPAREN Expression RPAREN .)
    NOTEQ           reduce using rule 110 (Conversion -> Type LPAREN Expression RPAREN .)
    LESS            reduce using rule 110 (Conversion -> Type LPAREN Expression RPAREN .)
    GREAT           reduce using rule 110 (Conversion -> Type LPAREN Expression RPAREN .)
    LEQ             reduce using rule 110 (Conversion -> Type LPAREN Expression RPAREN .)
    GEQ             reduce using rule 110 (Conversion -> Type LPAREN Expression RPAREN .)
    PLUS            reduce using rule 110 (Conversion -> Type LPAREN Expression RPAREN .)
    MINUS           reduce using rule 110 (Conversion -> Type LPAREN Expression RPAREN .)
    OR              reduce using rule 110 (Conversion -> Type LPAREN Expression RPAREN .)
    CARET           reduce using rule 110 (Conversion -> Type LPAREN Expression RPAREN .)
    TIMES           reduce using rule 110 (Conversion -> Type LPAREN Expression RPAREN .)
    DIVIDE          reduce using rule 110 (Conversion -> Type LPAREN Expression RPAREN .)
    MOD             reduce using rule 110 (Conversion -> Type LPAREN Expression RPAREN .)
    AMPERS          reduce using rule 110 (Conversion -> Type LPAREN Expression RPAREN .)
    LL              reduce using rule 110 (Conversion -> Type LPAREN Expression RPAREN .)
    GG              reduce using rule 110 (Conversion -> Type LPAREN Expression RPAREN .)
    AMPCAR          reduce using rule 110 (Conversion -> Type LPAREN Expression RPAREN .)
    RBRACK          reduce using rule 110 (Conversion -> Type LPAREN Expression RPAREN .)
    COLON           reduce using rule 110 (Conversion -> Type LPAREN Expression RPAREN .)
    PLUSPLUS        reduce using rule 110 (Conversion -> Type LPAREN Expression RPAREN .)
    MINUSMIN        reduce using rule 110 (Conversion -> Type LPAREN Expression RPAREN .)
    COMMA           reduce using rule 110 (Conversion -> Type LPAREN Expression RPAREN .)
    SEMICOL         reduce using rule 110 (Conversion -> Type LPAREN Expression RPAREN .)
    PLUSEQ          reduce using rule 110 (Conversion -> Type LPAREN Expression RPAREN .)
    MINUSEQ         reduce using rule 110 (Conversion -> Type LPAREN Expression RPAREN .)
    TIMESEQ         reduce using rule 110 (Conversion -> Type LPAREN Expression RPAREN .)
    DIVIDEEQ        reduce using rule 110 (Conversion -> Type LPAREN Expression RPAREN .)
    MODEQ           reduce using rule 110 (Conversion -> Type LPAREN Expression RPAREN .)
    AMPEQ           reduce using rule 110 (Conversion -> Type LPAREN Expression RPAREN .)
    OREQ            reduce using rule 110 (Conversion -> Type LPAREN Expression RPAREN .)
    CAREQ           reduce using rule 110 (Conversion -> Type LPAREN Expression RPAREN .)
    LLEQ            reduce using rule 110 (Conversion -> Type LPAREN Expression RPAREN .)
    GGEQ            reduce using rule 110 (Conversion -> Type LPAREN Expression RPAREN .)
    EQUAL           reduce using rule 110 (Conversion -> Type LPAREN Expression RPAREN .)
    LBRACE          reduce using rule 110 (Conversion -> Type LPAREN Expression RPAREN .)


state 259

    (42) StatementRep -> StatementRep Statement SEMICOL .

    RETURN          reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    BREAK           reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    CONTINUE        reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    GOTO            reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    LBRACE          reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    IF              reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    FOR             reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    CONST           reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    TYPE            reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    VAR             reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    IDENTIFIER      reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    SWITCH          reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    PLUS            reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    MINUS           reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    TIMES           reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    AMPERS          reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    NOT             reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    LPAREN          reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    INTEGER         reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    FLOAT           reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    IMAGINARY       reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    RUNE            reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    STRING          reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    TYPEX           reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    LBRACK          reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    STRUCT          reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    FUNC            reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    SEMICOL         reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    RBRACE          reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    CASE            reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    DEFAULT         reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)


state 260

    (236) ReturnStmt -> RETURN ExpressionListPureOpt .

    SEMICOL         reduce using rule 236 (ReturnStmt -> RETURN ExpressionListPureOpt .)


state 261

    (238) ExpressionListPureOpt -> epsilon .

    SEMICOL         reduce using rule 238 (ExpressionListPureOpt -> epsilon .)


state 262

    (237) ExpressionListPureOpt -> ExpressionList .

    SEMICOL         reduce using rule 237 (ExpressionListPureOpt -> ExpressionList .)


state 263

    (180) LabeledStmt -> Label COLON . Statement
    (164) Statement -> . Declaration
    (165) Statement -> . LabeledStmt
    (166) Statement -> . SimpleStmt
    (167) Statement -> . ReturnStmt
    (168) Statement -> . BreakStmt
    (169) Statement -> . ContinueStmt
    (170) Statement -> . GotoStmt
    (171) Statement -> . Block
    (172) Statement -> . IfStmt
    (173) Statement -> . SwitchStmt
    (174) Statement -> . ForStmt
    (44) Declaration -> . ConstDecl
    (45) Declaration -> . TypeDecl
    (46) Declaration -> . VarDecl
    (180) LabeledStmt -> . Label COLON Statement
    (175) SimpleStmt -> . epsilon
    (176) SimpleStmt -> . ExpressionStmt
    (177) SimpleStmt -> . IncDecStmt
    (178) SimpleStmt -> . Assignment
    (179) SimpleStmt -> . ShortVarDecl
    (236) ReturnStmt -> . RETURN ExpressionListPureOpt
    (239) BreakStmt -> . BREAK LabelOpt
    (240) ContinueStmt -> . CONTINUE LabelOpt
    (243) GotoStmt -> . GOTO Label
    (40) Block -> . LBRACE StatementList RBRACE
    (198) IfStmt -> . IF Expression Block ElseOpt
    (204) SwitchStmt -> . ExprSwitchStmt
    (205) SwitchStmt -> . TypeSwitchStmt
    (224) ForStmt -> . FOR ConditionBlockOpt Block
    (49) ConstDecl -> . CONST ConstSpec
    (50) ConstDecl -> . CONST LPAREN ConstSpecRep RPAREN
    (59) TypeDecl -> . TYPE TypeSpec
    (60) TypeDecl -> . TYPE LPAREN TypeSpecRep RPAREN
    (67) VarDecl -> . VAR VarSpec
    (68) VarDecl -> . VAR LPAREN VarSpecRep RPAREN
    (181) Label -> . IDENTIFIER
    (260) epsilon -> .
    (182) ExpressionStmt -> . Expression
    (183) IncDecStmt -> . Expression PLUSPLUS
    (184) IncDecStmt -> . Expression MINUSMIN
    (185) Assignment -> . ExpressionList assign_op ExpressionList
    (75) ShortVarDecl -> . IDENTIFIER COLONEQ Expression
    (206) ExprSwitchStmt -> . SWITCH ExpressionOpt LBRACE ExprCaseClauseRep RBRACE
    (212) TypeSwitchStmt -> . SWITCH SimpleStmtOpt TypeSwitchGuard LBRACE TypeCaseClauseOpt RBRACE
    (131) Expression -> . UnaryExpr
    (132) Expression -> . Expression BinaryOp Expression
    (128) ExpressionList -> . Expression ExpressionRep
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (111) PrimaryExpr -> . Operand
    (112) PrimaryExpr -> . Conversion
    (113) PrimaryExpr -> . PrimaryExpr Selector
    (114) PrimaryExpr -> . PrimaryExpr Index
    (115) PrimaryExpr -> . PrimaryExpr Slice
    (116) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (117) PrimaryExpr -> . PrimaryExpr Arguments
    (159) UnaryOp -> . PLUS
    (160) UnaryOp -> . MINUS
    (161) UnaryOp -> . TIMES
    (162) UnaryOp -> . AMPERS
    (163) UnaryOp -> . NOT
    (82) Operand -> . Literal
    (83) Operand -> . OperandName
    (84) Operand -> . LPAREN Expression RPAREN
    (110) Conversion -> . Type LPAREN Expression RPAREN
    (85) Literal -> . BasicLit
    (91) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (86) BasicLit -> . INTEGER
    (87) BasicLit -> . FLOAT
    (88) BasicLit -> . IMAGINARY
    (89) BasicLit -> . RUNE
    (90) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    RETURN          shift and go to state 222
    BREAK           shift and go to state 238
    CONTINUE        shift and go to state 231
    GOTO            shift and go to state 242
    LBRACE          shift and go to state 123
    IF              shift and go to state 244
    FOR             shift and go to state 228
    CONST           shift and go to state 14
    TYPE            shift and go to state 23
    VAR             shift and go to state 21
    IDENTIFIER      shift and go to state 234
    SEMICOL         reduce using rule 260 (epsilon -> .)
    SWITCH          shift and go to state 232
    PLUS            shift and go to state 101
    MINUS           shift and go to state 97
    TIMES           shift and go to state 107
    AMPERS          shift and go to state 112
    NOT             shift and go to state 98
    LPAREN          shift and go to state 109
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 111
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 105
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    UnaryOp                        shift and go to state 93
    ContinueStmt                   shift and go to state 216
    Conversion                     shift and go to state 92
    SimpleStmt                     shift and go to state 240
    Label                          shift and go to state 223
    ExpressionStmt                 shift and go to state 217
    PointerType                    shift and go to state 66
    ForStmt                        shift and go to state 241
    ExprSwitchStmt                 shift and go to state 224
    Statement                      shift and go to state 308
    Type                           shift and go to state 100
    IfStmt                         shift and go to state 225
    OperandName                    shift and go to state 99
    ArrayType                      shift and go to state 53
    Assignment                     shift and go to state 219
    TypeName                       shift and go to state 56
    IncDecStmt                     shift and go to state 226
    Declaration                    shift and go to state 233
    FunctionType                   shift and go to state 67
    GotoStmt                       shift and go to state 227
    StructType                     shift and go to state 58
    TypeDecl                       shift and go to state 19
    LabeledStmt                    shift and go to state 220
    epsilon                        shift and go to state 235
    UnaryExpr                      shift and go to state 106
    Operand                        shift and go to state 114
    ExpressionList                 shift and go to state 236
    Literal                        shift and go to state 95
    Expression                     shift and go to state 237
    ShortVarDecl                   shift and go to state 243
    Block                          shift and go to state 229
    TypeSwitchStmt                 shift and go to state 221
    BreakStmt                      shift and go to state 245
    SwitchStmt                     shift and go to state 230
    VarDecl                        shift and go to state 22
    TypeLit                        shift and go to state 55
    BasicLit                       shift and go to state 113
    PrimaryExpr                    shift and go to state 94
    ReturnStmt                     shift and go to state 239
    ConstDecl                      shift and go to state 18

state 264

    (229) ForClause -> SimpleStmt . SEMICOL ConditionOpt SEMICOL SimpleStmt

    SEMICOL         shift and go to state 309


state 265

    (75) ShortVarDecl -> IDENTIFIER . COLONEQ Expression
    (91) OperandName -> IDENTIFIER .

    COLONEQ         shift and go to state 280
    DOT             reduce using rule 91 (OperandName -> IDENTIFIER .)
    LBRACK          reduce using rule 91 (OperandName -> IDENTIFIER .)
    LPAREN          reduce using rule 91 (OperandName -> IDENTIFIER .)
    PLUSPLUS        reduce using rule 91 (OperandName -> IDENTIFIER .)
    MINUSMIN        reduce using rule 91 (OperandName -> IDENTIFIER .)
    OROR            reduce using rule 91 (OperandName -> IDENTIFIER .)
    AMPAMP          reduce using rule 91 (OperandName -> IDENTIFIER .)
    EQEQ            reduce using rule 91 (OperandName -> IDENTIFIER .)
    NOTEQ           reduce using rule 91 (OperandName -> IDENTIFIER .)
    LESS            reduce using rule 91 (OperandName -> IDENTIFIER .)
    GREAT           reduce using rule 91 (OperandName -> IDENTIFIER .)
    LEQ             reduce using rule 91 (OperandName -> IDENTIFIER .)
    GEQ             reduce using rule 91 (OperandName -> IDENTIFIER .)
    PLUS            reduce using rule 91 (OperandName -> IDENTIFIER .)
    MINUS           reduce using rule 91 (OperandName -> IDENTIFIER .)
    OR              reduce using rule 91 (OperandName -> IDENTIFIER .)
    CARET           reduce using rule 91 (OperandName -> IDENTIFIER .)
    TIMES           reduce using rule 91 (OperandName -> IDENTIFIER .)
    DIVIDE          reduce using rule 91 (OperandName -> IDENTIFIER .)
    MOD             reduce using rule 91 (OperandName -> IDENTIFIER .)
    AMPERS          reduce using rule 91 (OperandName -> IDENTIFIER .)
    LL              reduce using rule 91 (OperandName -> IDENTIFIER .)
    GG              reduce using rule 91 (OperandName -> IDENTIFIER .)
    AMPCAR          reduce using rule 91 (OperandName -> IDENTIFIER .)
    COMMA           reduce using rule 91 (OperandName -> IDENTIFIER .)
    LBRACE          reduce using rule 91 (OperandName -> IDENTIFIER .)
    SEMICOL         reduce using rule 91 (OperandName -> IDENTIFIER .)
    PLUSEQ          reduce using rule 91 (OperandName -> IDENTIFIER .)
    MINUSEQ         reduce using rule 91 (OperandName -> IDENTIFIER .)
    TIMESEQ         reduce using rule 91 (OperandName -> IDENTIFIER .)
    DIVIDEEQ        reduce using rule 91 (OperandName -> IDENTIFIER .)
    MODEQ           reduce using rule 91 (OperandName -> IDENTIFIER .)
    AMPEQ           reduce using rule 91 (OperandName -> IDENTIFIER .)
    OREQ            reduce using rule 91 (OperandName -> IDENTIFIER .)
    CAREQ           reduce using rule 91 (OperandName -> IDENTIFIER .)
    LLEQ            reduce using rule 91 (OperandName -> IDENTIFIER .)
    GGEQ            reduce using rule 91 (OperandName -> IDENTIFIER .)
    EQUAL           reduce using rule 91 (OperandName -> IDENTIFIER .)


state 266

    (226) ConditionBlockOpt -> Condition .

    LBRACE          reduce using rule 226 (ConditionBlockOpt -> Condition .)


state 267

    (225) ConditionBlockOpt -> epsilon .
    (175) SimpleStmt -> epsilon .

    LBRACE          reduce using rule 225 (ConditionBlockOpt -> epsilon .)
    SEMICOL         reduce using rule 175 (SimpleStmt -> epsilon .)


state 268

    (224) ForStmt -> FOR ConditionBlockOpt . Block
    (40) Block -> . LBRACE StatementList RBRACE

    LBRACE          shift and go to state 123

    Block                          shift and go to state 310

state 269

    (227) ConditionBlockOpt -> ForClause .

    LBRACE          reduce using rule 227 (ConditionBlockOpt -> ForClause .)


state 270

    (228) Condition -> Expression .
    (132) Expression -> Expression . BinaryOp Expression
    (182) ExpressionStmt -> Expression .
    (183) IncDecStmt -> Expression . PLUSPLUS
    (184) IncDecStmt -> Expression . MINUSMIN
    (128) ExpressionList -> Expression . ExpressionRep
    (137) BinaryOp -> . OROR
    (138) BinaryOp -> . AMPAMP
    (139) BinaryOp -> . RelOp
    (140) BinaryOp -> . AddOp
    (141) BinaryOp -> . MulOp
    (129) ExpressionRep -> . ExpressionRep COMMA Expression
    (130) ExpressionRep -> . epsilon
    (142) RelOp -> . EQEQ
    (143) RelOp -> . NOTEQ
    (144) RelOp -> . LESS
    (145) RelOp -> . GREAT
    (146) RelOp -> . LEQ
    (147) RelOp -> . GEQ
    (148) AddOp -> . PLUS
    (149) AddOp -> . MINUS
    (150) AddOp -> . OR
    (151) AddOp -> . CARET
    (152) MulOp -> . TIMES
    (153) MulOp -> . DIVIDE
    (154) MulOp -> . MOD
    (155) MulOp -> . AMPERS
    (156) MulOp -> . LL
    (157) MulOp -> . GG
    (158) MulOp -> . AMPCAR
    (260) epsilon -> .

    LBRACE          reduce using rule 228 (Condition -> Expression .)
    SEMICOL         reduce using rule 182 (ExpressionStmt -> Expression .)
    PLUSPLUS        shift and go to state 294
    MINUSMIN        shift and go to state 295
    OROR            shift and go to state 162
    AMPAMP          shift and go to state 168
    EQEQ            shift and go to state 167
    NOTEQ           shift and go to state 173
    LESS            shift and go to state 166
    GREAT           shift and go to state 164
    LEQ             shift and go to state 182
    GEQ             shift and go to state 171
    PLUS            shift and go to state 174
    MINUS           shift and go to state 170
    OR              shift and go to state 183
    CARET           shift and go to state 163
    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 177
    MOD             shift and go to state 184
    AMPERS          shift and go to state 181
    LL              shift and go to state 172
    GG              shift and go to state 179
    AMPCAR          shift and go to state 165
    COMMA           reduce using rule 260 (epsilon -> .)
    PLUSEQ          reduce using rule 260 (epsilon -> .)
    MINUSEQ         reduce using rule 260 (epsilon -> .)
    TIMESEQ         reduce using rule 260 (epsilon -> .)
    DIVIDEEQ        reduce using rule 260 (epsilon -> .)
    MODEQ           reduce using rule 260 (epsilon -> .)
    AMPEQ           reduce using rule 260 (epsilon -> .)
    OREQ            reduce using rule 260 (epsilon -> .)
    CAREQ           reduce using rule 260 (epsilon -> .)
    LLEQ            reduce using rule 260 (epsilon -> .)
    GGEQ            reduce using rule 260 (epsilon -> .)
    EQUAL           reduce using rule 260 (epsilon -> .)

    AddOp                          shift and go to state 176
    ExpressionRep                  shift and go to state 195
    RelOp                          shift and go to state 180
    epsilon                        shift and go to state 196
    BinaryOp                       shift and go to state 175
    MulOp                          shift and go to state 169

state 271

    (242) LabelOpt -> epsilon .

    SEMICOL         reduce using rule 242 (LabelOpt -> epsilon .)


state 272

    (181) Label -> IDENTIFIER .

    SEMICOL         reduce using rule 181 (Label -> IDENTIFIER .)


state 273

    (240) ContinueStmt -> CONTINUE LabelOpt .

    SEMICOL         reduce using rule 240 (ContinueStmt -> CONTINUE LabelOpt .)


state 274

    (241) LabelOpt -> Label .

    SEMICOL         reduce using rule 241 (LabelOpt -> Label .)


state 275

    (199) SimpleStmtOpt -> SimpleStmt . SEMICOL

    SEMICOL         shift and go to state 311


state 276

    (206) ExprSwitchStmt -> SWITCH ExpressionOpt . LBRACE ExprCaseClauseRep RBRACE

    LBRACE          shift and go to state 312


state 277

    (134) ExpressionOpt -> epsilon .
    (200) SimpleStmtOpt -> epsilon .
    (175) SimpleStmt -> epsilon .

    LBRACE          reduce using rule 134 (ExpressionOpt -> epsilon .)
    IDENTIFIER      reduce using rule 200 (SimpleStmtOpt -> epsilon .)
    LPAREN          reduce using rule 200 (SimpleStmtOpt -> epsilon .)
    INTEGER         reduce using rule 200 (SimpleStmtOpt -> epsilon .)
    FLOAT           reduce using rule 200 (SimpleStmtOpt -> epsilon .)
    IMAGINARY       reduce using rule 200 (SimpleStmtOpt -> epsilon .)
    RUNE            reduce using rule 200 (SimpleStmtOpt -> epsilon .)
    STRING          reduce using rule 200 (SimpleStmtOpt -> epsilon .)
    TYPEX           reduce using rule 200 (SimpleStmtOpt -> epsilon .)
    LBRACK          reduce using rule 200 (SimpleStmtOpt -> epsilon .)
    STRUCT          reduce using rule 200 (SimpleStmtOpt -> epsilon .)
    TIMES           reduce using rule 200 (SimpleStmtOpt -> epsilon .)
    FUNC            reduce using rule 200 (SimpleStmtOpt -> epsilon .)
    SEMICOL         reduce using rule 175 (SimpleStmt -> epsilon .)


state 278

    (212) TypeSwitchStmt -> SWITCH SimpleStmtOpt . TypeSwitchGuard LBRACE TypeCaseClauseOpt RBRACE
    (213) TypeSwitchGuard -> . IdentifierOpt PrimaryExpr DOT LPAREN TYPE RPAREN
    (214) IdentifierOpt -> . IDENTIFIER COLONEQ
    (215) IdentifierOpt -> . epsilon
    (260) epsilon -> .

  ! shift/reduce conflict for IDENTIFIER resolved as shift
    IDENTIFIER      shift and go to state 316
    LPAREN          reduce using rule 260 (epsilon -> .)
    INTEGER         reduce using rule 260 (epsilon -> .)
    FLOAT           reduce using rule 260 (epsilon -> .)
    IMAGINARY       reduce using rule 260 (epsilon -> .)
    RUNE            reduce using rule 260 (epsilon -> .)
    STRING          reduce using rule 260 (epsilon -> .)
    TYPEX           reduce using rule 260 (epsilon -> .)
    LBRACK          reduce using rule 260 (epsilon -> .)
    STRUCT          reduce using rule 260 (epsilon -> .)
    TIMES           reduce using rule 260 (epsilon -> .)
    FUNC            reduce using rule 260 (epsilon -> .)

  ! IDENTIFIER      [ reduce using rule 260 (epsilon -> .) ]

    epsilon                        shift and go to state 313
    TypeSwitchGuard                shift and go to state 314
    IdentifierOpt                  shift and go to state 315

state 279

    (133) ExpressionOpt -> Expression .
    (132) Expression -> Expression . BinaryOp Expression
    (182) ExpressionStmt -> Expression .
    (183) IncDecStmt -> Expression . PLUSPLUS
    (184) IncDecStmt -> Expression . MINUSMIN
    (128) ExpressionList -> Expression . ExpressionRep
    (137) BinaryOp -> . OROR
    (138) BinaryOp -> . AMPAMP
    (139) BinaryOp -> . RelOp
    (140) BinaryOp -> . AddOp
    (141) BinaryOp -> . MulOp
    (129) ExpressionRep -> . ExpressionRep COMMA Expression
    (130) ExpressionRep -> . epsilon
    (142) RelOp -> . EQEQ
    (143) RelOp -> . NOTEQ
    (144) RelOp -> . LESS
    (145) RelOp -> . GREAT
    (146) RelOp -> . LEQ
    (147) RelOp -> . GEQ
    (148) AddOp -> . PLUS
    (149) AddOp -> . MINUS
    (150) AddOp -> . OR
    (151) AddOp -> . CARET
    (152) MulOp -> . TIMES
    (153) MulOp -> . DIVIDE
    (154) MulOp -> . MOD
    (155) MulOp -> . AMPERS
    (156) MulOp -> . LL
    (157) MulOp -> . GG
    (158) MulOp -> . AMPCAR
    (260) epsilon -> .

    LBRACE          reduce using rule 133 (ExpressionOpt -> Expression .)
    SEMICOL         reduce using rule 182 (ExpressionStmt -> Expression .)
    PLUSPLUS        shift and go to state 294
    MINUSMIN        shift and go to state 295
    OROR            shift and go to state 162
    AMPAMP          shift and go to state 168
    EQEQ            shift and go to state 167
    NOTEQ           shift and go to state 173
    LESS            shift and go to state 166
    GREAT           shift and go to state 164
    LEQ             shift and go to state 182
    GEQ             shift and go to state 171
    PLUS            shift and go to state 174
    MINUS           shift and go to state 170
    OR              shift and go to state 183
    CARET           shift and go to state 163
    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 177
    MOD             shift and go to state 184
    AMPERS          shift and go to state 181
    LL              shift and go to state 172
    GG              shift and go to state 179
    AMPCAR          shift and go to state 165
    COMMA           reduce using rule 260 (epsilon -> .)
    PLUSEQ          reduce using rule 260 (epsilon -> .)
    MINUSEQ         reduce using rule 260 (epsilon -> .)
    TIMESEQ         reduce using rule 260 (epsilon -> .)
    DIVIDEEQ        reduce using rule 260 (epsilon -> .)
    MODEQ           reduce using rule 260 (epsilon -> .)
    AMPEQ           reduce using rule 260 (epsilon -> .)
    OREQ            reduce using rule 260 (epsilon -> .)
    CAREQ           reduce using rule 260 (epsilon -> .)
    LLEQ            reduce using rule 260 (epsilon -> .)
    GGEQ            reduce using rule 260 (epsilon -> .)
    EQUAL           reduce using rule 260 (epsilon -> .)

    AddOp                          shift and go to state 176
    ExpressionRep                  shift and go to state 195
    RelOp                          shift and go to state 180
    epsilon                        shift and go to state 196
    BinaryOp                       shift and go to state 175
    MulOp                          shift and go to state 169

state 280

    (75) ShortVarDecl -> IDENTIFIER COLONEQ . Expression
    (131) Expression -> . UnaryExpr
    (132) Expression -> . Expression BinaryOp Expression
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (111) PrimaryExpr -> . Operand
    (112) PrimaryExpr -> . Conversion
    (113) PrimaryExpr -> . PrimaryExpr Selector
    (114) PrimaryExpr -> . PrimaryExpr Index
    (115) PrimaryExpr -> . PrimaryExpr Slice
    (116) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (117) PrimaryExpr -> . PrimaryExpr Arguments
    (159) UnaryOp -> . PLUS
    (160) UnaryOp -> . MINUS
    (161) UnaryOp -> . TIMES
    (162) UnaryOp -> . AMPERS
    (163) UnaryOp -> . NOT
    (82) Operand -> . Literal
    (83) Operand -> . OperandName
    (84) Operand -> . LPAREN Expression RPAREN
    (110) Conversion -> . Type LPAREN Expression RPAREN
    (85) Literal -> . BasicLit
    (91) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (86) BasicLit -> . INTEGER
    (87) BasicLit -> . FLOAT
    (88) BasicLit -> . IMAGINARY
    (89) BasicLit -> . RUNE
    (90) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 101
    MINUS           shift and go to state 97
    TIMES           shift and go to state 107
    AMPERS          shift and go to state 112
    NOT             shift and go to state 98
    LPAREN          shift and go to state 109
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 111
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 105
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 92
    UnaryOp                        shift and go to state 93
    PrimaryExpr                    shift and go to state 94
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    Type                           shift and go to state 100
    OperandName                    shift and go to state 99
    BasicLit                       shift and go to state 113
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    UnaryExpr                      shift and go to state 106
    Expression                     shift and go to state 317
    PointerType                    shift and go to state 66
    TypeLit                        shift and go to state 55
    Operand                        shift and go to state 114
    FunctionType                   shift and go to state 67

state 281

    (186) assign_op -> AssignOp .

    PLUS            reduce using rule 186 (assign_op -> AssignOp .)
    MINUS           reduce using rule 186 (assign_op -> AssignOp .)
    TIMES           reduce using rule 186 (assign_op -> AssignOp .)
    AMPERS          reduce using rule 186 (assign_op -> AssignOp .)
    NOT             reduce using rule 186 (assign_op -> AssignOp .)
    LPAREN          reduce using rule 186 (assign_op -> AssignOp .)
    IDENTIFIER      reduce using rule 186 (assign_op -> AssignOp .)
    INTEGER         reduce using rule 186 (assign_op -> AssignOp .)
    FLOAT           reduce using rule 186 (assign_op -> AssignOp .)
    IMAGINARY       reduce using rule 186 (assign_op -> AssignOp .)
    RUNE            reduce using rule 186 (assign_op -> AssignOp .)
    STRING          reduce using rule 186 (assign_op -> AssignOp .)
    TYPEX           reduce using rule 186 (assign_op -> AssignOp .)
    LBRACK          reduce using rule 186 (assign_op -> AssignOp .)
    STRUCT          reduce using rule 186 (assign_op -> AssignOp .)
    FUNC            reduce using rule 186 (assign_op -> AssignOp .)


state 282

    (197) AssignOp -> EQUAL .

    PLUS            reduce using rule 197 (AssignOp -> EQUAL .)
    MINUS           reduce using rule 197 (AssignOp -> EQUAL .)
    TIMES           reduce using rule 197 (AssignOp -> EQUAL .)
    AMPERS          reduce using rule 197 (AssignOp -> EQUAL .)
    NOT             reduce using rule 197 (AssignOp -> EQUAL .)
    LPAREN          reduce using rule 197 (AssignOp -> EQUAL .)
    IDENTIFIER      reduce using rule 197 (AssignOp -> EQUAL .)
    INTEGER         reduce using rule 197 (AssignOp -> EQUAL .)
    FLOAT           reduce using rule 197 (AssignOp -> EQUAL .)
    IMAGINARY       reduce using rule 197 (AssignOp -> EQUAL .)
    RUNE            reduce using rule 197 (AssignOp -> EQUAL .)
    STRING          reduce using rule 197 (AssignOp -> EQUAL .)
    TYPEX           reduce using rule 197 (AssignOp -> EQUAL .)
    LBRACK          reduce using rule 197 (AssignOp -> EQUAL .)
    STRUCT          reduce using rule 197 (AssignOp -> EQUAL .)
    FUNC            reduce using rule 197 (AssignOp -> EQUAL .)


state 283

    (194) AssignOp -> CAREQ .

    PLUS            reduce using rule 194 (AssignOp -> CAREQ .)
    MINUS           reduce using rule 194 (AssignOp -> CAREQ .)
    TIMES           reduce using rule 194 (AssignOp -> CAREQ .)
    AMPERS          reduce using rule 194 (AssignOp -> CAREQ .)
    NOT             reduce using rule 194 (AssignOp -> CAREQ .)
    LPAREN          reduce using rule 194 (AssignOp -> CAREQ .)
    IDENTIFIER      reduce using rule 194 (AssignOp -> CAREQ .)
    INTEGER         reduce using rule 194 (AssignOp -> CAREQ .)
    FLOAT           reduce using rule 194 (AssignOp -> CAREQ .)
    IMAGINARY       reduce using rule 194 (AssignOp -> CAREQ .)
    RUNE            reduce using rule 194 (AssignOp -> CAREQ .)
    STRING          reduce using rule 194 (AssignOp -> CAREQ .)
    TYPEX           reduce using rule 194 (AssignOp -> CAREQ .)
    LBRACK          reduce using rule 194 (AssignOp -> CAREQ .)
    STRUCT          reduce using rule 194 (AssignOp -> CAREQ .)
    FUNC            reduce using rule 194 (AssignOp -> CAREQ .)


state 284

    (189) AssignOp -> TIMESEQ .

    PLUS            reduce using rule 189 (AssignOp -> TIMESEQ .)
    MINUS           reduce using rule 189 (AssignOp -> TIMESEQ .)
    TIMES           reduce using rule 189 (AssignOp -> TIMESEQ .)
    AMPERS          reduce using rule 189 (AssignOp -> TIMESEQ .)
    NOT             reduce using rule 189 (AssignOp -> TIMESEQ .)
    LPAREN          reduce using rule 189 (AssignOp -> TIMESEQ .)
    IDENTIFIER      reduce using rule 189 (AssignOp -> TIMESEQ .)
    INTEGER         reduce using rule 189 (AssignOp -> TIMESEQ .)
    FLOAT           reduce using rule 189 (AssignOp -> TIMESEQ .)
    IMAGINARY       reduce using rule 189 (AssignOp -> TIMESEQ .)
    RUNE            reduce using rule 189 (AssignOp -> TIMESEQ .)
    STRING          reduce using rule 189 (AssignOp -> TIMESEQ .)
    TYPEX           reduce using rule 189 (AssignOp -> TIMESEQ .)
    LBRACK          reduce using rule 189 (AssignOp -> TIMESEQ .)
    STRUCT          reduce using rule 189 (AssignOp -> TIMESEQ .)
    FUNC            reduce using rule 189 (AssignOp -> TIMESEQ .)


state 285

    (187) AssignOp -> PLUSEQ .

    PLUS            reduce using rule 187 (AssignOp -> PLUSEQ .)
    MINUS           reduce using rule 187 (AssignOp -> PLUSEQ .)
    TIMES           reduce using rule 187 (AssignOp -> PLUSEQ .)
    AMPERS          reduce using rule 187 (AssignOp -> PLUSEQ .)
    NOT             reduce using rule 187 (AssignOp -> PLUSEQ .)
    LPAREN          reduce using rule 187 (AssignOp -> PLUSEQ .)
    IDENTIFIER      reduce using rule 187 (AssignOp -> PLUSEQ .)
    INTEGER         reduce using rule 187 (AssignOp -> PLUSEQ .)
    FLOAT           reduce using rule 187 (AssignOp -> PLUSEQ .)
    IMAGINARY       reduce using rule 187 (AssignOp -> PLUSEQ .)
    RUNE            reduce using rule 187 (AssignOp -> PLUSEQ .)
    STRING          reduce using rule 187 (AssignOp -> PLUSEQ .)
    TYPEX           reduce using rule 187 (AssignOp -> PLUSEQ .)
    LBRACK          reduce using rule 187 (AssignOp -> PLUSEQ .)
    STRUCT          reduce using rule 187 (AssignOp -> PLUSEQ .)
    FUNC            reduce using rule 187 (AssignOp -> PLUSEQ .)


state 286

    (191) AssignOp -> MODEQ .

    PLUS            reduce using rule 191 (AssignOp -> MODEQ .)
    MINUS           reduce using rule 191 (AssignOp -> MODEQ .)
    TIMES           reduce using rule 191 (AssignOp -> MODEQ .)
    AMPERS          reduce using rule 191 (AssignOp -> MODEQ .)
    NOT             reduce using rule 191 (AssignOp -> MODEQ .)
    LPAREN          reduce using rule 191 (AssignOp -> MODEQ .)
    IDENTIFIER      reduce using rule 191 (AssignOp -> MODEQ .)
    INTEGER         reduce using rule 191 (AssignOp -> MODEQ .)
    FLOAT           reduce using rule 191 (AssignOp -> MODEQ .)
    IMAGINARY       reduce using rule 191 (AssignOp -> MODEQ .)
    RUNE            reduce using rule 191 (AssignOp -> MODEQ .)
    STRING          reduce using rule 191 (AssignOp -> MODEQ .)
    TYPEX           reduce using rule 191 (AssignOp -> MODEQ .)
    LBRACK          reduce using rule 191 (AssignOp -> MODEQ .)
    STRUCT          reduce using rule 191 (AssignOp -> MODEQ .)
    FUNC            reduce using rule 191 (AssignOp -> MODEQ .)


state 287

    (196) AssignOp -> GGEQ .

    PLUS            reduce using rule 196 (AssignOp -> GGEQ .)
    MINUS           reduce using rule 196 (AssignOp -> GGEQ .)
    TIMES           reduce using rule 196 (AssignOp -> GGEQ .)
    AMPERS          reduce using rule 196 (AssignOp -> GGEQ .)
    NOT             reduce using rule 196 (AssignOp -> GGEQ .)
    LPAREN          reduce using rule 196 (AssignOp -> GGEQ .)
    IDENTIFIER      reduce using rule 196 (AssignOp -> GGEQ .)
    INTEGER         reduce using rule 196 (AssignOp -> GGEQ .)
    FLOAT           reduce using rule 196 (AssignOp -> GGEQ .)
    IMAGINARY       reduce using rule 196 (AssignOp -> GGEQ .)
    RUNE            reduce using rule 196 (AssignOp -> GGEQ .)
    STRING          reduce using rule 196 (AssignOp -> GGEQ .)
    TYPEX           reduce using rule 196 (AssignOp -> GGEQ .)
    LBRACK          reduce using rule 196 (AssignOp -> GGEQ .)
    STRUCT          reduce using rule 196 (AssignOp -> GGEQ .)
    FUNC            reduce using rule 196 (AssignOp -> GGEQ .)


state 288

    (195) AssignOp -> LLEQ .

    PLUS            reduce using rule 195 (AssignOp -> LLEQ .)
    MINUS           reduce using rule 195 (AssignOp -> LLEQ .)
    TIMES           reduce using rule 195 (AssignOp -> LLEQ .)
    AMPERS          reduce using rule 195 (AssignOp -> LLEQ .)
    NOT             reduce using rule 195 (AssignOp -> LLEQ .)
    LPAREN          reduce using rule 195 (AssignOp -> LLEQ .)
    IDENTIFIER      reduce using rule 195 (AssignOp -> LLEQ .)
    INTEGER         reduce using rule 195 (AssignOp -> LLEQ .)
    FLOAT           reduce using rule 195 (AssignOp -> LLEQ .)
    IMAGINARY       reduce using rule 195 (AssignOp -> LLEQ .)
    RUNE            reduce using rule 195 (AssignOp -> LLEQ .)
    STRING          reduce using rule 195 (AssignOp -> LLEQ .)
    TYPEX           reduce using rule 195 (AssignOp -> LLEQ .)
    LBRACK          reduce using rule 195 (AssignOp -> LLEQ .)
    STRUCT          reduce using rule 195 (AssignOp -> LLEQ .)
    FUNC            reduce using rule 195 (AssignOp -> LLEQ .)


state 289

    (193) AssignOp -> OREQ .

    PLUS            reduce using rule 193 (AssignOp -> OREQ .)
    MINUS           reduce using rule 193 (AssignOp -> OREQ .)
    TIMES           reduce using rule 193 (AssignOp -> OREQ .)
    AMPERS          reduce using rule 193 (AssignOp -> OREQ .)
    NOT             reduce using rule 193 (AssignOp -> OREQ .)
    LPAREN          reduce using rule 193 (AssignOp -> OREQ .)
    IDENTIFIER      reduce using rule 193 (AssignOp -> OREQ .)
    INTEGER         reduce using rule 193 (AssignOp -> OREQ .)
    FLOAT           reduce using rule 193 (AssignOp -> OREQ .)
    IMAGINARY       reduce using rule 193 (AssignOp -> OREQ .)
    RUNE            reduce using rule 193 (AssignOp -> OREQ .)
    STRING          reduce using rule 193 (AssignOp -> OREQ .)
    TYPEX           reduce using rule 193 (AssignOp -> OREQ .)
    LBRACK          reduce using rule 193 (AssignOp -> OREQ .)
    STRUCT          reduce using rule 193 (AssignOp -> OREQ .)
    FUNC            reduce using rule 193 (AssignOp -> OREQ .)


state 290

    (188) AssignOp -> MINUSEQ .

    PLUS            reduce using rule 188 (AssignOp -> MINUSEQ .)
    MINUS           reduce using rule 188 (AssignOp -> MINUSEQ .)
    TIMES           reduce using rule 188 (AssignOp -> MINUSEQ .)
    AMPERS          reduce using rule 188 (AssignOp -> MINUSEQ .)
    NOT             reduce using rule 188 (AssignOp -> MINUSEQ .)
    LPAREN          reduce using rule 188 (AssignOp -> MINUSEQ .)
    IDENTIFIER      reduce using rule 188 (AssignOp -> MINUSEQ .)
    INTEGER         reduce using rule 188 (AssignOp -> MINUSEQ .)
    FLOAT           reduce using rule 188 (AssignOp -> MINUSEQ .)
    IMAGINARY       reduce using rule 188 (AssignOp -> MINUSEQ .)
    RUNE            reduce using rule 188 (AssignOp -> MINUSEQ .)
    STRING          reduce using rule 188 (AssignOp -> MINUSEQ .)
    TYPEX           reduce using rule 188 (AssignOp -> MINUSEQ .)
    LBRACK          reduce using rule 188 (AssignOp -> MINUSEQ .)
    STRUCT          reduce using rule 188 (AssignOp -> MINUSEQ .)
    FUNC            reduce using rule 188 (AssignOp -> MINUSEQ .)


state 291

    (192) AssignOp -> AMPEQ .

    PLUS            reduce using rule 192 (AssignOp -> AMPEQ .)
    MINUS           reduce using rule 192 (AssignOp -> AMPEQ .)
    TIMES           reduce using rule 192 (AssignOp -> AMPEQ .)
    AMPERS          reduce using rule 192 (AssignOp -> AMPEQ .)
    NOT             reduce using rule 192 (AssignOp -> AMPEQ .)
    LPAREN          reduce using rule 192 (AssignOp -> AMPEQ .)
    IDENTIFIER      reduce using rule 192 (AssignOp -> AMPEQ .)
    INTEGER         reduce using rule 192 (AssignOp -> AMPEQ .)
    FLOAT           reduce using rule 192 (AssignOp -> AMPEQ .)
    IMAGINARY       reduce using rule 192 (AssignOp -> AMPEQ .)
    RUNE            reduce using rule 192 (AssignOp -> AMPEQ .)
    STRING          reduce using rule 192 (AssignOp -> AMPEQ .)
    TYPEX           reduce using rule 192 (AssignOp -> AMPEQ .)
    LBRACK          reduce using rule 192 (AssignOp -> AMPEQ .)
    STRUCT          reduce using rule 192 (AssignOp -> AMPEQ .)
    FUNC            reduce using rule 192 (AssignOp -> AMPEQ .)


state 292

    (185) Assignment -> ExpressionList assign_op . ExpressionList
    (128) ExpressionList -> . Expression ExpressionRep
    (131) Expression -> . UnaryExpr
    (132) Expression -> . Expression BinaryOp Expression
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (111) PrimaryExpr -> . Operand
    (112) PrimaryExpr -> . Conversion
    (113) PrimaryExpr -> . PrimaryExpr Selector
    (114) PrimaryExpr -> . PrimaryExpr Index
    (115) PrimaryExpr -> . PrimaryExpr Slice
    (116) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (117) PrimaryExpr -> . PrimaryExpr Arguments
    (159) UnaryOp -> . PLUS
    (160) UnaryOp -> . MINUS
    (161) UnaryOp -> . TIMES
    (162) UnaryOp -> . AMPERS
    (163) UnaryOp -> . NOT
    (82) Operand -> . Literal
    (83) Operand -> . OperandName
    (84) Operand -> . LPAREN Expression RPAREN
    (110) Conversion -> . Type LPAREN Expression RPAREN
    (85) Literal -> . BasicLit
    (91) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (86) BasicLit -> . INTEGER
    (87) BasicLit -> . FLOAT
    (88) BasicLit -> . IMAGINARY
    (89) BasicLit -> . RUNE
    (90) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 101
    MINUS           shift and go to state 97
    TIMES           shift and go to state 107
    AMPERS          shift and go to state 112
    NOT             shift and go to state 98
    LPAREN          shift and go to state 109
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 111
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 105
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    UnaryOp                        shift and go to state 93
    PrimaryExpr                    shift and go to state 94
    Conversion                     shift and go to state 92
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    Type                           shift and go to state 100
    OperandName                    shift and go to state 99
    BasicLit                       shift and go to state 113
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    UnaryExpr                      shift and go to state 106
    ExpressionList                 shift and go to state 318
    Expression                     shift and go to state 135
    PointerType                    shift and go to state 66
    TypeLit                        shift and go to state 55
    Operand                        shift and go to state 114
    FunctionType                   shift and go to state 67

state 293

    (190) AssignOp -> DIVIDEEQ .

    PLUS            reduce using rule 190 (AssignOp -> DIVIDEEQ .)
    MINUS           reduce using rule 190 (AssignOp -> DIVIDEEQ .)
    TIMES           reduce using rule 190 (AssignOp -> DIVIDEEQ .)
    AMPERS          reduce using rule 190 (AssignOp -> DIVIDEEQ .)
    NOT             reduce using rule 190 (AssignOp -> DIVIDEEQ .)
    LPAREN          reduce using rule 190 (AssignOp -> DIVIDEEQ .)
    IDENTIFIER      reduce using rule 190 (AssignOp -> DIVIDEEQ .)
    INTEGER         reduce using rule 190 (AssignOp -> DIVIDEEQ .)
    FLOAT           reduce using rule 190 (AssignOp -> DIVIDEEQ .)
    IMAGINARY       reduce using rule 190 (AssignOp -> DIVIDEEQ .)
    RUNE            reduce using rule 190 (AssignOp -> DIVIDEEQ .)
    STRING          reduce using rule 190 (AssignOp -> DIVIDEEQ .)
    TYPEX           reduce using rule 190 (AssignOp -> DIVIDEEQ .)
    LBRACK          reduce using rule 190 (AssignOp -> DIVIDEEQ .)
    STRUCT          reduce using rule 190 (AssignOp -> DIVIDEEQ .)
    FUNC            reduce using rule 190 (AssignOp -> DIVIDEEQ .)


state 294

    (183) IncDecStmt -> Expression PLUSPLUS .

    LBRACE          reduce using rule 183 (IncDecStmt -> Expression PLUSPLUS .)
    SEMICOL         reduce using rule 183 (IncDecStmt -> Expression PLUSPLUS .)


state 295

    (184) IncDecStmt -> Expression MINUSMIN .

    LBRACE          reduce using rule 184 (IncDecStmt -> Expression MINUSMIN .)
    SEMICOL         reduce using rule 184 (IncDecStmt -> Expression MINUSMIN .)


state 296

    (239) BreakStmt -> BREAK LabelOpt .

    SEMICOL         reduce using rule 239 (BreakStmt -> BREAK LabelOpt .)


state 297

    (243) GotoStmt -> GOTO Label .

    SEMICOL         reduce using rule 243 (GotoStmt -> GOTO Label .)


state 298

    (198) IfStmt -> IF Expression . Block ElseOpt
    (132) Expression -> Expression . BinaryOp Expression
    (40) Block -> . LBRACE StatementList RBRACE
    (137) BinaryOp -> . OROR
    (138) BinaryOp -> . AMPAMP
    (139) BinaryOp -> . RelOp
    (140) BinaryOp -> . AddOp
    (141) BinaryOp -> . MulOp
    (142) RelOp -> . EQEQ
    (143) RelOp -> . NOTEQ
    (144) RelOp -> . LESS
    (145) RelOp -> . GREAT
    (146) RelOp -> . LEQ
    (147) RelOp -> . GEQ
    (148) AddOp -> . PLUS
    (149) AddOp -> . MINUS
    (150) AddOp -> . OR
    (151) AddOp -> . CARET
    (152) MulOp -> . TIMES
    (153) MulOp -> . DIVIDE
    (154) MulOp -> . MOD
    (155) MulOp -> . AMPERS
    (156) MulOp -> . LL
    (157) MulOp -> . GG
    (158) MulOp -> . AMPCAR

    LBRACE          shift and go to state 123
    OROR            shift and go to state 162
    AMPAMP          shift and go to state 168
    EQEQ            shift and go to state 167
    NOTEQ           shift and go to state 173
    LESS            shift and go to state 166
    GREAT           shift and go to state 164
    LEQ             shift and go to state 182
    GEQ             shift and go to state 171
    PLUS            shift and go to state 174
    MINUS           shift and go to state 170
    OR              shift and go to state 183
    CARET           shift and go to state 163
    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 177
    MOD             shift and go to state 184
    AMPERS          shift and go to state 181
    LL              shift and go to state 172
    GG              shift and go to state 179
    AMPCAR          shift and go to state 165

    AddOp                          shift and go to state 176
    RelOp                          shift and go to state 180
    BinaryOp                       shift and go to state 175
    MulOp                          shift and go to state 169
    Block                          shift and go to state 319

state 299

    (38) ParameterDecl -> IdentifierList Type .

    COMMA           reduce using rule 38 (ParameterDecl -> IdentifierList Type .)
    RPAREN          reduce using rule 38 (ParameterDecl -> IdentifierList Type .)


state 300

    (129) ExpressionRep -> ExpressionRep COMMA Expression .
    (132) Expression -> Expression . BinaryOp Expression
    (137) BinaryOp -> . OROR
    (138) BinaryOp -> . AMPAMP
    (139) BinaryOp -> . RelOp
    (140) BinaryOp -> . AddOp
    (141) BinaryOp -> . MulOp
    (142) RelOp -> . EQEQ
    (143) RelOp -> . NOTEQ
    (144) RelOp -> . LESS
    (145) RelOp -> . GREAT
    (146) RelOp -> . LEQ
    (147) RelOp -> . GEQ
    (148) AddOp -> . PLUS
    (149) AddOp -> . MINUS
    (150) AddOp -> . OR
    (151) AddOp -> . CARET
    (152) MulOp -> . TIMES
    (153) MulOp -> . DIVIDE
    (154) MulOp -> . MOD
    (155) MulOp -> . AMPERS
    (156) MulOp -> . LL
    (157) MulOp -> . GG
    (158) MulOp -> . AMPCAR

    COMMA           reduce using rule 129 (ExpressionRep -> ExpressionRep COMMA Expression .)
    PLUSEQ          reduce using rule 129 (ExpressionRep -> ExpressionRep COMMA Expression .)
    MINUSEQ         reduce using rule 129 (ExpressionRep -> ExpressionRep COMMA Expression .)
    TIMESEQ         reduce using rule 129 (ExpressionRep -> ExpressionRep COMMA Expression .)
    DIVIDEEQ        reduce using rule 129 (ExpressionRep -> ExpressionRep COMMA Expression .)
    MODEQ           reduce using rule 129 (ExpressionRep -> ExpressionRep COMMA Expression .)
    AMPEQ           reduce using rule 129 (ExpressionRep -> ExpressionRep COMMA Expression .)
    OREQ            reduce using rule 129 (ExpressionRep -> ExpressionRep COMMA Expression .)
    CAREQ           reduce using rule 129 (ExpressionRep -> ExpressionRep COMMA Expression .)
    LLEQ            reduce using rule 129 (ExpressionRep -> ExpressionRep COMMA Expression .)
    GGEQ            reduce using rule 129 (ExpressionRep -> ExpressionRep COMMA Expression .)
    EQUAL           reduce using rule 129 (ExpressionRep -> ExpressionRep COMMA Expression .)
    SEMICOL         reduce using rule 129 (ExpressionRep -> ExpressionRep COMMA Expression .)
    RPAREN          reduce using rule 129 (ExpressionRep -> ExpressionRep COMMA Expression .)
    LBRACE          reduce using rule 129 (ExpressionRep -> ExpressionRep COMMA Expression .)
    COLON           reduce using rule 129 (ExpressionRep -> ExpressionRep COMMA Expression .)
    OROR            shift and go to state 162
    AMPAMP          shift and go to state 168
    EQEQ            shift and go to state 167
    NOTEQ           shift and go to state 173
    LESS            shift and go to state 166
    GREAT           shift and go to state 164
    LEQ             shift and go to state 182
    GEQ             shift and go to state 171
    PLUS            shift and go to state 174
    MINUS           shift and go to state 170
    OR              shift and go to state 183
    CARET           shift and go to state 163
    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 177
    MOD             shift and go to state 184
    AMPERS          shift and go to state 181
    LL              shift and go to state 172
    GG              shift and go to state 179
    AMPCAR          shift and go to state 165

    AddOp                          shift and go to state 176
    RelOp                          shift and go to state 180
    BinaryOp                       shift and go to state 175
    MulOp                          shift and go to state 169

state 301

    (21) Tag -> STRING .

    SEMICOL         reduce using rule 21 (Tag -> STRING .)


state 302

    (20) TagOpt -> epsilon .

    SEMICOL         reduce using rule 20 (TagOpt -> epsilon .)


state 303

    (19) TagOpt -> Tag .

    SEMICOL         reduce using rule 19 (TagOpt -> Tag .)


state 304

    (18) FieldDecl -> IdentifierList Type TagOpt .

    SEMICOL         reduce using rule 18 (FieldDecl -> IdentifierList Type TagOpt .)


state 305

    (120) Slice -> LBRACK ExpressionOpt COLON ExpressionOpt . RBRACK

    RBRACK          shift and go to state 320


state 306

    (121) Slice -> LBRACK ExpressionOpt COLON Expression . COLON Expression RBRACK
    (133) ExpressionOpt -> Expression .
    (132) Expression -> Expression . BinaryOp Expression
    (137) BinaryOp -> . OROR
    (138) BinaryOp -> . AMPAMP
    (139) BinaryOp -> . RelOp
    (140) BinaryOp -> . AddOp
    (141) BinaryOp -> . MulOp
    (142) RelOp -> . EQEQ
    (143) RelOp -> . NOTEQ
    (144) RelOp -> . LESS
    (145) RelOp -> . GREAT
    (146) RelOp -> . LEQ
    (147) RelOp -> . GEQ
    (148) AddOp -> . PLUS
    (149) AddOp -> . MINUS
    (150) AddOp -> . OR
    (151) AddOp -> . CARET
    (152) MulOp -> . TIMES
    (153) MulOp -> . DIVIDE
    (154) MulOp -> . MOD
    (155) MulOp -> . AMPERS
    (156) MulOp -> . LL
    (157) MulOp -> . GG
    (158) MulOp -> . AMPCAR

    COLON           shift and go to state 321
    RBRACK          reduce using rule 133 (ExpressionOpt -> Expression .)
    OROR            shift and go to state 162
    AMPAMP          shift and go to state 168
    EQEQ            shift and go to state 167
    NOTEQ           shift and go to state 173
    LESS            shift and go to state 166
    GREAT           shift and go to state 164
    LEQ             shift and go to state 182
    GEQ             shift and go to state 171
    PLUS            shift and go to state 174
    MINUS           shift and go to state 170
    OR              shift and go to state 183
    CARET           shift and go to state 163
    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 177
    MOD             shift and go to state 184
    AMPERS          shift and go to state 181
    LL              shift and go to state 172
    GG              shift and go to state 179
    AMPCAR          shift and go to state 165

    AddOp                          shift and go to state 176
    RelOp                          shift and go to state 180
    BinaryOp                       shift and go to state 175
    MulOp                          shift and go to state 169

state 307

    (122) TypeAssertion -> DOT LPAREN Type RPAREN .

    DOT             reduce using rule 122 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    LBRACK          reduce using rule 122 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    LPAREN          reduce using rule 122 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    OROR            reduce using rule 122 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    AMPAMP          reduce using rule 122 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    EQEQ            reduce using rule 122 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    NOTEQ           reduce using rule 122 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    LESS            reduce using rule 122 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    GREAT           reduce using rule 122 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    LEQ             reduce using rule 122 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    GEQ             reduce using rule 122 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    PLUS            reduce using rule 122 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    MINUS           reduce using rule 122 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    OR              reduce using rule 122 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    CARET           reduce using rule 122 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    TIMES           reduce using rule 122 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    DIVIDE          reduce using rule 122 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    MOD             reduce using rule 122 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    AMPERS          reduce using rule 122 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    LL              reduce using rule 122 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    GG              reduce using rule 122 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    AMPCAR          reduce using rule 122 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    RBRACK          reduce using rule 122 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    COMMA           reduce using rule 122 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    SEMICOL         reduce using rule 122 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    RPAREN          reduce using rule 122 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    COLON           reduce using rule 122 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    PLUSPLUS        reduce using rule 122 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    MINUSMIN        reduce using rule 122 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    PLUSEQ          reduce using rule 122 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    MINUSEQ         reduce using rule 122 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    TIMESEQ         reduce using rule 122 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    DIVIDEEQ        reduce using rule 122 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    MODEQ           reduce using rule 122 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    AMPEQ           reduce using rule 122 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    OREQ            reduce using rule 122 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    CAREQ           reduce using rule 122 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    LLEQ            reduce using rule 122 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    GGEQ            reduce using rule 122 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    EQUAL           reduce using rule 122 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    LBRACE          reduce using rule 122 (TypeAssertion -> DOT LPAREN Type RPAREN .)


state 308

    (180) LabeledStmt -> Label COLON Statement .

    SEMICOL         reduce using rule 180 (LabeledStmt -> Label COLON Statement .)


state 309

    (229) ForClause -> SimpleStmt SEMICOL . ConditionOpt SEMICOL SimpleStmt
    (230) ConditionOpt -> . epsilon
    (231) ConditionOpt -> . Condition
    (260) epsilon -> .
    (228) Condition -> . Expression
    (131) Expression -> . UnaryExpr
    (132) Expression -> . Expression BinaryOp Expression
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (111) PrimaryExpr -> . Operand
    (112) PrimaryExpr -> . Conversion
    (113) PrimaryExpr -> . PrimaryExpr Selector
    (114) PrimaryExpr -> . PrimaryExpr Index
    (115) PrimaryExpr -> . PrimaryExpr Slice
    (116) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (117) PrimaryExpr -> . PrimaryExpr Arguments
    (159) UnaryOp -> . PLUS
    (160) UnaryOp -> . MINUS
    (161) UnaryOp -> . TIMES
    (162) UnaryOp -> . AMPERS
    (163) UnaryOp -> . NOT
    (82) Operand -> . Literal
    (83) Operand -> . OperandName
    (84) Operand -> . LPAREN Expression RPAREN
    (110) Conversion -> . Type LPAREN Expression RPAREN
    (85) Literal -> . BasicLit
    (91) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (86) BasicLit -> . INTEGER
    (87) BasicLit -> . FLOAT
    (88) BasicLit -> . IMAGINARY
    (89) BasicLit -> . RUNE
    (90) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    SEMICOL         reduce using rule 260 (epsilon -> .)
    PLUS            shift and go to state 101
    MINUS           shift and go to state 97
    TIMES           shift and go to state 107
    AMPERS          shift and go to state 112
    NOT             shift and go to state 98
    LPAREN          shift and go to state 109
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 111
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 105
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 92
    UnaryOp                        shift and go to state 93
    PrimaryExpr                    shift and go to state 94
    Literal                        shift and go to state 95
    Type                           shift and go to state 100
    OperandName                    shift and go to state 99
    BasicLit                       shift and go to state 113
    TypeName                       shift and go to state 56
    Condition                      shift and go to state 322
    StructType                     shift and go to state 58
    epsilon                        shift and go to state 323
    UnaryExpr                      shift and go to state 106
    ConditionOpt                   shift and go to state 324
    ArrayType                      shift and go to state 53
    Expression                     shift and go to state 325
    PointerType                    shift and go to state 66
    TypeLit                        shift and go to state 55
    Operand                        shift and go to state 114
    FunctionType                   shift and go to state 67

state 310

    (224) ForStmt -> FOR ConditionBlockOpt Block .

    SEMICOL         reduce using rule 224 (ForStmt -> FOR ConditionBlockOpt Block .)


state 311

    (199) SimpleStmtOpt -> SimpleStmt SEMICOL .

    IDENTIFIER      reduce using rule 199 (SimpleStmtOpt -> SimpleStmt SEMICOL .)
    LPAREN          reduce using rule 199 (SimpleStmtOpt -> SimpleStmt SEMICOL .)
    INTEGER         reduce using rule 199 (SimpleStmtOpt -> SimpleStmt SEMICOL .)
    FLOAT           reduce using rule 199 (SimpleStmtOpt -> SimpleStmt SEMICOL .)
    IMAGINARY       reduce using rule 199 (SimpleStmtOpt -> SimpleStmt SEMICOL .)
    RUNE            reduce using rule 199 (SimpleStmtOpt -> SimpleStmt SEMICOL .)
    STRING          reduce using rule 199 (SimpleStmtOpt -> SimpleStmt SEMICOL .)
    TYPEX           reduce using rule 199 (SimpleStmtOpt -> SimpleStmt SEMICOL .)
    LBRACK          reduce using rule 199 (SimpleStmtOpt -> SimpleStmt SEMICOL .)
    STRUCT          reduce using rule 199 (SimpleStmtOpt -> SimpleStmt SEMICOL .)
    TIMES           reduce using rule 199 (SimpleStmtOpt -> SimpleStmt SEMICOL .)
    FUNC            reduce using rule 199 (SimpleStmtOpt -> SimpleStmt SEMICOL .)


state 312

    (206) ExprSwitchStmt -> SWITCH ExpressionOpt LBRACE . ExprCaseClauseRep RBRACE
    (207) ExprCaseClauseRep -> . ExprCaseClauseRep ExprCaseClause
    (208) ExprCaseClauseRep -> . epsilon
    (260) epsilon -> .

    RBRACE          reduce using rule 260 (epsilon -> .)
    CASE            reduce using rule 260 (epsilon -> .)
    DEFAULT         reduce using rule 260 (epsilon -> .)

    ExprCaseClauseRep              shift and go to state 327
    epsilon                        shift and go to state 326

state 313

    (215) IdentifierOpt -> epsilon .

    LPAREN          reduce using rule 215 (IdentifierOpt -> epsilon .)
    IDENTIFIER      reduce using rule 215 (IdentifierOpt -> epsilon .)
    INTEGER         reduce using rule 215 (IdentifierOpt -> epsilon .)
    FLOAT           reduce using rule 215 (IdentifierOpt -> epsilon .)
    IMAGINARY       reduce using rule 215 (IdentifierOpt -> epsilon .)
    RUNE            reduce using rule 215 (IdentifierOpt -> epsilon .)
    STRING          reduce using rule 215 (IdentifierOpt -> epsilon .)
    TYPEX           reduce using rule 215 (IdentifierOpt -> epsilon .)
    LBRACK          reduce using rule 215 (IdentifierOpt -> epsilon .)
    STRUCT          reduce using rule 215 (IdentifierOpt -> epsilon .)
    TIMES           reduce using rule 215 (IdentifierOpt -> epsilon .)
    FUNC            reduce using rule 215 (IdentifierOpt -> epsilon .)


state 314

    (212) TypeSwitchStmt -> SWITCH SimpleStmtOpt TypeSwitchGuard . LBRACE TypeCaseClauseOpt RBRACE

    LBRACE          shift and go to state 328


state 315

    (213) TypeSwitchGuard -> IdentifierOpt . PrimaryExpr DOT LPAREN TYPE RPAREN
    (111) PrimaryExpr -> . Operand
    (112) PrimaryExpr -> . Conversion
    (113) PrimaryExpr -> . PrimaryExpr Selector
    (114) PrimaryExpr -> . PrimaryExpr Index
    (115) PrimaryExpr -> . PrimaryExpr Slice
    (116) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (117) PrimaryExpr -> . PrimaryExpr Arguments
    (82) Operand -> . Literal
    (83) Operand -> . OperandName
    (84) Operand -> . LPAREN Expression RPAREN
    (110) Conversion -> . Type LPAREN Expression RPAREN
    (85) Literal -> . BasicLit
    (91) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (86) BasicLit -> . INTEGER
    (87) BasicLit -> . FLOAT
    (88) BasicLit -> . IMAGINARY
    (89) BasicLit -> . RUNE
    (90) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 109
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 111
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 105
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 92
    PrimaryExpr                    shift and go to state 329
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    Type                           shift and go to state 100
    OperandName                    shift and go to state 99
    TypeLit                        shift and go to state 55
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    PointerType                    shift and go to state 66
    BasicLit                       shift and go to state 113
    Operand                        shift and go to state 114
    FunctionType                   shift and go to state 67

state 316

    (214) IdentifierOpt -> IDENTIFIER . COLONEQ

    COLONEQ         shift and go to state 330


state 317

    (75) ShortVarDecl -> IDENTIFIER COLONEQ Expression .
    (132) Expression -> Expression . BinaryOp Expression
    (137) BinaryOp -> . OROR
    (138) BinaryOp -> . AMPAMP
    (139) BinaryOp -> . RelOp
    (140) BinaryOp -> . AddOp
    (141) BinaryOp -> . MulOp
    (142) RelOp -> . EQEQ
    (143) RelOp -> . NOTEQ
    (144) RelOp -> . LESS
    (145) RelOp -> . GREAT
    (146) RelOp -> . LEQ
    (147) RelOp -> . GEQ
    (148) AddOp -> . PLUS
    (149) AddOp -> . MINUS
    (150) AddOp -> . OR
    (151) AddOp -> . CARET
    (152) MulOp -> . TIMES
    (153) MulOp -> . DIVIDE
    (154) MulOp -> . MOD
    (155) MulOp -> . AMPERS
    (156) MulOp -> . LL
    (157) MulOp -> . GG
    (158) MulOp -> . AMPCAR

    SEMICOL         reduce using rule 75 (ShortVarDecl -> IDENTIFIER COLONEQ Expression .)
    LBRACE          reduce using rule 75 (ShortVarDecl -> IDENTIFIER COLONEQ Expression .)
    OROR            shift and go to state 162
    AMPAMP          shift and go to state 168
    EQEQ            shift and go to state 167
    NOTEQ           shift and go to state 173
    LESS            shift and go to state 166
    GREAT           shift and go to state 164
    LEQ             shift and go to state 182
    GEQ             shift and go to state 171
    PLUS            shift and go to state 174
    MINUS           shift and go to state 170
    OR              shift and go to state 183
    CARET           shift and go to state 163
    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 177
    MOD             shift and go to state 184
    AMPERS          shift and go to state 181
    LL              shift and go to state 172
    GG              shift and go to state 179
    AMPCAR          shift and go to state 165

    AddOp                          shift and go to state 176
    MulOp                          shift and go to state 169
    RelOp                          shift and go to state 180
    BinaryOp                       shift and go to state 175

state 318

    (185) Assignment -> ExpressionList assign_op ExpressionList .

    SEMICOL         reduce using rule 185 (Assignment -> ExpressionList assign_op ExpressionList .)
    LBRACE          reduce using rule 185 (Assignment -> ExpressionList assign_op ExpressionList .)


state 319

    (198) IfStmt -> IF Expression Block . ElseOpt
    (201) ElseOpt -> . ELSE IfStmt
    (202) ElseOpt -> . ELSE Block
    (203) ElseOpt -> . epsilon
    (260) epsilon -> .

    ELSE            shift and go to state 332
    SEMICOL         reduce using rule 260 (epsilon -> .)

    epsilon                        shift and go to state 331
    ElseOpt                        shift and go to state 333

state 320

    (120) Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .

    DOT             reduce using rule 120 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    LBRACK          reduce using rule 120 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    LPAREN          reduce using rule 120 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    OROR            reduce using rule 120 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    AMPAMP          reduce using rule 120 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    EQEQ            reduce using rule 120 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    NOTEQ           reduce using rule 120 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    LESS            reduce using rule 120 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    GREAT           reduce using rule 120 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    LEQ             reduce using rule 120 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    GEQ             reduce using rule 120 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    PLUS            reduce using rule 120 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    MINUS           reduce using rule 120 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    OR              reduce using rule 120 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    CARET           reduce using rule 120 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    TIMES           reduce using rule 120 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    DIVIDE          reduce using rule 120 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    MOD             reduce using rule 120 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    AMPERS          reduce using rule 120 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    LL              reduce using rule 120 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    GG              reduce using rule 120 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    AMPCAR          reduce using rule 120 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    RBRACK          reduce using rule 120 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    COMMA           reduce using rule 120 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    SEMICOL         reduce using rule 120 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    RPAREN          reduce using rule 120 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    COLON           reduce using rule 120 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    PLUSPLUS        reduce using rule 120 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    MINUSMIN        reduce using rule 120 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    PLUSEQ          reduce using rule 120 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    MINUSEQ         reduce using rule 120 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    TIMESEQ         reduce using rule 120 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    DIVIDEEQ        reduce using rule 120 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    MODEQ           reduce using rule 120 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    AMPEQ           reduce using rule 120 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    OREQ            reduce using rule 120 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    CAREQ           reduce using rule 120 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    LLEQ            reduce using rule 120 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    GGEQ            reduce using rule 120 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    EQUAL           reduce using rule 120 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    LBRACE          reduce using rule 120 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)


state 321

    (121) Slice -> LBRACK ExpressionOpt COLON Expression COLON . Expression RBRACK
    (131) Expression -> . UnaryExpr
    (132) Expression -> . Expression BinaryOp Expression
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (111) PrimaryExpr -> . Operand
    (112) PrimaryExpr -> . Conversion
    (113) PrimaryExpr -> . PrimaryExpr Selector
    (114) PrimaryExpr -> . PrimaryExpr Index
    (115) PrimaryExpr -> . PrimaryExpr Slice
    (116) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (117) PrimaryExpr -> . PrimaryExpr Arguments
    (159) UnaryOp -> . PLUS
    (160) UnaryOp -> . MINUS
    (161) UnaryOp -> . TIMES
    (162) UnaryOp -> . AMPERS
    (163) UnaryOp -> . NOT
    (82) Operand -> . Literal
    (83) Operand -> . OperandName
    (84) Operand -> . LPAREN Expression RPAREN
    (110) Conversion -> . Type LPAREN Expression RPAREN
    (85) Literal -> . BasicLit
    (91) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (86) BasicLit -> . INTEGER
    (87) BasicLit -> . FLOAT
    (88) BasicLit -> . IMAGINARY
    (89) BasicLit -> . RUNE
    (90) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 101
    MINUS           shift and go to state 97
    TIMES           shift and go to state 107
    AMPERS          shift and go to state 112
    NOT             shift and go to state 98
    LPAREN          shift and go to state 109
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 111
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 105
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 92
    UnaryOp                        shift and go to state 93
    PrimaryExpr                    shift and go to state 94
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    Type                           shift and go to state 100
    OperandName                    shift and go to state 99
    BasicLit                       shift and go to state 113
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    UnaryExpr                      shift and go to state 106
    Expression                     shift and go to state 334
    PointerType                    shift and go to state 66
    TypeLit                        shift and go to state 55
    Operand                        shift and go to state 114
    FunctionType                   shift and go to state 67

state 322

    (231) ConditionOpt -> Condition .

    SEMICOL         reduce using rule 231 (ConditionOpt -> Condition .)


state 323

    (230) ConditionOpt -> epsilon .

    SEMICOL         reduce using rule 230 (ConditionOpt -> epsilon .)


state 324

    (229) ForClause -> SimpleStmt SEMICOL ConditionOpt . SEMICOL SimpleStmt

    SEMICOL         shift and go to state 335


state 325

    (228) Condition -> Expression .
    (132) Expression -> Expression . BinaryOp Expression
    (137) BinaryOp -> . OROR
    (138) BinaryOp -> . AMPAMP
    (139) BinaryOp -> . RelOp
    (140) BinaryOp -> . AddOp
    (141) BinaryOp -> . MulOp
    (142) RelOp -> . EQEQ
    (143) RelOp -> . NOTEQ
    (144) RelOp -> . LESS
    (145) RelOp -> . GREAT
    (146) RelOp -> . LEQ
    (147) RelOp -> . GEQ
    (148) AddOp -> . PLUS
    (149) AddOp -> . MINUS
    (150) AddOp -> . OR
    (151) AddOp -> . CARET
    (152) MulOp -> . TIMES
    (153) MulOp -> . DIVIDE
    (154) MulOp -> . MOD
    (155) MulOp -> . AMPERS
    (156) MulOp -> . LL
    (157) MulOp -> . GG
    (158) MulOp -> . AMPCAR

    SEMICOL         reduce using rule 228 (Condition -> Expression .)
    OROR            shift and go to state 162
    AMPAMP          shift and go to state 168
    EQEQ            shift and go to state 167
    NOTEQ           shift and go to state 173
    LESS            shift and go to state 166
    GREAT           shift and go to state 164
    LEQ             shift and go to state 182
    GEQ             shift and go to state 171
    PLUS            shift and go to state 174
    MINUS           shift and go to state 170
    OR              shift and go to state 183
    CARET           shift and go to state 163
    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 177
    MOD             shift and go to state 184
    AMPERS          shift and go to state 181
    LL              shift and go to state 172
    GG              shift and go to state 179
    AMPCAR          shift and go to state 165

    AddOp                          shift and go to state 176
    MulOp                          shift and go to state 169
    RelOp                          shift and go to state 180
    BinaryOp                       shift and go to state 175

state 326

    (208) ExprCaseClauseRep -> epsilon .

    RBRACE          reduce using rule 208 (ExprCaseClauseRep -> epsilon .)
    CASE            reduce using rule 208 (ExprCaseClauseRep -> epsilon .)
    DEFAULT         reduce using rule 208 (ExprCaseClauseRep -> epsilon .)


state 327

    (206) ExprSwitchStmt -> SWITCH ExpressionOpt LBRACE ExprCaseClauseRep . RBRACE
    (207) ExprCaseClauseRep -> ExprCaseClauseRep . ExprCaseClause
    (209) ExprCaseClause -> . ExprSwitchCase COLON StatementList
    (210) ExprSwitchCase -> . CASE ExpressionList
    (211) ExprSwitchCase -> . DEFAULT

    RBRACE          shift and go to state 337
    CASE            shift and go to state 336
    DEFAULT         shift and go to state 339

    ExprSwitchCase                 shift and go to state 338
    ExprCaseClause                 shift and go to state 340

state 328

    (212) TypeSwitchStmt -> SWITCH SimpleStmtOpt TypeSwitchGuard LBRACE . TypeCaseClauseOpt RBRACE
    (216) TypeCaseClauseOpt -> . TypeCaseClauseOpt TypeCaseClause
    (217) TypeCaseClauseOpt -> . epsilon
    (260) epsilon -> .

    RBRACE          reduce using rule 260 (epsilon -> .)
    CASE            reduce using rule 260 (epsilon -> .)
    DEFAULT         reduce using rule 260 (epsilon -> .)

    epsilon                        shift and go to state 341
    TypeCaseClauseOpt              shift and go to state 342

state 329

    (213) TypeSwitchGuard -> IdentifierOpt PrimaryExpr . DOT LPAREN TYPE RPAREN
    (113) PrimaryExpr -> PrimaryExpr . Selector
    (114) PrimaryExpr -> PrimaryExpr . Index
    (115) PrimaryExpr -> PrimaryExpr . Slice
    (116) PrimaryExpr -> PrimaryExpr . TypeAssertion
    (117) PrimaryExpr -> PrimaryExpr . Arguments
    (118) Selector -> . DOT IDENTIFIER
    (119) Index -> . LBRACK Expression RBRACK
    (120) Slice -> . LBRACK ExpressionOpt COLON ExpressionOpt RBRACK
    (121) Slice -> . LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK
    (122) TypeAssertion -> . DOT LPAREN Type RPAREN
    (123) Arguments -> . LPAREN ExpressionListTypeOpt RPAREN

    DOT             shift and go to state 343
    LBRACK          shift and go to state 151
    LPAREN          shift and go to state 155

    Index                          shift and go to state 149
    Slice                          shift and go to state 150
    Selector                       shift and go to state 152
    TypeAssertion                  shift and go to state 153
    Arguments                      shift and go to state 154

state 330

    (214) IdentifierOpt -> IDENTIFIER COLONEQ .

    LPAREN          reduce using rule 214 (IdentifierOpt -> IDENTIFIER COLONEQ .)
    IDENTIFIER      reduce using rule 214 (IdentifierOpt -> IDENTIFIER COLONEQ .)
    INTEGER         reduce using rule 214 (IdentifierOpt -> IDENTIFIER COLONEQ .)
    FLOAT           reduce using rule 214 (IdentifierOpt -> IDENTIFIER COLONEQ .)
    IMAGINARY       reduce using rule 214 (IdentifierOpt -> IDENTIFIER COLONEQ .)
    RUNE            reduce using rule 214 (IdentifierOpt -> IDENTIFIER COLONEQ .)
    STRING          reduce using rule 214 (IdentifierOpt -> IDENTIFIER COLONEQ .)
    TYPEX           reduce using rule 214 (IdentifierOpt -> IDENTIFIER COLONEQ .)
    LBRACK          reduce using rule 214 (IdentifierOpt -> IDENTIFIER COLONEQ .)
    STRUCT          reduce using rule 214 (IdentifierOpt -> IDENTIFIER COLONEQ .)
    TIMES           reduce using rule 214 (IdentifierOpt -> IDENTIFIER COLONEQ .)
    FUNC            reduce using rule 214 (IdentifierOpt -> IDENTIFIER COLONEQ .)


state 331

    (203) ElseOpt -> epsilon .

    SEMICOL         reduce using rule 203 (ElseOpt -> epsilon .)


state 332

    (201) ElseOpt -> ELSE . IfStmt
    (202) ElseOpt -> ELSE . Block
    (198) IfStmt -> . IF Expression Block ElseOpt
    (40) Block -> . LBRACE StatementList RBRACE

    IF              shift and go to state 244
    LBRACE          shift and go to state 123

    IfStmt                         shift and go to state 344
    Block                          shift and go to state 345

state 333

    (198) IfStmt -> IF Expression Block ElseOpt .

    SEMICOL         reduce using rule 198 (IfStmt -> IF Expression Block ElseOpt .)


state 334

    (121) Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression . RBRACK
    (132) Expression -> Expression . BinaryOp Expression
    (137) BinaryOp -> . OROR
    (138) BinaryOp -> . AMPAMP
    (139) BinaryOp -> . RelOp
    (140) BinaryOp -> . AddOp
    (141) BinaryOp -> . MulOp
    (142) RelOp -> . EQEQ
    (143) RelOp -> . NOTEQ
    (144) RelOp -> . LESS
    (145) RelOp -> . GREAT
    (146) RelOp -> . LEQ
    (147) RelOp -> . GEQ
    (148) AddOp -> . PLUS
    (149) AddOp -> . MINUS
    (150) AddOp -> . OR
    (151) AddOp -> . CARET
    (152) MulOp -> . TIMES
    (153) MulOp -> . DIVIDE
    (154) MulOp -> . MOD
    (155) MulOp -> . AMPERS
    (156) MulOp -> . LL
    (157) MulOp -> . GG
    (158) MulOp -> . AMPCAR

    RBRACK          shift and go to state 346
    OROR            shift and go to state 162
    AMPAMP          shift and go to state 168
    EQEQ            shift and go to state 167
    NOTEQ           shift and go to state 173
    LESS            shift and go to state 166
    GREAT           shift and go to state 164
    LEQ             shift and go to state 182
    GEQ             shift and go to state 171
    PLUS            shift and go to state 174
    MINUS           shift and go to state 170
    OR              shift and go to state 183
    CARET           shift and go to state 163
    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 177
    MOD             shift and go to state 184
    AMPERS          shift and go to state 181
    LL              shift and go to state 172
    GG              shift and go to state 179
    AMPCAR          shift and go to state 165

    AddOp                          shift and go to state 176
    RelOp                          shift and go to state 180
    BinaryOp                       shift and go to state 175
    MulOp                          shift and go to state 169

state 335

    (229) ForClause -> SimpleStmt SEMICOL ConditionOpt SEMICOL . SimpleStmt
    (175) SimpleStmt -> . epsilon
    (176) SimpleStmt -> . ExpressionStmt
    (177) SimpleStmt -> . IncDecStmt
    (178) SimpleStmt -> . Assignment
    (179) SimpleStmt -> . ShortVarDecl
    (260) epsilon -> .
    (182) ExpressionStmt -> . Expression
    (183) IncDecStmt -> . Expression PLUSPLUS
    (184) IncDecStmt -> . Expression MINUSMIN
    (185) Assignment -> . ExpressionList assign_op ExpressionList
    (75) ShortVarDecl -> . IDENTIFIER COLONEQ Expression
    (131) Expression -> . UnaryExpr
    (132) Expression -> . Expression BinaryOp Expression
    (128) ExpressionList -> . Expression ExpressionRep
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (111) PrimaryExpr -> . Operand
    (112) PrimaryExpr -> . Conversion
    (113) PrimaryExpr -> . PrimaryExpr Selector
    (114) PrimaryExpr -> . PrimaryExpr Index
    (115) PrimaryExpr -> . PrimaryExpr Slice
    (116) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (117) PrimaryExpr -> . PrimaryExpr Arguments
    (159) UnaryOp -> . PLUS
    (160) UnaryOp -> . MINUS
    (161) UnaryOp -> . TIMES
    (162) UnaryOp -> . AMPERS
    (163) UnaryOp -> . NOT
    (82) Operand -> . Literal
    (83) Operand -> . OperandName
    (84) Operand -> . LPAREN Expression RPAREN
    (110) Conversion -> . Type LPAREN Expression RPAREN
    (85) Literal -> . BasicLit
    (91) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (86) BasicLit -> . INTEGER
    (87) BasicLit -> . FLOAT
    (88) BasicLit -> . IMAGINARY
    (89) BasicLit -> . RUNE
    (90) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    LBRACE          reduce using rule 260 (epsilon -> .)
    IDENTIFIER      shift and go to state 265
    PLUS            shift and go to state 101
    MINUS           shift and go to state 97
    TIMES           shift and go to state 107
    AMPERS          shift and go to state 112
    NOT             shift and go to state 98
    LPAREN          shift and go to state 109
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 111
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 105
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    UnaryOp                        shift and go to state 93
    PrimaryExpr                    shift and go to state 94
    Conversion                     shift and go to state 92
    SimpleStmt                     shift and go to state 347
    ExpressionStmt                 shift and go to state 217
    Type                           shift and go to state 100
    OperandName                    shift and go to state 99
    Assignment                     shift and go to state 219
    TypeName                       shift and go to state 56
    IncDecStmt                     shift and go to state 226
    StructType                     shift and go to state 58
    epsilon                        shift and go to state 235
    UnaryExpr                      shift and go to state 106
    ExpressionList                 shift and go to state 236
    ArrayType                      shift and go to state 53
    Expression                     shift and go to state 237
    ShortVarDecl                   shift and go to state 243
    PointerType                    shift and go to state 66
    Literal                        shift and go to state 95
    TypeLit                        shift and go to state 55
    BasicLit                       shift and go to state 113
    Operand                        shift and go to state 114
    FunctionType                   shift and go to state 67

state 336

    (210) ExprSwitchCase -> CASE . ExpressionList
    (128) ExpressionList -> . Expression ExpressionRep
    (131) Expression -> . UnaryExpr
    (132) Expression -> . Expression BinaryOp Expression
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (111) PrimaryExpr -> . Operand
    (112) PrimaryExpr -> . Conversion
    (113) PrimaryExpr -> . PrimaryExpr Selector
    (114) PrimaryExpr -> . PrimaryExpr Index
    (115) PrimaryExpr -> . PrimaryExpr Slice
    (116) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (117) PrimaryExpr -> . PrimaryExpr Arguments
    (159) UnaryOp -> . PLUS
    (160) UnaryOp -> . MINUS
    (161) UnaryOp -> . TIMES
    (162) UnaryOp -> . AMPERS
    (163) UnaryOp -> . NOT
    (82) Operand -> . Literal
    (83) Operand -> . OperandName
    (84) Operand -> . LPAREN Expression RPAREN
    (110) Conversion -> . Type LPAREN Expression RPAREN
    (85) Literal -> . BasicLit
    (91) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (86) BasicLit -> . INTEGER
    (87) BasicLit -> . FLOAT
    (88) BasicLit -> . IMAGINARY
    (89) BasicLit -> . RUNE
    (90) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 101
    MINUS           shift and go to state 97
    TIMES           shift and go to state 107
    AMPERS          shift and go to state 112
    NOT             shift and go to state 98
    LPAREN          shift and go to state 109
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 111
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 105
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    UnaryOp                        shift and go to state 93
    PrimaryExpr                    shift and go to state 94
    Conversion                     shift and go to state 92
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    Type                           shift and go to state 100
    OperandName                    shift and go to state 99
    BasicLit                       shift and go to state 113
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    UnaryExpr                      shift and go to state 106
    ExpressionList                 shift and go to state 348
    Expression                     shift and go to state 135
    PointerType                    shift and go to state 66
    TypeLit                        shift and go to state 55
    Operand                        shift and go to state 114
    FunctionType                   shift and go to state 67

state 337

    (206) ExprSwitchStmt -> SWITCH ExpressionOpt LBRACE ExprCaseClauseRep RBRACE .

    SEMICOL         reduce using rule 206 (ExprSwitchStmt -> SWITCH ExpressionOpt LBRACE ExprCaseClauseRep RBRACE .)


state 338

    (209) ExprCaseClause -> ExprSwitchCase . COLON StatementList

    COLON           shift and go to state 349


state 339

    (211) ExprSwitchCase -> DEFAULT .

    COLON           reduce using rule 211 (ExprSwitchCase -> DEFAULT .)


state 340

    (207) ExprCaseClauseRep -> ExprCaseClauseRep ExprCaseClause .

    RBRACE          reduce using rule 207 (ExprCaseClauseRep -> ExprCaseClauseRep ExprCaseClause .)
    CASE            reduce using rule 207 (ExprCaseClauseRep -> ExprCaseClauseRep ExprCaseClause .)
    DEFAULT         reduce using rule 207 (ExprCaseClauseRep -> ExprCaseClauseRep ExprCaseClause .)


state 341

    (217) TypeCaseClauseOpt -> epsilon .

    RBRACE          reduce using rule 217 (TypeCaseClauseOpt -> epsilon .)
    CASE            reduce using rule 217 (TypeCaseClauseOpt -> epsilon .)
    DEFAULT         reduce using rule 217 (TypeCaseClauseOpt -> epsilon .)


state 342

    (212) TypeSwitchStmt -> SWITCH SimpleStmtOpt TypeSwitchGuard LBRACE TypeCaseClauseOpt . RBRACE
    (216) TypeCaseClauseOpt -> TypeCaseClauseOpt . TypeCaseClause
    (218) TypeCaseClause -> . TypeSwitchCase COLON StatementList
    (219) TypeSwitchCase -> . CASE TypeList
    (220) TypeSwitchCase -> . DEFAULT

    RBRACE          shift and go to state 351
    CASE            shift and go to state 350
    DEFAULT         shift and go to state 354

    TypeSwitchCase                 shift and go to state 352
    TypeCaseClause                 shift and go to state 353

state 343

    (213) TypeSwitchGuard -> IdentifierOpt PrimaryExpr DOT . LPAREN TYPE RPAREN
    (118) Selector -> DOT . IDENTIFIER
    (122) TypeAssertion -> DOT . LPAREN Type RPAREN

    LPAREN          shift and go to state 355
    IDENTIFIER      shift and go to state 208


state 344

    (201) ElseOpt -> ELSE IfStmt .

    SEMICOL         reduce using rule 201 (ElseOpt -> ELSE IfStmt .)


state 345

    (202) ElseOpt -> ELSE Block .

    SEMICOL         reduce using rule 202 (ElseOpt -> ELSE Block .)


state 346

    (121) Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .

    DOT             reduce using rule 121 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    LBRACK          reduce using rule 121 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    LPAREN          reduce using rule 121 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    OROR            reduce using rule 121 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    AMPAMP          reduce using rule 121 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    EQEQ            reduce using rule 121 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    NOTEQ           reduce using rule 121 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    LESS            reduce using rule 121 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    GREAT           reduce using rule 121 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    LEQ             reduce using rule 121 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    GEQ             reduce using rule 121 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    PLUS            reduce using rule 121 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    MINUS           reduce using rule 121 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    OR              reduce using rule 121 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    CARET           reduce using rule 121 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    TIMES           reduce using rule 121 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    DIVIDE          reduce using rule 121 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    MOD             reduce using rule 121 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    AMPERS          reduce using rule 121 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    LL              reduce using rule 121 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    GG              reduce using rule 121 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    AMPCAR          reduce using rule 121 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    RBRACK          reduce using rule 121 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    COMMA           reduce using rule 121 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    SEMICOL         reduce using rule 121 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    RPAREN          reduce using rule 121 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    COLON           reduce using rule 121 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    PLUSPLUS        reduce using rule 121 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    MINUSMIN        reduce using rule 121 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    PLUSEQ          reduce using rule 121 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    MINUSEQ         reduce using rule 121 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    TIMESEQ         reduce using rule 121 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    DIVIDEEQ        reduce using rule 121 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    MODEQ           reduce using rule 121 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    AMPEQ           reduce using rule 121 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    OREQ            reduce using rule 121 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    CAREQ           reduce using rule 121 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    LLEQ            reduce using rule 121 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    GGEQ            reduce using rule 121 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    EQUAL           reduce using rule 121 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)
    LBRACE          reduce using rule 121 (Slice -> LBRACK ExpressionOpt COLON Expression COLON Expression RBRACK .)


state 347

    (229) ForClause -> SimpleStmt SEMICOL ConditionOpt SEMICOL SimpleStmt .

    LBRACE          reduce using rule 229 (ForClause -> SimpleStmt SEMICOL ConditionOpt SEMICOL SimpleStmt .)


state 348

    (210) ExprSwitchCase -> CASE ExpressionList .

    COLON           reduce using rule 210 (ExprSwitchCase -> CASE ExpressionList .)


state 349

    (209) ExprCaseClause -> ExprSwitchCase COLON . StatementList
    (41) StatementList -> . StatementRep
    (42) StatementRep -> . StatementRep Statement SEMICOL
    (43) StatementRep -> . epsilon
    (260) epsilon -> .

    RETURN          reduce using rule 260 (epsilon -> .)
    BREAK           reduce using rule 260 (epsilon -> .)
    CONTINUE        reduce using rule 260 (epsilon -> .)
    GOTO            reduce using rule 260 (epsilon -> .)
    LBRACE          reduce using rule 260 (epsilon -> .)
    IF              reduce using rule 260 (epsilon -> .)
    FOR             reduce using rule 260 (epsilon -> .)
    CONST           reduce using rule 260 (epsilon -> .)
    TYPE            reduce using rule 260 (epsilon -> .)
    VAR             reduce using rule 260 (epsilon -> .)
    IDENTIFIER      reduce using rule 260 (epsilon -> .)
    SWITCH          reduce using rule 260 (epsilon -> .)
    PLUS            reduce using rule 260 (epsilon -> .)
    MINUS           reduce using rule 260 (epsilon -> .)
    TIMES           reduce using rule 260 (epsilon -> .)
    AMPERS          reduce using rule 260 (epsilon -> .)
    NOT             reduce using rule 260 (epsilon -> .)
    LPAREN          reduce using rule 260 (epsilon -> .)
    INTEGER         reduce using rule 260 (epsilon -> .)
    FLOAT           reduce using rule 260 (epsilon -> .)
    IMAGINARY       reduce using rule 260 (epsilon -> .)
    RUNE            reduce using rule 260 (epsilon -> .)
    STRING          reduce using rule 260 (epsilon -> .)
    TYPEX           reduce using rule 260 (epsilon -> .)
    LBRACK          reduce using rule 260 (epsilon -> .)
    STRUCT          reduce using rule 260 (epsilon -> .)
    FUNC            reduce using rule 260 (epsilon -> .)
    SEMICOL         reduce using rule 260 (epsilon -> .)
    RBRACE          reduce using rule 260 (epsilon -> .)
    CASE            reduce using rule 260 (epsilon -> .)
    DEFAULT         reduce using rule 260 (epsilon -> .)

    epsilon                        shift and go to state 188
    StatementRep                   shift and go to state 187
    StatementList                  shift and go to state 356

state 350

    (219) TypeSwitchCase -> CASE . TypeList
    (221) TypeList -> . Type TypeRep
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 61
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    TypeList                       shift and go to state 358
    Type                           shift and go to state 357
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    TypeLit                        shift and go to state 55

state 351

    (212) TypeSwitchStmt -> SWITCH SimpleStmtOpt TypeSwitchGuard LBRACE TypeCaseClauseOpt RBRACE .

    SEMICOL         reduce using rule 212 (TypeSwitchStmt -> SWITCH SimpleStmtOpt TypeSwitchGuard LBRACE TypeCaseClauseOpt RBRACE .)


state 352

    (218) TypeCaseClause -> TypeSwitchCase . COLON StatementList

    COLON           shift and go to state 359


state 353

    (216) TypeCaseClauseOpt -> TypeCaseClauseOpt TypeCaseClause .

    RBRACE          reduce using rule 216 (TypeCaseClauseOpt -> TypeCaseClauseOpt TypeCaseClause .)
    CASE            reduce using rule 216 (TypeCaseClauseOpt -> TypeCaseClauseOpt TypeCaseClause .)
    DEFAULT         reduce using rule 216 (TypeCaseClauseOpt -> TypeCaseClauseOpt TypeCaseClause .)


state 354

    (220) TypeSwitchCase -> DEFAULT .

    COLON           reduce using rule 220 (TypeSwitchCase -> DEFAULT .)


state 355

    (213) TypeSwitchGuard -> IdentifierOpt PrimaryExpr DOT LPAREN . TYPE RPAREN
    (122) TypeAssertion -> DOT LPAREN . Type RPAREN
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    TYPE            shift and go to state 360
    LPAREN          shift and go to state 61
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    Type                           shift and go to state 257
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    FunctionType                   shift and go to state 67
    TypeLit                        shift and go to state 55
    PointerType                    shift and go to state 66

state 356

    (209) ExprCaseClause -> ExprSwitchCase COLON StatementList .

    RBRACE          reduce using rule 209 (ExprCaseClause -> ExprSwitchCase COLON StatementList .)
    CASE            reduce using rule 209 (ExprCaseClause -> ExprSwitchCase COLON StatementList .)
    DEFAULT         reduce using rule 209 (ExprCaseClause -> ExprSwitchCase COLON StatementList .)


state 357

    (221) TypeList -> Type . TypeRep
    (222) TypeRep -> . TypeRep COMMA Type
    (223) TypeRep -> . epsilon
    (260) epsilon -> .

    COMMA           reduce using rule 260 (epsilon -> .)
    COLON           reduce using rule 260 (epsilon -> .)

    epsilon                        shift and go to state 362
    TypeRep                        shift and go to state 361

state 358

    (219) TypeSwitchCase -> CASE TypeList .

    COLON           reduce using rule 219 (TypeSwitchCase -> CASE TypeList .)


state 359

    (218) TypeCaseClause -> TypeSwitchCase COLON . StatementList
    (41) StatementList -> . StatementRep
    (42) StatementRep -> . StatementRep Statement SEMICOL
    (43) StatementRep -> . epsilon
    (260) epsilon -> .

    RETURN          reduce using rule 260 (epsilon -> .)
    BREAK           reduce using rule 260 (epsilon -> .)
    CONTINUE        reduce using rule 260 (epsilon -> .)
    GOTO            reduce using rule 260 (epsilon -> .)
    LBRACE          reduce using rule 260 (epsilon -> .)
    IF              reduce using rule 260 (epsilon -> .)
    FOR             reduce using rule 260 (epsilon -> .)
    CONST           reduce using rule 260 (epsilon -> .)
    TYPE            reduce using rule 260 (epsilon -> .)
    VAR             reduce using rule 260 (epsilon -> .)
    IDENTIFIER      reduce using rule 260 (epsilon -> .)
    SWITCH          reduce using rule 260 (epsilon -> .)
    PLUS            reduce using rule 260 (epsilon -> .)
    MINUS           reduce using rule 260 (epsilon -> .)
    TIMES           reduce using rule 260 (epsilon -> .)
    AMPERS          reduce using rule 260 (epsilon -> .)
    NOT             reduce using rule 260 (epsilon -> .)
    LPAREN          reduce using rule 260 (epsilon -> .)
    INTEGER         reduce using rule 260 (epsilon -> .)
    FLOAT           reduce using rule 260 (epsilon -> .)
    IMAGINARY       reduce using rule 260 (epsilon -> .)
    RUNE            reduce using rule 260 (epsilon -> .)
    STRING          reduce using rule 260 (epsilon -> .)
    TYPEX           reduce using rule 260 (epsilon -> .)
    LBRACK          reduce using rule 260 (epsilon -> .)
    STRUCT          reduce using rule 260 (epsilon -> .)
    FUNC            reduce using rule 260 (epsilon -> .)
    SEMICOL         reduce using rule 260 (epsilon -> .)
    RBRACE          reduce using rule 260 (epsilon -> .)
    CASE            reduce using rule 260 (epsilon -> .)
    DEFAULT         reduce using rule 260 (epsilon -> .)

    epsilon                        shift and go to state 188
    StatementRep                   shift and go to state 187
    StatementList                  shift and go to state 363

state 360

    (213) TypeSwitchGuard -> IdentifierOpt PrimaryExpr DOT LPAREN TYPE . RPAREN

    RPAREN          shift and go to state 364


state 361

    (221) TypeList -> Type TypeRep .
    (222) TypeRep -> TypeRep . COMMA Type

    COLON           reduce using rule 221 (TypeList -> Type TypeRep .)
    COMMA           shift and go to state 365


state 362

    (223) TypeRep -> epsilon .

    COMMA           reduce using rule 223 (TypeRep -> epsilon .)
    COLON           reduce using rule 223 (TypeRep -> epsilon .)


state 363

    (218) TypeCaseClause -> TypeSwitchCase COLON StatementList .

    RBRACE          reduce using rule 218 (TypeCaseClause -> TypeSwitchCase COLON StatementList .)
    CASE            reduce using rule 218 (TypeCaseClause -> TypeSwitchCase COLON StatementList .)
    DEFAULT         reduce using rule 218 (TypeCaseClause -> TypeSwitchCase COLON StatementList .)


state 364

    (213) TypeSwitchGuard -> IdentifierOpt PrimaryExpr DOT LPAREN TYPE RPAREN .

    LBRACE          reduce using rule 213 (TypeSwitchGuard -> IdentifierOpt PrimaryExpr DOT LPAREN TYPE RPAREN .)


state 365

    (222) TypeRep -> TypeRep COMMA . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 61
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    Type                           shift and go to state 366
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    TypeLit                        shift and go to state 55

state 366

    (222) TypeRep -> TypeRep COMMA Type .

    COMMA           reduce using rule 222 (TypeRep -> TypeRep COMMA Type .)
    COLON           reduce using rule 222 (TypeRep -> TypeRep COMMA Type .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LPAREN in state 71 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 186 resolved as shift
WARNING: shift/reduce conflict for OROR in state 215 resolved as shift
WARNING: shift/reduce conflict for AMPAMP in state 215 resolved as shift
WARNING: shift/reduce conflict for EQEQ in state 215 resolved as shift
WARNING: shift/reduce conflict for NOTEQ in state 215 resolved as shift
WARNING: shift/reduce conflict for LESS in state 215 resolved as shift
WARNING: shift/reduce conflict for GREAT in state 215 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 215 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 215 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 215 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 215 resolved as shift
WARNING: shift/reduce conflict for OR in state 215 resolved as shift
WARNING: shift/reduce conflict for CARET in state 215 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 215 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 215 resolved as shift
WARNING: shift/reduce conflict for MOD in state 215 resolved as shift
WARNING: shift/reduce conflict for AMPERS in state 215 resolved as shift
WARNING: shift/reduce conflict for LL in state 215 resolved as shift
WARNING: shift/reduce conflict for GG in state 215 resolved as shift
WARNING: shift/reduce conflict for AMPCAR in state 215 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 232 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 232 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 232 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 232 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 232 resolved as shift
WARNING: shift/reduce conflict for IMAGINARY in state 232 resolved as shift
WARNING: shift/reduce conflict for RUNE in state 232 resolved as shift
WARNING: shift/reduce conflict for STRING in state 232 resolved as shift
WARNING: shift/reduce conflict for TYPEX in state 232 resolved as shift
WARNING: shift/reduce conflict for LBRACK in state 232 resolved as shift
WARNING: shift/reduce conflict for STRUCT in state 232 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 232 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 278 resolved as shift
