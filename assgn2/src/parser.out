Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CHAN
    CONSTANT
    DEFER
    FALLTHROUGH
    SELECT
    LMINUS
    AMPCAREQ
    GO
    DDD
    MAP
    INTERFACE

Grammar

Rule 0     S' -> start
Rule 1     start -> Source
Rule 2     Type -> TypeName
Rule 3     Type -> TypeLit
Rule 4     Type -> LPAREN Type RPAREN
Rule 5     TypeName -> TYPEX
Rule 6     TypeLit -> ArrayType
Rule 7     TypeLit -> StructType
Rule 8     TypeLit -> PointerType
Rule 9     TypeLit -> FunctionType
Rule 10    TypeOpt -> Type
Rule 11    TypeOpt -> epsilon
Rule 12    ArrayType -> LBRACK ArrayLength RBRACK ElementType
Rule 13    ArrayLength -> Expression
Rule 14    ElementType -> Type
Rule 15    StructType -> STRUCT LBRACE FieldDeclRep RBRACE
Rule 16    FieldDeclRep -> FieldDeclRep FieldDecl SEMICOL
Rule 17    FieldDeclRep -> epsilon
Rule 18    FieldDecl -> IdentifierList Type TagOpt
Rule 19    TagOpt -> Tag
Rule 20    TagOpt -> epsilon
Rule 21    Tag -> STRING
Rule 22    PointerType -> TIMES BaseType
Rule 23    BaseType -> Type
Rule 24    FunctionType -> FUNC Signature
Rule 25    Signature -> Parameters ResultOpt
Rule 26    ResultOpt -> Result
Rule 27    ResultOpt -> epsilon
Rule 28    Result -> Parameters
Rule 29    Result -> Type
Rule 30    Parameters -> LPAREN ParameterListOpt RPAREN
Rule 31    ParameterListOpt -> ParametersList
Rule 32    ParameterListOpt -> epsilon
Rule 33    ParametersList -> Type
Rule 34    ParametersList -> IdentifierList Type
Rule 35    ParametersList -> ParameterDeclCommaRep
Rule 36    ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA ParameterDecl
Rule 37    ParameterDeclCommaRep -> ParameterDecl COMMA ParameterDecl
Rule 38    ParameterDecl -> IdentifierList Type
Rule 39    ParameterDecl -> Type
Rule 40    Block -> LBRACE StatementList RBRACE
Rule 41    StatementList -> StatementRep
Rule 42    StatementRep -> StatementRep Statement SEMICOL
Rule 43    StatementRep -> epsilon
Rule 44    Declaration -> ConstDecl
Rule 45    Declaration -> TypeDecl
Rule 46    Declaration -> VarDecl
Rule 47    TopLevelDecl -> Declaration
Rule 48    TopLevelDecl -> FunctionDecl
Rule 49    ConstDecl -> CONST ConstSpec
Rule 50    ConstDecl -> CONST LPAREN ConstSpecRep RPAREN
Rule 51    ConstSpecRep -> ConstSpecRep ConstSpec SEMICOL
Rule 52    ConstSpecRep -> epsilon
Rule 53    ConstSpec -> IdentifierList TypeExprListOpt
Rule 54    TypeExprListOpt -> TypeOpt EQUAL ExpressionList
Rule 55    TypeExprListOpt -> epsilon
Rule 56    IdentifierList -> IDENTIFIER IdentifierRep
Rule 57    IdentifierRep -> IdentifierRep COMMA IDENTIFIER
Rule 58    IdentifierRep -> epsilon
Rule 59    TypeDecl -> TYPE TypeSpec
Rule 60    TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN
Rule 61    TypeSpecRep -> TypeSpecRep TypeSpec SEMICOL
Rule 62    TypeSpecRep -> epsilon
Rule 63    TypeSpec -> AliasDecl
Rule 64    TypeSpec -> TypeDef
Rule 65    AliasDecl -> IDENTIFIER EQUAL Type
Rule 66    TypeDef -> IDENTIFIER Type
Rule 67    VarDecl -> VAR VarSpec
Rule 68    VarDecl -> VAR LPAREN VarSpecRep RPAREN
Rule 69    VarSpecRep -> VarSpecRep VarSpec SEMICOL
Rule 70    VarSpecRep -> epsilon
Rule 71    VarSpec -> IdentifierList Type ExpressionListOpt
Rule 72    VarSpec -> IdentifierList EQUAL ExpressionList
Rule 73    ExpressionListOpt -> EQUAL ExpressionList
Rule 74    ExpressionListOpt -> epsilon
Rule 75    ShortVarDecl -> IDENTIFIER COLONEQ Expression
Rule 76    FunctionDecl -> FUNC FunctionName Function
Rule 77    FunctionDecl -> FUNC FunctionName Signature
Rule 78    FunctionName -> IDENTIFIER
Rule 79    Function -> Signature FunctionBody
Rule 80    FunctionBody -> Block
Rule 81    Operand -> Literal
Rule 82    Operand -> OperandName
Rule 83    Operand -> LPAREN Expression RPAREN
Rule 84    Literal -> BasicLit
Rule 85    BasicLit -> INTEGER
Rule 86    BasicLit -> FLOAT
Rule 87    BasicLit -> IMAGINARY
Rule 88    BasicLit -> RUNE
Rule 89    BasicLit -> STRING
Rule 90    OperandName -> IDENTIFIER
Rule 91    Conversion -> Type LPAREN Expression RPAREN
Rule 92    PrimaryExpr -> Operand
Rule 93    PrimaryExpr -> Conversion
Rule 94    PrimaryExpr -> PrimaryExpr Selector
Rule 95    PrimaryExpr -> PrimaryExpr Index
Rule 96    PrimaryExpr -> PrimaryExpr Slice
Rule 97    PrimaryExpr -> PrimaryExpr Arguments
Rule 98    Selector -> DOT IDENTIFIER
Rule 99    Index -> LBRACK Expression RBRACK
Rule 100   Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK
Rule 101   Arguments -> LPAREN ExpressionListTypeOpt RPAREN
Rule 102   ExpressionListTypeOpt -> ExpressionList
Rule 103   ExpressionListTypeOpt -> epsilon
Rule 104   ExpressionList -> Expression ExpressionRep
Rule 105   ExpressionRep -> ExpressionRep COMMA Expression
Rule 106   ExpressionRep -> epsilon
Rule 107   Expression -> UnaryExpr
Rule 108   Expression -> Expression BinaryOp Expression
Rule 109   ExpressionOpt -> Expression
Rule 110   ExpressionOpt -> epsilon
Rule 111   UnaryExpr -> PrimaryExpr
Rule 112   UnaryExpr -> UnaryOp UnaryExpr
Rule 113   BinaryOp -> OROR
Rule 114   BinaryOp -> AMPAMP
Rule 115   BinaryOp -> RelOp
Rule 116   BinaryOp -> AddOp
Rule 117   BinaryOp -> MulOp
Rule 118   RelOp -> EQEQ
Rule 119   RelOp -> NOTEQ
Rule 120   RelOp -> LESS
Rule 121   RelOp -> GREAT
Rule 122   RelOp -> LEQ
Rule 123   RelOp -> GEQ
Rule 124   AddOp -> PLUS
Rule 125   AddOp -> MINUS
Rule 126   AddOp -> OR
Rule 127   AddOp -> CARET
Rule 128   MulOp -> TIMES
Rule 129   MulOp -> DIVIDE
Rule 130   MulOp -> MOD
Rule 131   MulOp -> AMPERS
Rule 132   MulOp -> LL
Rule 133   MulOp -> GG
Rule 134   MulOp -> AMPCAR
Rule 135   UnaryOp -> PLUS
Rule 136   UnaryOp -> MINUS
Rule 137   UnaryOp -> TIMES
Rule 138   UnaryOp -> AMPERS
Rule 139   UnaryOp -> NOT
Rule 140   Statement -> Declaration
Rule 141   Statement -> LabeledStmt
Rule 142   Statement -> SimpleStmt
Rule 143   Statement -> ReturnStmt
Rule 144   Statement -> BreakStmt
Rule 145   Statement -> ContinueStmt
Rule 146   Statement -> GotoStmt
Rule 147   Statement -> Block
Rule 148   Statement -> IfStmt
Rule 149   Statement -> SwitchStmt
Rule 150   Statement -> ForStmt
Rule 151   SimpleStmt -> epsilon
Rule 152   SimpleStmt -> ExpressionStmt
Rule 153   SimpleStmt -> IncDecStmt
Rule 154   SimpleStmt -> Assignment
Rule 155   SimpleStmt -> ShortVarDecl
Rule 156   LabeledStmt -> Label COLON Statement
Rule 157   Label -> IDENTIFIER
Rule 158   ExpressionStmt -> Expression
Rule 159   IncDecStmt -> Expression PLUSPLUS
Rule 160   IncDecStmt -> Expression MINUSMIN
Rule 161   Assignment -> ExpressionList assign_op ExpressionList
Rule 162   assign_op -> AssignOp
Rule 163   AssignOp -> PLUSEQ
Rule 164   AssignOp -> MINUSEQ
Rule 165   AssignOp -> TIMESEQ
Rule 166   AssignOp -> DIVIDEEQ
Rule 167   AssignOp -> MODEQ
Rule 168   AssignOp -> AMPEQ
Rule 169   AssignOp -> OREQ
Rule 170   AssignOp -> CAREQ
Rule 171   AssignOp -> LLEQ
Rule 172   AssignOp -> GGEQ
Rule 173   AssignOp -> EQUAL
Rule 174   IfStmt -> IF Expression Block ElseOpt
Rule 175   SimpleStmtOpt -> SimpleStmt SEMICOL
Rule 176   SimpleStmtOpt -> epsilon
Rule 177   ElseOpt -> ELSE IfStmt
Rule 178   ElseOpt -> ELSE Block
Rule 179   ElseOpt -> epsilon
Rule 180   SwitchStmt -> ExprSwitchStmt
Rule 181   SwitchStmt -> TypeSwitchStmt
Rule 182   ExprSwitchStmt -> SWITCH ExpressionOpt LBRACE ExprCaseClauseRep RBRACE
Rule 183   ExprCaseClauseRep -> ExprCaseClauseRep ExprCaseClause
Rule 184   ExprCaseClauseRep -> epsilon
Rule 185   ExprCaseClause -> ExprSwitchCase COLON StatementList
Rule 186   ExprSwitchCase -> CASE ExpressionList
Rule 187   ExprSwitchCase -> DEFAULT
Rule 188   TypeSwitchStmt -> SWITCH SimpleStmtOpt TypeSwitchGuard LBRACE TypeCaseClauseOpt RBRACE
Rule 189   TypeSwitchGuard -> IdentifierOpt PrimaryExpr DOT LPAREN TYPE RPAREN
Rule 190   IdentifierOpt -> IDENTIFIER COLONEQ
Rule 191   IdentifierOpt -> epsilon
Rule 192   TypeCaseClauseOpt -> TypeCaseClauseOpt TypeCaseClause
Rule 193   TypeCaseClauseOpt -> epsilon
Rule 194   TypeCaseClause -> TypeSwitchCase COLON StatementList
Rule 195   TypeSwitchCase -> CASE TypeList
Rule 196   TypeSwitchCase -> DEFAULT
Rule 197   TypeList -> Type TypeRep
Rule 198   TypeRep -> TypeRep COMMA Type
Rule 199   TypeRep -> epsilon
Rule 200   ForStmt -> FOR ConditionBlockOpt Block
Rule 201   ConditionBlockOpt -> epsilon
Rule 202   ConditionBlockOpt -> Condition
Rule 203   ConditionBlockOpt -> ForClause
Rule 204   Condition -> Expression
Rule 205   ForClause -> SimpleStmt SEMICOL ConditionOpt SEMICOL SimpleStmt
Rule 206   ConditionOpt -> epsilon
Rule 207   ConditionOpt -> Condition
Rule 208   RangeClause -> ExpressionIdentListOpt RANGE Expression
Rule 209   ExpressionIdentListOpt -> epsilon
Rule 210   ExpressionIdentListOpt -> ExpressionIdentifier
Rule 211   ExpressionIdentifier -> ExpressionList EQUAL
Rule 212   ReturnStmt -> RETURN ExpressionListPureOpt
Rule 213   ExpressionListPureOpt -> ExpressionList
Rule 214   ExpressionListPureOpt -> epsilon
Rule 215   BreakStmt -> BREAK LabelOpt
Rule 216   ContinueStmt -> CONTINUE LabelOpt
Rule 217   LabelOpt -> Label
Rule 218   LabelOpt -> epsilon
Rule 219   GotoStmt -> GOTO Label
Rule 220   Source -> PackageClause SEMICOL ImportDeclRep TopLevelDeclRep
Rule 221   ImportDeclRep -> epsilon
Rule 222   ImportDeclRep -> ImportDeclRep ImportDecl SEMICOL
Rule 223   TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOL
Rule 224   TopLevelDeclRep -> epsilon
Rule 225   PackageClause -> PACKAGE PackageName
Rule 226   PackageName -> IDENTIFIER
Rule 227   ImportDecl -> IMPORT ImportSpec
Rule 228   ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN
Rule 229   ImportSpecRep -> ImportSpecRep ImportSpec SEMICOL
Rule 230   ImportSpecRep -> epsilon
Rule 231   ImportSpec -> PackageNameDotOpt ImportPath
Rule 232   PackageNameDotOpt -> DOT
Rule 233   PackageNameDotOpt -> PackageName
Rule 234   PackageNameDotOpt -> epsilon
Rule 235   ImportPath -> STRING
Rule 236   epsilon -> <empty>

Terminals, with rules where they appear

AMPAMP               : 114
AMPCAR               : 134
AMPCAREQ             : 
AMPEQ                : 168
AMPERS               : 131 138
BREAK                : 215
CAREQ                : 170
CARET                : 127
CASE                 : 186 195
CHAN                 : 
COLON                : 100 156 185 194
COLONEQ              : 75 190
COMMA                : 36 37 57 105 198
CONST                : 49 50
CONSTANT             : 
CONTINUE             : 216
DDD                  : 
DEFAULT              : 187 196
DEFER                : 
DIVIDE               : 129
DIVIDEEQ             : 166
DOT                  : 98 189 232
ELSE                 : 177 178
EQEQ                 : 118
EQUAL                : 54 65 72 73 173 211
FALLTHROUGH          : 
FLOAT                : 86
FOR                  : 200
FUNC                 : 24 76 77
GEQ                  : 123
GG                   : 133
GGEQ                 : 172
GO                   : 
GOTO                 : 219
GREAT                : 121
IDENTIFIER           : 56 57 65 66 75 78 90 98 157 190 226
IF                   : 174
IMAGINARY            : 87
IMPORT               : 227 228
INTEGER              : 85
INTERFACE            : 
LBRACE               : 15 40 182 188
LBRACK               : 12 99 100
LEQ                  : 122
LESS                 : 120
LL                   : 132
LLEQ                 : 171
LMINUS               : 
LPAREN               : 4 30 50 60 68 83 91 101 189 228
MAP                  : 
MINUS                : 125 136
MINUSEQ              : 164
MINUSMIN             : 160
MOD                  : 130
MODEQ                : 167
NOT                  : 139
NOTEQ                : 119
OR                   : 126
OREQ                 : 169
OROR                 : 113
PACKAGE              : 225
PLUS                 : 124 135
PLUSEQ               : 163
PLUSPLUS             : 159
RANGE                : 208
RBRACE               : 15 40 182 188
RBRACK               : 12 99 100
RETURN               : 212
RPAREN               : 4 30 50 60 68 83 91 101 189 228
RUNE                 : 88
SELECT               : 
SEMICOL              : 16 42 51 61 69 175 205 205 220 222 223 229
STRING               : 21 89 235
STRUCT               : 15
SWITCH               : 182 188
TIMES                : 22 128 137
TIMESEQ              : 165
TYPE                 : 59 60 189
TYPEX                : 5
VAR                  : 67 68
error                : 

Nonterminals, with rules where they appear

AddOp                : 116
AliasDecl            : 63
Arguments            : 97
ArrayLength          : 12
ArrayType            : 6
AssignOp             : 162
Assignment           : 154
BaseType             : 22
BasicLit             : 84
BinaryOp             : 108
Block                : 80 147 174 178 200
BreakStmt            : 144
Condition            : 202 207
ConditionBlockOpt    : 200
ConditionOpt         : 205
ConstDecl            : 44
ConstSpec            : 49 51
ConstSpecRep         : 50 51
ContinueStmt         : 145
Conversion           : 93
Declaration          : 47 140
ElementType          : 12
ElseOpt              : 174
ExprCaseClause       : 183
ExprCaseClauseRep    : 182 183
ExprSwitchCase       : 185
ExprSwitchStmt       : 180
Expression           : 13 75 83 91 99 104 105 108 108 109 158 159 160 174 204 208
ExpressionIdentListOpt : 208
ExpressionIdentifier : 210
ExpressionList       : 54 72 73 102 161 161 186 211 213
ExpressionListOpt    : 71
ExpressionListPureOpt : 212
ExpressionListTypeOpt : 101
ExpressionOpt        : 100 100 182
ExpressionRep        : 104 105
ExpressionStmt       : 152
FieldDecl            : 16
FieldDeclRep         : 15 16
ForClause            : 203
ForStmt              : 150
Function             : 76
FunctionBody         : 79
FunctionDecl         : 48
FunctionName         : 76 77
FunctionType         : 9
GotoStmt             : 146
IdentifierList       : 18 34 38 53 71 72
IdentifierOpt        : 189
IdentifierRep        : 56 57
IfStmt               : 148 177
ImportDecl           : 222
ImportDeclRep        : 220 222
ImportPath           : 231
ImportSpec           : 227 229
ImportSpecRep        : 228 229
IncDecStmt           : 153
Index                : 95
Label                : 156 217 219
LabelOpt             : 215 216
LabeledStmt          : 141
Literal              : 81
MulOp                : 117
Operand              : 92
OperandName          : 82
PackageClause        : 220
PackageName          : 225 233
PackageNameDotOpt    : 231
ParameterDecl        : 36 37 37
ParameterDeclCommaRep : 35 36
ParameterListOpt     : 30
Parameters           : 25 28
ParametersList       : 31
PointerType          : 8
PrimaryExpr          : 94 95 96 97 111 189
RangeClause          : 
RelOp                : 115
Result               : 26
ResultOpt            : 25
ReturnStmt           : 143
Selector             : 94
ShortVarDecl         : 155
Signature            : 24 77 79
SimpleStmt           : 142 175 205 205
SimpleStmtOpt        : 188
Slice                : 96
Source               : 1
Statement            : 42 156
StatementList        : 40 185 194
StatementRep         : 41 42
StructType           : 7
SwitchStmt           : 149
Tag                  : 19
TagOpt               : 18
TopLevelDecl         : 223
TopLevelDeclRep      : 220 223
Type                 : 4 10 14 18 23 29 33 34 38 39 65 66 71 91 197 198
TypeCaseClause       : 192
TypeCaseClauseOpt    : 188 192
TypeDecl             : 45
TypeDef              : 64
TypeExprListOpt      : 53
TypeList             : 195
TypeLit              : 3
TypeName             : 2
TypeOpt              : 54
TypeRep              : 197 198
TypeSpec             : 59 61
TypeSpecRep          : 60 61
TypeSwitchCase       : 194
TypeSwitchGuard      : 188
TypeSwitchStmt       : 181
UnaryExpr            : 107 112
UnaryOp              : 112
VarDecl              : 46
VarSpec              : 67 69
VarSpecRep           : 68 69
assign_op            : 161
epsilon              : 11 17 20 27 32 43 52 55 58 62 70 74 103 106 110 151 176 179 184 191 193 199 201 206 209 214 218 221 224 230 234
start                : 0

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . Source
    (220) Source -> . PackageClause SEMICOL ImportDeclRep TopLevelDeclRep
    (225) PackageClause -> . PACKAGE PackageName

    PACKAGE         shift and go to state 2

    PackageClause                  shift and go to state 1
    Source                         shift and go to state 3
    start                          shift and go to state 4

state 1

    (220) Source -> PackageClause . SEMICOL ImportDeclRep TopLevelDeclRep

    SEMICOL         shift and go to state 5


state 2

    (225) PackageClause -> PACKAGE . PackageName
    (226) PackageName -> . IDENTIFIER

    IDENTIFIER      shift and go to state 7

    PackageName                    shift and go to state 6

state 3

    (1) start -> Source .

    $end            reduce using rule 1 (start -> Source .)


state 4

    (0) S' -> start .



state 5

    (220) Source -> PackageClause SEMICOL . ImportDeclRep TopLevelDeclRep
    (221) ImportDeclRep -> . epsilon
    (222) ImportDeclRep -> . ImportDeclRep ImportDecl SEMICOL
    (236) epsilon -> .

    IMPORT          reduce using rule 236 (epsilon -> .)
    FUNC            reduce using rule 236 (epsilon -> .)
    CONST           reduce using rule 236 (epsilon -> .)
    TYPE            reduce using rule 236 (epsilon -> .)
    VAR             reduce using rule 236 (epsilon -> .)
    $end            reduce using rule 236 (epsilon -> .)

    ImportDeclRep                  shift and go to state 9
    epsilon                        shift and go to state 8

state 6

    (225) PackageClause -> PACKAGE PackageName .

    SEMICOL         reduce using rule 225 (PackageClause -> PACKAGE PackageName .)


state 7

    (226) PackageName -> IDENTIFIER .

    STRING          reduce using rule 226 (PackageName -> IDENTIFIER .)
    SEMICOL         reduce using rule 226 (PackageName -> IDENTIFIER .)


state 8

    (221) ImportDeclRep -> epsilon .

    IMPORT          reduce using rule 221 (ImportDeclRep -> epsilon .)
    FUNC            reduce using rule 221 (ImportDeclRep -> epsilon .)
    CONST           reduce using rule 221 (ImportDeclRep -> epsilon .)
    TYPE            reduce using rule 221 (ImportDeclRep -> epsilon .)
    VAR             reduce using rule 221 (ImportDeclRep -> epsilon .)
    $end            reduce using rule 221 (ImportDeclRep -> epsilon .)


state 9

    (220) Source -> PackageClause SEMICOL ImportDeclRep . TopLevelDeclRep
    (222) ImportDeclRep -> ImportDeclRep . ImportDecl SEMICOL
    (223) TopLevelDeclRep -> . TopLevelDeclRep TopLevelDecl SEMICOL
    (224) TopLevelDeclRep -> . epsilon
    (227) ImportDecl -> . IMPORT ImportSpec
    (228) ImportDecl -> . IMPORT LPAREN ImportSpecRep RPAREN
    (236) epsilon -> .

    IMPORT          shift and go to state 13
    FUNC            reduce using rule 236 (epsilon -> .)
    CONST           reduce using rule 236 (epsilon -> .)
    TYPE            reduce using rule 236 (epsilon -> .)
    VAR             reduce using rule 236 (epsilon -> .)
    $end            reduce using rule 236 (epsilon -> .)

    TopLevelDeclRep                shift and go to state 10
    epsilon                        shift and go to state 11
    ImportDecl                     shift and go to state 12

state 10

    (220) Source -> PackageClause SEMICOL ImportDeclRep TopLevelDeclRep .
    (223) TopLevelDeclRep -> TopLevelDeclRep . TopLevelDecl SEMICOL
    (47) TopLevelDecl -> . Declaration
    (48) TopLevelDecl -> . FunctionDecl
    (44) Declaration -> . ConstDecl
    (45) Declaration -> . TypeDecl
    (46) Declaration -> . VarDecl
    (76) FunctionDecl -> . FUNC FunctionName Function
    (77) FunctionDecl -> . FUNC FunctionName Signature
    (49) ConstDecl -> . CONST ConstSpec
    (50) ConstDecl -> . CONST LPAREN ConstSpecRep RPAREN
    (59) TypeDecl -> . TYPE TypeSpec
    (60) TypeDecl -> . TYPE LPAREN TypeSpecRep RPAREN
    (67) VarDecl -> . VAR VarSpec
    (68) VarDecl -> . VAR LPAREN VarSpecRep RPAREN

    $end            reduce using rule 220 (Source -> PackageClause SEMICOL ImportDeclRep TopLevelDeclRep .)
    FUNC            shift and go to state 20
    CONST           shift and go to state 14
    TYPE            shift and go to state 23
    VAR             shift and go to state 21

    TypeDecl                       shift and go to state 19
    VarDecl                        shift and go to state 22
    FunctionDecl                   shift and go to state 15
    TopLevelDecl                   shift and go to state 16
    Declaration                    shift and go to state 17
    ConstDecl                      shift and go to state 18

state 11

    (224) TopLevelDeclRep -> epsilon .

    FUNC            reduce using rule 224 (TopLevelDeclRep -> epsilon .)
    CONST           reduce using rule 224 (TopLevelDeclRep -> epsilon .)
    TYPE            reduce using rule 224 (TopLevelDeclRep -> epsilon .)
    VAR             reduce using rule 224 (TopLevelDeclRep -> epsilon .)
    $end            reduce using rule 224 (TopLevelDeclRep -> epsilon .)


state 12

    (222) ImportDeclRep -> ImportDeclRep ImportDecl . SEMICOL

    SEMICOL         shift and go to state 24


state 13

    (227) ImportDecl -> IMPORT . ImportSpec
    (228) ImportDecl -> IMPORT . LPAREN ImportSpecRep RPAREN
    (231) ImportSpec -> . PackageNameDotOpt ImportPath
    (232) PackageNameDotOpt -> . DOT
    (233) PackageNameDotOpt -> . PackageName
    (234) PackageNameDotOpt -> . epsilon
    (226) PackageName -> . IDENTIFIER
    (236) epsilon -> .

    LPAREN          shift and go to state 25
    DOT             shift and go to state 30
    IDENTIFIER      shift and go to state 7
    STRING          reduce using rule 236 (epsilon -> .)

    ImportSpec                     shift and go to state 26
    epsilon                        shift and go to state 27
    PackageName                    shift and go to state 28
    PackageNameDotOpt              shift and go to state 29

state 14

    (49) ConstDecl -> CONST . ConstSpec
    (50) ConstDecl -> CONST . LPAREN ConstSpecRep RPAREN
    (53) ConstSpec -> . IdentifierList TypeExprListOpt
    (56) IdentifierList -> . IDENTIFIER IdentifierRep

    LPAREN          shift and go to state 32
    IDENTIFIER      shift and go to state 34

    ConstSpec                      shift and go to state 31
    IdentifierList                 shift and go to state 33

state 15

    (48) TopLevelDecl -> FunctionDecl .

    SEMICOL         reduce using rule 48 (TopLevelDecl -> FunctionDecl .)


state 16

    (223) TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl . SEMICOL

    SEMICOL         shift and go to state 35


state 17

    (47) TopLevelDecl -> Declaration .

    SEMICOL         reduce using rule 47 (TopLevelDecl -> Declaration .)


state 18

    (44) Declaration -> ConstDecl .

    SEMICOL         reduce using rule 44 (Declaration -> ConstDecl .)


state 19

    (45) Declaration -> TypeDecl .

    SEMICOL         reduce using rule 45 (Declaration -> TypeDecl .)


state 20

    (76) FunctionDecl -> FUNC . FunctionName Function
    (77) FunctionDecl -> FUNC . FunctionName Signature
    (78) FunctionName -> . IDENTIFIER

    IDENTIFIER      shift and go to state 36

    FunctionName                   shift and go to state 37

state 21

    (67) VarDecl -> VAR . VarSpec
    (68) VarDecl -> VAR . LPAREN VarSpecRep RPAREN
    (71) VarSpec -> . IdentifierList Type ExpressionListOpt
    (72) VarSpec -> . IdentifierList EQUAL ExpressionList
    (56) IdentifierList -> . IDENTIFIER IdentifierRep

    LPAREN          shift and go to state 39
    IDENTIFIER      shift and go to state 34

    VarSpec                        shift and go to state 38
    IdentifierList                 shift and go to state 40

state 22

    (46) Declaration -> VarDecl .

    SEMICOL         reduce using rule 46 (Declaration -> VarDecl .)


state 23

    (59) TypeDecl -> TYPE . TypeSpec
    (60) TypeDecl -> TYPE . LPAREN TypeSpecRep RPAREN
    (63) TypeSpec -> . AliasDecl
    (64) TypeSpec -> . TypeDef
    (65) AliasDecl -> . IDENTIFIER EQUAL Type
    (66) TypeDef -> . IDENTIFIER Type

    LPAREN          shift and go to state 43
    IDENTIFIER      shift and go to state 45

    TypeSpec                       shift and go to state 44
    TypeDef                        shift and go to state 41
    AliasDecl                      shift and go to state 42

state 24

    (222) ImportDeclRep -> ImportDeclRep ImportDecl SEMICOL .

    IMPORT          reduce using rule 222 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOL .)
    FUNC            reduce using rule 222 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOL .)
    CONST           reduce using rule 222 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOL .)
    TYPE            reduce using rule 222 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOL .)
    VAR             reduce using rule 222 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOL .)
    $end            reduce using rule 222 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOL .)


state 25

    (228) ImportDecl -> IMPORT LPAREN . ImportSpecRep RPAREN
    (229) ImportSpecRep -> . ImportSpecRep ImportSpec SEMICOL
    (230) ImportSpecRep -> . epsilon
    (236) epsilon -> .

    RPAREN          reduce using rule 236 (epsilon -> .)
    DOT             reduce using rule 236 (epsilon -> .)
    IDENTIFIER      reduce using rule 236 (epsilon -> .)
    STRING          reduce using rule 236 (epsilon -> .)

    epsilon                        shift and go to state 46
    ImportSpecRep                  shift and go to state 47

state 26

    (227) ImportDecl -> IMPORT ImportSpec .

    SEMICOL         reduce using rule 227 (ImportDecl -> IMPORT ImportSpec .)


state 27

    (234) PackageNameDotOpt -> epsilon .

    STRING          reduce using rule 234 (PackageNameDotOpt -> epsilon .)


state 28

    (233) PackageNameDotOpt -> PackageName .

    STRING          reduce using rule 233 (PackageNameDotOpt -> PackageName .)


state 29

    (231) ImportSpec -> PackageNameDotOpt . ImportPath
    (235) ImportPath -> . STRING

    STRING          shift and go to state 49

    ImportPath                     shift and go to state 48

state 30

    (232) PackageNameDotOpt -> DOT .

    STRING          reduce using rule 232 (PackageNameDotOpt -> DOT .)


state 31

    (49) ConstDecl -> CONST ConstSpec .

    SEMICOL         reduce using rule 49 (ConstDecl -> CONST ConstSpec .)


state 32

    (50) ConstDecl -> CONST LPAREN . ConstSpecRep RPAREN
    (51) ConstSpecRep -> . ConstSpecRep ConstSpec SEMICOL
    (52) ConstSpecRep -> . epsilon
    (236) epsilon -> .

    RPAREN          reduce using rule 236 (epsilon -> .)
    IDENTIFIER      reduce using rule 236 (epsilon -> .)

    ConstSpecRep                   shift and go to state 50
    epsilon                        shift and go to state 51

state 33

    (53) ConstSpec -> IdentifierList . TypeExprListOpt
    (54) TypeExprListOpt -> . TypeOpt EQUAL ExpressionList
    (55) TypeExprListOpt -> . epsilon
    (10) TypeOpt -> . Type
    (11) TypeOpt -> . epsilon
    (236) epsilon -> .
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    SEMICOL         reduce using rule 236 (epsilon -> .)
    EQUAL           reduce using rule 236 (epsilon -> .)
    LPAREN          shift and go to state 61
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    TypeOpt                        shift and go to state 62
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    TypeLit                        shift and go to state 55
    TypeExprListOpt                shift and go to state 65
    epsilon                        shift and go to state 59
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    Type                           shift and go to state 54

state 34

    (56) IdentifierList -> IDENTIFIER . IdentifierRep
    (57) IdentifierRep -> . IdentifierRep COMMA IDENTIFIER
    (58) IdentifierRep -> . epsilon
    (236) epsilon -> .

    COMMA           reduce using rule 236 (epsilon -> .)
    LPAREN          reduce using rule 236 (epsilon -> .)
    TYPEX           reduce using rule 236 (epsilon -> .)
    LBRACK          reduce using rule 236 (epsilon -> .)
    STRUCT          reduce using rule 236 (epsilon -> .)
    TIMES           reduce using rule 236 (epsilon -> .)
    FUNC            reduce using rule 236 (epsilon -> .)
    EQUAL           reduce using rule 236 (epsilon -> .)
    SEMICOL         reduce using rule 236 (epsilon -> .)

    epsilon                        shift and go to state 68
    IdentifierRep                  shift and go to state 69

state 35

    (223) TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOL .

    FUNC            reduce using rule 223 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOL .)
    CONST           reduce using rule 223 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOL .)
    TYPE            reduce using rule 223 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOL .)
    VAR             reduce using rule 223 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOL .)
    $end            reduce using rule 223 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOL .)


state 36

    (78) FunctionName -> IDENTIFIER .

    LPAREN          reduce using rule 78 (FunctionName -> IDENTIFIER .)


state 37

    (76) FunctionDecl -> FUNC FunctionName . Function
    (77) FunctionDecl -> FUNC FunctionName . Signature
    (79) Function -> . Signature FunctionBody
    (25) Signature -> . Parameters ResultOpt
    (30) Parameters -> . LPAREN ParameterListOpt RPAREN

    LPAREN          shift and go to state 73

    Function                       shift and go to state 70
    Parameters                     shift and go to state 71
    Signature                      shift and go to state 72

state 38

    (67) VarDecl -> VAR VarSpec .

    SEMICOL         reduce using rule 67 (VarDecl -> VAR VarSpec .)


state 39

    (68) VarDecl -> VAR LPAREN . VarSpecRep RPAREN
    (69) VarSpecRep -> . VarSpecRep VarSpec SEMICOL
    (70) VarSpecRep -> . epsilon
    (236) epsilon -> .

    RPAREN          reduce using rule 236 (epsilon -> .)
    IDENTIFIER      reduce using rule 236 (epsilon -> .)

    VarSpecRep                     shift and go to state 74
    epsilon                        shift and go to state 75

state 40

    (71) VarSpec -> IdentifierList . Type ExpressionListOpt
    (72) VarSpec -> IdentifierList . EQUAL ExpressionList
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    EQUAL           shift and go to state 76
    LPAREN          shift and go to state 61
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    Type                           shift and go to state 77
    TypeLit                        shift and go to state 55
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67

state 41

    (64) TypeSpec -> TypeDef .

    SEMICOL         reduce using rule 64 (TypeSpec -> TypeDef .)


state 42

    (63) TypeSpec -> AliasDecl .

    SEMICOL         reduce using rule 63 (TypeSpec -> AliasDecl .)


state 43

    (60) TypeDecl -> TYPE LPAREN . TypeSpecRep RPAREN
    (61) TypeSpecRep -> . TypeSpecRep TypeSpec SEMICOL
    (62) TypeSpecRep -> . epsilon
    (236) epsilon -> .

    RPAREN          reduce using rule 236 (epsilon -> .)
    IDENTIFIER      reduce using rule 236 (epsilon -> .)

    TypeSpecRep                    shift and go to state 78
    epsilon                        shift and go to state 79

state 44

    (59) TypeDecl -> TYPE TypeSpec .

    SEMICOL         reduce using rule 59 (TypeDecl -> TYPE TypeSpec .)


state 45

    (65) AliasDecl -> IDENTIFIER . EQUAL Type
    (66) TypeDef -> IDENTIFIER . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    EQUAL           shift and go to state 80
    LPAREN          shift and go to state 61
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    Type                           shift and go to state 81
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    TypeLit                        shift and go to state 55

state 46

    (230) ImportSpecRep -> epsilon .

    RPAREN          reduce using rule 230 (ImportSpecRep -> epsilon .)
    DOT             reduce using rule 230 (ImportSpecRep -> epsilon .)
    IDENTIFIER      reduce using rule 230 (ImportSpecRep -> epsilon .)
    STRING          reduce using rule 230 (ImportSpecRep -> epsilon .)


state 47

    (228) ImportDecl -> IMPORT LPAREN ImportSpecRep . RPAREN
    (229) ImportSpecRep -> ImportSpecRep . ImportSpec SEMICOL
    (231) ImportSpec -> . PackageNameDotOpt ImportPath
    (232) PackageNameDotOpt -> . DOT
    (233) PackageNameDotOpt -> . PackageName
    (234) PackageNameDotOpt -> . epsilon
    (226) PackageName -> . IDENTIFIER
    (236) epsilon -> .

    RPAREN          shift and go to state 82
    DOT             shift and go to state 30
    IDENTIFIER      shift and go to state 7
    STRING          reduce using rule 236 (epsilon -> .)

    ImportSpec                     shift and go to state 83
    epsilon                        shift and go to state 27
    PackageName                    shift and go to state 28
    PackageNameDotOpt              shift and go to state 29

state 48

    (231) ImportSpec -> PackageNameDotOpt ImportPath .

    SEMICOL         reduce using rule 231 (ImportSpec -> PackageNameDotOpt ImportPath .)


state 49

    (235) ImportPath -> STRING .

    SEMICOL         reduce using rule 235 (ImportPath -> STRING .)


state 50

    (50) ConstDecl -> CONST LPAREN ConstSpecRep . RPAREN
    (51) ConstSpecRep -> ConstSpecRep . ConstSpec SEMICOL
    (53) ConstSpec -> . IdentifierList TypeExprListOpt
    (56) IdentifierList -> . IDENTIFIER IdentifierRep

    RPAREN          shift and go to state 85
    IDENTIFIER      shift and go to state 34

    ConstSpec                      shift and go to state 84
    IdentifierList                 shift and go to state 33

state 51

    (52) ConstSpecRep -> epsilon .

    RPAREN          reduce using rule 52 (ConstSpecRep -> epsilon .)
    IDENTIFIER      reduce using rule 52 (ConstSpecRep -> epsilon .)


state 52

    (24) FunctionType -> FUNC . Signature
    (25) Signature -> . Parameters ResultOpt
    (30) Parameters -> . LPAREN ParameterListOpt RPAREN

    LPAREN          shift and go to state 73

    Parameters                     shift and go to state 71
    Signature                      shift and go to state 86

state 53

    (6) TypeLit -> ArrayType .

    COMMA           reduce using rule 6 (TypeLit -> ArrayType .)
    RPAREN          reduce using rule 6 (TypeLit -> ArrayType .)
    LPAREN          reduce using rule 6 (TypeLit -> ArrayType .)
    STRING          reduce using rule 6 (TypeLit -> ArrayType .)
    SEMICOL         reduce using rule 6 (TypeLit -> ArrayType .)
    EQUAL           reduce using rule 6 (TypeLit -> ArrayType .)
    LBRACE          reduce using rule 6 (TypeLit -> ArrayType .)
    COLON           reduce using rule 6 (TypeLit -> ArrayType .)


state 54

    (10) TypeOpt -> Type .

    EQUAL           reduce using rule 10 (TypeOpt -> Type .)


state 55

    (3) Type -> TypeLit .

    RPAREN          reduce using rule 3 (Type -> TypeLit .)
    LPAREN          reduce using rule 3 (Type -> TypeLit .)
    EQUAL           reduce using rule 3 (Type -> TypeLit .)
    SEMICOL         reduce using rule 3 (Type -> TypeLit .)
    LBRACE          reduce using rule 3 (Type -> TypeLit .)
    COMMA           reduce using rule 3 (Type -> TypeLit .)
    STRING          reduce using rule 3 (Type -> TypeLit .)
    COLON           reduce using rule 3 (Type -> TypeLit .)


state 56

    (2) Type -> TypeName .

    RPAREN          reduce using rule 2 (Type -> TypeName .)
    LPAREN          reduce using rule 2 (Type -> TypeName .)
    EQUAL           reduce using rule 2 (Type -> TypeName .)
    SEMICOL         reduce using rule 2 (Type -> TypeName .)
    LBRACE          reduce using rule 2 (Type -> TypeName .)
    COMMA           reduce using rule 2 (Type -> TypeName .)
    STRING          reduce using rule 2 (Type -> TypeName .)
    COLON           reduce using rule 2 (Type -> TypeName .)


state 57

    (5) TypeName -> TYPEX .

    EQUAL           reduce using rule 5 (TypeName -> TYPEX .)
    SEMICOL         reduce using rule 5 (TypeName -> TYPEX .)
    RPAREN          reduce using rule 5 (TypeName -> TYPEX .)
    LBRACE          reduce using rule 5 (TypeName -> TYPEX .)
    COMMA           reduce using rule 5 (TypeName -> TYPEX .)
    LPAREN          reduce using rule 5 (TypeName -> TYPEX .)
    STRING          reduce using rule 5 (TypeName -> TYPEX .)
    COLON           reduce using rule 5 (TypeName -> TYPEX .)


state 58

    (7) TypeLit -> StructType .

    COMMA           reduce using rule 7 (TypeLit -> StructType .)
    RPAREN          reduce using rule 7 (TypeLit -> StructType .)
    LPAREN          reduce using rule 7 (TypeLit -> StructType .)
    STRING          reduce using rule 7 (TypeLit -> StructType .)
    SEMICOL         reduce using rule 7 (TypeLit -> StructType .)
    EQUAL           reduce using rule 7 (TypeLit -> StructType .)
    LBRACE          reduce using rule 7 (TypeLit -> StructType .)
    COLON           reduce using rule 7 (TypeLit -> StructType .)


state 59

    (55) TypeExprListOpt -> epsilon .
    (11) TypeOpt -> epsilon .

    SEMICOL         reduce using rule 55 (TypeExprListOpt -> epsilon .)
    EQUAL           reduce using rule 11 (TypeOpt -> epsilon .)


state 60

    (22) PointerType -> TIMES . BaseType
    (23) BaseType -> . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 61
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    BaseType                       shift and go to state 88
    Type                           shift and go to state 87
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    TypeLit                        shift and go to state 55

state 61

    (4) Type -> LPAREN . Type RPAREN
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 61
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    Type                           shift and go to state 89
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    TypeLit                        shift and go to state 55

state 62

    (54) TypeExprListOpt -> TypeOpt . EQUAL ExpressionList

    EQUAL           shift and go to state 90


state 63

    (15) StructType -> STRUCT . LBRACE FieldDeclRep RBRACE

    LBRACE          shift and go to state 91


state 64

    (12) ArrayType -> LBRACK . ArrayLength RBRACK ElementType
    (13) ArrayLength -> . Expression
    (107) Expression -> . UnaryExpr
    (108) Expression -> . Expression BinaryOp Expression
    (111) UnaryExpr -> . PrimaryExpr
    (112) UnaryExpr -> . UnaryOp UnaryExpr
    (92) PrimaryExpr -> . Operand
    (93) PrimaryExpr -> . Conversion
    (94) PrimaryExpr -> . PrimaryExpr Selector
    (95) PrimaryExpr -> . PrimaryExpr Index
    (96) PrimaryExpr -> . PrimaryExpr Slice
    (97) PrimaryExpr -> . PrimaryExpr Arguments
    (135) UnaryOp -> . PLUS
    (136) UnaryOp -> . MINUS
    (137) UnaryOp -> . TIMES
    (138) UnaryOp -> . AMPERS
    (139) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (91) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (90) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . INTEGER
    (86) BasicLit -> . FLOAT
    (87) BasicLit -> . IMAGINARY
    (88) BasicLit -> . RUNE
    (89) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 101
    MINUS           shift and go to state 98
    TIMES           shift and go to state 107
    AMPERS          shift and go to state 113
    NOT             shift and go to state 108
    LPAREN          shift and go to state 110
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 112
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 105
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 92
    UnaryOp                        shift and go to state 93
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    Type                           shift and go to state 97
    OperandName                    shift and go to state 99
    TypeLit                        shift and go to state 55
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    UnaryExpr                      shift and go to state 106
    PrimaryExpr                    shift and go to state 94
    ArrayLength                    shift and go to state 109
    Expression                     shift and go to state 111
    PointerType                    shift and go to state 66
    BasicLit                       shift and go to state 100
    Operand                        shift and go to state 114
    FunctionType                   shift and go to state 67

state 65

    (53) ConstSpec -> IdentifierList TypeExprListOpt .

    SEMICOL         reduce using rule 53 (ConstSpec -> IdentifierList TypeExprListOpt .)


state 66

    (8) TypeLit -> PointerType .

    COMMA           reduce using rule 8 (TypeLit -> PointerType .)
    RPAREN          reduce using rule 8 (TypeLit -> PointerType .)
    LPAREN          reduce using rule 8 (TypeLit -> PointerType .)
    STRING          reduce using rule 8 (TypeLit -> PointerType .)
    SEMICOL         reduce using rule 8 (TypeLit -> PointerType .)
    EQUAL           reduce using rule 8 (TypeLit -> PointerType .)
    LBRACE          reduce using rule 8 (TypeLit -> PointerType .)
    COLON           reduce using rule 8 (TypeLit -> PointerType .)


state 67

    (9) TypeLit -> FunctionType .

    COMMA           reduce using rule 9 (TypeLit -> FunctionType .)
    RPAREN          reduce using rule 9 (TypeLit -> FunctionType .)
    LPAREN          reduce using rule 9 (TypeLit -> FunctionType .)
    STRING          reduce using rule 9 (TypeLit -> FunctionType .)
    SEMICOL         reduce using rule 9 (TypeLit -> FunctionType .)
    EQUAL           reduce using rule 9 (TypeLit -> FunctionType .)
    LBRACE          reduce using rule 9 (TypeLit -> FunctionType .)
    COLON           reduce using rule 9 (TypeLit -> FunctionType .)


state 68

    (58) IdentifierRep -> epsilon .

    COMMA           reduce using rule 58 (IdentifierRep -> epsilon .)
    LPAREN          reduce using rule 58 (IdentifierRep -> epsilon .)
    TYPEX           reduce using rule 58 (IdentifierRep -> epsilon .)
    LBRACK          reduce using rule 58 (IdentifierRep -> epsilon .)
    STRUCT          reduce using rule 58 (IdentifierRep -> epsilon .)
    TIMES           reduce using rule 58 (IdentifierRep -> epsilon .)
    FUNC            reduce using rule 58 (IdentifierRep -> epsilon .)
    EQUAL           reduce using rule 58 (IdentifierRep -> epsilon .)
    SEMICOL         reduce using rule 58 (IdentifierRep -> epsilon .)


state 69

    (56) IdentifierList -> IDENTIFIER IdentifierRep .
    (57) IdentifierRep -> IdentifierRep . COMMA IDENTIFIER

    LPAREN          reduce using rule 56 (IdentifierList -> IDENTIFIER IdentifierRep .)
    TYPEX           reduce using rule 56 (IdentifierList -> IDENTIFIER IdentifierRep .)
    LBRACK          reduce using rule 56 (IdentifierList -> IDENTIFIER IdentifierRep .)
    STRUCT          reduce using rule 56 (IdentifierList -> IDENTIFIER IdentifierRep .)
    TIMES           reduce using rule 56 (IdentifierList -> IDENTIFIER IdentifierRep .)
    FUNC            reduce using rule 56 (IdentifierList -> IDENTIFIER IdentifierRep .)
    EQUAL           reduce using rule 56 (IdentifierList -> IDENTIFIER IdentifierRep .)
    SEMICOL         reduce using rule 56 (IdentifierList -> IDENTIFIER IdentifierRep .)
    COMMA           shift and go to state 115


state 70

    (76) FunctionDecl -> FUNC FunctionName Function .

    SEMICOL         reduce using rule 76 (FunctionDecl -> FUNC FunctionName Function .)


state 71

    (25) Signature -> Parameters . ResultOpt
    (26) ResultOpt -> . Result
    (27) ResultOpt -> . epsilon
    (28) Result -> . Parameters
    (29) Result -> . Type
    (236) epsilon -> .
    (30) Parameters -> . LPAREN ParameterListOpt RPAREN
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

  ! shift/reduce conflict for LPAREN resolved as shift
    EQUAL           reduce using rule 236 (epsilon -> .)
    SEMICOL         reduce using rule 236 (epsilon -> .)
    RPAREN          reduce using rule 236 (epsilon -> .)
    LBRACE          reduce using rule 236 (epsilon -> .)
    COMMA           reduce using rule 236 (epsilon -> .)
    STRING          reduce using rule 236 (epsilon -> .)
    COLON           reduce using rule 236 (epsilon -> .)
    LPAREN          shift and go to state 120
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

  ! LPAREN          [ reduce using rule 236 (epsilon -> .) ]

    StructType                     shift and go to state 58
    Parameters                     shift and go to state 116
    epsilon                        shift and go to state 119
    ResultOpt                      shift and go to state 118
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    TypeLit                        shift and go to state 55
    Result                         shift and go to state 121
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    Type                           shift and go to state 117

state 72

    (77) FunctionDecl -> FUNC FunctionName Signature .
    (79) Function -> Signature . FunctionBody
    (80) FunctionBody -> . Block
    (40) Block -> . LBRACE StatementList RBRACE

    SEMICOL         reduce using rule 77 (FunctionDecl -> FUNC FunctionName Signature .)
    LBRACE          shift and go to state 123

    FunctionBody                   shift and go to state 122
    Block                          shift and go to state 124

state 73

    (30) Parameters -> LPAREN . ParameterListOpt RPAREN
    (31) ParameterListOpt -> . ParametersList
    (32) ParameterListOpt -> . epsilon
    (33) ParametersList -> . Type
    (34) ParametersList -> . IdentifierList Type
    (35) ParametersList -> . ParameterDeclCommaRep
    (236) epsilon -> .
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (56) IdentifierList -> . IDENTIFIER IdentifierRep
    (36) ParameterDeclCommaRep -> . ParameterDeclCommaRep COMMA ParameterDecl
    (37) ParameterDeclCommaRep -> . ParameterDecl COMMA ParameterDecl
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (38) ParameterDecl -> . IdentifierList Type
    (39) ParameterDecl -> . Type
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    RPAREN          reduce using rule 236 (epsilon -> .)
    LPAREN          shift and go to state 61
    IDENTIFIER      shift and go to state 34
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    epsilon                        shift and go to state 131
    ParameterListOpt               shift and go to state 125
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    TypeLit                        shift and go to state 55
    IdentifierList                 shift and go to state 126
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    ParametersList                 shift and go to state 129
    Type                           shift and go to state 128
    ParameterDeclCommaRep          shift and go to state 127
    ParameterDecl                  shift and go to state 130

state 74

    (68) VarDecl -> VAR LPAREN VarSpecRep . RPAREN
    (69) VarSpecRep -> VarSpecRep . VarSpec SEMICOL
    (71) VarSpec -> . IdentifierList Type ExpressionListOpt
    (72) VarSpec -> . IdentifierList EQUAL ExpressionList
    (56) IdentifierList -> . IDENTIFIER IdentifierRep

    RPAREN          shift and go to state 132
    IDENTIFIER      shift and go to state 34

    VarSpec                        shift and go to state 133
    IdentifierList                 shift and go to state 40

state 75

    (70) VarSpecRep -> epsilon .

    RPAREN          reduce using rule 70 (VarSpecRep -> epsilon .)
    IDENTIFIER      reduce using rule 70 (VarSpecRep -> epsilon .)


state 76

    (72) VarSpec -> IdentifierList EQUAL . ExpressionList
    (104) ExpressionList -> . Expression ExpressionRep
    (107) Expression -> . UnaryExpr
    (108) Expression -> . Expression BinaryOp Expression
    (111) UnaryExpr -> . PrimaryExpr
    (112) UnaryExpr -> . UnaryOp UnaryExpr
    (92) PrimaryExpr -> . Operand
    (93) PrimaryExpr -> . Conversion
    (94) PrimaryExpr -> . PrimaryExpr Selector
    (95) PrimaryExpr -> . PrimaryExpr Index
    (96) PrimaryExpr -> . PrimaryExpr Slice
    (97) PrimaryExpr -> . PrimaryExpr Arguments
    (135) UnaryOp -> . PLUS
    (136) UnaryOp -> . MINUS
    (137) UnaryOp -> . TIMES
    (138) UnaryOp -> . AMPERS
    (139) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (91) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (90) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . INTEGER
    (86) BasicLit -> . FLOAT
    (87) BasicLit -> . IMAGINARY
    (88) BasicLit -> . RUNE
    (89) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 101
    MINUS           shift and go to state 98
    TIMES           shift and go to state 107
    AMPERS          shift and go to state 113
    NOT             shift and go to state 108
    LPAREN          shift and go to state 110
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 112
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 105
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    UnaryOp                        shift and go to state 93
    Conversion                     shift and go to state 92
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    Type                           shift and go to state 97
    OperandName                    shift and go to state 99
    BasicLit                       shift and go to state 100
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    UnaryExpr                      shift and go to state 106
    PrimaryExpr                    shift and go to state 94
    ExpressionList                 shift and go to state 134
    Expression                     shift and go to state 135
    PointerType                    shift and go to state 66
    TypeLit                        shift and go to state 55
    Operand                        shift and go to state 114
    FunctionType                   shift and go to state 67

state 77

    (71) VarSpec -> IdentifierList Type . ExpressionListOpt
    (73) ExpressionListOpt -> . EQUAL ExpressionList
    (74) ExpressionListOpt -> . epsilon
    (236) epsilon -> .

    EQUAL           shift and go to state 136
    SEMICOL         reduce using rule 236 (epsilon -> .)

    ExpressionListOpt              shift and go to state 138
    epsilon                        shift and go to state 137

state 78

    (60) TypeDecl -> TYPE LPAREN TypeSpecRep . RPAREN
    (61) TypeSpecRep -> TypeSpecRep . TypeSpec SEMICOL
    (63) TypeSpec -> . AliasDecl
    (64) TypeSpec -> . TypeDef
    (65) AliasDecl -> . IDENTIFIER EQUAL Type
    (66) TypeDef -> . IDENTIFIER Type

    RPAREN          shift and go to state 139
    IDENTIFIER      shift and go to state 45

    TypeDef                        shift and go to state 41
    AliasDecl                      shift and go to state 42
    TypeSpec                       shift and go to state 140

state 79

    (62) TypeSpecRep -> epsilon .

    RPAREN          reduce using rule 62 (TypeSpecRep -> epsilon .)
    IDENTIFIER      reduce using rule 62 (TypeSpecRep -> epsilon .)


state 80

    (65) AliasDecl -> IDENTIFIER EQUAL . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 61
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    Type                           shift and go to state 141
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    TypeLit                        shift and go to state 55

state 81

    (66) TypeDef -> IDENTIFIER Type .

    SEMICOL         reduce using rule 66 (TypeDef -> IDENTIFIER Type .)


state 82

    (228) ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN .

    SEMICOL         reduce using rule 228 (ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN .)


state 83

    (229) ImportSpecRep -> ImportSpecRep ImportSpec . SEMICOL

    SEMICOL         shift and go to state 142


state 84

    (51) ConstSpecRep -> ConstSpecRep ConstSpec . SEMICOL

    SEMICOL         shift and go to state 143


state 85

    (50) ConstDecl -> CONST LPAREN ConstSpecRep RPAREN .

    SEMICOL         reduce using rule 50 (ConstDecl -> CONST LPAREN ConstSpecRep RPAREN .)


state 86

    (24) FunctionType -> FUNC Signature .

    LPAREN          reduce using rule 24 (FunctionType -> FUNC Signature .)
    EQUAL           reduce using rule 24 (FunctionType -> FUNC Signature .)
    RPAREN          reduce using rule 24 (FunctionType -> FUNC Signature .)
    COMMA           reduce using rule 24 (FunctionType -> FUNC Signature .)
    SEMICOL         reduce using rule 24 (FunctionType -> FUNC Signature .)
    LBRACE          reduce using rule 24 (FunctionType -> FUNC Signature .)
    STRING          reduce using rule 24 (FunctionType -> FUNC Signature .)
    COLON           reduce using rule 24 (FunctionType -> FUNC Signature .)


state 87

    (23) BaseType -> Type .

    LPAREN          reduce using rule 23 (BaseType -> Type .)
    RPAREN          reduce using rule 23 (BaseType -> Type .)
    EQUAL           reduce using rule 23 (BaseType -> Type .)
    SEMICOL         reduce using rule 23 (BaseType -> Type .)
    LBRACE          reduce using rule 23 (BaseType -> Type .)
    COMMA           reduce using rule 23 (BaseType -> Type .)
    STRING          reduce using rule 23 (BaseType -> Type .)
    COLON           reduce using rule 23 (BaseType -> Type .)


state 88

    (22) PointerType -> TIMES BaseType .

    EQUAL           reduce using rule 22 (PointerType -> TIMES BaseType .)
    SEMICOL         reduce using rule 22 (PointerType -> TIMES BaseType .)
    RPAREN          reduce using rule 22 (PointerType -> TIMES BaseType .)
    LBRACE          reduce using rule 22 (PointerType -> TIMES BaseType .)
    COMMA           reduce using rule 22 (PointerType -> TIMES BaseType .)
    LPAREN          reduce using rule 22 (PointerType -> TIMES BaseType .)
    STRING          reduce using rule 22 (PointerType -> TIMES BaseType .)
    COLON           reduce using rule 22 (PointerType -> TIMES BaseType .)


state 89

    (4) Type -> LPAREN Type . RPAREN

    RPAREN          shift and go to state 144


state 90

    (54) TypeExprListOpt -> TypeOpt EQUAL . ExpressionList
    (104) ExpressionList -> . Expression ExpressionRep
    (107) Expression -> . UnaryExpr
    (108) Expression -> . Expression BinaryOp Expression
    (111) UnaryExpr -> . PrimaryExpr
    (112) UnaryExpr -> . UnaryOp UnaryExpr
    (92) PrimaryExpr -> . Operand
    (93) PrimaryExpr -> . Conversion
    (94) PrimaryExpr -> . PrimaryExpr Selector
    (95) PrimaryExpr -> . PrimaryExpr Index
    (96) PrimaryExpr -> . PrimaryExpr Slice
    (97) PrimaryExpr -> . PrimaryExpr Arguments
    (135) UnaryOp -> . PLUS
    (136) UnaryOp -> . MINUS
    (137) UnaryOp -> . TIMES
    (138) UnaryOp -> . AMPERS
    (139) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (91) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (90) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . INTEGER
    (86) BasicLit -> . FLOAT
    (87) BasicLit -> . IMAGINARY
    (88) BasicLit -> . RUNE
    (89) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 101
    MINUS           shift and go to state 98
    TIMES           shift and go to state 107
    AMPERS          shift and go to state 113
    NOT             shift and go to state 108
    LPAREN          shift and go to state 110
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 112
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 105
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    UnaryOp                        shift and go to state 93
    Conversion                     shift and go to state 92
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    Expression                     shift and go to state 135
    Type                           shift and go to state 97
    OperandName                    shift and go to state 99
    BasicLit                       shift and go to state 100
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    UnaryExpr                      shift and go to state 106
    PrimaryExpr                    shift and go to state 94
    ExpressionList                 shift and go to state 145
    PointerType                    shift and go to state 66
    TypeLit                        shift and go to state 55
    Operand                        shift and go to state 114
    FunctionType                   shift and go to state 67

state 91

    (15) StructType -> STRUCT LBRACE . FieldDeclRep RBRACE
    (16) FieldDeclRep -> . FieldDeclRep FieldDecl SEMICOL
    (17) FieldDeclRep -> . epsilon
    (236) epsilon -> .

    RBRACE          reduce using rule 236 (epsilon -> .)
    IDENTIFIER      reduce using rule 236 (epsilon -> .)

    FieldDeclRep                   shift and go to state 146
    epsilon                        shift and go to state 147

state 92

    (93) PrimaryExpr -> Conversion .

    DOT             reduce using rule 93 (PrimaryExpr -> Conversion .)
    LBRACK          reduce using rule 93 (PrimaryExpr -> Conversion .)
    LPAREN          reduce using rule 93 (PrimaryExpr -> Conversion .)
    RPAREN          reduce using rule 93 (PrimaryExpr -> Conversion .)
    OROR            reduce using rule 93 (PrimaryExpr -> Conversion .)
    AMPAMP          reduce using rule 93 (PrimaryExpr -> Conversion .)
    EQEQ            reduce using rule 93 (PrimaryExpr -> Conversion .)
    NOTEQ           reduce using rule 93 (PrimaryExpr -> Conversion .)
    LESS            reduce using rule 93 (PrimaryExpr -> Conversion .)
    GREAT           reduce using rule 93 (PrimaryExpr -> Conversion .)
    LEQ             reduce using rule 93 (PrimaryExpr -> Conversion .)
    GEQ             reduce using rule 93 (PrimaryExpr -> Conversion .)
    PLUS            reduce using rule 93 (PrimaryExpr -> Conversion .)
    MINUS           reduce using rule 93 (PrimaryExpr -> Conversion .)
    OR              reduce using rule 93 (PrimaryExpr -> Conversion .)
    CARET           reduce using rule 93 (PrimaryExpr -> Conversion .)
    TIMES           reduce using rule 93 (PrimaryExpr -> Conversion .)
    DIVIDE          reduce using rule 93 (PrimaryExpr -> Conversion .)
    MOD             reduce using rule 93 (PrimaryExpr -> Conversion .)
    AMPERS          reduce using rule 93 (PrimaryExpr -> Conversion .)
    LL              reduce using rule 93 (PrimaryExpr -> Conversion .)
    GG              reduce using rule 93 (PrimaryExpr -> Conversion .)
    AMPCAR          reduce using rule 93 (PrimaryExpr -> Conversion .)
    COMMA           reduce using rule 93 (PrimaryExpr -> Conversion .)
    COLON           reduce using rule 93 (PrimaryExpr -> Conversion .)
    SEMICOL         reduce using rule 93 (PrimaryExpr -> Conversion .)
    LBRACE          reduce using rule 93 (PrimaryExpr -> Conversion .)
    RBRACK          reduce using rule 93 (PrimaryExpr -> Conversion .)
    PLUSEQ          reduce using rule 93 (PrimaryExpr -> Conversion .)
    MINUSEQ         reduce using rule 93 (PrimaryExpr -> Conversion .)
    TIMESEQ         reduce using rule 93 (PrimaryExpr -> Conversion .)
    DIVIDEEQ        reduce using rule 93 (PrimaryExpr -> Conversion .)
    MODEQ           reduce using rule 93 (PrimaryExpr -> Conversion .)
    AMPEQ           reduce using rule 93 (PrimaryExpr -> Conversion .)
    OREQ            reduce using rule 93 (PrimaryExpr -> Conversion .)
    CAREQ           reduce using rule 93 (PrimaryExpr -> Conversion .)
    LLEQ            reduce using rule 93 (PrimaryExpr -> Conversion .)
    GGEQ            reduce using rule 93 (PrimaryExpr -> Conversion .)
    EQUAL           reduce using rule 93 (PrimaryExpr -> Conversion .)
    PLUSPLUS        reduce using rule 93 (PrimaryExpr -> Conversion .)
    MINUSMIN        reduce using rule 93 (PrimaryExpr -> Conversion .)


state 93

    (112) UnaryExpr -> UnaryOp . UnaryExpr
    (111) UnaryExpr -> . PrimaryExpr
    (112) UnaryExpr -> . UnaryOp UnaryExpr
    (92) PrimaryExpr -> . Operand
    (93) PrimaryExpr -> . Conversion
    (94) PrimaryExpr -> . PrimaryExpr Selector
    (95) PrimaryExpr -> . PrimaryExpr Index
    (96) PrimaryExpr -> . PrimaryExpr Slice
    (97) PrimaryExpr -> . PrimaryExpr Arguments
    (135) UnaryOp -> . PLUS
    (136) UnaryOp -> . MINUS
    (137) UnaryOp -> . TIMES
    (138) UnaryOp -> . AMPERS
    (139) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (91) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (90) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . INTEGER
    (86) BasicLit -> . FLOAT
    (87) BasicLit -> . IMAGINARY
    (88) BasicLit -> . RUNE
    (89) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 101
    MINUS           shift and go to state 98
    TIMES           shift and go to state 107
    AMPERS          shift and go to state 113
    NOT             shift and go to state 108
    LPAREN          shift and go to state 110
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 112
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 105
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 92
    UnaryOp                        shift and go to state 93
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    Type                           shift and go to state 97
    OperandName                    shift and go to state 99
    BasicLit                       shift and go to state 100
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    UnaryExpr                      shift and go to state 148
    PrimaryExpr                    shift and go to state 94
    PointerType                    shift and go to state 66
    TypeLit                        shift and go to state 55
    Operand                        shift and go to state 114
    FunctionType                   shift and go to state 67

state 94

    (111) UnaryExpr -> PrimaryExpr .
    (94) PrimaryExpr -> PrimaryExpr . Selector
    (95) PrimaryExpr -> PrimaryExpr . Index
    (96) PrimaryExpr -> PrimaryExpr . Slice
    (97) PrimaryExpr -> PrimaryExpr . Arguments
    (98) Selector -> . DOT IDENTIFIER
    (99) Index -> . LBRACK Expression RBRACK
    (100) Slice -> . LBRACK ExpressionOpt COLON ExpressionOpt RBRACK
    (101) Arguments -> . LPAREN ExpressionListTypeOpt RPAREN

    OROR            reduce using rule 111 (UnaryExpr -> PrimaryExpr .)
    AMPAMP          reduce using rule 111 (UnaryExpr -> PrimaryExpr .)
    EQEQ            reduce using rule 111 (UnaryExpr -> PrimaryExpr .)
    NOTEQ           reduce using rule 111 (UnaryExpr -> PrimaryExpr .)
    LESS            reduce using rule 111 (UnaryExpr -> PrimaryExpr .)
    GREAT           reduce using rule 111 (UnaryExpr -> PrimaryExpr .)
    LEQ             reduce using rule 111 (UnaryExpr -> PrimaryExpr .)
    GEQ             reduce using rule 111 (UnaryExpr -> PrimaryExpr .)
    PLUS            reduce using rule 111 (UnaryExpr -> PrimaryExpr .)
    MINUS           reduce using rule 111 (UnaryExpr -> PrimaryExpr .)
    OR              reduce using rule 111 (UnaryExpr -> PrimaryExpr .)
    CARET           reduce using rule 111 (UnaryExpr -> PrimaryExpr .)
    TIMES           reduce using rule 111 (UnaryExpr -> PrimaryExpr .)
    DIVIDE          reduce using rule 111 (UnaryExpr -> PrimaryExpr .)
    MOD             reduce using rule 111 (UnaryExpr -> PrimaryExpr .)
    AMPERS          reduce using rule 111 (UnaryExpr -> PrimaryExpr .)
    LL              reduce using rule 111 (UnaryExpr -> PrimaryExpr .)
    GG              reduce using rule 111 (UnaryExpr -> PrimaryExpr .)
    AMPCAR          reduce using rule 111 (UnaryExpr -> PrimaryExpr .)
    COMMA           reduce using rule 111 (UnaryExpr -> PrimaryExpr .)
    SEMICOL         reduce using rule 111 (UnaryExpr -> PrimaryExpr .)
    LBRACE          reduce using rule 111 (UnaryExpr -> PrimaryExpr .)
    COLON           reduce using rule 111 (UnaryExpr -> PrimaryExpr .)
    RBRACK          reduce using rule 111 (UnaryExpr -> PrimaryExpr .)
    PLUSPLUS        reduce using rule 111 (UnaryExpr -> PrimaryExpr .)
    MINUSMIN        reduce using rule 111 (UnaryExpr -> PrimaryExpr .)
    PLUSEQ          reduce using rule 111 (UnaryExpr -> PrimaryExpr .)
    MINUSEQ         reduce using rule 111 (UnaryExpr -> PrimaryExpr .)
    TIMESEQ         reduce using rule 111 (UnaryExpr -> PrimaryExpr .)
    DIVIDEEQ        reduce using rule 111 (UnaryExpr -> PrimaryExpr .)
    MODEQ           reduce using rule 111 (UnaryExpr -> PrimaryExpr .)
    AMPEQ           reduce using rule 111 (UnaryExpr -> PrimaryExpr .)
    OREQ            reduce using rule 111 (UnaryExpr -> PrimaryExpr .)
    CAREQ           reduce using rule 111 (UnaryExpr -> PrimaryExpr .)
    LLEQ            reduce using rule 111 (UnaryExpr -> PrimaryExpr .)
    GGEQ            reduce using rule 111 (UnaryExpr -> PrimaryExpr .)
    EQUAL           reduce using rule 111 (UnaryExpr -> PrimaryExpr .)
    RPAREN          reduce using rule 111 (UnaryExpr -> PrimaryExpr .)
    DOT             shift and go to state 155
    LBRACK          shift and go to state 151
    LPAREN          shift and go to state 154

    Index                          shift and go to state 149
    Slice                          shift and go to state 150
    Selector                       shift and go to state 152
    Arguments                      shift and go to state 153

state 95

    (81) Operand -> Literal .

    DOT             reduce using rule 81 (Operand -> Literal .)
    LBRACK          reduce using rule 81 (Operand -> Literal .)
    LPAREN          reduce using rule 81 (Operand -> Literal .)
    PLUSPLUS        reduce using rule 81 (Operand -> Literal .)
    MINUSMIN        reduce using rule 81 (Operand -> Literal .)
    OROR            reduce using rule 81 (Operand -> Literal .)
    AMPAMP          reduce using rule 81 (Operand -> Literal .)
    EQEQ            reduce using rule 81 (Operand -> Literal .)
    NOTEQ           reduce using rule 81 (Operand -> Literal .)
    LESS            reduce using rule 81 (Operand -> Literal .)
    GREAT           reduce using rule 81 (Operand -> Literal .)
    LEQ             reduce using rule 81 (Operand -> Literal .)
    GEQ             reduce using rule 81 (Operand -> Literal .)
    PLUS            reduce using rule 81 (Operand -> Literal .)
    MINUS           reduce using rule 81 (Operand -> Literal .)
    OR              reduce using rule 81 (Operand -> Literal .)
    CARET           reduce using rule 81 (Operand -> Literal .)
    TIMES           reduce using rule 81 (Operand -> Literal .)
    DIVIDE          reduce using rule 81 (Operand -> Literal .)
    MOD             reduce using rule 81 (Operand -> Literal .)
    AMPERS          reduce using rule 81 (Operand -> Literal .)
    LL              reduce using rule 81 (Operand -> Literal .)
    GG              reduce using rule 81 (Operand -> Literal .)
    AMPCAR          reduce using rule 81 (Operand -> Literal .)
    COMMA           reduce using rule 81 (Operand -> Literal .)
    SEMICOL         reduce using rule 81 (Operand -> Literal .)
    PLUSEQ          reduce using rule 81 (Operand -> Literal .)
    MINUSEQ         reduce using rule 81 (Operand -> Literal .)
    TIMESEQ         reduce using rule 81 (Operand -> Literal .)
    DIVIDEEQ        reduce using rule 81 (Operand -> Literal .)
    MODEQ           reduce using rule 81 (Operand -> Literal .)
    AMPEQ           reduce using rule 81 (Operand -> Literal .)
    OREQ            reduce using rule 81 (Operand -> Literal .)
    CAREQ           reduce using rule 81 (Operand -> Literal .)
    LLEQ            reduce using rule 81 (Operand -> Literal .)
    GGEQ            reduce using rule 81 (Operand -> Literal .)
    EQUAL           reduce using rule 81 (Operand -> Literal .)
    LBRACE          reduce using rule 81 (Operand -> Literal .)
    RBRACK          reduce using rule 81 (Operand -> Literal .)
    RPAREN          reduce using rule 81 (Operand -> Literal .)
    COLON           reduce using rule 81 (Operand -> Literal .)


state 96

    (88) BasicLit -> RUNE .

    DOT             reduce using rule 88 (BasicLit -> RUNE .)
    LBRACK          reduce using rule 88 (BasicLit -> RUNE .)
    LPAREN          reduce using rule 88 (BasicLit -> RUNE .)
    RPAREN          reduce using rule 88 (BasicLit -> RUNE .)
    OROR            reduce using rule 88 (BasicLit -> RUNE .)
    AMPAMP          reduce using rule 88 (BasicLit -> RUNE .)
    EQEQ            reduce using rule 88 (BasicLit -> RUNE .)
    NOTEQ           reduce using rule 88 (BasicLit -> RUNE .)
    LESS            reduce using rule 88 (BasicLit -> RUNE .)
    GREAT           reduce using rule 88 (BasicLit -> RUNE .)
    LEQ             reduce using rule 88 (BasicLit -> RUNE .)
    GEQ             reduce using rule 88 (BasicLit -> RUNE .)
    PLUS            reduce using rule 88 (BasicLit -> RUNE .)
    MINUS           reduce using rule 88 (BasicLit -> RUNE .)
    OR              reduce using rule 88 (BasicLit -> RUNE .)
    CARET           reduce using rule 88 (BasicLit -> RUNE .)
    TIMES           reduce using rule 88 (BasicLit -> RUNE .)
    DIVIDE          reduce using rule 88 (BasicLit -> RUNE .)
    MOD             reduce using rule 88 (BasicLit -> RUNE .)
    AMPERS          reduce using rule 88 (BasicLit -> RUNE .)
    LL              reduce using rule 88 (BasicLit -> RUNE .)
    GG              reduce using rule 88 (BasicLit -> RUNE .)
    AMPCAR          reduce using rule 88 (BasicLit -> RUNE .)
    COMMA           reduce using rule 88 (BasicLit -> RUNE .)
    SEMICOL         reduce using rule 88 (BasicLit -> RUNE .)
    LBRACE          reduce using rule 88 (BasicLit -> RUNE .)
    RBRACK          reduce using rule 88 (BasicLit -> RUNE .)
    COLON           reduce using rule 88 (BasicLit -> RUNE .)
    PLUSPLUS        reduce using rule 88 (BasicLit -> RUNE .)
    MINUSMIN        reduce using rule 88 (BasicLit -> RUNE .)
    PLUSEQ          reduce using rule 88 (BasicLit -> RUNE .)
    MINUSEQ         reduce using rule 88 (BasicLit -> RUNE .)
    TIMESEQ         reduce using rule 88 (BasicLit -> RUNE .)
    DIVIDEEQ        reduce using rule 88 (BasicLit -> RUNE .)
    MODEQ           reduce using rule 88 (BasicLit -> RUNE .)
    AMPEQ           reduce using rule 88 (BasicLit -> RUNE .)
    OREQ            reduce using rule 88 (BasicLit -> RUNE .)
    CAREQ           reduce using rule 88 (BasicLit -> RUNE .)
    LLEQ            reduce using rule 88 (BasicLit -> RUNE .)
    GGEQ            reduce using rule 88 (BasicLit -> RUNE .)
    EQUAL           reduce using rule 88 (BasicLit -> RUNE .)


state 97

    (91) Conversion -> Type . LPAREN Expression RPAREN

    LPAREN          shift and go to state 156


state 98

    (136) UnaryOp -> MINUS .

    PLUS            reduce using rule 136 (UnaryOp -> MINUS .)
    MINUS           reduce using rule 136 (UnaryOp -> MINUS .)
    TIMES           reduce using rule 136 (UnaryOp -> MINUS .)
    AMPERS          reduce using rule 136 (UnaryOp -> MINUS .)
    NOT             reduce using rule 136 (UnaryOp -> MINUS .)
    LPAREN          reduce using rule 136 (UnaryOp -> MINUS .)
    IDENTIFIER      reduce using rule 136 (UnaryOp -> MINUS .)
    INTEGER         reduce using rule 136 (UnaryOp -> MINUS .)
    FLOAT           reduce using rule 136 (UnaryOp -> MINUS .)
    IMAGINARY       reduce using rule 136 (UnaryOp -> MINUS .)
    RUNE            reduce using rule 136 (UnaryOp -> MINUS .)
    STRING          reduce using rule 136 (UnaryOp -> MINUS .)
    TYPEX           reduce using rule 136 (UnaryOp -> MINUS .)
    LBRACK          reduce using rule 136 (UnaryOp -> MINUS .)
    STRUCT          reduce using rule 136 (UnaryOp -> MINUS .)
    FUNC            reduce using rule 136 (UnaryOp -> MINUS .)


state 99

    (82) Operand -> OperandName .

    DOT             reduce using rule 82 (Operand -> OperandName .)
    LBRACK          reduce using rule 82 (Operand -> OperandName .)
    LPAREN          reduce using rule 82 (Operand -> OperandName .)
    PLUSPLUS        reduce using rule 82 (Operand -> OperandName .)
    MINUSMIN        reduce using rule 82 (Operand -> OperandName .)
    OROR            reduce using rule 82 (Operand -> OperandName .)
    AMPAMP          reduce using rule 82 (Operand -> OperandName .)
    EQEQ            reduce using rule 82 (Operand -> OperandName .)
    NOTEQ           reduce using rule 82 (Operand -> OperandName .)
    LESS            reduce using rule 82 (Operand -> OperandName .)
    GREAT           reduce using rule 82 (Operand -> OperandName .)
    LEQ             reduce using rule 82 (Operand -> OperandName .)
    GEQ             reduce using rule 82 (Operand -> OperandName .)
    PLUS            reduce using rule 82 (Operand -> OperandName .)
    MINUS           reduce using rule 82 (Operand -> OperandName .)
    OR              reduce using rule 82 (Operand -> OperandName .)
    CARET           reduce using rule 82 (Operand -> OperandName .)
    TIMES           reduce using rule 82 (Operand -> OperandName .)
    DIVIDE          reduce using rule 82 (Operand -> OperandName .)
    MOD             reduce using rule 82 (Operand -> OperandName .)
    AMPERS          reduce using rule 82 (Operand -> OperandName .)
    LL              reduce using rule 82 (Operand -> OperandName .)
    GG              reduce using rule 82 (Operand -> OperandName .)
    AMPCAR          reduce using rule 82 (Operand -> OperandName .)
    COMMA           reduce using rule 82 (Operand -> OperandName .)
    SEMICOL         reduce using rule 82 (Operand -> OperandName .)
    PLUSEQ          reduce using rule 82 (Operand -> OperandName .)
    MINUSEQ         reduce using rule 82 (Operand -> OperandName .)
    TIMESEQ         reduce using rule 82 (Operand -> OperandName .)
    DIVIDEEQ        reduce using rule 82 (Operand -> OperandName .)
    MODEQ           reduce using rule 82 (Operand -> OperandName .)
    AMPEQ           reduce using rule 82 (Operand -> OperandName .)
    OREQ            reduce using rule 82 (Operand -> OperandName .)
    CAREQ           reduce using rule 82 (Operand -> OperandName .)
    LLEQ            reduce using rule 82 (Operand -> OperandName .)
    GGEQ            reduce using rule 82 (Operand -> OperandName .)
    EQUAL           reduce using rule 82 (Operand -> OperandName .)
    LBRACE          reduce using rule 82 (Operand -> OperandName .)
    RBRACK          reduce using rule 82 (Operand -> OperandName .)
    RPAREN          reduce using rule 82 (Operand -> OperandName .)
    COLON           reduce using rule 82 (Operand -> OperandName .)


state 100

    (84) Literal -> BasicLit .

    DOT             reduce using rule 84 (Literal -> BasicLit .)
    LBRACK          reduce using rule 84 (Literal -> BasicLit .)
    LPAREN          reduce using rule 84 (Literal -> BasicLit .)
    OROR            reduce using rule 84 (Literal -> BasicLit .)
    AMPAMP          reduce using rule 84 (Literal -> BasicLit .)
    EQEQ            reduce using rule 84 (Literal -> BasicLit .)
    NOTEQ           reduce using rule 84 (Literal -> BasicLit .)
    LESS            reduce using rule 84 (Literal -> BasicLit .)
    GREAT           reduce using rule 84 (Literal -> BasicLit .)
    LEQ             reduce using rule 84 (Literal -> BasicLit .)
    GEQ             reduce using rule 84 (Literal -> BasicLit .)
    PLUS            reduce using rule 84 (Literal -> BasicLit .)
    MINUS           reduce using rule 84 (Literal -> BasicLit .)
    OR              reduce using rule 84 (Literal -> BasicLit .)
    CARET           reduce using rule 84 (Literal -> BasicLit .)
    TIMES           reduce using rule 84 (Literal -> BasicLit .)
    DIVIDE          reduce using rule 84 (Literal -> BasicLit .)
    MOD             reduce using rule 84 (Literal -> BasicLit .)
    AMPERS          reduce using rule 84 (Literal -> BasicLit .)
    LL              reduce using rule 84 (Literal -> BasicLit .)
    GG              reduce using rule 84 (Literal -> BasicLit .)
    AMPCAR          reduce using rule 84 (Literal -> BasicLit .)
    SEMICOL         reduce using rule 84 (Literal -> BasicLit .)
    LBRACE          reduce using rule 84 (Literal -> BasicLit .)
    COMMA           reduce using rule 84 (Literal -> BasicLit .)
    RPAREN          reduce using rule 84 (Literal -> BasicLit .)
    PLUSPLUS        reduce using rule 84 (Literal -> BasicLit .)
    MINUSMIN        reduce using rule 84 (Literal -> BasicLit .)
    PLUSEQ          reduce using rule 84 (Literal -> BasicLit .)
    MINUSEQ         reduce using rule 84 (Literal -> BasicLit .)
    TIMESEQ         reduce using rule 84 (Literal -> BasicLit .)
    DIVIDEEQ        reduce using rule 84 (Literal -> BasicLit .)
    MODEQ           reduce using rule 84 (Literal -> BasicLit .)
    AMPEQ           reduce using rule 84 (Literal -> BasicLit .)
    OREQ            reduce using rule 84 (Literal -> BasicLit .)
    CAREQ           reduce using rule 84 (Literal -> BasicLit .)
    LLEQ            reduce using rule 84 (Literal -> BasicLit .)
    GGEQ            reduce using rule 84 (Literal -> BasicLit .)
    EQUAL           reduce using rule 84 (Literal -> BasicLit .)
    RBRACK          reduce using rule 84 (Literal -> BasicLit .)
    COLON           reduce using rule 84 (Literal -> BasicLit .)


state 101

    (135) UnaryOp -> PLUS .

    PLUS            reduce using rule 135 (UnaryOp -> PLUS .)
    MINUS           reduce using rule 135 (UnaryOp -> PLUS .)
    TIMES           reduce using rule 135 (UnaryOp -> PLUS .)
    AMPERS          reduce using rule 135 (UnaryOp -> PLUS .)
    NOT             reduce using rule 135 (UnaryOp -> PLUS .)
    LPAREN          reduce using rule 135 (UnaryOp -> PLUS .)
    IDENTIFIER      reduce using rule 135 (UnaryOp -> PLUS .)
    INTEGER         reduce using rule 135 (UnaryOp -> PLUS .)
    FLOAT           reduce using rule 135 (UnaryOp -> PLUS .)
    IMAGINARY       reduce using rule 135 (UnaryOp -> PLUS .)
    RUNE            reduce using rule 135 (UnaryOp -> PLUS .)
    STRING          reduce using rule 135 (UnaryOp -> PLUS .)
    TYPEX           reduce using rule 135 (UnaryOp -> PLUS .)
    LBRACK          reduce using rule 135 (UnaryOp -> PLUS .)
    STRUCT          reduce using rule 135 (UnaryOp -> PLUS .)
    FUNC            reduce using rule 135 (UnaryOp -> PLUS .)


state 102

    (85) BasicLit -> INTEGER .

    DOT             reduce using rule 85 (BasicLit -> INTEGER .)
    LBRACK          reduce using rule 85 (BasicLit -> INTEGER .)
    LPAREN          reduce using rule 85 (BasicLit -> INTEGER .)
    RPAREN          reduce using rule 85 (BasicLit -> INTEGER .)
    OROR            reduce using rule 85 (BasicLit -> INTEGER .)
    AMPAMP          reduce using rule 85 (BasicLit -> INTEGER .)
    EQEQ            reduce using rule 85 (BasicLit -> INTEGER .)
    NOTEQ           reduce using rule 85 (BasicLit -> INTEGER .)
    LESS            reduce using rule 85 (BasicLit -> INTEGER .)
    GREAT           reduce using rule 85 (BasicLit -> INTEGER .)
    LEQ             reduce using rule 85 (BasicLit -> INTEGER .)
    GEQ             reduce using rule 85 (BasicLit -> INTEGER .)
    PLUS            reduce using rule 85 (BasicLit -> INTEGER .)
    MINUS           reduce using rule 85 (BasicLit -> INTEGER .)
    OR              reduce using rule 85 (BasicLit -> INTEGER .)
    CARET           reduce using rule 85 (BasicLit -> INTEGER .)
    TIMES           reduce using rule 85 (BasicLit -> INTEGER .)
    DIVIDE          reduce using rule 85 (BasicLit -> INTEGER .)
    MOD             reduce using rule 85 (BasicLit -> INTEGER .)
    AMPERS          reduce using rule 85 (BasicLit -> INTEGER .)
    LL              reduce using rule 85 (BasicLit -> INTEGER .)
    GG              reduce using rule 85 (BasicLit -> INTEGER .)
    AMPCAR          reduce using rule 85 (BasicLit -> INTEGER .)
    COMMA           reduce using rule 85 (BasicLit -> INTEGER .)
    SEMICOL         reduce using rule 85 (BasicLit -> INTEGER .)
    LBRACE          reduce using rule 85 (BasicLit -> INTEGER .)
    RBRACK          reduce using rule 85 (BasicLit -> INTEGER .)
    COLON           reduce using rule 85 (BasicLit -> INTEGER .)
    PLUSPLUS        reduce using rule 85 (BasicLit -> INTEGER .)
    MINUSMIN        reduce using rule 85 (BasicLit -> INTEGER .)
    PLUSEQ          reduce using rule 85 (BasicLit -> INTEGER .)
    MINUSEQ         reduce using rule 85 (BasicLit -> INTEGER .)
    TIMESEQ         reduce using rule 85 (BasicLit -> INTEGER .)
    DIVIDEEQ        reduce using rule 85 (BasicLit -> INTEGER .)
    MODEQ           reduce using rule 85 (BasicLit -> INTEGER .)
    AMPEQ           reduce using rule 85 (BasicLit -> INTEGER .)
    OREQ            reduce using rule 85 (BasicLit -> INTEGER .)
    CAREQ           reduce using rule 85 (BasicLit -> INTEGER .)
    LLEQ            reduce using rule 85 (BasicLit -> INTEGER .)
    GGEQ            reduce using rule 85 (BasicLit -> INTEGER .)
    EQUAL           reduce using rule 85 (BasicLit -> INTEGER .)


state 103

    (87) BasicLit -> IMAGINARY .

    DOT             reduce using rule 87 (BasicLit -> IMAGINARY .)
    LBRACK          reduce using rule 87 (BasicLit -> IMAGINARY .)
    LPAREN          reduce using rule 87 (BasicLit -> IMAGINARY .)
    RPAREN          reduce using rule 87 (BasicLit -> IMAGINARY .)
    OROR            reduce using rule 87 (BasicLit -> IMAGINARY .)
    AMPAMP          reduce using rule 87 (BasicLit -> IMAGINARY .)
    EQEQ            reduce using rule 87 (BasicLit -> IMAGINARY .)
    NOTEQ           reduce using rule 87 (BasicLit -> IMAGINARY .)
    LESS            reduce using rule 87 (BasicLit -> IMAGINARY .)
    GREAT           reduce using rule 87 (BasicLit -> IMAGINARY .)
    LEQ             reduce using rule 87 (BasicLit -> IMAGINARY .)
    GEQ             reduce using rule 87 (BasicLit -> IMAGINARY .)
    PLUS            reduce using rule 87 (BasicLit -> IMAGINARY .)
    MINUS           reduce using rule 87 (BasicLit -> IMAGINARY .)
    OR              reduce using rule 87 (BasicLit -> IMAGINARY .)
    CARET           reduce using rule 87 (BasicLit -> IMAGINARY .)
    TIMES           reduce using rule 87 (BasicLit -> IMAGINARY .)
    DIVIDE          reduce using rule 87 (BasicLit -> IMAGINARY .)
    MOD             reduce using rule 87 (BasicLit -> IMAGINARY .)
    AMPERS          reduce using rule 87 (BasicLit -> IMAGINARY .)
    LL              reduce using rule 87 (BasicLit -> IMAGINARY .)
    GG              reduce using rule 87 (BasicLit -> IMAGINARY .)
    AMPCAR          reduce using rule 87 (BasicLit -> IMAGINARY .)
    COMMA           reduce using rule 87 (BasicLit -> IMAGINARY .)
    SEMICOL         reduce using rule 87 (BasicLit -> IMAGINARY .)
    LBRACE          reduce using rule 87 (BasicLit -> IMAGINARY .)
    RBRACK          reduce using rule 87 (BasicLit -> IMAGINARY .)
    COLON           reduce using rule 87 (BasicLit -> IMAGINARY .)
    PLUSPLUS        reduce using rule 87 (BasicLit -> IMAGINARY .)
    MINUSMIN        reduce using rule 87 (BasicLit -> IMAGINARY .)
    PLUSEQ          reduce using rule 87 (BasicLit -> IMAGINARY .)
    MINUSEQ         reduce using rule 87 (BasicLit -> IMAGINARY .)
    TIMESEQ         reduce using rule 87 (BasicLit -> IMAGINARY .)
    DIVIDEEQ        reduce using rule 87 (BasicLit -> IMAGINARY .)
    MODEQ           reduce using rule 87 (BasicLit -> IMAGINARY .)
    AMPEQ           reduce using rule 87 (BasicLit -> IMAGINARY .)
    OREQ            reduce using rule 87 (BasicLit -> IMAGINARY .)
    CAREQ           reduce using rule 87 (BasicLit -> IMAGINARY .)
    LLEQ            reduce using rule 87 (BasicLit -> IMAGINARY .)
    GGEQ            reduce using rule 87 (BasicLit -> IMAGINARY .)
    EQUAL           reduce using rule 87 (BasicLit -> IMAGINARY .)


state 104

    (90) OperandName -> IDENTIFIER .

    DOT             reduce using rule 90 (OperandName -> IDENTIFIER .)
    LBRACK          reduce using rule 90 (OperandName -> IDENTIFIER .)
    LPAREN          reduce using rule 90 (OperandName -> IDENTIFIER .)
    OROR            reduce using rule 90 (OperandName -> IDENTIFIER .)
    AMPAMP          reduce using rule 90 (OperandName -> IDENTIFIER .)
    EQEQ            reduce using rule 90 (OperandName -> IDENTIFIER .)
    NOTEQ           reduce using rule 90 (OperandName -> IDENTIFIER .)
    LESS            reduce using rule 90 (OperandName -> IDENTIFIER .)
    GREAT           reduce using rule 90 (OperandName -> IDENTIFIER .)
    LEQ             reduce using rule 90 (OperandName -> IDENTIFIER .)
    GEQ             reduce using rule 90 (OperandName -> IDENTIFIER .)
    PLUS            reduce using rule 90 (OperandName -> IDENTIFIER .)
    MINUS           reduce using rule 90 (OperandName -> IDENTIFIER .)
    OR              reduce using rule 90 (OperandName -> IDENTIFIER .)
    CARET           reduce using rule 90 (OperandName -> IDENTIFIER .)
    TIMES           reduce using rule 90 (OperandName -> IDENTIFIER .)
    DIVIDE          reduce using rule 90 (OperandName -> IDENTIFIER .)
    MOD             reduce using rule 90 (OperandName -> IDENTIFIER .)
    AMPERS          reduce using rule 90 (OperandName -> IDENTIFIER .)
    LL              reduce using rule 90 (OperandName -> IDENTIFIER .)
    GG              reduce using rule 90 (OperandName -> IDENTIFIER .)
    AMPCAR          reduce using rule 90 (OperandName -> IDENTIFIER .)
    RBRACK          reduce using rule 90 (OperandName -> IDENTIFIER .)
    COMMA           reduce using rule 90 (OperandName -> IDENTIFIER .)
    SEMICOL         reduce using rule 90 (OperandName -> IDENTIFIER .)
    RPAREN          reduce using rule 90 (OperandName -> IDENTIFIER .)
    COLON           reduce using rule 90 (OperandName -> IDENTIFIER .)
    PLUSPLUS        reduce using rule 90 (OperandName -> IDENTIFIER .)
    MINUSMIN        reduce using rule 90 (OperandName -> IDENTIFIER .)
    PLUSEQ          reduce using rule 90 (OperandName -> IDENTIFIER .)
    MINUSEQ         reduce using rule 90 (OperandName -> IDENTIFIER .)
    TIMESEQ         reduce using rule 90 (OperandName -> IDENTIFIER .)
    DIVIDEEQ        reduce using rule 90 (OperandName -> IDENTIFIER .)
    MODEQ           reduce using rule 90 (OperandName -> IDENTIFIER .)
    AMPEQ           reduce using rule 90 (OperandName -> IDENTIFIER .)
    OREQ            reduce using rule 90 (OperandName -> IDENTIFIER .)
    CAREQ           reduce using rule 90 (OperandName -> IDENTIFIER .)
    LLEQ            reduce using rule 90 (OperandName -> IDENTIFIER .)
    GGEQ            reduce using rule 90 (OperandName -> IDENTIFIER .)
    EQUAL           reduce using rule 90 (OperandName -> IDENTIFIER .)
    LBRACE          reduce using rule 90 (OperandName -> IDENTIFIER .)


state 105

    (89) BasicLit -> STRING .

    DOT             reduce using rule 89 (BasicLit -> STRING .)
    LBRACK          reduce using rule 89 (BasicLit -> STRING .)
    LPAREN          reduce using rule 89 (BasicLit -> STRING .)
    RPAREN          reduce using rule 89 (BasicLit -> STRING .)
    OROR            reduce using rule 89 (BasicLit -> STRING .)
    AMPAMP          reduce using rule 89 (BasicLit -> STRING .)
    EQEQ            reduce using rule 89 (BasicLit -> STRING .)
    NOTEQ           reduce using rule 89 (BasicLit -> STRING .)
    LESS            reduce using rule 89 (BasicLit -> STRING .)
    GREAT           reduce using rule 89 (BasicLit -> STRING .)
    LEQ             reduce using rule 89 (BasicLit -> STRING .)
    GEQ             reduce using rule 89 (BasicLit -> STRING .)
    PLUS            reduce using rule 89 (BasicLit -> STRING .)
    MINUS           reduce using rule 89 (BasicLit -> STRING .)
    OR              reduce using rule 89 (BasicLit -> STRING .)
    CARET           reduce using rule 89 (BasicLit -> STRING .)
    TIMES           reduce using rule 89 (BasicLit -> STRING .)
    DIVIDE          reduce using rule 89 (BasicLit -> STRING .)
    MOD             reduce using rule 89 (BasicLit -> STRING .)
    AMPERS          reduce using rule 89 (BasicLit -> STRING .)
    LL              reduce using rule 89 (BasicLit -> STRING .)
    GG              reduce using rule 89 (BasicLit -> STRING .)
    AMPCAR          reduce using rule 89 (BasicLit -> STRING .)
    COMMA           reduce using rule 89 (BasicLit -> STRING .)
    SEMICOL         reduce using rule 89 (BasicLit -> STRING .)
    LBRACE          reduce using rule 89 (BasicLit -> STRING .)
    RBRACK          reduce using rule 89 (BasicLit -> STRING .)
    COLON           reduce using rule 89 (BasicLit -> STRING .)
    PLUSPLUS        reduce using rule 89 (BasicLit -> STRING .)
    MINUSMIN        reduce using rule 89 (BasicLit -> STRING .)
    PLUSEQ          reduce using rule 89 (BasicLit -> STRING .)
    MINUSEQ         reduce using rule 89 (BasicLit -> STRING .)
    TIMESEQ         reduce using rule 89 (BasicLit -> STRING .)
    DIVIDEEQ        reduce using rule 89 (BasicLit -> STRING .)
    MODEQ           reduce using rule 89 (BasicLit -> STRING .)
    AMPEQ           reduce using rule 89 (BasicLit -> STRING .)
    OREQ            reduce using rule 89 (BasicLit -> STRING .)
    CAREQ           reduce using rule 89 (BasicLit -> STRING .)
    LLEQ            reduce using rule 89 (BasicLit -> STRING .)
    GGEQ            reduce using rule 89 (BasicLit -> STRING .)
    EQUAL           reduce using rule 89 (BasicLit -> STRING .)


state 106

    (107) Expression -> UnaryExpr .

    PLUSPLUS        reduce using rule 107 (Expression -> UnaryExpr .)
    MINUSMIN        reduce using rule 107 (Expression -> UnaryExpr .)
    OROR            reduce using rule 107 (Expression -> UnaryExpr .)
    AMPAMP          reduce using rule 107 (Expression -> UnaryExpr .)
    EQEQ            reduce using rule 107 (Expression -> UnaryExpr .)
    NOTEQ           reduce using rule 107 (Expression -> UnaryExpr .)
    LESS            reduce using rule 107 (Expression -> UnaryExpr .)
    GREAT           reduce using rule 107 (Expression -> UnaryExpr .)
    LEQ             reduce using rule 107 (Expression -> UnaryExpr .)
    GEQ             reduce using rule 107 (Expression -> UnaryExpr .)
    PLUS            reduce using rule 107 (Expression -> UnaryExpr .)
    MINUS           reduce using rule 107 (Expression -> UnaryExpr .)
    OR              reduce using rule 107 (Expression -> UnaryExpr .)
    CARET           reduce using rule 107 (Expression -> UnaryExpr .)
    TIMES           reduce using rule 107 (Expression -> UnaryExpr .)
    DIVIDE          reduce using rule 107 (Expression -> UnaryExpr .)
    MOD             reduce using rule 107 (Expression -> UnaryExpr .)
    AMPERS          reduce using rule 107 (Expression -> UnaryExpr .)
    LL              reduce using rule 107 (Expression -> UnaryExpr .)
    GG              reduce using rule 107 (Expression -> UnaryExpr .)
    AMPCAR          reduce using rule 107 (Expression -> UnaryExpr .)
    COMMA           reduce using rule 107 (Expression -> UnaryExpr .)
    SEMICOL         reduce using rule 107 (Expression -> UnaryExpr .)
    PLUSEQ          reduce using rule 107 (Expression -> UnaryExpr .)
    MINUSEQ         reduce using rule 107 (Expression -> UnaryExpr .)
    TIMESEQ         reduce using rule 107 (Expression -> UnaryExpr .)
    DIVIDEEQ        reduce using rule 107 (Expression -> UnaryExpr .)
    MODEQ           reduce using rule 107 (Expression -> UnaryExpr .)
    AMPEQ           reduce using rule 107 (Expression -> UnaryExpr .)
    OREQ            reduce using rule 107 (Expression -> UnaryExpr .)
    CAREQ           reduce using rule 107 (Expression -> UnaryExpr .)
    LLEQ            reduce using rule 107 (Expression -> UnaryExpr .)
    GGEQ            reduce using rule 107 (Expression -> UnaryExpr .)
    EQUAL           reduce using rule 107 (Expression -> UnaryExpr .)
    RBRACK          reduce using rule 107 (Expression -> UnaryExpr .)
    LBRACE          reduce using rule 107 (Expression -> UnaryExpr .)
    RPAREN          reduce using rule 107 (Expression -> UnaryExpr .)
    COLON           reduce using rule 107 (Expression -> UnaryExpr .)


state 107

    (137) UnaryOp -> TIMES .
    (22) PointerType -> TIMES . BaseType
    (23) BaseType -> . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            reduce using rule 137 (UnaryOp -> TIMES .)
    MINUS           reduce using rule 137 (UnaryOp -> TIMES .)
    TIMES           reduce using rule 137 (UnaryOp -> TIMES .)
    AMPERS          reduce using rule 137 (UnaryOp -> TIMES .)
    NOT             reduce using rule 137 (UnaryOp -> TIMES .)
    LPAREN          reduce using rule 137 (UnaryOp -> TIMES .)
    IDENTIFIER      reduce using rule 137 (UnaryOp -> TIMES .)
    INTEGER         reduce using rule 137 (UnaryOp -> TIMES .)
    FLOAT           reduce using rule 137 (UnaryOp -> TIMES .)
    IMAGINARY       reduce using rule 137 (UnaryOp -> TIMES .)
    RUNE            reduce using rule 137 (UnaryOp -> TIMES .)
    STRING          reduce using rule 137 (UnaryOp -> TIMES .)
    TYPEX           reduce using rule 137 (UnaryOp -> TIMES .)
    LBRACK          reduce using rule 137 (UnaryOp -> TIMES .)
    STRUCT          reduce using rule 137 (UnaryOp -> TIMES .)
    FUNC            reduce using rule 137 (UnaryOp -> TIMES .)

  ! LPAREN          [ shift and go to state 61 ]
  ! TYPEX           [ shift and go to state 57 ]
  ! LBRACK          [ shift and go to state 64 ]
  ! STRUCT          [ shift and go to state 63 ]
  ! TIMES           [ shift and go to state 60 ]
  ! FUNC            [ shift and go to state 52 ]

    StructType                     shift and go to state 58
    BaseType                       shift and go to state 88
    Type                           shift and go to state 87
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    TypeLit                        shift and go to state 55

state 108

    (139) UnaryOp -> NOT .

    PLUS            reduce using rule 139 (UnaryOp -> NOT .)
    MINUS           reduce using rule 139 (UnaryOp -> NOT .)
    TIMES           reduce using rule 139 (UnaryOp -> NOT .)
    AMPERS          reduce using rule 139 (UnaryOp -> NOT .)
    NOT             reduce using rule 139 (UnaryOp -> NOT .)
    LPAREN          reduce using rule 139 (UnaryOp -> NOT .)
    IDENTIFIER      reduce using rule 139 (UnaryOp -> NOT .)
    INTEGER         reduce using rule 139 (UnaryOp -> NOT .)
    FLOAT           reduce using rule 139 (UnaryOp -> NOT .)
    IMAGINARY       reduce using rule 139 (UnaryOp -> NOT .)
    RUNE            reduce using rule 139 (UnaryOp -> NOT .)
    STRING          reduce using rule 139 (UnaryOp -> NOT .)
    TYPEX           reduce using rule 139 (UnaryOp -> NOT .)
    LBRACK          reduce using rule 139 (UnaryOp -> NOT .)
    STRUCT          reduce using rule 139 (UnaryOp -> NOT .)
    FUNC            reduce using rule 139 (UnaryOp -> NOT .)


state 109

    (12) ArrayType -> LBRACK ArrayLength . RBRACK ElementType

    RBRACK          shift and go to state 157


state 110

    (83) Operand -> LPAREN . Expression RPAREN
    (4) Type -> LPAREN . Type RPAREN
    (107) Expression -> . UnaryExpr
    (108) Expression -> . Expression BinaryOp Expression
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (111) UnaryExpr -> . PrimaryExpr
    (112) UnaryExpr -> . UnaryOp UnaryExpr
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (92) PrimaryExpr -> . Operand
    (93) PrimaryExpr -> . Conversion
    (94) PrimaryExpr -> . PrimaryExpr Selector
    (95) PrimaryExpr -> . PrimaryExpr Index
    (96) PrimaryExpr -> . PrimaryExpr Slice
    (97) PrimaryExpr -> . PrimaryExpr Arguments
    (135) UnaryOp -> . PLUS
    (136) UnaryOp -> . MINUS
    (137) UnaryOp -> . TIMES
    (138) UnaryOp -> . AMPERS
    (139) UnaryOp -> . NOT
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (91) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (90) OperandName -> . IDENTIFIER
    (85) BasicLit -> . INTEGER
    (86) BasicLit -> . FLOAT
    (87) BasicLit -> . IMAGINARY
    (88) BasicLit -> . RUNE
    (89) BasicLit -> . STRING

    LPAREN          shift and go to state 159
    TYPEX           shift and go to state 57
    PLUS            shift and go to state 101
    MINUS           shift and go to state 98
    TIMES           shift and go to state 107
    AMPERS          shift and go to state 113
    NOT             shift and go to state 108
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 112
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 105

    Conversion                     shift and go to state 92
    UnaryOp                        shift and go to state 93
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    TypeLit                        shift and go to state 55
    OperandName                    shift and go to state 99
    Type                           shift and go to state 158
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    UnaryExpr                      shift and go to state 106
    PrimaryExpr                    shift and go to state 94
    Expression                     shift and go to state 160
    PointerType                    shift and go to state 66
    BasicLit                       shift and go to state 100
    Operand                        shift and go to state 114
    FunctionType                   shift and go to state 67

state 111

    (13) ArrayLength -> Expression .
    (108) Expression -> Expression . BinaryOp Expression
    (113) BinaryOp -> . OROR
    (114) BinaryOp -> . AMPAMP
    (115) BinaryOp -> . RelOp
    (116) BinaryOp -> . AddOp
    (117) BinaryOp -> . MulOp
    (118) RelOp -> . EQEQ
    (119) RelOp -> . NOTEQ
    (120) RelOp -> . LESS
    (121) RelOp -> . GREAT
    (122) RelOp -> . LEQ
    (123) RelOp -> . GEQ
    (124) AddOp -> . PLUS
    (125) AddOp -> . MINUS
    (126) AddOp -> . OR
    (127) AddOp -> . CARET
    (128) MulOp -> . TIMES
    (129) MulOp -> . DIVIDE
    (130) MulOp -> . MOD
    (131) MulOp -> . AMPERS
    (132) MulOp -> . LL
    (133) MulOp -> . GG
    (134) MulOp -> . AMPCAR

    RBRACK          reduce using rule 13 (ArrayLength -> Expression .)
    OROR            shift and go to state 161
    AMPAMP          shift and go to state 167
    EQEQ            shift and go to state 166
    NOTEQ           shift and go to state 172
    LESS            shift and go to state 165
    GREAT           shift and go to state 163
    LEQ             shift and go to state 181
    GEQ             shift and go to state 170
    PLUS            shift and go to state 173
    MINUS           shift and go to state 169
    OR              shift and go to state 182
    CARET           shift and go to state 162
    TIMES           shift and go to state 177
    DIVIDE          shift and go to state 176
    MOD             shift and go to state 183
    AMPERS          shift and go to state 180
    LL              shift and go to state 171
    GG              shift and go to state 178
    AMPCAR          shift and go to state 164

    AddOp                          shift and go to state 175
    MulOp                          shift and go to state 168
    RelOp                          shift and go to state 179
    BinaryOp                       shift and go to state 174

state 112

    (86) BasicLit -> FLOAT .

    DOT             reduce using rule 86 (BasicLit -> FLOAT .)
    LBRACK          reduce using rule 86 (BasicLit -> FLOAT .)
    LPAREN          reduce using rule 86 (BasicLit -> FLOAT .)
    RPAREN          reduce using rule 86 (BasicLit -> FLOAT .)
    OROR            reduce using rule 86 (BasicLit -> FLOAT .)
    AMPAMP          reduce using rule 86 (BasicLit -> FLOAT .)
    EQEQ            reduce using rule 86 (BasicLit -> FLOAT .)
    NOTEQ           reduce using rule 86 (BasicLit -> FLOAT .)
    LESS            reduce using rule 86 (BasicLit -> FLOAT .)
    GREAT           reduce using rule 86 (BasicLit -> FLOAT .)
    LEQ             reduce using rule 86 (BasicLit -> FLOAT .)
    GEQ             reduce using rule 86 (BasicLit -> FLOAT .)
    PLUS            reduce using rule 86 (BasicLit -> FLOAT .)
    MINUS           reduce using rule 86 (BasicLit -> FLOAT .)
    OR              reduce using rule 86 (BasicLit -> FLOAT .)
    CARET           reduce using rule 86 (BasicLit -> FLOAT .)
    TIMES           reduce using rule 86 (BasicLit -> FLOAT .)
    DIVIDE          reduce using rule 86 (BasicLit -> FLOAT .)
    MOD             reduce using rule 86 (BasicLit -> FLOAT .)
    AMPERS          reduce using rule 86 (BasicLit -> FLOAT .)
    LL              reduce using rule 86 (BasicLit -> FLOAT .)
    GG              reduce using rule 86 (BasicLit -> FLOAT .)
    AMPCAR          reduce using rule 86 (BasicLit -> FLOAT .)
    COMMA           reduce using rule 86 (BasicLit -> FLOAT .)
    SEMICOL         reduce using rule 86 (BasicLit -> FLOAT .)
    LBRACE          reduce using rule 86 (BasicLit -> FLOAT .)
    RBRACK          reduce using rule 86 (BasicLit -> FLOAT .)
    COLON           reduce using rule 86 (BasicLit -> FLOAT .)
    PLUSPLUS        reduce using rule 86 (BasicLit -> FLOAT .)
    MINUSMIN        reduce using rule 86 (BasicLit -> FLOAT .)
    PLUSEQ          reduce using rule 86 (BasicLit -> FLOAT .)
    MINUSEQ         reduce using rule 86 (BasicLit -> FLOAT .)
    TIMESEQ         reduce using rule 86 (BasicLit -> FLOAT .)
    DIVIDEEQ        reduce using rule 86 (BasicLit -> FLOAT .)
    MODEQ           reduce using rule 86 (BasicLit -> FLOAT .)
    AMPEQ           reduce using rule 86 (BasicLit -> FLOAT .)
    OREQ            reduce using rule 86 (BasicLit -> FLOAT .)
    CAREQ           reduce using rule 86 (BasicLit -> FLOAT .)
    LLEQ            reduce using rule 86 (BasicLit -> FLOAT .)
    GGEQ            reduce using rule 86 (BasicLit -> FLOAT .)
    EQUAL           reduce using rule 86 (BasicLit -> FLOAT .)


state 113

    (138) UnaryOp -> AMPERS .

    PLUS            reduce using rule 138 (UnaryOp -> AMPERS .)
    MINUS           reduce using rule 138 (UnaryOp -> AMPERS .)
    TIMES           reduce using rule 138 (UnaryOp -> AMPERS .)
    AMPERS          reduce using rule 138 (UnaryOp -> AMPERS .)
    NOT             reduce using rule 138 (UnaryOp -> AMPERS .)
    LPAREN          reduce using rule 138 (UnaryOp -> AMPERS .)
    IDENTIFIER      reduce using rule 138 (UnaryOp -> AMPERS .)
    INTEGER         reduce using rule 138 (UnaryOp -> AMPERS .)
    FLOAT           reduce using rule 138 (UnaryOp -> AMPERS .)
    IMAGINARY       reduce using rule 138 (UnaryOp -> AMPERS .)
    RUNE            reduce using rule 138 (UnaryOp -> AMPERS .)
    STRING          reduce using rule 138 (UnaryOp -> AMPERS .)
    TYPEX           reduce using rule 138 (UnaryOp -> AMPERS .)
    LBRACK          reduce using rule 138 (UnaryOp -> AMPERS .)
    STRUCT          reduce using rule 138 (UnaryOp -> AMPERS .)
    FUNC            reduce using rule 138 (UnaryOp -> AMPERS .)


state 114

    (92) PrimaryExpr -> Operand .

    DOT             reduce using rule 92 (PrimaryExpr -> Operand .)
    LBRACK          reduce using rule 92 (PrimaryExpr -> Operand .)
    LPAREN          reduce using rule 92 (PrimaryExpr -> Operand .)
    RPAREN          reduce using rule 92 (PrimaryExpr -> Operand .)
    OROR            reduce using rule 92 (PrimaryExpr -> Operand .)
    AMPAMP          reduce using rule 92 (PrimaryExpr -> Operand .)
    EQEQ            reduce using rule 92 (PrimaryExpr -> Operand .)
    NOTEQ           reduce using rule 92 (PrimaryExpr -> Operand .)
    LESS            reduce using rule 92 (PrimaryExpr -> Operand .)
    GREAT           reduce using rule 92 (PrimaryExpr -> Operand .)
    LEQ             reduce using rule 92 (PrimaryExpr -> Operand .)
    GEQ             reduce using rule 92 (PrimaryExpr -> Operand .)
    PLUS            reduce using rule 92 (PrimaryExpr -> Operand .)
    MINUS           reduce using rule 92 (PrimaryExpr -> Operand .)
    OR              reduce using rule 92 (PrimaryExpr -> Operand .)
    CARET           reduce using rule 92 (PrimaryExpr -> Operand .)
    TIMES           reduce using rule 92 (PrimaryExpr -> Operand .)
    DIVIDE          reduce using rule 92 (PrimaryExpr -> Operand .)
    MOD             reduce using rule 92 (PrimaryExpr -> Operand .)
    AMPERS          reduce using rule 92 (PrimaryExpr -> Operand .)
    LL              reduce using rule 92 (PrimaryExpr -> Operand .)
    GG              reduce using rule 92 (PrimaryExpr -> Operand .)
    AMPCAR          reduce using rule 92 (PrimaryExpr -> Operand .)
    COMMA           reduce using rule 92 (PrimaryExpr -> Operand .)
    COLON           reduce using rule 92 (PrimaryExpr -> Operand .)
    SEMICOL         reduce using rule 92 (PrimaryExpr -> Operand .)
    LBRACE          reduce using rule 92 (PrimaryExpr -> Operand .)
    RBRACK          reduce using rule 92 (PrimaryExpr -> Operand .)
    PLUSEQ          reduce using rule 92 (PrimaryExpr -> Operand .)
    MINUSEQ         reduce using rule 92 (PrimaryExpr -> Operand .)
    TIMESEQ         reduce using rule 92 (PrimaryExpr -> Operand .)
    DIVIDEEQ        reduce using rule 92 (PrimaryExpr -> Operand .)
    MODEQ           reduce using rule 92 (PrimaryExpr -> Operand .)
    AMPEQ           reduce using rule 92 (PrimaryExpr -> Operand .)
    OREQ            reduce using rule 92 (PrimaryExpr -> Operand .)
    CAREQ           reduce using rule 92 (PrimaryExpr -> Operand .)
    LLEQ            reduce using rule 92 (PrimaryExpr -> Operand .)
    GGEQ            reduce using rule 92 (PrimaryExpr -> Operand .)
    EQUAL           reduce using rule 92 (PrimaryExpr -> Operand .)
    PLUSPLUS        reduce using rule 92 (PrimaryExpr -> Operand .)
    MINUSMIN        reduce using rule 92 (PrimaryExpr -> Operand .)


state 115

    (57) IdentifierRep -> IdentifierRep COMMA . IDENTIFIER

    IDENTIFIER      shift and go to state 184


state 116

    (28) Result -> Parameters .

    EQUAL           reduce using rule 28 (Result -> Parameters .)
    SEMICOL         reduce using rule 28 (Result -> Parameters .)
    RPAREN          reduce using rule 28 (Result -> Parameters .)
    LBRACE          reduce using rule 28 (Result -> Parameters .)
    COMMA           reduce using rule 28 (Result -> Parameters .)
    LPAREN          reduce using rule 28 (Result -> Parameters .)
    STRING          reduce using rule 28 (Result -> Parameters .)
    COLON           reduce using rule 28 (Result -> Parameters .)


state 117

    (29) Result -> Type .

    EQUAL           reduce using rule 29 (Result -> Type .)
    SEMICOL         reduce using rule 29 (Result -> Type .)
    RPAREN          reduce using rule 29 (Result -> Type .)
    LBRACE          reduce using rule 29 (Result -> Type .)
    COMMA           reduce using rule 29 (Result -> Type .)
    LPAREN          reduce using rule 29 (Result -> Type .)
    STRING          reduce using rule 29 (Result -> Type .)
    COLON           reduce using rule 29 (Result -> Type .)


state 118

    (25) Signature -> Parameters ResultOpt .

    LBRACE          reduce using rule 25 (Signature -> Parameters ResultOpt .)
    SEMICOL         reduce using rule 25 (Signature -> Parameters ResultOpt .)
    EQUAL           reduce using rule 25 (Signature -> Parameters ResultOpt .)
    RPAREN          reduce using rule 25 (Signature -> Parameters ResultOpt .)
    COMMA           reduce using rule 25 (Signature -> Parameters ResultOpt .)
    LPAREN          reduce using rule 25 (Signature -> Parameters ResultOpt .)
    STRING          reduce using rule 25 (Signature -> Parameters ResultOpt .)
    COLON           reduce using rule 25 (Signature -> Parameters ResultOpt .)


state 119

    (27) ResultOpt -> epsilon .

    EQUAL           reduce using rule 27 (ResultOpt -> epsilon .)
    SEMICOL         reduce using rule 27 (ResultOpt -> epsilon .)
    RPAREN          reduce using rule 27 (ResultOpt -> epsilon .)
    LBRACE          reduce using rule 27 (ResultOpt -> epsilon .)
    COMMA           reduce using rule 27 (ResultOpt -> epsilon .)
    LPAREN          reduce using rule 27 (ResultOpt -> epsilon .)
    STRING          reduce using rule 27 (ResultOpt -> epsilon .)
    COLON           reduce using rule 27 (ResultOpt -> epsilon .)


state 120

    (30) Parameters -> LPAREN . ParameterListOpt RPAREN
    (4) Type -> LPAREN . Type RPAREN
    (31) ParameterListOpt -> . ParametersList
    (32) ParameterListOpt -> . epsilon
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (33) ParametersList -> . Type
    (34) ParametersList -> . IdentifierList Type
    (35) ParametersList -> . ParameterDeclCommaRep
    (236) epsilon -> .
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (56) IdentifierList -> . IDENTIFIER IdentifierRep
    (36) ParameterDeclCommaRep -> . ParameterDeclCommaRep COMMA ParameterDecl
    (37) ParameterDeclCommaRep -> . ParameterDecl COMMA ParameterDecl
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature
    (38) ParameterDecl -> . IdentifierList Type
    (39) ParameterDecl -> . Type

    LPAREN          shift and go to state 61
    RPAREN          reduce using rule 236 (epsilon -> .)
    TYPEX           shift and go to state 57
    IDENTIFIER      shift and go to state 34
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    TypeLit                        shift and go to state 55
    IdentifierList                 shift and go to state 126
    ParameterListOpt               shift and go to state 125
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    epsilon                        shift and go to state 131
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    ParametersList                 shift and go to state 129
    Type                           shift and go to state 185
    ParameterDeclCommaRep          shift and go to state 127
    ParameterDecl                  shift and go to state 130

state 121

    (26) ResultOpt -> Result .

    EQUAL           reduce using rule 26 (ResultOpt -> Result .)
    SEMICOL         reduce using rule 26 (ResultOpt -> Result .)
    RPAREN          reduce using rule 26 (ResultOpt -> Result .)
    LBRACE          reduce using rule 26 (ResultOpt -> Result .)
    COMMA           reduce using rule 26 (ResultOpt -> Result .)
    LPAREN          reduce using rule 26 (ResultOpt -> Result .)
    STRING          reduce using rule 26 (ResultOpt -> Result .)
    COLON           reduce using rule 26 (ResultOpt -> Result .)


state 122

    (79) Function -> Signature FunctionBody .

    SEMICOL         reduce using rule 79 (Function -> Signature FunctionBody .)


state 123

    (40) Block -> LBRACE . StatementList RBRACE
    (41) StatementList -> . StatementRep
    (42) StatementRep -> . StatementRep Statement SEMICOL
    (43) StatementRep -> . epsilon
    (236) epsilon -> .

    RETURN          reduce using rule 236 (epsilon -> .)
    BREAK           reduce using rule 236 (epsilon -> .)
    CONTINUE        reduce using rule 236 (epsilon -> .)
    GOTO            reduce using rule 236 (epsilon -> .)
    LBRACE          reduce using rule 236 (epsilon -> .)
    IF              reduce using rule 236 (epsilon -> .)
    FOR             reduce using rule 236 (epsilon -> .)
    CONST           reduce using rule 236 (epsilon -> .)
    TYPE            reduce using rule 236 (epsilon -> .)
    VAR             reduce using rule 236 (epsilon -> .)
    IDENTIFIER      reduce using rule 236 (epsilon -> .)
    SWITCH          reduce using rule 236 (epsilon -> .)
    PLUS            reduce using rule 236 (epsilon -> .)
    MINUS           reduce using rule 236 (epsilon -> .)
    TIMES           reduce using rule 236 (epsilon -> .)
    AMPERS          reduce using rule 236 (epsilon -> .)
    NOT             reduce using rule 236 (epsilon -> .)
    LPAREN          reduce using rule 236 (epsilon -> .)
    INTEGER         reduce using rule 236 (epsilon -> .)
    FLOAT           reduce using rule 236 (epsilon -> .)
    IMAGINARY       reduce using rule 236 (epsilon -> .)
    RUNE            reduce using rule 236 (epsilon -> .)
    STRING          reduce using rule 236 (epsilon -> .)
    TYPEX           reduce using rule 236 (epsilon -> .)
    LBRACK          reduce using rule 236 (epsilon -> .)
    STRUCT          reduce using rule 236 (epsilon -> .)
    FUNC            reduce using rule 236 (epsilon -> .)
    SEMICOL         reduce using rule 236 (epsilon -> .)
    RBRACE          reduce using rule 236 (epsilon -> .)

    epsilon                        shift and go to state 187
    StatementRep                   shift and go to state 186
    StatementList                  shift and go to state 188

state 124

    (80) FunctionBody -> Block .

    SEMICOL         reduce using rule 80 (FunctionBody -> Block .)


state 125

    (30) Parameters -> LPAREN ParameterListOpt . RPAREN

    RPAREN          shift and go to state 189


state 126

    (34) ParametersList -> IdentifierList . Type
    (38) ParameterDecl -> IdentifierList . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 61
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    Type                           shift and go to state 190
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    TypeLit                        shift and go to state 55

state 127

    (35) ParametersList -> ParameterDeclCommaRep .
    (36) ParameterDeclCommaRep -> ParameterDeclCommaRep . COMMA ParameterDecl

    RPAREN          reduce using rule 35 (ParametersList -> ParameterDeclCommaRep .)
    COMMA           shift and go to state 191


state 128

    (33) ParametersList -> Type .
    (39) ParameterDecl -> Type .

    RPAREN          reduce using rule 33 (ParametersList -> Type .)
    COMMA           reduce using rule 39 (ParameterDecl -> Type .)


state 129

    (31) ParameterListOpt -> ParametersList .

    RPAREN          reduce using rule 31 (ParameterListOpt -> ParametersList .)


state 130

    (37) ParameterDeclCommaRep -> ParameterDecl . COMMA ParameterDecl

    COMMA           shift and go to state 192


state 131

    (32) ParameterListOpt -> epsilon .

    RPAREN          reduce using rule 32 (ParameterListOpt -> epsilon .)


state 132

    (68) VarDecl -> VAR LPAREN VarSpecRep RPAREN .

    SEMICOL         reduce using rule 68 (VarDecl -> VAR LPAREN VarSpecRep RPAREN .)


state 133

    (69) VarSpecRep -> VarSpecRep VarSpec . SEMICOL

    SEMICOL         shift and go to state 193


state 134

    (72) VarSpec -> IdentifierList EQUAL ExpressionList .

    SEMICOL         reduce using rule 72 (VarSpec -> IdentifierList EQUAL ExpressionList .)


state 135

    (104) ExpressionList -> Expression . ExpressionRep
    (108) Expression -> Expression . BinaryOp Expression
    (105) ExpressionRep -> . ExpressionRep COMMA Expression
    (106) ExpressionRep -> . epsilon
    (113) BinaryOp -> . OROR
    (114) BinaryOp -> . AMPAMP
    (115) BinaryOp -> . RelOp
    (116) BinaryOp -> . AddOp
    (117) BinaryOp -> . MulOp
    (236) epsilon -> .
    (118) RelOp -> . EQEQ
    (119) RelOp -> . NOTEQ
    (120) RelOp -> . LESS
    (121) RelOp -> . GREAT
    (122) RelOp -> . LEQ
    (123) RelOp -> . GEQ
    (124) AddOp -> . PLUS
    (125) AddOp -> . MINUS
    (126) AddOp -> . OR
    (127) AddOp -> . CARET
    (128) MulOp -> . TIMES
    (129) MulOp -> . DIVIDE
    (130) MulOp -> . MOD
    (131) MulOp -> . AMPERS
    (132) MulOp -> . LL
    (133) MulOp -> . GG
    (134) MulOp -> . AMPCAR

    OROR            shift and go to state 161
    AMPAMP          shift and go to state 167
    COMMA           reduce using rule 236 (epsilon -> .)
    SEMICOL         reduce using rule 236 (epsilon -> .)
    RPAREN          reduce using rule 236 (epsilon -> .)
    LBRACE          reduce using rule 236 (epsilon -> .)
    COLON           reduce using rule 236 (epsilon -> .)
    EQEQ            shift and go to state 166
    NOTEQ           shift and go to state 172
    LESS            shift and go to state 165
    GREAT           shift and go to state 163
    LEQ             shift and go to state 181
    GEQ             shift and go to state 170
    PLUS            shift and go to state 173
    MINUS           shift and go to state 169
    OR              shift and go to state 182
    CARET           shift and go to state 162
    TIMES           shift and go to state 177
    DIVIDE          shift and go to state 176
    MOD             shift and go to state 183
    AMPERS          shift and go to state 180
    LL              shift and go to state 171
    GG              shift and go to state 178
    AMPCAR          shift and go to state 164

    AddOp                          shift and go to state 175
    ExpressionRep                  shift and go to state 194
    RelOp                          shift and go to state 179
    epsilon                        shift and go to state 195
    BinaryOp                       shift and go to state 174
    MulOp                          shift and go to state 168

state 136

    (73) ExpressionListOpt -> EQUAL . ExpressionList
    (104) ExpressionList -> . Expression ExpressionRep
    (107) Expression -> . UnaryExpr
    (108) Expression -> . Expression BinaryOp Expression
    (111) UnaryExpr -> . PrimaryExpr
    (112) UnaryExpr -> . UnaryOp UnaryExpr
    (92) PrimaryExpr -> . Operand
    (93) PrimaryExpr -> . Conversion
    (94) PrimaryExpr -> . PrimaryExpr Selector
    (95) PrimaryExpr -> . PrimaryExpr Index
    (96) PrimaryExpr -> . PrimaryExpr Slice
    (97) PrimaryExpr -> . PrimaryExpr Arguments
    (135) UnaryOp -> . PLUS
    (136) UnaryOp -> . MINUS
    (137) UnaryOp -> . TIMES
    (138) UnaryOp -> . AMPERS
    (139) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (91) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (90) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . INTEGER
    (86) BasicLit -> . FLOAT
    (87) BasicLit -> . IMAGINARY
    (88) BasicLit -> . RUNE
    (89) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 101
    MINUS           shift and go to state 98
    TIMES           shift and go to state 107
    AMPERS          shift and go to state 113
    NOT             shift and go to state 108
    LPAREN          shift and go to state 110
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 112
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 105
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    UnaryOp                        shift and go to state 93
    Conversion                     shift and go to state 92
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    Type                           shift and go to state 97
    OperandName                    shift and go to state 99
    BasicLit                       shift and go to state 100
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    UnaryExpr                      shift and go to state 106
    PrimaryExpr                    shift and go to state 94
    ExpressionList                 shift and go to state 196
    Expression                     shift and go to state 135
    PointerType                    shift and go to state 66
    TypeLit                        shift and go to state 55
    Operand                        shift and go to state 114
    FunctionType                   shift and go to state 67

state 137

    (74) ExpressionListOpt -> epsilon .

    SEMICOL         reduce using rule 74 (ExpressionListOpt -> epsilon .)


state 138

    (71) VarSpec -> IdentifierList Type ExpressionListOpt .

    SEMICOL         reduce using rule 71 (VarSpec -> IdentifierList Type ExpressionListOpt .)


state 139

    (60) TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN .

    SEMICOL         reduce using rule 60 (TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN .)


state 140

    (61) TypeSpecRep -> TypeSpecRep TypeSpec . SEMICOL

    SEMICOL         shift and go to state 197


state 141

    (65) AliasDecl -> IDENTIFIER EQUAL Type .

    SEMICOL         reduce using rule 65 (AliasDecl -> IDENTIFIER EQUAL Type .)


state 142

    (229) ImportSpecRep -> ImportSpecRep ImportSpec SEMICOL .

    RPAREN          reduce using rule 229 (ImportSpecRep -> ImportSpecRep ImportSpec SEMICOL .)
    DOT             reduce using rule 229 (ImportSpecRep -> ImportSpecRep ImportSpec SEMICOL .)
    IDENTIFIER      reduce using rule 229 (ImportSpecRep -> ImportSpecRep ImportSpec SEMICOL .)
    STRING          reduce using rule 229 (ImportSpecRep -> ImportSpecRep ImportSpec SEMICOL .)


state 143

    (51) ConstSpecRep -> ConstSpecRep ConstSpec SEMICOL .

    RPAREN          reduce using rule 51 (ConstSpecRep -> ConstSpecRep ConstSpec SEMICOL .)
    IDENTIFIER      reduce using rule 51 (ConstSpecRep -> ConstSpecRep ConstSpec SEMICOL .)


state 144

    (4) Type -> LPAREN Type RPAREN .

    RPAREN          reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    LPAREN          reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    EQUAL           reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    SEMICOL         reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    LBRACE          reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    COMMA           reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    STRING          reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    COLON           reduce using rule 4 (Type -> LPAREN Type RPAREN .)


state 145

    (54) TypeExprListOpt -> TypeOpt EQUAL ExpressionList .

    SEMICOL         reduce using rule 54 (TypeExprListOpt -> TypeOpt EQUAL ExpressionList .)


state 146

    (15) StructType -> STRUCT LBRACE FieldDeclRep . RBRACE
    (16) FieldDeclRep -> FieldDeclRep . FieldDecl SEMICOL
    (18) FieldDecl -> . IdentifierList Type TagOpt
    (56) IdentifierList -> . IDENTIFIER IdentifierRep

    RBRACE          shift and go to state 200
    IDENTIFIER      shift and go to state 34

    FieldDecl                      shift and go to state 198
    IdentifierList                 shift and go to state 199

state 147

    (17) FieldDeclRep -> epsilon .

    RBRACE          reduce using rule 17 (FieldDeclRep -> epsilon .)
    IDENTIFIER      reduce using rule 17 (FieldDeclRep -> epsilon .)


state 148

    (112) UnaryExpr -> UnaryOp UnaryExpr .

    OROR            reduce using rule 112 (UnaryExpr -> UnaryOp UnaryExpr .)
    AMPAMP          reduce using rule 112 (UnaryExpr -> UnaryOp UnaryExpr .)
    EQEQ            reduce using rule 112 (UnaryExpr -> UnaryOp UnaryExpr .)
    NOTEQ           reduce using rule 112 (UnaryExpr -> UnaryOp UnaryExpr .)
    LESS            reduce using rule 112 (UnaryExpr -> UnaryOp UnaryExpr .)
    GREAT           reduce using rule 112 (UnaryExpr -> UnaryOp UnaryExpr .)
    LEQ             reduce using rule 112 (UnaryExpr -> UnaryOp UnaryExpr .)
    GEQ             reduce using rule 112 (UnaryExpr -> UnaryOp UnaryExpr .)
    PLUS            reduce using rule 112 (UnaryExpr -> UnaryOp UnaryExpr .)
    MINUS           reduce using rule 112 (UnaryExpr -> UnaryOp UnaryExpr .)
    OR              reduce using rule 112 (UnaryExpr -> UnaryOp UnaryExpr .)
    CARET           reduce using rule 112 (UnaryExpr -> UnaryOp UnaryExpr .)
    TIMES           reduce using rule 112 (UnaryExpr -> UnaryOp UnaryExpr .)
    DIVIDE          reduce using rule 112 (UnaryExpr -> UnaryOp UnaryExpr .)
    MOD             reduce using rule 112 (UnaryExpr -> UnaryOp UnaryExpr .)
    AMPERS          reduce using rule 112 (UnaryExpr -> UnaryOp UnaryExpr .)
    LL              reduce using rule 112 (UnaryExpr -> UnaryOp UnaryExpr .)
    GG              reduce using rule 112 (UnaryExpr -> UnaryOp UnaryExpr .)
    AMPCAR          reduce using rule 112 (UnaryExpr -> UnaryOp UnaryExpr .)
    COMMA           reduce using rule 112 (UnaryExpr -> UnaryOp UnaryExpr .)
    SEMICOL         reduce using rule 112 (UnaryExpr -> UnaryOp UnaryExpr .)
    LBRACE          reduce using rule 112 (UnaryExpr -> UnaryOp UnaryExpr .)
    COLON           reduce using rule 112 (UnaryExpr -> UnaryOp UnaryExpr .)
    RBRACK          reduce using rule 112 (UnaryExpr -> UnaryOp UnaryExpr .)
    PLUSPLUS        reduce using rule 112 (UnaryExpr -> UnaryOp UnaryExpr .)
    MINUSMIN        reduce using rule 112 (UnaryExpr -> UnaryOp UnaryExpr .)
    PLUSEQ          reduce using rule 112 (UnaryExpr -> UnaryOp UnaryExpr .)
    MINUSEQ         reduce using rule 112 (UnaryExpr -> UnaryOp UnaryExpr .)
    TIMESEQ         reduce using rule 112 (UnaryExpr -> UnaryOp UnaryExpr .)
    DIVIDEEQ        reduce using rule 112 (UnaryExpr -> UnaryOp UnaryExpr .)
    MODEQ           reduce using rule 112 (UnaryExpr -> UnaryOp UnaryExpr .)
    AMPEQ           reduce using rule 112 (UnaryExpr -> UnaryOp UnaryExpr .)
    OREQ            reduce using rule 112 (UnaryExpr -> UnaryOp UnaryExpr .)
    CAREQ           reduce using rule 112 (UnaryExpr -> UnaryOp UnaryExpr .)
    LLEQ            reduce using rule 112 (UnaryExpr -> UnaryOp UnaryExpr .)
    GGEQ            reduce using rule 112 (UnaryExpr -> UnaryOp UnaryExpr .)
    EQUAL           reduce using rule 112 (UnaryExpr -> UnaryOp UnaryExpr .)
    RPAREN          reduce using rule 112 (UnaryExpr -> UnaryOp UnaryExpr .)


state 149

    (95) PrimaryExpr -> PrimaryExpr Index .

    DOT             reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    LBRACK          reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    LPAREN          reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    RPAREN          reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    OROR            reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    AMPAMP          reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    EQEQ            reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    NOTEQ           reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    LESS            reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    GREAT           reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    LEQ             reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    GEQ             reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    PLUS            reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    MINUS           reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    OR              reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    CARET           reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    TIMES           reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    DIVIDE          reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    MOD             reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    AMPERS          reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    LL              reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    GG              reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    AMPCAR          reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    COMMA           reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    COLON           reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    SEMICOL         reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    LBRACE          reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    RBRACK          reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    PLUSEQ          reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    MINUSEQ         reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    TIMESEQ         reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    DIVIDEEQ        reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    MODEQ           reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    AMPEQ           reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    OREQ            reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    CAREQ           reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    LLEQ            reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    GGEQ            reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    EQUAL           reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    PLUSPLUS        reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)
    MINUSMIN        reduce using rule 95 (PrimaryExpr -> PrimaryExpr Index .)


state 150

    (96) PrimaryExpr -> PrimaryExpr Slice .

    DOT             reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    LBRACK          reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    LPAREN          reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    RPAREN          reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    OROR            reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    AMPAMP          reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    EQEQ            reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    NOTEQ           reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    LESS            reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    GREAT           reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    LEQ             reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    GEQ             reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    PLUS            reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    MINUS           reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    OR              reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    CARET           reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    TIMES           reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    DIVIDE          reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    MOD             reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    AMPERS          reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    LL              reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    GG              reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    AMPCAR          reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    COMMA           reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    COLON           reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    SEMICOL         reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    LBRACE          reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    RBRACK          reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    PLUSEQ          reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    MINUSEQ         reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    TIMESEQ         reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    DIVIDEEQ        reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    MODEQ           reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    AMPEQ           reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    OREQ            reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    CAREQ           reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    LLEQ            reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    GGEQ            reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    EQUAL           reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    PLUSPLUS        reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)
    MINUSMIN        reduce using rule 96 (PrimaryExpr -> PrimaryExpr Slice .)


state 151

    (99) Index -> LBRACK . Expression RBRACK
    (100) Slice -> LBRACK . ExpressionOpt COLON ExpressionOpt RBRACK
    (107) Expression -> . UnaryExpr
    (108) Expression -> . Expression BinaryOp Expression
    (109) ExpressionOpt -> . Expression
    (110) ExpressionOpt -> . epsilon
    (111) UnaryExpr -> . PrimaryExpr
    (112) UnaryExpr -> . UnaryOp UnaryExpr
    (236) epsilon -> .
    (92) PrimaryExpr -> . Operand
    (93) PrimaryExpr -> . Conversion
    (94) PrimaryExpr -> . PrimaryExpr Selector
    (95) PrimaryExpr -> . PrimaryExpr Index
    (96) PrimaryExpr -> . PrimaryExpr Slice
    (97) PrimaryExpr -> . PrimaryExpr Arguments
    (135) UnaryOp -> . PLUS
    (136) UnaryOp -> . MINUS
    (137) UnaryOp -> . TIMES
    (138) UnaryOp -> . AMPERS
    (139) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (91) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (90) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . INTEGER
    (86) BasicLit -> . FLOAT
    (87) BasicLit -> . IMAGINARY
    (88) BasicLit -> . RUNE
    (89) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    COLON           reduce using rule 236 (epsilon -> .)
    PLUS            shift and go to state 101
    MINUS           shift and go to state 98
    TIMES           shift and go to state 107
    AMPERS          shift and go to state 113
    NOT             shift and go to state 108
    LPAREN          shift and go to state 110
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 112
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 105
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 92
    UnaryOp                        shift and go to state 93
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    Type                           shift and go to state 97
    OperandName                    shift and go to state 99
    BasicLit                       shift and go to state 100
    TypeName                       shift and go to state 56
    ExpressionOpt                  shift and go to state 201
    StructType                     shift and go to state 58
    epsilon                        shift and go to state 202
    UnaryExpr                      shift and go to state 106
    PrimaryExpr                    shift and go to state 94
    Expression                     shift and go to state 203
    PointerType                    shift and go to state 66
    TypeLit                        shift and go to state 55
    Operand                        shift and go to state 114
    FunctionType                   shift and go to state 67

state 152

    (94) PrimaryExpr -> PrimaryExpr Selector .

    DOT             reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    LBRACK          reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    LPAREN          reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    RPAREN          reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    OROR            reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    AMPAMP          reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    EQEQ            reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    NOTEQ           reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    LESS            reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    GREAT           reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    LEQ             reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    GEQ             reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    PLUS            reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    MINUS           reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    OR              reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    CARET           reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    TIMES           reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    DIVIDE          reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    MOD             reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    AMPERS          reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    LL              reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    GG              reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    AMPCAR          reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    COMMA           reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    COLON           reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    SEMICOL         reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    LBRACE          reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    RBRACK          reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    PLUSEQ          reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    MINUSEQ         reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    TIMESEQ         reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    DIVIDEEQ        reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    MODEQ           reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    AMPEQ           reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    OREQ            reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    CAREQ           reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    LLEQ            reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    GGEQ            reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    EQUAL           reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    PLUSPLUS        reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)
    MINUSMIN        reduce using rule 94 (PrimaryExpr -> PrimaryExpr Selector .)


state 153

    (97) PrimaryExpr -> PrimaryExpr Arguments .

    DOT             reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    LBRACK          reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    LPAREN          reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    RPAREN          reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    OROR            reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    AMPAMP          reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    EQEQ            reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    NOTEQ           reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    LESS            reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    GREAT           reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    LEQ             reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    GEQ             reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    PLUS            reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    MINUS           reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    OR              reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    CARET           reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    TIMES           reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    DIVIDE          reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    MOD             reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    AMPERS          reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    LL              reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    GG              reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    AMPCAR          reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    COMMA           reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    COLON           reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    SEMICOL         reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    LBRACE          reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    RBRACK          reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    PLUSEQ          reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    MINUSEQ         reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    TIMESEQ         reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    DIVIDEEQ        reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    MODEQ           reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    AMPEQ           reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    OREQ            reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    CAREQ           reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    LLEQ            reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    GGEQ            reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    EQUAL           reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    PLUSPLUS        reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)
    MINUSMIN        reduce using rule 97 (PrimaryExpr -> PrimaryExpr Arguments .)


state 154

    (101) Arguments -> LPAREN . ExpressionListTypeOpt RPAREN
    (102) ExpressionListTypeOpt -> . ExpressionList
    (103) ExpressionListTypeOpt -> . epsilon
    (104) ExpressionList -> . Expression ExpressionRep
    (236) epsilon -> .
    (107) Expression -> . UnaryExpr
    (108) Expression -> . Expression BinaryOp Expression
    (111) UnaryExpr -> . PrimaryExpr
    (112) UnaryExpr -> . UnaryOp UnaryExpr
    (92) PrimaryExpr -> . Operand
    (93) PrimaryExpr -> . Conversion
    (94) PrimaryExpr -> . PrimaryExpr Selector
    (95) PrimaryExpr -> . PrimaryExpr Index
    (96) PrimaryExpr -> . PrimaryExpr Slice
    (97) PrimaryExpr -> . PrimaryExpr Arguments
    (135) UnaryOp -> . PLUS
    (136) UnaryOp -> . MINUS
    (137) UnaryOp -> . TIMES
    (138) UnaryOp -> . AMPERS
    (139) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (91) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (90) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . INTEGER
    (86) BasicLit -> . FLOAT
    (87) BasicLit -> . IMAGINARY
    (88) BasicLit -> . RUNE
    (89) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    RPAREN          reduce using rule 236 (epsilon -> .)
    PLUS            shift and go to state 101
    MINUS           shift and go to state 98
    TIMES           shift and go to state 107
    AMPERS          shift and go to state 113
    NOT             shift and go to state 108
    LPAREN          shift and go to state 110
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 112
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 105
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    UnaryOp                        shift and go to state 93
    Conversion                     shift and go to state 92
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    Operand                        shift and go to state 114
    Type                           shift and go to state 97
    OperandName                    shift and go to state 99
    BasicLit                       shift and go to state 100
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    epsilon                        shift and go to state 204
    UnaryExpr                      shift and go to state 106
    ExpressionListTypeOpt          shift and go to state 206
    ExpressionList                 shift and go to state 205
    Expression                     shift and go to state 135
    PointerType                    shift and go to state 66
    TypeLit                        shift and go to state 55
    PrimaryExpr                    shift and go to state 94
    FunctionType                   shift and go to state 67

state 155

    (98) Selector -> DOT . IDENTIFIER

    IDENTIFIER      shift and go to state 207


state 156

    (91) Conversion -> Type LPAREN . Expression RPAREN
    (107) Expression -> . UnaryExpr
    (108) Expression -> . Expression BinaryOp Expression
    (111) UnaryExpr -> . PrimaryExpr
    (112) UnaryExpr -> . UnaryOp UnaryExpr
    (92) PrimaryExpr -> . Operand
    (93) PrimaryExpr -> . Conversion
    (94) PrimaryExpr -> . PrimaryExpr Selector
    (95) PrimaryExpr -> . PrimaryExpr Index
    (96) PrimaryExpr -> . PrimaryExpr Slice
    (97) PrimaryExpr -> . PrimaryExpr Arguments
    (135) UnaryOp -> . PLUS
    (136) UnaryOp -> . MINUS
    (137) UnaryOp -> . TIMES
    (138) UnaryOp -> . AMPERS
    (139) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (91) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (90) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . INTEGER
    (86) BasicLit -> . FLOAT
    (87) BasicLit -> . IMAGINARY
    (88) BasicLit -> . RUNE
    (89) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 101
    MINUS           shift and go to state 98
    TIMES           shift and go to state 107
    AMPERS          shift and go to state 113
    NOT             shift and go to state 108
    LPAREN          shift and go to state 110
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 112
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 105
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 92
    UnaryOp                        shift and go to state 93
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    Type                           shift and go to state 97
    OperandName                    shift and go to state 99
    BasicLit                       shift and go to state 100
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    UnaryExpr                      shift and go to state 106
    PrimaryExpr                    shift and go to state 94
    Expression                     shift and go to state 208
    PointerType                    shift and go to state 66
    TypeLit                        shift and go to state 55
    Operand                        shift and go to state 114
    FunctionType                   shift and go to state 67

state 157

    (12) ArrayType -> LBRACK ArrayLength RBRACK . ElementType
    (14) ElementType -> . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 61
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    TypeLit                        shift and go to state 55
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    ElementType                    shift and go to state 210
    Type                           shift and go to state 209

state 158

    (4) Type -> LPAREN Type . RPAREN
    (91) Conversion -> Type . LPAREN Expression RPAREN

    RPAREN          shift and go to state 144
    LPAREN          shift and go to state 156


state 159

    (4) Type -> LPAREN . Type RPAREN
    (83) Operand -> LPAREN . Expression RPAREN
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (107) Expression -> . UnaryExpr
    (108) Expression -> . Expression BinaryOp Expression
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (111) UnaryExpr -> . PrimaryExpr
    (112) UnaryExpr -> . UnaryOp UnaryExpr
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature
    (92) PrimaryExpr -> . Operand
    (93) PrimaryExpr -> . Conversion
    (94) PrimaryExpr -> . PrimaryExpr Selector
    (95) PrimaryExpr -> . PrimaryExpr Index
    (96) PrimaryExpr -> . PrimaryExpr Slice
    (97) PrimaryExpr -> . PrimaryExpr Arguments
    (135) UnaryOp -> . PLUS
    (136) UnaryOp -> . MINUS
    (137) UnaryOp -> . TIMES
    (138) UnaryOp -> . AMPERS
    (139) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (91) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (90) OperandName -> . IDENTIFIER
    (85) BasicLit -> . INTEGER
    (86) BasicLit -> . FLOAT
    (87) BasicLit -> . IMAGINARY
    (88) BasicLit -> . RUNE
    (89) BasicLit -> . STRING

    LPAREN          shift and go to state 159
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 211
    FUNC            shift and go to state 52
    PLUS            shift and go to state 101
    MINUS           shift and go to state 98
    AMPERS          shift and go to state 113
    NOT             shift and go to state 108
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 112
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 105

    Conversion                     shift and go to state 92
    UnaryOp                        shift and go to state 93
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    Type                           shift and go to state 158
    OperandName                    shift and go to state 99
    TypeLit                        shift and go to state 55
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    UnaryExpr                      shift and go to state 106
    PrimaryExpr                    shift and go to state 94
    Expression                     shift and go to state 160
    PointerType                    shift and go to state 66
    BasicLit                       shift and go to state 100
    Operand                        shift and go to state 114
    FunctionType                   shift and go to state 67

state 160

    (83) Operand -> LPAREN Expression . RPAREN
    (108) Expression -> Expression . BinaryOp Expression
    (113) BinaryOp -> . OROR
    (114) BinaryOp -> . AMPAMP
    (115) BinaryOp -> . RelOp
    (116) BinaryOp -> . AddOp
    (117) BinaryOp -> . MulOp
    (118) RelOp -> . EQEQ
    (119) RelOp -> . NOTEQ
    (120) RelOp -> . LESS
    (121) RelOp -> . GREAT
    (122) RelOp -> . LEQ
    (123) RelOp -> . GEQ
    (124) AddOp -> . PLUS
    (125) AddOp -> . MINUS
    (126) AddOp -> . OR
    (127) AddOp -> . CARET
    (128) MulOp -> . TIMES
    (129) MulOp -> . DIVIDE
    (130) MulOp -> . MOD
    (131) MulOp -> . AMPERS
    (132) MulOp -> . LL
    (133) MulOp -> . GG
    (134) MulOp -> . AMPCAR

    RPAREN          shift and go to state 212
    OROR            shift and go to state 161
    AMPAMP          shift and go to state 167
    EQEQ            shift and go to state 166
    NOTEQ           shift and go to state 172
    LESS            shift and go to state 165
    GREAT           shift and go to state 163
    LEQ             shift and go to state 181
    GEQ             shift and go to state 170
    PLUS            shift and go to state 173
    MINUS           shift and go to state 169
    OR              shift and go to state 182
    CARET           shift and go to state 162
    TIMES           shift and go to state 177
    DIVIDE          shift and go to state 176
    MOD             shift and go to state 183
    AMPERS          shift and go to state 180
    LL              shift and go to state 171
    GG              shift and go to state 178
    AMPCAR          shift and go to state 164

    AddOp                          shift and go to state 175
    MulOp                          shift and go to state 168
    RelOp                          shift and go to state 179
    BinaryOp                       shift and go to state 174

state 161

    (113) BinaryOp -> OROR .

    PLUS            reduce using rule 113 (BinaryOp -> OROR .)
    MINUS           reduce using rule 113 (BinaryOp -> OROR .)
    TIMES           reduce using rule 113 (BinaryOp -> OROR .)
    AMPERS          reduce using rule 113 (BinaryOp -> OROR .)
    NOT             reduce using rule 113 (BinaryOp -> OROR .)
    LPAREN          reduce using rule 113 (BinaryOp -> OROR .)
    IDENTIFIER      reduce using rule 113 (BinaryOp -> OROR .)
    INTEGER         reduce using rule 113 (BinaryOp -> OROR .)
    FLOAT           reduce using rule 113 (BinaryOp -> OROR .)
    IMAGINARY       reduce using rule 113 (BinaryOp -> OROR .)
    RUNE            reduce using rule 113 (BinaryOp -> OROR .)
    STRING          reduce using rule 113 (BinaryOp -> OROR .)
    TYPEX           reduce using rule 113 (BinaryOp -> OROR .)
    LBRACK          reduce using rule 113 (BinaryOp -> OROR .)
    STRUCT          reduce using rule 113 (BinaryOp -> OROR .)
    FUNC            reduce using rule 113 (BinaryOp -> OROR .)


state 162

    (127) AddOp -> CARET .

    PLUS            reduce using rule 127 (AddOp -> CARET .)
    MINUS           reduce using rule 127 (AddOp -> CARET .)
    TIMES           reduce using rule 127 (AddOp -> CARET .)
    AMPERS          reduce using rule 127 (AddOp -> CARET .)
    NOT             reduce using rule 127 (AddOp -> CARET .)
    LPAREN          reduce using rule 127 (AddOp -> CARET .)
    IDENTIFIER      reduce using rule 127 (AddOp -> CARET .)
    INTEGER         reduce using rule 127 (AddOp -> CARET .)
    FLOAT           reduce using rule 127 (AddOp -> CARET .)
    IMAGINARY       reduce using rule 127 (AddOp -> CARET .)
    RUNE            reduce using rule 127 (AddOp -> CARET .)
    STRING          reduce using rule 127 (AddOp -> CARET .)
    TYPEX           reduce using rule 127 (AddOp -> CARET .)
    LBRACK          reduce using rule 127 (AddOp -> CARET .)
    STRUCT          reduce using rule 127 (AddOp -> CARET .)
    FUNC            reduce using rule 127 (AddOp -> CARET .)


state 163

    (121) RelOp -> GREAT .

    PLUS            reduce using rule 121 (RelOp -> GREAT .)
    MINUS           reduce using rule 121 (RelOp -> GREAT .)
    TIMES           reduce using rule 121 (RelOp -> GREAT .)
    AMPERS          reduce using rule 121 (RelOp -> GREAT .)
    NOT             reduce using rule 121 (RelOp -> GREAT .)
    LPAREN          reduce using rule 121 (RelOp -> GREAT .)
    IDENTIFIER      reduce using rule 121 (RelOp -> GREAT .)
    INTEGER         reduce using rule 121 (RelOp -> GREAT .)
    FLOAT           reduce using rule 121 (RelOp -> GREAT .)
    IMAGINARY       reduce using rule 121 (RelOp -> GREAT .)
    RUNE            reduce using rule 121 (RelOp -> GREAT .)
    STRING          reduce using rule 121 (RelOp -> GREAT .)
    TYPEX           reduce using rule 121 (RelOp -> GREAT .)
    LBRACK          reduce using rule 121 (RelOp -> GREAT .)
    STRUCT          reduce using rule 121 (RelOp -> GREAT .)
    FUNC            reduce using rule 121 (RelOp -> GREAT .)


state 164

    (134) MulOp -> AMPCAR .

    PLUS            reduce using rule 134 (MulOp -> AMPCAR .)
    MINUS           reduce using rule 134 (MulOp -> AMPCAR .)
    TIMES           reduce using rule 134 (MulOp -> AMPCAR .)
    AMPERS          reduce using rule 134 (MulOp -> AMPCAR .)
    NOT             reduce using rule 134 (MulOp -> AMPCAR .)
    LPAREN          reduce using rule 134 (MulOp -> AMPCAR .)
    IDENTIFIER      reduce using rule 134 (MulOp -> AMPCAR .)
    INTEGER         reduce using rule 134 (MulOp -> AMPCAR .)
    FLOAT           reduce using rule 134 (MulOp -> AMPCAR .)
    IMAGINARY       reduce using rule 134 (MulOp -> AMPCAR .)
    RUNE            reduce using rule 134 (MulOp -> AMPCAR .)
    STRING          reduce using rule 134 (MulOp -> AMPCAR .)
    TYPEX           reduce using rule 134 (MulOp -> AMPCAR .)
    LBRACK          reduce using rule 134 (MulOp -> AMPCAR .)
    STRUCT          reduce using rule 134 (MulOp -> AMPCAR .)
    FUNC            reduce using rule 134 (MulOp -> AMPCAR .)


state 165

    (120) RelOp -> LESS .

    PLUS            reduce using rule 120 (RelOp -> LESS .)
    MINUS           reduce using rule 120 (RelOp -> LESS .)
    TIMES           reduce using rule 120 (RelOp -> LESS .)
    AMPERS          reduce using rule 120 (RelOp -> LESS .)
    NOT             reduce using rule 120 (RelOp -> LESS .)
    LPAREN          reduce using rule 120 (RelOp -> LESS .)
    IDENTIFIER      reduce using rule 120 (RelOp -> LESS .)
    INTEGER         reduce using rule 120 (RelOp -> LESS .)
    FLOAT           reduce using rule 120 (RelOp -> LESS .)
    IMAGINARY       reduce using rule 120 (RelOp -> LESS .)
    RUNE            reduce using rule 120 (RelOp -> LESS .)
    STRING          reduce using rule 120 (RelOp -> LESS .)
    TYPEX           reduce using rule 120 (RelOp -> LESS .)
    LBRACK          reduce using rule 120 (RelOp -> LESS .)
    STRUCT          reduce using rule 120 (RelOp -> LESS .)
    FUNC            reduce using rule 120 (RelOp -> LESS .)


state 166

    (118) RelOp -> EQEQ .

    PLUS            reduce using rule 118 (RelOp -> EQEQ .)
    MINUS           reduce using rule 118 (RelOp -> EQEQ .)
    TIMES           reduce using rule 118 (RelOp -> EQEQ .)
    AMPERS          reduce using rule 118 (RelOp -> EQEQ .)
    NOT             reduce using rule 118 (RelOp -> EQEQ .)
    LPAREN          reduce using rule 118 (RelOp -> EQEQ .)
    IDENTIFIER      reduce using rule 118 (RelOp -> EQEQ .)
    INTEGER         reduce using rule 118 (RelOp -> EQEQ .)
    FLOAT           reduce using rule 118 (RelOp -> EQEQ .)
    IMAGINARY       reduce using rule 118 (RelOp -> EQEQ .)
    RUNE            reduce using rule 118 (RelOp -> EQEQ .)
    STRING          reduce using rule 118 (RelOp -> EQEQ .)
    TYPEX           reduce using rule 118 (RelOp -> EQEQ .)
    LBRACK          reduce using rule 118 (RelOp -> EQEQ .)
    STRUCT          reduce using rule 118 (RelOp -> EQEQ .)
    FUNC            reduce using rule 118 (RelOp -> EQEQ .)


state 167

    (114) BinaryOp -> AMPAMP .

    PLUS            reduce using rule 114 (BinaryOp -> AMPAMP .)
    MINUS           reduce using rule 114 (BinaryOp -> AMPAMP .)
    TIMES           reduce using rule 114 (BinaryOp -> AMPAMP .)
    AMPERS          reduce using rule 114 (BinaryOp -> AMPAMP .)
    NOT             reduce using rule 114 (BinaryOp -> AMPAMP .)
    LPAREN          reduce using rule 114 (BinaryOp -> AMPAMP .)
    IDENTIFIER      reduce using rule 114 (BinaryOp -> AMPAMP .)
    INTEGER         reduce using rule 114 (BinaryOp -> AMPAMP .)
    FLOAT           reduce using rule 114 (BinaryOp -> AMPAMP .)
    IMAGINARY       reduce using rule 114 (BinaryOp -> AMPAMP .)
    RUNE            reduce using rule 114 (BinaryOp -> AMPAMP .)
    STRING          reduce using rule 114 (BinaryOp -> AMPAMP .)
    TYPEX           reduce using rule 114 (BinaryOp -> AMPAMP .)
    LBRACK          reduce using rule 114 (BinaryOp -> AMPAMP .)
    STRUCT          reduce using rule 114 (BinaryOp -> AMPAMP .)
    FUNC            reduce using rule 114 (BinaryOp -> AMPAMP .)


state 168

    (117) BinaryOp -> MulOp .

    PLUS            reduce using rule 117 (BinaryOp -> MulOp .)
    MINUS           reduce using rule 117 (BinaryOp -> MulOp .)
    TIMES           reduce using rule 117 (BinaryOp -> MulOp .)
    AMPERS          reduce using rule 117 (BinaryOp -> MulOp .)
    NOT             reduce using rule 117 (BinaryOp -> MulOp .)
    LPAREN          reduce using rule 117 (BinaryOp -> MulOp .)
    IDENTIFIER      reduce using rule 117 (BinaryOp -> MulOp .)
    INTEGER         reduce using rule 117 (BinaryOp -> MulOp .)
    FLOAT           reduce using rule 117 (BinaryOp -> MulOp .)
    IMAGINARY       reduce using rule 117 (BinaryOp -> MulOp .)
    RUNE            reduce using rule 117 (BinaryOp -> MulOp .)
    STRING          reduce using rule 117 (BinaryOp -> MulOp .)
    TYPEX           reduce using rule 117 (BinaryOp -> MulOp .)
    LBRACK          reduce using rule 117 (BinaryOp -> MulOp .)
    STRUCT          reduce using rule 117 (BinaryOp -> MulOp .)
    FUNC            reduce using rule 117 (BinaryOp -> MulOp .)


state 169

    (125) AddOp -> MINUS .

    PLUS            reduce using rule 125 (AddOp -> MINUS .)
    MINUS           reduce using rule 125 (AddOp -> MINUS .)
    TIMES           reduce using rule 125 (AddOp -> MINUS .)
    AMPERS          reduce using rule 125 (AddOp -> MINUS .)
    NOT             reduce using rule 125 (AddOp -> MINUS .)
    LPAREN          reduce using rule 125 (AddOp -> MINUS .)
    IDENTIFIER      reduce using rule 125 (AddOp -> MINUS .)
    INTEGER         reduce using rule 125 (AddOp -> MINUS .)
    FLOAT           reduce using rule 125 (AddOp -> MINUS .)
    IMAGINARY       reduce using rule 125 (AddOp -> MINUS .)
    RUNE            reduce using rule 125 (AddOp -> MINUS .)
    STRING          reduce using rule 125 (AddOp -> MINUS .)
    TYPEX           reduce using rule 125 (AddOp -> MINUS .)
    LBRACK          reduce using rule 125 (AddOp -> MINUS .)
    STRUCT          reduce using rule 125 (AddOp -> MINUS .)
    FUNC            reduce using rule 125 (AddOp -> MINUS .)


state 170

    (123) RelOp -> GEQ .

    PLUS            reduce using rule 123 (RelOp -> GEQ .)
    MINUS           reduce using rule 123 (RelOp -> GEQ .)
    TIMES           reduce using rule 123 (RelOp -> GEQ .)
    AMPERS          reduce using rule 123 (RelOp -> GEQ .)
    NOT             reduce using rule 123 (RelOp -> GEQ .)
    LPAREN          reduce using rule 123 (RelOp -> GEQ .)
    IDENTIFIER      reduce using rule 123 (RelOp -> GEQ .)
    INTEGER         reduce using rule 123 (RelOp -> GEQ .)
    FLOAT           reduce using rule 123 (RelOp -> GEQ .)
    IMAGINARY       reduce using rule 123 (RelOp -> GEQ .)
    RUNE            reduce using rule 123 (RelOp -> GEQ .)
    STRING          reduce using rule 123 (RelOp -> GEQ .)
    TYPEX           reduce using rule 123 (RelOp -> GEQ .)
    LBRACK          reduce using rule 123 (RelOp -> GEQ .)
    STRUCT          reduce using rule 123 (RelOp -> GEQ .)
    FUNC            reduce using rule 123 (RelOp -> GEQ .)


state 171

    (132) MulOp -> LL .

    PLUS            reduce using rule 132 (MulOp -> LL .)
    MINUS           reduce using rule 132 (MulOp -> LL .)
    TIMES           reduce using rule 132 (MulOp -> LL .)
    AMPERS          reduce using rule 132 (MulOp -> LL .)
    NOT             reduce using rule 132 (MulOp -> LL .)
    LPAREN          reduce using rule 132 (MulOp -> LL .)
    IDENTIFIER      reduce using rule 132 (MulOp -> LL .)
    INTEGER         reduce using rule 132 (MulOp -> LL .)
    FLOAT           reduce using rule 132 (MulOp -> LL .)
    IMAGINARY       reduce using rule 132 (MulOp -> LL .)
    RUNE            reduce using rule 132 (MulOp -> LL .)
    STRING          reduce using rule 132 (MulOp -> LL .)
    TYPEX           reduce using rule 132 (MulOp -> LL .)
    LBRACK          reduce using rule 132 (MulOp -> LL .)
    STRUCT          reduce using rule 132 (MulOp -> LL .)
    FUNC            reduce using rule 132 (MulOp -> LL .)


state 172

    (119) RelOp -> NOTEQ .

    PLUS            reduce using rule 119 (RelOp -> NOTEQ .)
    MINUS           reduce using rule 119 (RelOp -> NOTEQ .)
    TIMES           reduce using rule 119 (RelOp -> NOTEQ .)
    AMPERS          reduce using rule 119 (RelOp -> NOTEQ .)
    NOT             reduce using rule 119 (RelOp -> NOTEQ .)
    LPAREN          reduce using rule 119 (RelOp -> NOTEQ .)
    IDENTIFIER      reduce using rule 119 (RelOp -> NOTEQ .)
    INTEGER         reduce using rule 119 (RelOp -> NOTEQ .)
    FLOAT           reduce using rule 119 (RelOp -> NOTEQ .)
    IMAGINARY       reduce using rule 119 (RelOp -> NOTEQ .)
    RUNE            reduce using rule 119 (RelOp -> NOTEQ .)
    STRING          reduce using rule 119 (RelOp -> NOTEQ .)
    TYPEX           reduce using rule 119 (RelOp -> NOTEQ .)
    LBRACK          reduce using rule 119 (RelOp -> NOTEQ .)
    STRUCT          reduce using rule 119 (RelOp -> NOTEQ .)
    FUNC            reduce using rule 119 (RelOp -> NOTEQ .)


state 173

    (124) AddOp -> PLUS .

    PLUS            reduce using rule 124 (AddOp -> PLUS .)
    MINUS           reduce using rule 124 (AddOp -> PLUS .)
    TIMES           reduce using rule 124 (AddOp -> PLUS .)
    AMPERS          reduce using rule 124 (AddOp -> PLUS .)
    NOT             reduce using rule 124 (AddOp -> PLUS .)
    LPAREN          reduce using rule 124 (AddOp -> PLUS .)
    IDENTIFIER      reduce using rule 124 (AddOp -> PLUS .)
    INTEGER         reduce using rule 124 (AddOp -> PLUS .)
    FLOAT           reduce using rule 124 (AddOp -> PLUS .)
    IMAGINARY       reduce using rule 124 (AddOp -> PLUS .)
    RUNE            reduce using rule 124 (AddOp -> PLUS .)
    STRING          reduce using rule 124 (AddOp -> PLUS .)
    TYPEX           reduce using rule 124 (AddOp -> PLUS .)
    LBRACK          reduce using rule 124 (AddOp -> PLUS .)
    STRUCT          reduce using rule 124 (AddOp -> PLUS .)
    FUNC            reduce using rule 124 (AddOp -> PLUS .)


state 174

    (108) Expression -> Expression BinaryOp . Expression
    (107) Expression -> . UnaryExpr
    (108) Expression -> . Expression BinaryOp Expression
    (111) UnaryExpr -> . PrimaryExpr
    (112) UnaryExpr -> . UnaryOp UnaryExpr
    (92) PrimaryExpr -> . Operand
    (93) PrimaryExpr -> . Conversion
    (94) PrimaryExpr -> . PrimaryExpr Selector
    (95) PrimaryExpr -> . PrimaryExpr Index
    (96) PrimaryExpr -> . PrimaryExpr Slice
    (97) PrimaryExpr -> . PrimaryExpr Arguments
    (135) UnaryOp -> . PLUS
    (136) UnaryOp -> . MINUS
    (137) UnaryOp -> . TIMES
    (138) UnaryOp -> . AMPERS
    (139) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (91) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (90) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . INTEGER
    (86) BasicLit -> . FLOAT
    (87) BasicLit -> . IMAGINARY
    (88) BasicLit -> . RUNE
    (89) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 101
    MINUS           shift and go to state 98
    TIMES           shift and go to state 107
    AMPERS          shift and go to state 113
    NOT             shift and go to state 108
    LPAREN          shift and go to state 110
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 112
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 105
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 92
    UnaryOp                        shift and go to state 93
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    Type                           shift and go to state 97
    OperandName                    shift and go to state 99
    BasicLit                       shift and go to state 100
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    UnaryExpr                      shift and go to state 106
    PrimaryExpr                    shift and go to state 94
    Expression                     shift and go to state 213
    PointerType                    shift and go to state 66
    TypeLit                        shift and go to state 55
    Operand                        shift and go to state 114
    FunctionType                   shift and go to state 67

state 175

    (116) BinaryOp -> AddOp .

    PLUS            reduce using rule 116 (BinaryOp -> AddOp .)
    MINUS           reduce using rule 116 (BinaryOp -> AddOp .)
    TIMES           reduce using rule 116 (BinaryOp -> AddOp .)
    AMPERS          reduce using rule 116 (BinaryOp -> AddOp .)
    NOT             reduce using rule 116 (BinaryOp -> AddOp .)
    LPAREN          reduce using rule 116 (BinaryOp -> AddOp .)
    IDENTIFIER      reduce using rule 116 (BinaryOp -> AddOp .)
    INTEGER         reduce using rule 116 (BinaryOp -> AddOp .)
    FLOAT           reduce using rule 116 (BinaryOp -> AddOp .)
    IMAGINARY       reduce using rule 116 (BinaryOp -> AddOp .)
    RUNE            reduce using rule 116 (BinaryOp -> AddOp .)
    STRING          reduce using rule 116 (BinaryOp -> AddOp .)
    TYPEX           reduce using rule 116 (BinaryOp -> AddOp .)
    LBRACK          reduce using rule 116 (BinaryOp -> AddOp .)
    STRUCT          reduce using rule 116 (BinaryOp -> AddOp .)
    FUNC            reduce using rule 116 (BinaryOp -> AddOp .)


state 176

    (129) MulOp -> DIVIDE .

    PLUS            reduce using rule 129 (MulOp -> DIVIDE .)
    MINUS           reduce using rule 129 (MulOp -> DIVIDE .)
    TIMES           reduce using rule 129 (MulOp -> DIVIDE .)
    AMPERS          reduce using rule 129 (MulOp -> DIVIDE .)
    NOT             reduce using rule 129 (MulOp -> DIVIDE .)
    LPAREN          reduce using rule 129 (MulOp -> DIVIDE .)
    IDENTIFIER      reduce using rule 129 (MulOp -> DIVIDE .)
    INTEGER         reduce using rule 129 (MulOp -> DIVIDE .)
    FLOAT           reduce using rule 129 (MulOp -> DIVIDE .)
    IMAGINARY       reduce using rule 129 (MulOp -> DIVIDE .)
    RUNE            reduce using rule 129 (MulOp -> DIVIDE .)
    STRING          reduce using rule 129 (MulOp -> DIVIDE .)
    TYPEX           reduce using rule 129 (MulOp -> DIVIDE .)
    LBRACK          reduce using rule 129 (MulOp -> DIVIDE .)
    STRUCT          reduce using rule 129 (MulOp -> DIVIDE .)
    FUNC            reduce using rule 129 (MulOp -> DIVIDE .)


state 177

    (128) MulOp -> TIMES .

    PLUS            reduce using rule 128 (MulOp -> TIMES .)
    MINUS           reduce using rule 128 (MulOp -> TIMES .)
    TIMES           reduce using rule 128 (MulOp -> TIMES .)
    AMPERS          reduce using rule 128 (MulOp -> TIMES .)
    NOT             reduce using rule 128 (MulOp -> TIMES .)
    LPAREN          reduce using rule 128 (MulOp -> TIMES .)
    IDENTIFIER      reduce using rule 128 (MulOp -> TIMES .)
    INTEGER         reduce using rule 128 (MulOp -> TIMES .)
    FLOAT           reduce using rule 128 (MulOp -> TIMES .)
    IMAGINARY       reduce using rule 128 (MulOp -> TIMES .)
    RUNE            reduce using rule 128 (MulOp -> TIMES .)
    STRING          reduce using rule 128 (MulOp -> TIMES .)
    TYPEX           reduce using rule 128 (MulOp -> TIMES .)
    LBRACK          reduce using rule 128 (MulOp -> TIMES .)
    STRUCT          reduce using rule 128 (MulOp -> TIMES .)
    FUNC            reduce using rule 128 (MulOp -> TIMES .)


state 178

    (133) MulOp -> GG .

    PLUS            reduce using rule 133 (MulOp -> GG .)
    MINUS           reduce using rule 133 (MulOp -> GG .)
    TIMES           reduce using rule 133 (MulOp -> GG .)
    AMPERS          reduce using rule 133 (MulOp -> GG .)
    NOT             reduce using rule 133 (MulOp -> GG .)
    LPAREN          reduce using rule 133 (MulOp -> GG .)
    IDENTIFIER      reduce using rule 133 (MulOp -> GG .)
    INTEGER         reduce using rule 133 (MulOp -> GG .)
    FLOAT           reduce using rule 133 (MulOp -> GG .)
    IMAGINARY       reduce using rule 133 (MulOp -> GG .)
    RUNE            reduce using rule 133 (MulOp -> GG .)
    STRING          reduce using rule 133 (MulOp -> GG .)
    TYPEX           reduce using rule 133 (MulOp -> GG .)
    LBRACK          reduce using rule 133 (MulOp -> GG .)
    STRUCT          reduce using rule 133 (MulOp -> GG .)
    FUNC            reduce using rule 133 (MulOp -> GG .)


state 179

    (115) BinaryOp -> RelOp .

    PLUS            reduce using rule 115 (BinaryOp -> RelOp .)
    MINUS           reduce using rule 115 (BinaryOp -> RelOp .)
    TIMES           reduce using rule 115 (BinaryOp -> RelOp .)
    AMPERS          reduce using rule 115 (BinaryOp -> RelOp .)
    NOT             reduce using rule 115 (BinaryOp -> RelOp .)
    LPAREN          reduce using rule 115 (BinaryOp -> RelOp .)
    IDENTIFIER      reduce using rule 115 (BinaryOp -> RelOp .)
    INTEGER         reduce using rule 115 (BinaryOp -> RelOp .)
    FLOAT           reduce using rule 115 (BinaryOp -> RelOp .)
    IMAGINARY       reduce using rule 115 (BinaryOp -> RelOp .)
    RUNE            reduce using rule 115 (BinaryOp -> RelOp .)
    STRING          reduce using rule 115 (BinaryOp -> RelOp .)
    TYPEX           reduce using rule 115 (BinaryOp -> RelOp .)
    LBRACK          reduce using rule 115 (BinaryOp -> RelOp .)
    STRUCT          reduce using rule 115 (BinaryOp -> RelOp .)
    FUNC            reduce using rule 115 (BinaryOp -> RelOp .)


state 180

    (131) MulOp -> AMPERS .

    PLUS            reduce using rule 131 (MulOp -> AMPERS .)
    MINUS           reduce using rule 131 (MulOp -> AMPERS .)
    TIMES           reduce using rule 131 (MulOp -> AMPERS .)
    AMPERS          reduce using rule 131 (MulOp -> AMPERS .)
    NOT             reduce using rule 131 (MulOp -> AMPERS .)
    LPAREN          reduce using rule 131 (MulOp -> AMPERS .)
    IDENTIFIER      reduce using rule 131 (MulOp -> AMPERS .)
    INTEGER         reduce using rule 131 (MulOp -> AMPERS .)
    FLOAT           reduce using rule 131 (MulOp -> AMPERS .)
    IMAGINARY       reduce using rule 131 (MulOp -> AMPERS .)
    RUNE            reduce using rule 131 (MulOp -> AMPERS .)
    STRING          reduce using rule 131 (MulOp -> AMPERS .)
    TYPEX           reduce using rule 131 (MulOp -> AMPERS .)
    LBRACK          reduce using rule 131 (MulOp -> AMPERS .)
    STRUCT          reduce using rule 131 (MulOp -> AMPERS .)
    FUNC            reduce using rule 131 (MulOp -> AMPERS .)


state 181

    (122) RelOp -> LEQ .

    PLUS            reduce using rule 122 (RelOp -> LEQ .)
    MINUS           reduce using rule 122 (RelOp -> LEQ .)
    TIMES           reduce using rule 122 (RelOp -> LEQ .)
    AMPERS          reduce using rule 122 (RelOp -> LEQ .)
    NOT             reduce using rule 122 (RelOp -> LEQ .)
    LPAREN          reduce using rule 122 (RelOp -> LEQ .)
    IDENTIFIER      reduce using rule 122 (RelOp -> LEQ .)
    INTEGER         reduce using rule 122 (RelOp -> LEQ .)
    FLOAT           reduce using rule 122 (RelOp -> LEQ .)
    IMAGINARY       reduce using rule 122 (RelOp -> LEQ .)
    RUNE            reduce using rule 122 (RelOp -> LEQ .)
    STRING          reduce using rule 122 (RelOp -> LEQ .)
    TYPEX           reduce using rule 122 (RelOp -> LEQ .)
    LBRACK          reduce using rule 122 (RelOp -> LEQ .)
    STRUCT          reduce using rule 122 (RelOp -> LEQ .)
    FUNC            reduce using rule 122 (RelOp -> LEQ .)


state 182

    (126) AddOp -> OR .

    PLUS            reduce using rule 126 (AddOp -> OR .)
    MINUS           reduce using rule 126 (AddOp -> OR .)
    TIMES           reduce using rule 126 (AddOp -> OR .)
    AMPERS          reduce using rule 126 (AddOp -> OR .)
    NOT             reduce using rule 126 (AddOp -> OR .)
    LPAREN          reduce using rule 126 (AddOp -> OR .)
    IDENTIFIER      reduce using rule 126 (AddOp -> OR .)
    INTEGER         reduce using rule 126 (AddOp -> OR .)
    FLOAT           reduce using rule 126 (AddOp -> OR .)
    IMAGINARY       reduce using rule 126 (AddOp -> OR .)
    RUNE            reduce using rule 126 (AddOp -> OR .)
    STRING          reduce using rule 126 (AddOp -> OR .)
    TYPEX           reduce using rule 126 (AddOp -> OR .)
    LBRACK          reduce using rule 126 (AddOp -> OR .)
    STRUCT          reduce using rule 126 (AddOp -> OR .)
    FUNC            reduce using rule 126 (AddOp -> OR .)


state 183

    (130) MulOp -> MOD .

    PLUS            reduce using rule 130 (MulOp -> MOD .)
    MINUS           reduce using rule 130 (MulOp -> MOD .)
    TIMES           reduce using rule 130 (MulOp -> MOD .)
    AMPERS          reduce using rule 130 (MulOp -> MOD .)
    NOT             reduce using rule 130 (MulOp -> MOD .)
    LPAREN          reduce using rule 130 (MulOp -> MOD .)
    IDENTIFIER      reduce using rule 130 (MulOp -> MOD .)
    INTEGER         reduce using rule 130 (MulOp -> MOD .)
    FLOAT           reduce using rule 130 (MulOp -> MOD .)
    IMAGINARY       reduce using rule 130 (MulOp -> MOD .)
    RUNE            reduce using rule 130 (MulOp -> MOD .)
    STRING          reduce using rule 130 (MulOp -> MOD .)
    TYPEX           reduce using rule 130 (MulOp -> MOD .)
    LBRACK          reduce using rule 130 (MulOp -> MOD .)
    STRUCT          reduce using rule 130 (MulOp -> MOD .)
    FUNC            reduce using rule 130 (MulOp -> MOD .)


state 184

    (57) IdentifierRep -> IdentifierRep COMMA IDENTIFIER .

    COMMA           reduce using rule 57 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    LPAREN          reduce using rule 57 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    TYPEX           reduce using rule 57 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    LBRACK          reduce using rule 57 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    STRUCT          reduce using rule 57 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    TIMES           reduce using rule 57 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    FUNC            reduce using rule 57 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    EQUAL           reduce using rule 57 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    SEMICOL         reduce using rule 57 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)


state 185

    (4) Type -> LPAREN Type . RPAREN
    (33) ParametersList -> Type .
    (39) ParameterDecl -> Type .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 144
    COMMA           reduce using rule 39 (ParameterDecl -> Type .)

  ! RPAREN          [ reduce using rule 33 (ParametersList -> Type .) ]


state 186

    (41) StatementList -> StatementRep .
    (42) StatementRep -> StatementRep . Statement SEMICOL
    (140) Statement -> . Declaration
    (141) Statement -> . LabeledStmt
    (142) Statement -> . SimpleStmt
    (143) Statement -> . ReturnStmt
    (144) Statement -> . BreakStmt
    (145) Statement -> . ContinueStmt
    (146) Statement -> . GotoStmt
    (147) Statement -> . Block
    (148) Statement -> . IfStmt
    (149) Statement -> . SwitchStmt
    (150) Statement -> . ForStmt
    (44) Declaration -> . ConstDecl
    (45) Declaration -> . TypeDecl
    (46) Declaration -> . VarDecl
    (156) LabeledStmt -> . Label COLON Statement
    (151) SimpleStmt -> . epsilon
    (152) SimpleStmt -> . ExpressionStmt
    (153) SimpleStmt -> . IncDecStmt
    (154) SimpleStmt -> . Assignment
    (155) SimpleStmt -> . ShortVarDecl
    (212) ReturnStmt -> . RETURN ExpressionListPureOpt
    (215) BreakStmt -> . BREAK LabelOpt
    (216) ContinueStmt -> . CONTINUE LabelOpt
    (219) GotoStmt -> . GOTO Label
    (40) Block -> . LBRACE StatementList RBRACE
    (174) IfStmt -> . IF Expression Block ElseOpt
    (180) SwitchStmt -> . ExprSwitchStmt
    (181) SwitchStmt -> . TypeSwitchStmt
    (200) ForStmt -> . FOR ConditionBlockOpt Block
    (49) ConstDecl -> . CONST ConstSpec
    (50) ConstDecl -> . CONST LPAREN ConstSpecRep RPAREN
    (59) TypeDecl -> . TYPE TypeSpec
    (60) TypeDecl -> . TYPE LPAREN TypeSpecRep RPAREN
    (67) VarDecl -> . VAR VarSpec
    (68) VarDecl -> . VAR LPAREN VarSpecRep RPAREN
    (157) Label -> . IDENTIFIER
    (236) epsilon -> .
    (158) ExpressionStmt -> . Expression
    (159) IncDecStmt -> . Expression PLUSPLUS
    (160) IncDecStmt -> . Expression MINUSMIN
    (161) Assignment -> . ExpressionList assign_op ExpressionList
    (75) ShortVarDecl -> . IDENTIFIER COLONEQ Expression
    (182) ExprSwitchStmt -> . SWITCH ExpressionOpt LBRACE ExprCaseClauseRep RBRACE
    (188) TypeSwitchStmt -> . SWITCH SimpleStmtOpt TypeSwitchGuard LBRACE TypeCaseClauseOpt RBRACE
    (107) Expression -> . UnaryExpr
    (108) Expression -> . Expression BinaryOp Expression
    (104) ExpressionList -> . Expression ExpressionRep
    (111) UnaryExpr -> . PrimaryExpr
    (112) UnaryExpr -> . UnaryOp UnaryExpr
    (92) PrimaryExpr -> . Operand
    (93) PrimaryExpr -> . Conversion
    (94) PrimaryExpr -> . PrimaryExpr Selector
    (95) PrimaryExpr -> . PrimaryExpr Index
    (96) PrimaryExpr -> . PrimaryExpr Slice
    (97) PrimaryExpr -> . PrimaryExpr Arguments
    (135) UnaryOp -> . PLUS
    (136) UnaryOp -> . MINUS
    (137) UnaryOp -> . TIMES
    (138) UnaryOp -> . AMPERS
    (139) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (91) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (90) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . INTEGER
    (86) BasicLit -> . FLOAT
    (87) BasicLit -> . IMAGINARY
    (88) BasicLit -> . RUNE
    (89) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    RBRACE          reduce using rule 41 (StatementList -> StatementRep .)
    CASE            reduce using rule 41 (StatementList -> StatementRep .)
    DEFAULT         reduce using rule 41 (StatementList -> StatementRep .)
    RETURN          shift and go to state 220
    BREAK           shift and go to state 236
    CONTINUE        shift and go to state 229
    GOTO            shift and go to state 240
    LBRACE          shift and go to state 123
    IF              shift and go to state 242
    FOR             shift and go to state 226
    CONST           shift and go to state 14
    TYPE            shift and go to state 23
    VAR             shift and go to state 21
    IDENTIFIER      shift and go to state 232
    SEMICOL         reduce using rule 236 (epsilon -> .)
    SWITCH          shift and go to state 230
    PLUS            shift and go to state 101
    MINUS           shift and go to state 98
    TIMES           shift and go to state 107
    AMPERS          shift and go to state 113
    NOT             shift and go to state 108
    LPAREN          shift and go to state 110
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 112
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 105
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    UnaryOp                        shift and go to state 93
    ContinueStmt                   shift and go to state 214
    Conversion                     shift and go to state 92
    SimpleStmt                     shift and go to state 238
    Label                          shift and go to state 221
    ExpressionStmt                 shift and go to state 215
    PointerType                    shift and go to state 66
    ForStmt                        shift and go to state 239
    ExprSwitchStmt                 shift and go to state 222
    Statement                      shift and go to state 216
    Type                           shift and go to state 97
    IfStmt                         shift and go to state 223
    OperandName                    shift and go to state 99
    ArrayType                      shift and go to state 53
    Assignment                     shift and go to state 217
    TypeName                       shift and go to state 56
    IncDecStmt                     shift and go to state 224
    Declaration                    shift and go to state 231
    FunctionType                   shift and go to state 67
    GotoStmt                       shift and go to state 225
    StructType                     shift and go to state 58
    TypeDecl                       shift and go to state 19
    LabeledStmt                    shift and go to state 218
    epsilon                        shift and go to state 233
    UnaryExpr                      shift and go to state 106
    Operand                        shift and go to state 114
    ExpressionList                 shift and go to state 234
    Literal                        shift and go to state 95
    Expression                     shift and go to state 235
    ShortVarDecl                   shift and go to state 241
    Block                          shift and go to state 227
    TypeSwitchStmt                 shift and go to state 219
    BreakStmt                      shift and go to state 243
    SwitchStmt                     shift and go to state 228
    VarDecl                        shift and go to state 22
    TypeLit                        shift and go to state 55
    BasicLit                       shift and go to state 100
    PrimaryExpr                    shift and go to state 94
    ReturnStmt                     shift and go to state 237
    ConstDecl                      shift and go to state 18

state 187

    (43) StatementRep -> epsilon .

    RETURN          reduce using rule 43 (StatementRep -> epsilon .)
    BREAK           reduce using rule 43 (StatementRep -> epsilon .)
    CONTINUE        reduce using rule 43 (StatementRep -> epsilon .)
    GOTO            reduce using rule 43 (StatementRep -> epsilon .)
    LBRACE          reduce using rule 43 (StatementRep -> epsilon .)
    IF              reduce using rule 43 (StatementRep -> epsilon .)
    FOR             reduce using rule 43 (StatementRep -> epsilon .)
    CONST           reduce using rule 43 (StatementRep -> epsilon .)
    TYPE            reduce using rule 43 (StatementRep -> epsilon .)
    VAR             reduce using rule 43 (StatementRep -> epsilon .)
    IDENTIFIER      reduce using rule 43 (StatementRep -> epsilon .)
    SWITCH          reduce using rule 43 (StatementRep -> epsilon .)
    PLUS            reduce using rule 43 (StatementRep -> epsilon .)
    MINUS           reduce using rule 43 (StatementRep -> epsilon .)
    TIMES           reduce using rule 43 (StatementRep -> epsilon .)
    AMPERS          reduce using rule 43 (StatementRep -> epsilon .)
    NOT             reduce using rule 43 (StatementRep -> epsilon .)
    LPAREN          reduce using rule 43 (StatementRep -> epsilon .)
    INTEGER         reduce using rule 43 (StatementRep -> epsilon .)
    FLOAT           reduce using rule 43 (StatementRep -> epsilon .)
    IMAGINARY       reduce using rule 43 (StatementRep -> epsilon .)
    RUNE            reduce using rule 43 (StatementRep -> epsilon .)
    STRING          reduce using rule 43 (StatementRep -> epsilon .)
    TYPEX           reduce using rule 43 (StatementRep -> epsilon .)
    LBRACK          reduce using rule 43 (StatementRep -> epsilon .)
    STRUCT          reduce using rule 43 (StatementRep -> epsilon .)
    FUNC            reduce using rule 43 (StatementRep -> epsilon .)
    SEMICOL         reduce using rule 43 (StatementRep -> epsilon .)
    RBRACE          reduce using rule 43 (StatementRep -> epsilon .)
    CASE            reduce using rule 43 (StatementRep -> epsilon .)
    DEFAULT         reduce using rule 43 (StatementRep -> epsilon .)


state 188

    (40) Block -> LBRACE StatementList . RBRACE

    RBRACE          shift and go to state 244


state 189

    (30) Parameters -> LPAREN ParameterListOpt RPAREN .

    LPAREN          reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    TYPEX           reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    LBRACK          reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    STRUCT          reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    TIMES           reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    FUNC            reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    EQUAL           reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    SEMICOL         reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    RPAREN          reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    LBRACE          reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    COMMA           reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    STRING          reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    COLON           reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)


state 190

    (34) ParametersList -> IdentifierList Type .
    (38) ParameterDecl -> IdentifierList Type .

    RPAREN          reduce using rule 34 (ParametersList -> IdentifierList Type .)
    COMMA           reduce using rule 38 (ParameterDecl -> IdentifierList Type .)


state 191

    (36) ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA . ParameterDecl
    (38) ParameterDecl -> . IdentifierList Type
    (39) ParameterDecl -> . Type
    (56) IdentifierList -> . IDENTIFIER IdentifierRep
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    IDENTIFIER      shift and go to state 34
    LPAREN          shift and go to state 61
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    ParameterDecl                  shift and go to state 247
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    TypeLit                        shift and go to state 55
    IdentifierList                 shift and go to state 245
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    Type                           shift and go to state 246

state 192

    (37) ParameterDeclCommaRep -> ParameterDecl COMMA . ParameterDecl
    (38) ParameterDecl -> . IdentifierList Type
    (39) ParameterDecl -> . Type
    (56) IdentifierList -> . IDENTIFIER IdentifierRep
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    IDENTIFIER      shift and go to state 34
    LPAREN          shift and go to state 61
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    TypeLit                        shift and go to state 55
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    IdentifierList                 shift and go to state 245
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    Type                           shift and go to state 246
    ParameterDecl                  shift and go to state 248

state 193

    (69) VarSpecRep -> VarSpecRep VarSpec SEMICOL .

    RPAREN          reduce using rule 69 (VarSpecRep -> VarSpecRep VarSpec SEMICOL .)
    IDENTIFIER      reduce using rule 69 (VarSpecRep -> VarSpecRep VarSpec SEMICOL .)


state 194

    (104) ExpressionList -> Expression ExpressionRep .
    (105) ExpressionRep -> ExpressionRep . COMMA Expression

    PLUSEQ          reduce using rule 104 (ExpressionList -> Expression ExpressionRep .)
    MINUSEQ         reduce using rule 104 (ExpressionList -> Expression ExpressionRep .)
    TIMESEQ         reduce using rule 104 (ExpressionList -> Expression ExpressionRep .)
    DIVIDEEQ        reduce using rule 104 (ExpressionList -> Expression ExpressionRep .)
    MODEQ           reduce using rule 104 (ExpressionList -> Expression ExpressionRep .)
    AMPEQ           reduce using rule 104 (ExpressionList -> Expression ExpressionRep .)
    OREQ            reduce using rule 104 (ExpressionList -> Expression ExpressionRep .)
    CAREQ           reduce using rule 104 (ExpressionList -> Expression ExpressionRep .)
    LLEQ            reduce using rule 104 (ExpressionList -> Expression ExpressionRep .)
    GGEQ            reduce using rule 104 (ExpressionList -> Expression ExpressionRep .)
    EQUAL           reduce using rule 104 (ExpressionList -> Expression ExpressionRep .)
    SEMICOL         reduce using rule 104 (ExpressionList -> Expression ExpressionRep .)
    RPAREN          reduce using rule 104 (ExpressionList -> Expression ExpressionRep .)
    LBRACE          reduce using rule 104 (ExpressionList -> Expression ExpressionRep .)
    COLON           reduce using rule 104 (ExpressionList -> Expression ExpressionRep .)
    COMMA           shift and go to state 249


state 195

    (106) ExpressionRep -> epsilon .

    COMMA           reduce using rule 106 (ExpressionRep -> epsilon .)
    SEMICOL         reduce using rule 106 (ExpressionRep -> epsilon .)
    RPAREN          reduce using rule 106 (ExpressionRep -> epsilon .)
    LBRACE          reduce using rule 106 (ExpressionRep -> epsilon .)
    COLON           reduce using rule 106 (ExpressionRep -> epsilon .)
    PLUSEQ          reduce using rule 106 (ExpressionRep -> epsilon .)
    MINUSEQ         reduce using rule 106 (ExpressionRep -> epsilon .)
    TIMESEQ         reduce using rule 106 (ExpressionRep -> epsilon .)
    DIVIDEEQ        reduce using rule 106 (ExpressionRep -> epsilon .)
    MODEQ           reduce using rule 106 (ExpressionRep -> epsilon .)
    AMPEQ           reduce using rule 106 (ExpressionRep -> epsilon .)
    OREQ            reduce using rule 106 (ExpressionRep -> epsilon .)
    CAREQ           reduce using rule 106 (ExpressionRep -> epsilon .)
    LLEQ            reduce using rule 106 (ExpressionRep -> epsilon .)
    GGEQ            reduce using rule 106 (ExpressionRep -> epsilon .)
    EQUAL           reduce using rule 106 (ExpressionRep -> epsilon .)


state 196

    (73) ExpressionListOpt -> EQUAL ExpressionList .

    SEMICOL         reduce using rule 73 (ExpressionListOpt -> EQUAL ExpressionList .)


state 197

    (61) TypeSpecRep -> TypeSpecRep TypeSpec SEMICOL .

    RPAREN          reduce using rule 61 (TypeSpecRep -> TypeSpecRep TypeSpec SEMICOL .)
    IDENTIFIER      reduce using rule 61 (TypeSpecRep -> TypeSpecRep TypeSpec SEMICOL .)


state 198

    (16) FieldDeclRep -> FieldDeclRep FieldDecl . SEMICOL

    SEMICOL         shift and go to state 250


state 199

    (18) FieldDecl -> IdentifierList . Type TagOpt
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 61
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    Type                           shift and go to state 251
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    TypeLit                        shift and go to state 55

state 200

    (15) StructType -> STRUCT LBRACE FieldDeclRep RBRACE .

    LPAREN          reduce using rule 15 (StructType -> STRUCT LBRACE FieldDeclRep RBRACE .)
    COMMA           reduce using rule 15 (StructType -> STRUCT LBRACE FieldDeclRep RBRACE .)
    COLON           reduce using rule 15 (StructType -> STRUCT LBRACE FieldDeclRep RBRACE .)
    EQUAL           reduce using rule 15 (StructType -> STRUCT LBRACE FieldDeclRep RBRACE .)
    SEMICOL         reduce using rule 15 (StructType -> STRUCT LBRACE FieldDeclRep RBRACE .)
    RPAREN          reduce using rule 15 (StructType -> STRUCT LBRACE FieldDeclRep RBRACE .)
    LBRACE          reduce using rule 15 (StructType -> STRUCT LBRACE FieldDeclRep RBRACE .)
    STRING          reduce using rule 15 (StructType -> STRUCT LBRACE FieldDeclRep RBRACE .)


state 201

    (100) Slice -> LBRACK ExpressionOpt . COLON ExpressionOpt RBRACK

    COLON           shift and go to state 252


state 202

    (110) ExpressionOpt -> epsilon .

    COLON           reduce using rule 110 (ExpressionOpt -> epsilon .)
    RBRACK          reduce using rule 110 (ExpressionOpt -> epsilon .)


state 203

    (99) Index -> LBRACK Expression . RBRACK
    (108) Expression -> Expression . BinaryOp Expression
    (109) ExpressionOpt -> Expression .
    (113) BinaryOp -> . OROR
    (114) BinaryOp -> . AMPAMP
    (115) BinaryOp -> . RelOp
    (116) BinaryOp -> . AddOp
    (117) BinaryOp -> . MulOp
    (118) RelOp -> . EQEQ
    (119) RelOp -> . NOTEQ
    (120) RelOp -> . LESS
    (121) RelOp -> . GREAT
    (122) RelOp -> . LEQ
    (123) RelOp -> . GEQ
    (124) AddOp -> . PLUS
    (125) AddOp -> . MINUS
    (126) AddOp -> . OR
    (127) AddOp -> . CARET
    (128) MulOp -> . TIMES
    (129) MulOp -> . DIVIDE
    (130) MulOp -> . MOD
    (131) MulOp -> . AMPERS
    (132) MulOp -> . LL
    (133) MulOp -> . GG
    (134) MulOp -> . AMPCAR

    RBRACK          shift and go to state 253
    COLON           reduce using rule 109 (ExpressionOpt -> Expression .)
    OROR            shift and go to state 161
    AMPAMP          shift and go to state 167
    EQEQ            shift and go to state 166
    NOTEQ           shift and go to state 172
    LESS            shift and go to state 165
    GREAT           shift and go to state 163
    LEQ             shift and go to state 181
    GEQ             shift and go to state 170
    PLUS            shift and go to state 173
    MINUS           shift and go to state 169
    OR              shift and go to state 182
    CARET           shift and go to state 162
    TIMES           shift and go to state 177
    DIVIDE          shift and go to state 176
    MOD             shift and go to state 183
    AMPERS          shift and go to state 180
    LL              shift and go to state 171
    GG              shift and go to state 178
    AMPCAR          shift and go to state 164

    AddOp                          shift and go to state 175
    MulOp                          shift and go to state 168
    RelOp                          shift and go to state 179
    BinaryOp                       shift and go to state 174

state 204

    (103) ExpressionListTypeOpt -> epsilon .

    RPAREN          reduce using rule 103 (ExpressionListTypeOpt -> epsilon .)


state 205

    (102) ExpressionListTypeOpt -> ExpressionList .

    RPAREN          reduce using rule 102 (ExpressionListTypeOpt -> ExpressionList .)


state 206

    (101) Arguments -> LPAREN ExpressionListTypeOpt . RPAREN

    RPAREN          shift and go to state 254


state 207

    (98) Selector -> DOT IDENTIFIER .

    DOT             reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    LBRACK          reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    LPAREN          reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    OROR            reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    AMPAMP          reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    EQEQ            reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    NOTEQ           reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    LESS            reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    GREAT           reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    LEQ             reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    GEQ             reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    PLUS            reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    MINUS           reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    OR              reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    CARET           reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    TIMES           reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    DIVIDE          reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    MOD             reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    AMPERS          reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    LL              reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    GG              reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    AMPCAR          reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    RBRACK          reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    COMMA           reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    SEMICOL         reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    RPAREN          reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    COLON           reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    PLUSPLUS        reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    MINUSMIN        reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    PLUSEQ          reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    MINUSEQ         reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    TIMESEQ         reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    DIVIDEEQ        reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    MODEQ           reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    AMPEQ           reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    OREQ            reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    CAREQ           reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    LLEQ            reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    GGEQ            reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    EQUAL           reduce using rule 98 (Selector -> DOT IDENTIFIER .)
    LBRACE          reduce using rule 98 (Selector -> DOT IDENTIFIER .)


state 208

    (91) Conversion -> Type LPAREN Expression . RPAREN
    (108) Expression -> Expression . BinaryOp Expression
    (113) BinaryOp -> . OROR
    (114) BinaryOp -> . AMPAMP
    (115) BinaryOp -> . RelOp
    (116) BinaryOp -> . AddOp
    (117) BinaryOp -> . MulOp
    (118) RelOp -> . EQEQ
    (119) RelOp -> . NOTEQ
    (120) RelOp -> . LESS
    (121) RelOp -> . GREAT
    (122) RelOp -> . LEQ
    (123) RelOp -> . GEQ
    (124) AddOp -> . PLUS
    (125) AddOp -> . MINUS
    (126) AddOp -> . OR
    (127) AddOp -> . CARET
    (128) MulOp -> . TIMES
    (129) MulOp -> . DIVIDE
    (130) MulOp -> . MOD
    (131) MulOp -> . AMPERS
    (132) MulOp -> . LL
    (133) MulOp -> . GG
    (134) MulOp -> . AMPCAR

    RPAREN          shift and go to state 255
    OROR            shift and go to state 161
    AMPAMP          shift and go to state 167
    EQEQ            shift and go to state 166
    NOTEQ           shift and go to state 172
    LESS            shift and go to state 165
    GREAT           shift and go to state 163
    LEQ             shift and go to state 181
    GEQ             shift and go to state 170
    PLUS            shift and go to state 173
    MINUS           shift and go to state 169
    OR              shift and go to state 182
    CARET           shift and go to state 162
    TIMES           shift and go to state 177
    DIVIDE          shift and go to state 176
    MOD             shift and go to state 183
    AMPERS          shift and go to state 180
    LL              shift and go to state 171
    GG              shift and go to state 178
    AMPCAR          shift and go to state 164

    AddOp                          shift and go to state 175
    RelOp                          shift and go to state 179
    BinaryOp                       shift and go to state 174
    MulOp                          shift and go to state 168

state 209

    (14) ElementType -> Type .

    EQUAL           reduce using rule 14 (ElementType -> Type .)
    SEMICOL         reduce using rule 14 (ElementType -> Type .)
    RPAREN          reduce using rule 14 (ElementType -> Type .)
    LBRACE          reduce using rule 14 (ElementType -> Type .)
    COMMA           reduce using rule 14 (ElementType -> Type .)
    LPAREN          reduce using rule 14 (ElementType -> Type .)
    STRING          reduce using rule 14 (ElementType -> Type .)
    COLON           reduce using rule 14 (ElementType -> Type .)


state 210

    (12) ArrayType -> LBRACK ArrayLength RBRACK ElementType .

    LPAREN          reduce using rule 12 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    RPAREN          reduce using rule 12 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    COMMA           reduce using rule 12 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    SEMICOL         reduce using rule 12 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    COLON           reduce using rule 12 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    EQUAL           reduce using rule 12 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    LBRACE          reduce using rule 12 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    STRING          reduce using rule 12 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)


state 211

    (22) PointerType -> TIMES . BaseType
    (137) UnaryOp -> TIMES .
    (23) BaseType -> . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            reduce using rule 137 (UnaryOp -> TIMES .)
    MINUS           reduce using rule 137 (UnaryOp -> TIMES .)
    TIMES           reduce using rule 137 (UnaryOp -> TIMES .)
    AMPERS          reduce using rule 137 (UnaryOp -> TIMES .)
    NOT             reduce using rule 137 (UnaryOp -> TIMES .)
    LPAREN          reduce using rule 137 (UnaryOp -> TIMES .)
    IDENTIFIER      reduce using rule 137 (UnaryOp -> TIMES .)
    INTEGER         reduce using rule 137 (UnaryOp -> TIMES .)
    FLOAT           reduce using rule 137 (UnaryOp -> TIMES .)
    IMAGINARY       reduce using rule 137 (UnaryOp -> TIMES .)
    RUNE            reduce using rule 137 (UnaryOp -> TIMES .)
    STRING          reduce using rule 137 (UnaryOp -> TIMES .)
    TYPEX           reduce using rule 137 (UnaryOp -> TIMES .)
    LBRACK          reduce using rule 137 (UnaryOp -> TIMES .)
    STRUCT          reduce using rule 137 (UnaryOp -> TIMES .)
    FUNC            reduce using rule 137 (UnaryOp -> TIMES .)

  ! LPAREN          [ shift and go to state 61 ]
  ! TYPEX           [ shift and go to state 57 ]
  ! LBRACK          [ shift and go to state 64 ]
  ! STRUCT          [ shift and go to state 63 ]
  ! TIMES           [ shift and go to state 60 ]
  ! FUNC            [ shift and go to state 52 ]

    StructType                     shift and go to state 58
    BaseType                       shift and go to state 88
    Type                           shift and go to state 87
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    TypeLit                        shift and go to state 55

state 212

    (83) Operand -> LPAREN Expression RPAREN .

    DOT             reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    LBRACK          reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    LPAREN          reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    PLUSPLUS        reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    MINUSMIN        reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    OROR            reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    AMPAMP          reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    EQEQ            reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    NOTEQ           reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    LESS            reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    GREAT           reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    LEQ             reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    GEQ             reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    PLUS            reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    MINUS           reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    OR              reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    CARET           reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    TIMES           reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    DIVIDE          reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    MOD             reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    AMPERS          reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    LL              reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    GG              reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    AMPCAR          reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    COMMA           reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    SEMICOL         reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    PLUSEQ          reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    MINUSEQ         reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    TIMESEQ         reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    DIVIDEEQ        reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    MODEQ           reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    AMPEQ           reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    OREQ            reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    CAREQ           reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    LLEQ            reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    GGEQ            reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    EQUAL           reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    LBRACE          reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    RBRACK          reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    RPAREN          reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)
    COLON           reduce using rule 83 (Operand -> LPAREN Expression RPAREN .)


state 213

    (108) Expression -> Expression BinaryOp Expression .
    (108) Expression -> Expression . BinaryOp Expression
    (113) BinaryOp -> . OROR
    (114) BinaryOp -> . AMPAMP
    (115) BinaryOp -> . RelOp
    (116) BinaryOp -> . AddOp
    (117) BinaryOp -> . MulOp
    (118) RelOp -> . EQEQ
    (119) RelOp -> . NOTEQ
    (120) RelOp -> . LESS
    (121) RelOp -> . GREAT
    (122) RelOp -> . LEQ
    (123) RelOp -> . GEQ
    (124) AddOp -> . PLUS
    (125) AddOp -> . MINUS
    (126) AddOp -> . OR
    (127) AddOp -> . CARET
    (128) MulOp -> . TIMES
    (129) MulOp -> . DIVIDE
    (130) MulOp -> . MOD
    (131) MulOp -> . AMPERS
    (132) MulOp -> . LL
    (133) MulOp -> . GG
    (134) MulOp -> . AMPCAR

  ! shift/reduce conflict for OROR resolved as shift
  ! shift/reduce conflict for AMPAMP resolved as shift
  ! shift/reduce conflict for EQEQ resolved as shift
  ! shift/reduce conflict for NOTEQ resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREAT resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for CARET resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for AMPERS resolved as shift
  ! shift/reduce conflict for LL resolved as shift
  ! shift/reduce conflict for GG resolved as shift
  ! shift/reduce conflict for AMPCAR resolved as shift
    PLUSPLUS        reduce using rule 108 (Expression -> Expression BinaryOp Expression .)
    MINUSMIN        reduce using rule 108 (Expression -> Expression BinaryOp Expression .)
    COMMA           reduce using rule 108 (Expression -> Expression BinaryOp Expression .)
    SEMICOL         reduce using rule 108 (Expression -> Expression BinaryOp Expression .)
    PLUSEQ          reduce using rule 108 (Expression -> Expression BinaryOp Expression .)
    MINUSEQ         reduce using rule 108 (Expression -> Expression BinaryOp Expression .)
    TIMESEQ         reduce using rule 108 (Expression -> Expression BinaryOp Expression .)
    DIVIDEEQ        reduce using rule 108 (Expression -> Expression BinaryOp Expression .)
    MODEQ           reduce using rule 108 (Expression -> Expression BinaryOp Expression .)
    AMPEQ           reduce using rule 108 (Expression -> Expression BinaryOp Expression .)
    OREQ            reduce using rule 108 (Expression -> Expression BinaryOp Expression .)
    CAREQ           reduce using rule 108 (Expression -> Expression BinaryOp Expression .)
    LLEQ            reduce using rule 108 (Expression -> Expression BinaryOp Expression .)
    GGEQ            reduce using rule 108 (Expression -> Expression BinaryOp Expression .)
    EQUAL           reduce using rule 108 (Expression -> Expression BinaryOp Expression .)
    RBRACK          reduce using rule 108 (Expression -> Expression BinaryOp Expression .)
    LBRACE          reduce using rule 108 (Expression -> Expression BinaryOp Expression .)
    RPAREN          reduce using rule 108 (Expression -> Expression BinaryOp Expression .)
    COLON           reduce using rule 108 (Expression -> Expression BinaryOp Expression .)
    OROR            shift and go to state 161
    AMPAMP          shift and go to state 167
    EQEQ            shift and go to state 166
    NOTEQ           shift and go to state 172
    LESS            shift and go to state 165
    GREAT           shift and go to state 163
    LEQ             shift and go to state 181
    GEQ             shift and go to state 170
    PLUS            shift and go to state 173
    MINUS           shift and go to state 169
    OR              shift and go to state 182
    CARET           shift and go to state 162
    TIMES           shift and go to state 177
    DIVIDE          shift and go to state 176
    MOD             shift and go to state 183
    AMPERS          shift and go to state 180
    LL              shift and go to state 171
    GG              shift and go to state 178
    AMPCAR          shift and go to state 164

  ! OROR            [ reduce using rule 108 (Expression -> Expression BinaryOp Expression .) ]
  ! AMPAMP          [ reduce using rule 108 (Expression -> Expression BinaryOp Expression .) ]
  ! EQEQ            [ reduce using rule 108 (Expression -> Expression BinaryOp Expression .) ]
  ! NOTEQ           [ reduce using rule 108 (Expression -> Expression BinaryOp Expression .) ]
  ! LESS            [ reduce using rule 108 (Expression -> Expression BinaryOp Expression .) ]
  ! GREAT           [ reduce using rule 108 (Expression -> Expression BinaryOp Expression .) ]
  ! LEQ             [ reduce using rule 108 (Expression -> Expression BinaryOp Expression .) ]
  ! GEQ             [ reduce using rule 108 (Expression -> Expression BinaryOp Expression .) ]
  ! PLUS            [ reduce using rule 108 (Expression -> Expression BinaryOp Expression .) ]
  ! MINUS           [ reduce using rule 108 (Expression -> Expression BinaryOp Expression .) ]
  ! OR              [ reduce using rule 108 (Expression -> Expression BinaryOp Expression .) ]
  ! CARET           [ reduce using rule 108 (Expression -> Expression BinaryOp Expression .) ]
  ! TIMES           [ reduce using rule 108 (Expression -> Expression BinaryOp Expression .) ]
  ! DIVIDE          [ reduce using rule 108 (Expression -> Expression BinaryOp Expression .) ]
  ! MOD             [ reduce using rule 108 (Expression -> Expression BinaryOp Expression .) ]
  ! AMPERS          [ reduce using rule 108 (Expression -> Expression BinaryOp Expression .) ]
  ! LL              [ reduce using rule 108 (Expression -> Expression BinaryOp Expression .) ]
  ! GG              [ reduce using rule 108 (Expression -> Expression BinaryOp Expression .) ]
  ! AMPCAR          [ reduce using rule 108 (Expression -> Expression BinaryOp Expression .) ]

    AddOp                          shift and go to state 175
    MulOp                          shift and go to state 168
    RelOp                          shift and go to state 179
    BinaryOp                       shift and go to state 174

state 214

    (145) Statement -> ContinueStmt .

    SEMICOL         reduce using rule 145 (Statement -> ContinueStmt .)


state 215

    (152) SimpleStmt -> ExpressionStmt .

    LBRACE          reduce using rule 152 (SimpleStmt -> ExpressionStmt .)
    SEMICOL         reduce using rule 152 (SimpleStmt -> ExpressionStmt .)


state 216

    (42) StatementRep -> StatementRep Statement . SEMICOL

    SEMICOL         shift and go to state 256


state 217

    (154) SimpleStmt -> Assignment .

    LBRACE          reduce using rule 154 (SimpleStmt -> Assignment .)
    SEMICOL         reduce using rule 154 (SimpleStmt -> Assignment .)


state 218

    (141) Statement -> LabeledStmt .

    SEMICOL         reduce using rule 141 (Statement -> LabeledStmt .)


state 219

    (181) SwitchStmt -> TypeSwitchStmt .

    SEMICOL         reduce using rule 181 (SwitchStmt -> TypeSwitchStmt .)


state 220

    (212) ReturnStmt -> RETURN . ExpressionListPureOpt
    (213) ExpressionListPureOpt -> . ExpressionList
    (214) ExpressionListPureOpt -> . epsilon
    (104) ExpressionList -> . Expression ExpressionRep
    (236) epsilon -> .
    (107) Expression -> . UnaryExpr
    (108) Expression -> . Expression BinaryOp Expression
    (111) UnaryExpr -> . PrimaryExpr
    (112) UnaryExpr -> . UnaryOp UnaryExpr
    (92) PrimaryExpr -> . Operand
    (93) PrimaryExpr -> . Conversion
    (94) PrimaryExpr -> . PrimaryExpr Selector
    (95) PrimaryExpr -> . PrimaryExpr Index
    (96) PrimaryExpr -> . PrimaryExpr Slice
    (97) PrimaryExpr -> . PrimaryExpr Arguments
    (135) UnaryOp -> . PLUS
    (136) UnaryOp -> . MINUS
    (137) UnaryOp -> . TIMES
    (138) UnaryOp -> . AMPERS
    (139) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (91) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (90) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . INTEGER
    (86) BasicLit -> . FLOAT
    (87) BasicLit -> . IMAGINARY
    (88) BasicLit -> . RUNE
    (89) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    SEMICOL         reduce using rule 236 (epsilon -> .)
    PLUS            shift and go to state 101
    MINUS           shift and go to state 98
    TIMES           shift and go to state 107
    AMPERS          shift and go to state 113
    NOT             shift and go to state 108
    LPAREN          shift and go to state 110
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 112
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 105
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    UnaryOp                        shift and go to state 93
    Conversion                     shift and go to state 92
    ExpressionListPureOpt          shift and go to state 257
    Literal                        shift and go to state 95
    Type                           shift and go to state 97
    OperandName                    shift and go to state 99
    BasicLit                       shift and go to state 100
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    epsilon                        shift and go to state 258
    UnaryExpr                      shift and go to state 106
    PrimaryExpr                    shift and go to state 94
    ExpressionList                 shift and go to state 259
    ArrayType                      shift and go to state 53
    Expression                     shift and go to state 135
    PointerType                    shift and go to state 66
    TypeLit                        shift and go to state 55
    Operand                        shift and go to state 114
    FunctionType                   shift and go to state 67

state 221

    (156) LabeledStmt -> Label . COLON Statement

    COLON           shift and go to state 260


state 222

    (180) SwitchStmt -> ExprSwitchStmt .

    SEMICOL         reduce using rule 180 (SwitchStmt -> ExprSwitchStmt .)


state 223

    (148) Statement -> IfStmt .

    SEMICOL         reduce using rule 148 (Statement -> IfStmt .)


state 224

    (153) SimpleStmt -> IncDecStmt .

    LBRACE          reduce using rule 153 (SimpleStmt -> IncDecStmt .)
    SEMICOL         reduce using rule 153 (SimpleStmt -> IncDecStmt .)


state 225

    (146) Statement -> GotoStmt .

    SEMICOL         reduce using rule 146 (Statement -> GotoStmt .)


state 226

    (200) ForStmt -> FOR . ConditionBlockOpt Block
    (201) ConditionBlockOpt -> . epsilon
    (202) ConditionBlockOpt -> . Condition
    (203) ConditionBlockOpt -> . ForClause
    (236) epsilon -> .
    (204) Condition -> . Expression
    (205) ForClause -> . SimpleStmt SEMICOL ConditionOpt SEMICOL SimpleStmt
    (107) Expression -> . UnaryExpr
    (108) Expression -> . Expression BinaryOp Expression
    (151) SimpleStmt -> . epsilon
    (152) SimpleStmt -> . ExpressionStmt
    (153) SimpleStmt -> . IncDecStmt
    (154) SimpleStmt -> . Assignment
    (155) SimpleStmt -> . ShortVarDecl
    (111) UnaryExpr -> . PrimaryExpr
    (112) UnaryExpr -> . UnaryOp UnaryExpr
    (158) ExpressionStmt -> . Expression
    (159) IncDecStmt -> . Expression PLUSPLUS
    (160) IncDecStmt -> . Expression MINUSMIN
    (161) Assignment -> . ExpressionList assign_op ExpressionList
    (75) ShortVarDecl -> . IDENTIFIER COLONEQ Expression
    (92) PrimaryExpr -> . Operand
    (93) PrimaryExpr -> . Conversion
    (94) PrimaryExpr -> . PrimaryExpr Selector
    (95) PrimaryExpr -> . PrimaryExpr Index
    (96) PrimaryExpr -> . PrimaryExpr Slice
    (97) PrimaryExpr -> . PrimaryExpr Arguments
    (135) UnaryOp -> . PLUS
    (136) UnaryOp -> . MINUS
    (137) UnaryOp -> . TIMES
    (138) UnaryOp -> . AMPERS
    (139) UnaryOp -> . NOT
    (104) ExpressionList -> . Expression ExpressionRep
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (91) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (90) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . INTEGER
    (86) BasicLit -> . FLOAT
    (87) BasicLit -> . IMAGINARY
    (88) BasicLit -> . RUNE
    (89) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    LBRACE          reduce using rule 236 (epsilon -> .)
    SEMICOL         reduce using rule 236 (epsilon -> .)
    IDENTIFIER      shift and go to state 262
    PLUS            shift and go to state 101
    MINUS           shift and go to state 98
    TIMES           shift and go to state 107
    AMPERS          shift and go to state 113
    NOT             shift and go to state 108
    LPAREN          shift and go to state 110
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 112
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 105
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 92
    UnaryOp                        shift and go to state 93
    SimpleStmt                     shift and go to state 261
    ExpressionStmt                 shift and go to state 215
    PointerType                    shift and go to state 66
    Type                           shift and go to state 97
    OperandName                    shift and go to state 99
    Assignment                     shift and go to state 217
    TypeName                       shift and go to state 56
    IncDecStmt                     shift and go to state 224
    Condition                      shift and go to state 263
    StructType                     shift and go to state 58
    epsilon                        shift and go to state 264
    UnaryExpr                      shift and go to state 106
    ConditionBlockOpt              shift and go to state 265
    PrimaryExpr                    shift and go to state 94
    ExpressionList                 shift and go to state 234
    ArrayType                      shift and go to state 53
    ForClause                      shift and go to state 266
    Expression                     shift and go to state 267
    ShortVarDecl                   shift and go to state 241
    Literal                        shift and go to state 95
    TypeLit                        shift and go to state 55
    BasicLit                       shift and go to state 100
    Operand                        shift and go to state 114
    FunctionType                   shift and go to state 67

state 227

    (147) Statement -> Block .

    SEMICOL         reduce using rule 147 (Statement -> Block .)


state 228

    (149) Statement -> SwitchStmt .

    SEMICOL         reduce using rule 149 (Statement -> SwitchStmt .)


state 229

    (216) ContinueStmt -> CONTINUE . LabelOpt
    (217) LabelOpt -> . Label
    (218) LabelOpt -> . epsilon
    (157) Label -> . IDENTIFIER
    (236) epsilon -> .

    IDENTIFIER      shift and go to state 269
    SEMICOL         reduce using rule 236 (epsilon -> .)

    epsilon                        shift and go to state 268
    LabelOpt                       shift and go to state 270
    Label                          shift and go to state 271

state 230

    (182) ExprSwitchStmt -> SWITCH . ExpressionOpt LBRACE ExprCaseClauseRep RBRACE
    (188) TypeSwitchStmt -> SWITCH . SimpleStmtOpt TypeSwitchGuard LBRACE TypeCaseClauseOpt RBRACE
    (109) ExpressionOpt -> . Expression
    (110) ExpressionOpt -> . epsilon
    (175) SimpleStmtOpt -> . SimpleStmt SEMICOL
    (176) SimpleStmtOpt -> . epsilon
    (107) Expression -> . UnaryExpr
    (108) Expression -> . Expression BinaryOp Expression
    (236) epsilon -> .
    (151) SimpleStmt -> . epsilon
    (152) SimpleStmt -> . ExpressionStmt
    (153) SimpleStmt -> . IncDecStmt
    (154) SimpleStmt -> . Assignment
    (155) SimpleStmt -> . ShortVarDecl
    (111) UnaryExpr -> . PrimaryExpr
    (112) UnaryExpr -> . UnaryOp UnaryExpr
    (158) ExpressionStmt -> . Expression
    (159) IncDecStmt -> . Expression PLUSPLUS
    (160) IncDecStmt -> . Expression MINUSMIN
    (161) Assignment -> . ExpressionList assign_op ExpressionList
    (75) ShortVarDecl -> . IDENTIFIER COLONEQ Expression
    (92) PrimaryExpr -> . Operand
    (93) PrimaryExpr -> . Conversion
    (94) PrimaryExpr -> . PrimaryExpr Selector
    (95) PrimaryExpr -> . PrimaryExpr Index
    (96) PrimaryExpr -> . PrimaryExpr Slice
    (97) PrimaryExpr -> . PrimaryExpr Arguments
    (135) UnaryOp -> . PLUS
    (136) UnaryOp -> . MINUS
    (137) UnaryOp -> . TIMES
    (138) UnaryOp -> . AMPERS
    (139) UnaryOp -> . NOT
    (104) ExpressionList -> . Expression ExpressionRep
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (91) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (90) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . INTEGER
    (86) BasicLit -> . FLOAT
    (87) BasicLit -> . IMAGINARY
    (88) BasicLit -> . RUNE
    (89) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for IMAGINARY resolved as shift
  ! shift/reduce conflict for RUNE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for TYPEX resolved as shift
  ! shift/reduce conflict for LBRACK resolved as shift
  ! shift/reduce conflict for STRUCT resolved as shift
  ! shift/reduce conflict for FUNC resolved as shift
    LBRACE          reduce using rule 236 (epsilon -> .)
    SEMICOL         reduce using rule 236 (epsilon -> .)
    IDENTIFIER      shift and go to state 262
    PLUS            shift and go to state 101
    MINUS           shift and go to state 98
    TIMES           shift and go to state 107
    AMPERS          shift and go to state 113
    NOT             shift and go to state 108
    LPAREN          shift and go to state 110
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 112
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 105
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

  ! IDENTIFIER      [ reduce using rule 236 (epsilon -> .) ]
  ! LPAREN          [ reduce using rule 236 (epsilon -> .) ]
  ! INTEGER         [ reduce using rule 236 (epsilon -> .) ]
  ! FLOAT           [ reduce using rule 236 (epsilon -> .) ]
  ! IMAGINARY       [ reduce using rule 236 (epsilon -> .) ]
  ! RUNE            [ reduce using rule 236 (epsilon -> .) ]
  ! STRING          [ reduce using rule 236 (epsilon -> .) ]
  ! TYPEX           [ reduce using rule 236 (epsilon -> .) ]
  ! LBRACK          [ reduce using rule 236 (epsilon -> .) ]
  ! STRUCT          [ reduce using rule 236 (epsilon -> .) ]
  ! TIMES           [ reduce using rule 236 (epsilon -> .) ]
  ! FUNC            [ reduce using rule 236 (epsilon -> .) ]

    Conversion                     shift and go to state 92
    UnaryOp                        shift and go to state 93
    SimpleStmt                     shift and go to state 272
    ExpressionStmt                 shift and go to state 215
    Type                           shift and go to state 97
    OperandName                    shift and go to state 99
    Assignment                     shift and go to state 217
    TypeName                       shift and go to state 56
    IncDecStmt                     shift and go to state 224
    ExpressionOpt                  shift and go to state 273
    StructType                     shift and go to state 58
    epsilon                        shift and go to state 274
    UnaryExpr                      shift and go to state 106
    PrimaryExpr                    shift and go to state 94
    SimpleStmtOpt                  shift and go to state 275
    ExpressionList                 shift and go to state 234
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    Expression                     shift and go to state 276
    ShortVarDecl                   shift and go to state 241
    PointerType                    shift and go to state 66
    TypeLit                        shift and go to state 55
    BasicLit                       shift and go to state 100
    Operand                        shift and go to state 114
    FunctionType                   shift and go to state 67

state 231

    (140) Statement -> Declaration .

    SEMICOL         reduce using rule 140 (Statement -> Declaration .)


state 232

    (157) Label -> IDENTIFIER .
    (75) ShortVarDecl -> IDENTIFIER . COLONEQ Expression
    (90) OperandName -> IDENTIFIER .

    COLON           reduce using rule 157 (Label -> IDENTIFIER .)
    COLONEQ         shift and go to state 277
    DOT             reduce using rule 90 (OperandName -> IDENTIFIER .)
    LBRACK          reduce using rule 90 (OperandName -> IDENTIFIER .)
    LPAREN          reduce using rule 90 (OperandName -> IDENTIFIER .)
    PLUSPLUS        reduce using rule 90 (OperandName -> IDENTIFIER .)
    MINUSMIN        reduce using rule 90 (OperandName -> IDENTIFIER .)
    OROR            reduce using rule 90 (OperandName -> IDENTIFIER .)
    AMPAMP          reduce using rule 90 (OperandName -> IDENTIFIER .)
    EQEQ            reduce using rule 90 (OperandName -> IDENTIFIER .)
    NOTEQ           reduce using rule 90 (OperandName -> IDENTIFIER .)
    LESS            reduce using rule 90 (OperandName -> IDENTIFIER .)
    GREAT           reduce using rule 90 (OperandName -> IDENTIFIER .)
    LEQ             reduce using rule 90 (OperandName -> IDENTIFIER .)
    GEQ             reduce using rule 90 (OperandName -> IDENTIFIER .)
    PLUS            reduce using rule 90 (OperandName -> IDENTIFIER .)
    MINUS           reduce using rule 90 (OperandName -> IDENTIFIER .)
    OR              reduce using rule 90 (OperandName -> IDENTIFIER .)
    CARET           reduce using rule 90 (OperandName -> IDENTIFIER .)
    TIMES           reduce using rule 90 (OperandName -> IDENTIFIER .)
    DIVIDE          reduce using rule 90 (OperandName -> IDENTIFIER .)
    MOD             reduce using rule 90 (OperandName -> IDENTIFIER .)
    AMPERS          reduce using rule 90 (OperandName -> IDENTIFIER .)
    LL              reduce using rule 90 (OperandName -> IDENTIFIER .)
    GG              reduce using rule 90 (OperandName -> IDENTIFIER .)
    AMPCAR          reduce using rule 90 (OperandName -> IDENTIFIER .)
    COMMA           reduce using rule 90 (OperandName -> IDENTIFIER .)
    SEMICOL         reduce using rule 90 (OperandName -> IDENTIFIER .)
    PLUSEQ          reduce using rule 90 (OperandName -> IDENTIFIER .)
    MINUSEQ         reduce using rule 90 (OperandName -> IDENTIFIER .)
    TIMESEQ         reduce using rule 90 (OperandName -> IDENTIFIER .)
    DIVIDEEQ        reduce using rule 90 (OperandName -> IDENTIFIER .)
    MODEQ           reduce using rule 90 (OperandName -> IDENTIFIER .)
    AMPEQ           reduce using rule 90 (OperandName -> IDENTIFIER .)
    OREQ            reduce using rule 90 (OperandName -> IDENTIFIER .)
    CAREQ           reduce using rule 90 (OperandName -> IDENTIFIER .)
    LLEQ            reduce using rule 90 (OperandName -> IDENTIFIER .)
    GGEQ            reduce using rule 90 (OperandName -> IDENTIFIER .)
    EQUAL           reduce using rule 90 (OperandName -> IDENTIFIER .)


state 233

    (151) SimpleStmt -> epsilon .

    LBRACE          reduce using rule 151 (SimpleStmt -> epsilon .)
    SEMICOL         reduce using rule 151 (SimpleStmt -> epsilon .)


state 234

    (161) Assignment -> ExpressionList . assign_op ExpressionList
    (162) assign_op -> . AssignOp
    (163) AssignOp -> . PLUSEQ
    (164) AssignOp -> . MINUSEQ
    (165) AssignOp -> . TIMESEQ
    (166) AssignOp -> . DIVIDEEQ
    (167) AssignOp -> . MODEQ
    (168) AssignOp -> . AMPEQ
    (169) AssignOp -> . OREQ
    (170) AssignOp -> . CAREQ
    (171) AssignOp -> . LLEQ
    (172) AssignOp -> . GGEQ
    (173) AssignOp -> . EQUAL

    PLUSEQ          shift and go to state 282
    MINUSEQ         shift and go to state 287
    TIMESEQ         shift and go to state 281
    DIVIDEEQ        shift and go to state 290
    MODEQ           shift and go to state 283
    AMPEQ           shift and go to state 288
    OREQ            shift and go to state 286
    CAREQ           shift and go to state 280
    LLEQ            shift and go to state 285
    GGEQ            shift and go to state 284
    EQUAL           shift and go to state 279

    AssignOp                       shift and go to state 278
    assign_op                      shift and go to state 289

state 235

    (158) ExpressionStmt -> Expression .
    (159) IncDecStmt -> Expression . PLUSPLUS
    (160) IncDecStmt -> Expression . MINUSMIN
    (108) Expression -> Expression . BinaryOp Expression
    (104) ExpressionList -> Expression . ExpressionRep
    (113) BinaryOp -> . OROR
    (114) BinaryOp -> . AMPAMP
    (115) BinaryOp -> . RelOp
    (116) BinaryOp -> . AddOp
    (117) BinaryOp -> . MulOp
    (105) ExpressionRep -> . ExpressionRep COMMA Expression
    (106) ExpressionRep -> . epsilon
    (118) RelOp -> . EQEQ
    (119) RelOp -> . NOTEQ
    (120) RelOp -> . LESS
    (121) RelOp -> . GREAT
    (122) RelOp -> . LEQ
    (123) RelOp -> . GEQ
    (124) AddOp -> . PLUS
    (125) AddOp -> . MINUS
    (126) AddOp -> . OR
    (127) AddOp -> . CARET
    (128) MulOp -> . TIMES
    (129) MulOp -> . DIVIDE
    (130) MulOp -> . MOD
    (131) MulOp -> . AMPERS
    (132) MulOp -> . LL
    (133) MulOp -> . GG
    (134) MulOp -> . AMPCAR
    (236) epsilon -> .

    SEMICOL         reduce using rule 158 (ExpressionStmt -> Expression .)
    LBRACE          reduce using rule 158 (ExpressionStmt -> Expression .)
    PLUSPLUS        shift and go to state 291
    MINUSMIN        shift and go to state 292
    OROR            shift and go to state 161
    AMPAMP          shift and go to state 167
    EQEQ            shift and go to state 166
    NOTEQ           shift and go to state 172
    LESS            shift and go to state 165
    GREAT           shift and go to state 163
    LEQ             shift and go to state 181
    GEQ             shift and go to state 170
    PLUS            shift and go to state 173
    MINUS           shift and go to state 169
    OR              shift and go to state 182
    CARET           shift and go to state 162
    TIMES           shift and go to state 177
    DIVIDE          shift and go to state 176
    MOD             shift and go to state 183
    AMPERS          shift and go to state 180
    LL              shift and go to state 171
    GG              shift and go to state 178
    AMPCAR          shift and go to state 164
    COMMA           reduce using rule 236 (epsilon -> .)
    PLUSEQ          reduce using rule 236 (epsilon -> .)
    MINUSEQ         reduce using rule 236 (epsilon -> .)
    TIMESEQ         reduce using rule 236 (epsilon -> .)
    DIVIDEEQ        reduce using rule 236 (epsilon -> .)
    MODEQ           reduce using rule 236 (epsilon -> .)
    AMPEQ           reduce using rule 236 (epsilon -> .)
    OREQ            reduce using rule 236 (epsilon -> .)
    CAREQ           reduce using rule 236 (epsilon -> .)
    LLEQ            reduce using rule 236 (epsilon -> .)
    GGEQ            reduce using rule 236 (epsilon -> .)
    EQUAL           reduce using rule 236 (epsilon -> .)

    AddOp                          shift and go to state 175
    ExpressionRep                  shift and go to state 194
    RelOp                          shift and go to state 179
    epsilon                        shift and go to state 195
    BinaryOp                       shift and go to state 174
    MulOp                          shift and go to state 168

state 236

    (215) BreakStmt -> BREAK . LabelOpt
    (217) LabelOpt -> . Label
    (218) LabelOpt -> . epsilon
    (157) Label -> . IDENTIFIER
    (236) epsilon -> .

    IDENTIFIER      shift and go to state 269
    SEMICOL         reduce using rule 236 (epsilon -> .)

    epsilon                        shift and go to state 268
    LabelOpt                       shift and go to state 293
    Label                          shift and go to state 271

state 237

    (143) Statement -> ReturnStmt .

    SEMICOL         reduce using rule 143 (Statement -> ReturnStmt .)


state 238

    (142) Statement -> SimpleStmt .

    SEMICOL         reduce using rule 142 (Statement -> SimpleStmt .)


state 239

    (150) Statement -> ForStmt .

    SEMICOL         reduce using rule 150 (Statement -> ForStmt .)


state 240

    (219) GotoStmt -> GOTO . Label
    (157) Label -> . IDENTIFIER

    IDENTIFIER      shift and go to state 269

    Label                          shift and go to state 294

state 241

    (155) SimpleStmt -> ShortVarDecl .

    LBRACE          reduce using rule 155 (SimpleStmt -> ShortVarDecl .)
    SEMICOL         reduce using rule 155 (SimpleStmt -> ShortVarDecl .)


state 242

    (174) IfStmt -> IF . Expression Block ElseOpt
    (107) Expression -> . UnaryExpr
    (108) Expression -> . Expression BinaryOp Expression
    (111) UnaryExpr -> . PrimaryExpr
    (112) UnaryExpr -> . UnaryOp UnaryExpr
    (92) PrimaryExpr -> . Operand
    (93) PrimaryExpr -> . Conversion
    (94) PrimaryExpr -> . PrimaryExpr Selector
    (95) PrimaryExpr -> . PrimaryExpr Index
    (96) PrimaryExpr -> . PrimaryExpr Slice
    (97) PrimaryExpr -> . PrimaryExpr Arguments
    (135) UnaryOp -> . PLUS
    (136) UnaryOp -> . MINUS
    (137) UnaryOp -> . TIMES
    (138) UnaryOp -> . AMPERS
    (139) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (91) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (90) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . INTEGER
    (86) BasicLit -> . FLOAT
    (87) BasicLit -> . IMAGINARY
    (88) BasicLit -> . RUNE
    (89) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 101
    MINUS           shift and go to state 98
    TIMES           shift and go to state 107
    AMPERS          shift and go to state 113
    NOT             shift and go to state 108
    LPAREN          shift and go to state 110
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 112
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 105
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 92
    UnaryOp                        shift and go to state 93
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    Type                           shift and go to state 97
    OperandName                    shift and go to state 99
    BasicLit                       shift and go to state 100
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    UnaryExpr                      shift and go to state 106
    PrimaryExpr                    shift and go to state 94
    Expression                     shift and go to state 295
    PointerType                    shift and go to state 66
    TypeLit                        shift and go to state 55
    Operand                        shift and go to state 114
    FunctionType                   shift and go to state 67

state 243

    (144) Statement -> BreakStmt .

    SEMICOL         reduce using rule 144 (Statement -> BreakStmt .)


state 244

    (40) Block -> LBRACE StatementList RBRACE .

    SEMICOL         reduce using rule 40 (Block -> LBRACE StatementList RBRACE .)
    ELSE            reduce using rule 40 (Block -> LBRACE StatementList RBRACE .)


state 245

    (38) ParameterDecl -> IdentifierList . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 61
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    Type                           shift and go to state 296
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    TypeLit                        shift and go to state 55

state 246

    (39) ParameterDecl -> Type .

    COMMA           reduce using rule 39 (ParameterDecl -> Type .)
    RPAREN          reduce using rule 39 (ParameterDecl -> Type .)


state 247

    (36) ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA ParameterDecl .

    COMMA           reduce using rule 36 (ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA ParameterDecl .)
    RPAREN          reduce using rule 36 (ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA ParameterDecl .)


state 248

    (37) ParameterDeclCommaRep -> ParameterDecl COMMA ParameterDecl .

    COMMA           reduce using rule 37 (ParameterDeclCommaRep -> ParameterDecl COMMA ParameterDecl .)
    RPAREN          reduce using rule 37 (ParameterDeclCommaRep -> ParameterDecl COMMA ParameterDecl .)


state 249

    (105) ExpressionRep -> ExpressionRep COMMA . Expression
    (107) Expression -> . UnaryExpr
    (108) Expression -> . Expression BinaryOp Expression
    (111) UnaryExpr -> . PrimaryExpr
    (112) UnaryExpr -> . UnaryOp UnaryExpr
    (92) PrimaryExpr -> . Operand
    (93) PrimaryExpr -> . Conversion
    (94) PrimaryExpr -> . PrimaryExpr Selector
    (95) PrimaryExpr -> . PrimaryExpr Index
    (96) PrimaryExpr -> . PrimaryExpr Slice
    (97) PrimaryExpr -> . PrimaryExpr Arguments
    (135) UnaryOp -> . PLUS
    (136) UnaryOp -> . MINUS
    (137) UnaryOp -> . TIMES
    (138) UnaryOp -> . AMPERS
    (139) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (91) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (90) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . INTEGER
    (86) BasicLit -> . FLOAT
    (87) BasicLit -> . IMAGINARY
    (88) BasicLit -> . RUNE
    (89) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 101
    MINUS           shift and go to state 98
    TIMES           shift and go to state 107
    AMPERS          shift and go to state 113
    NOT             shift and go to state 108
    LPAREN          shift and go to state 110
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 112
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 105
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    UnaryOp                        shift and go to state 93
    Conversion                     shift and go to state 92
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    Type                           shift and go to state 97
    OperandName                    shift and go to state 99
    BasicLit                       shift and go to state 100
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    UnaryExpr                      shift and go to state 106
    PrimaryExpr                    shift and go to state 94
    Expression                     shift and go to state 297
    PointerType                    shift and go to state 66
    TypeLit                        shift and go to state 55
    Operand                        shift and go to state 114
    FunctionType                   shift and go to state 67

state 250

    (16) FieldDeclRep -> FieldDeclRep FieldDecl SEMICOL .

    RBRACE          reduce using rule 16 (FieldDeclRep -> FieldDeclRep FieldDecl SEMICOL .)
    IDENTIFIER      reduce using rule 16 (FieldDeclRep -> FieldDeclRep FieldDecl SEMICOL .)


state 251

    (18) FieldDecl -> IdentifierList Type . TagOpt
    (19) TagOpt -> . Tag
    (20) TagOpt -> . epsilon
    (21) Tag -> . STRING
    (236) epsilon -> .

    STRING          shift and go to state 298
    SEMICOL         reduce using rule 236 (epsilon -> .)

    epsilon                        shift and go to state 299
    Tag                            shift and go to state 300
    TagOpt                         shift and go to state 301

state 252

    (100) Slice -> LBRACK ExpressionOpt COLON . ExpressionOpt RBRACK
    (109) ExpressionOpt -> . Expression
    (110) ExpressionOpt -> . epsilon
    (107) Expression -> . UnaryExpr
    (108) Expression -> . Expression BinaryOp Expression
    (236) epsilon -> .
    (111) UnaryExpr -> . PrimaryExpr
    (112) UnaryExpr -> . UnaryOp UnaryExpr
    (92) PrimaryExpr -> . Operand
    (93) PrimaryExpr -> . Conversion
    (94) PrimaryExpr -> . PrimaryExpr Selector
    (95) PrimaryExpr -> . PrimaryExpr Index
    (96) PrimaryExpr -> . PrimaryExpr Slice
    (97) PrimaryExpr -> . PrimaryExpr Arguments
    (135) UnaryOp -> . PLUS
    (136) UnaryOp -> . MINUS
    (137) UnaryOp -> . TIMES
    (138) UnaryOp -> . AMPERS
    (139) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (91) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (90) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . INTEGER
    (86) BasicLit -> . FLOAT
    (87) BasicLit -> . IMAGINARY
    (88) BasicLit -> . RUNE
    (89) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    RBRACK          reduce using rule 236 (epsilon -> .)
    PLUS            shift and go to state 101
    MINUS           shift and go to state 98
    TIMES           shift and go to state 107
    AMPERS          shift and go to state 113
    NOT             shift and go to state 108
    LPAREN          shift and go to state 110
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 112
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 105
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 92
    UnaryOp                        shift and go to state 93
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    Type                           shift and go to state 97
    OperandName                    shift and go to state 99
    BasicLit                       shift and go to state 100
    TypeName                       shift and go to state 56
    ExpressionOpt                  shift and go to state 302
    StructType                     shift and go to state 58
    epsilon                        shift and go to state 202
    UnaryExpr                      shift and go to state 106
    PrimaryExpr                    shift and go to state 94
    Expression                     shift and go to state 303
    PointerType                    shift and go to state 66
    TypeLit                        shift and go to state 55
    Operand                        shift and go to state 114
    FunctionType                   shift and go to state 67

state 253

    (99) Index -> LBRACK Expression RBRACK .

    DOT             reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    LBRACK          reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    LPAREN          reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    OROR            reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    AMPAMP          reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    EQEQ            reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    NOTEQ           reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    LESS            reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    GREAT           reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    LEQ             reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    GEQ             reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    PLUS            reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    MINUS           reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    OR              reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    CARET           reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    TIMES           reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    DIVIDE          reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    MOD             reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    AMPERS          reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    LL              reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    GG              reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    AMPCAR          reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    RBRACK          reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    COMMA           reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    SEMICOL         reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    RPAREN          reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    COLON           reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    PLUSPLUS        reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    MINUSMIN        reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    PLUSEQ          reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    MINUSEQ         reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    TIMESEQ         reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    DIVIDEEQ        reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    MODEQ           reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    AMPEQ           reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    OREQ            reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    CAREQ           reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    LLEQ            reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    GGEQ            reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    EQUAL           reduce using rule 99 (Index -> LBRACK Expression RBRACK .)
    LBRACE          reduce using rule 99 (Index -> LBRACK Expression RBRACK .)


state 254

    (101) Arguments -> LPAREN ExpressionListTypeOpt RPAREN .

    DOT             reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LBRACK          reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LPAREN          reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    OROR            reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    AMPAMP          reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    EQEQ            reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    NOTEQ           reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LESS            reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    GREAT           reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LEQ             reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    GEQ             reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    PLUS            reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    MINUS           reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    OR              reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    CARET           reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    TIMES           reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    DIVIDE          reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    MOD             reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    AMPERS          reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LL              reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    GG              reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    AMPCAR          reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    RBRACK          reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    COMMA           reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    SEMICOL         reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    RPAREN          reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    COLON           reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    PLUSPLUS        reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    MINUSMIN        reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    PLUSEQ          reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    MINUSEQ         reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    TIMESEQ         reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    DIVIDEEQ        reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    MODEQ           reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    AMPEQ           reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    OREQ            reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    CAREQ           reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LLEQ            reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    GGEQ            reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    EQUAL           reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LBRACE          reduce using rule 101 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)


state 255

    (91) Conversion -> Type LPAREN Expression RPAREN .

    DOT             reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    LBRACK          reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    LPAREN          reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    OROR            reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    AMPAMP          reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    EQEQ            reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    NOTEQ           reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    LESS            reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    GREAT           reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    LEQ             reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    GEQ             reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    PLUS            reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    MINUS           reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    OR              reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    CARET           reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    TIMES           reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    DIVIDE          reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    MOD             reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    AMPERS          reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    LL              reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    GG              reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    AMPCAR          reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    COMMA           reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    SEMICOL         reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    LBRACE          reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    RBRACK          reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    RPAREN          reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    COLON           reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    PLUSPLUS        reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    MINUSMIN        reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    PLUSEQ          reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    MINUSEQ         reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    TIMESEQ         reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    DIVIDEEQ        reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    MODEQ           reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    AMPEQ           reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    OREQ            reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    CAREQ           reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    LLEQ            reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    GGEQ            reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)
    EQUAL           reduce using rule 91 (Conversion -> Type LPAREN Expression RPAREN .)


state 256

    (42) StatementRep -> StatementRep Statement SEMICOL .

    RETURN          reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    BREAK           reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    CONTINUE        reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    GOTO            reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    LBRACE          reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    IF              reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    FOR             reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    CONST           reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    TYPE            reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    VAR             reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    IDENTIFIER      reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    SWITCH          reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    PLUS            reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    MINUS           reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    TIMES           reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    AMPERS          reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    NOT             reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    LPAREN          reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    INTEGER         reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    FLOAT           reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    IMAGINARY       reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    RUNE            reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    STRING          reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    TYPEX           reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    LBRACK          reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    STRUCT          reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    FUNC            reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    SEMICOL         reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    RBRACE          reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    CASE            reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)
    DEFAULT         reduce using rule 42 (StatementRep -> StatementRep Statement SEMICOL .)


state 257

    (212) ReturnStmt -> RETURN ExpressionListPureOpt .

    SEMICOL         reduce using rule 212 (ReturnStmt -> RETURN ExpressionListPureOpt .)


state 258

    (214) ExpressionListPureOpt -> epsilon .

    SEMICOL         reduce using rule 214 (ExpressionListPureOpt -> epsilon .)


state 259

    (213) ExpressionListPureOpt -> ExpressionList .

    SEMICOL         reduce using rule 213 (ExpressionListPureOpt -> ExpressionList .)


state 260

    (156) LabeledStmt -> Label COLON . Statement
    (140) Statement -> . Declaration
    (141) Statement -> . LabeledStmt
    (142) Statement -> . SimpleStmt
    (143) Statement -> . ReturnStmt
    (144) Statement -> . BreakStmt
    (145) Statement -> . ContinueStmt
    (146) Statement -> . GotoStmt
    (147) Statement -> . Block
    (148) Statement -> . IfStmt
    (149) Statement -> . SwitchStmt
    (150) Statement -> . ForStmt
    (44) Declaration -> . ConstDecl
    (45) Declaration -> . TypeDecl
    (46) Declaration -> . VarDecl
    (156) LabeledStmt -> . Label COLON Statement
    (151) SimpleStmt -> . epsilon
    (152) SimpleStmt -> . ExpressionStmt
    (153) SimpleStmt -> . IncDecStmt
    (154) SimpleStmt -> . Assignment
    (155) SimpleStmt -> . ShortVarDecl
    (212) ReturnStmt -> . RETURN ExpressionListPureOpt
    (215) BreakStmt -> . BREAK LabelOpt
    (216) ContinueStmt -> . CONTINUE LabelOpt
    (219) GotoStmt -> . GOTO Label
    (40) Block -> . LBRACE StatementList RBRACE
    (174) IfStmt -> . IF Expression Block ElseOpt
    (180) SwitchStmt -> . ExprSwitchStmt
    (181) SwitchStmt -> . TypeSwitchStmt
    (200) ForStmt -> . FOR ConditionBlockOpt Block
    (49) ConstDecl -> . CONST ConstSpec
    (50) ConstDecl -> . CONST LPAREN ConstSpecRep RPAREN
    (59) TypeDecl -> . TYPE TypeSpec
    (60) TypeDecl -> . TYPE LPAREN TypeSpecRep RPAREN
    (67) VarDecl -> . VAR VarSpec
    (68) VarDecl -> . VAR LPAREN VarSpecRep RPAREN
    (157) Label -> . IDENTIFIER
    (236) epsilon -> .
    (158) ExpressionStmt -> . Expression
    (159) IncDecStmt -> . Expression PLUSPLUS
    (160) IncDecStmt -> . Expression MINUSMIN
    (161) Assignment -> . ExpressionList assign_op ExpressionList
    (75) ShortVarDecl -> . IDENTIFIER COLONEQ Expression
    (182) ExprSwitchStmt -> . SWITCH ExpressionOpt LBRACE ExprCaseClauseRep RBRACE
    (188) TypeSwitchStmt -> . SWITCH SimpleStmtOpt TypeSwitchGuard LBRACE TypeCaseClauseOpt RBRACE
    (107) Expression -> . UnaryExpr
    (108) Expression -> . Expression BinaryOp Expression
    (104) ExpressionList -> . Expression ExpressionRep
    (111) UnaryExpr -> . PrimaryExpr
    (112) UnaryExpr -> . UnaryOp UnaryExpr
    (92) PrimaryExpr -> . Operand
    (93) PrimaryExpr -> . Conversion
    (94) PrimaryExpr -> . PrimaryExpr Selector
    (95) PrimaryExpr -> . PrimaryExpr Index
    (96) PrimaryExpr -> . PrimaryExpr Slice
    (97) PrimaryExpr -> . PrimaryExpr Arguments
    (135) UnaryOp -> . PLUS
    (136) UnaryOp -> . MINUS
    (137) UnaryOp -> . TIMES
    (138) UnaryOp -> . AMPERS
    (139) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (91) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (90) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . INTEGER
    (86) BasicLit -> . FLOAT
    (87) BasicLit -> . IMAGINARY
    (88) BasicLit -> . RUNE
    (89) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    RETURN          shift and go to state 220
    BREAK           shift and go to state 236
    CONTINUE        shift and go to state 229
    GOTO            shift and go to state 240
    LBRACE          shift and go to state 123
    IF              shift and go to state 242
    FOR             shift and go to state 226
    CONST           shift and go to state 14
    TYPE            shift and go to state 23
    VAR             shift and go to state 21
    IDENTIFIER      shift and go to state 232
    SEMICOL         reduce using rule 236 (epsilon -> .)
    SWITCH          shift and go to state 230
    PLUS            shift and go to state 101
    MINUS           shift and go to state 98
    TIMES           shift and go to state 107
    AMPERS          shift and go to state 113
    NOT             shift and go to state 108
    LPAREN          shift and go to state 110
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 112
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 105
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    UnaryOp                        shift and go to state 93
    ContinueStmt                   shift and go to state 214
    Conversion                     shift and go to state 92
    SimpleStmt                     shift and go to state 238
    Label                          shift and go to state 221
    ExpressionStmt                 shift and go to state 215
    PointerType                    shift and go to state 66
    ForStmt                        shift and go to state 239
    ExprSwitchStmt                 shift and go to state 222
    Statement                      shift and go to state 304
    Type                           shift and go to state 97
    IfStmt                         shift and go to state 223
    OperandName                    shift and go to state 99
    ArrayType                      shift and go to state 53
    Assignment                     shift and go to state 217
    TypeName                       shift and go to state 56
    IncDecStmt                     shift and go to state 224
    Declaration                    shift and go to state 231
    FunctionType                   shift and go to state 67
    GotoStmt                       shift and go to state 225
    StructType                     shift and go to state 58
    TypeDecl                       shift and go to state 19
    LabeledStmt                    shift and go to state 218
    epsilon                        shift and go to state 233
    UnaryExpr                      shift and go to state 106
    Operand                        shift and go to state 114
    ExpressionList                 shift and go to state 234
    Literal                        shift and go to state 95
    Expression                     shift and go to state 235
    ShortVarDecl                   shift and go to state 241
    Block                          shift and go to state 227
    TypeSwitchStmt                 shift and go to state 219
    BreakStmt                      shift and go to state 243
    SwitchStmt                     shift and go to state 228
    VarDecl                        shift and go to state 22
    TypeLit                        shift and go to state 55
    BasicLit                       shift and go to state 100
    PrimaryExpr                    shift and go to state 94
    ReturnStmt                     shift and go to state 237
    ConstDecl                      shift and go to state 18

state 261

    (205) ForClause -> SimpleStmt . SEMICOL ConditionOpt SEMICOL SimpleStmt

    SEMICOL         shift and go to state 305


state 262

    (75) ShortVarDecl -> IDENTIFIER . COLONEQ Expression
    (90) OperandName -> IDENTIFIER .

    COLONEQ         shift and go to state 277
    DOT             reduce using rule 90 (OperandName -> IDENTIFIER .)
    LBRACK          reduce using rule 90 (OperandName -> IDENTIFIER .)
    LPAREN          reduce using rule 90 (OperandName -> IDENTIFIER .)
    PLUSPLUS        reduce using rule 90 (OperandName -> IDENTIFIER .)
    MINUSMIN        reduce using rule 90 (OperandName -> IDENTIFIER .)
    OROR            reduce using rule 90 (OperandName -> IDENTIFIER .)
    AMPAMP          reduce using rule 90 (OperandName -> IDENTIFIER .)
    EQEQ            reduce using rule 90 (OperandName -> IDENTIFIER .)
    NOTEQ           reduce using rule 90 (OperandName -> IDENTIFIER .)
    LESS            reduce using rule 90 (OperandName -> IDENTIFIER .)
    GREAT           reduce using rule 90 (OperandName -> IDENTIFIER .)
    LEQ             reduce using rule 90 (OperandName -> IDENTIFIER .)
    GEQ             reduce using rule 90 (OperandName -> IDENTIFIER .)
    PLUS            reduce using rule 90 (OperandName -> IDENTIFIER .)
    MINUS           reduce using rule 90 (OperandName -> IDENTIFIER .)
    OR              reduce using rule 90 (OperandName -> IDENTIFIER .)
    CARET           reduce using rule 90 (OperandName -> IDENTIFIER .)
    TIMES           reduce using rule 90 (OperandName -> IDENTIFIER .)
    DIVIDE          reduce using rule 90 (OperandName -> IDENTIFIER .)
    MOD             reduce using rule 90 (OperandName -> IDENTIFIER .)
    AMPERS          reduce using rule 90 (OperandName -> IDENTIFIER .)
    LL              reduce using rule 90 (OperandName -> IDENTIFIER .)
    GG              reduce using rule 90 (OperandName -> IDENTIFIER .)
    AMPCAR          reduce using rule 90 (OperandName -> IDENTIFIER .)
    COMMA           reduce using rule 90 (OperandName -> IDENTIFIER .)
    LBRACE          reduce using rule 90 (OperandName -> IDENTIFIER .)
    SEMICOL         reduce using rule 90 (OperandName -> IDENTIFIER .)
    PLUSEQ          reduce using rule 90 (OperandName -> IDENTIFIER .)
    MINUSEQ         reduce using rule 90 (OperandName -> IDENTIFIER .)
    TIMESEQ         reduce using rule 90 (OperandName -> IDENTIFIER .)
    DIVIDEEQ        reduce using rule 90 (OperandName -> IDENTIFIER .)
    MODEQ           reduce using rule 90 (OperandName -> IDENTIFIER .)
    AMPEQ           reduce using rule 90 (OperandName -> IDENTIFIER .)
    OREQ            reduce using rule 90 (OperandName -> IDENTIFIER .)
    CAREQ           reduce using rule 90 (OperandName -> IDENTIFIER .)
    LLEQ            reduce using rule 90 (OperandName -> IDENTIFIER .)
    GGEQ            reduce using rule 90 (OperandName -> IDENTIFIER .)
    EQUAL           reduce using rule 90 (OperandName -> IDENTIFIER .)


state 263

    (202) ConditionBlockOpt -> Condition .

    LBRACE          reduce using rule 202 (ConditionBlockOpt -> Condition .)


state 264

    (201) ConditionBlockOpt -> epsilon .
    (151) SimpleStmt -> epsilon .

    LBRACE          reduce using rule 201 (ConditionBlockOpt -> epsilon .)
    SEMICOL         reduce using rule 151 (SimpleStmt -> epsilon .)


state 265

    (200) ForStmt -> FOR ConditionBlockOpt . Block
    (40) Block -> . LBRACE StatementList RBRACE

    LBRACE          shift and go to state 123

    Block                          shift and go to state 306

state 266

    (203) ConditionBlockOpt -> ForClause .

    LBRACE          reduce using rule 203 (ConditionBlockOpt -> ForClause .)


state 267

    (204) Condition -> Expression .
    (108) Expression -> Expression . BinaryOp Expression
    (158) ExpressionStmt -> Expression .
    (159) IncDecStmt -> Expression . PLUSPLUS
    (160) IncDecStmt -> Expression . MINUSMIN
    (104) ExpressionList -> Expression . ExpressionRep
    (113) BinaryOp -> . OROR
    (114) BinaryOp -> . AMPAMP
    (115) BinaryOp -> . RelOp
    (116) BinaryOp -> . AddOp
    (117) BinaryOp -> . MulOp
    (105) ExpressionRep -> . ExpressionRep COMMA Expression
    (106) ExpressionRep -> . epsilon
    (118) RelOp -> . EQEQ
    (119) RelOp -> . NOTEQ
    (120) RelOp -> . LESS
    (121) RelOp -> . GREAT
    (122) RelOp -> . LEQ
    (123) RelOp -> . GEQ
    (124) AddOp -> . PLUS
    (125) AddOp -> . MINUS
    (126) AddOp -> . OR
    (127) AddOp -> . CARET
    (128) MulOp -> . TIMES
    (129) MulOp -> . DIVIDE
    (130) MulOp -> . MOD
    (131) MulOp -> . AMPERS
    (132) MulOp -> . LL
    (133) MulOp -> . GG
    (134) MulOp -> . AMPCAR
    (236) epsilon -> .

    LBRACE          reduce using rule 204 (Condition -> Expression .)
    SEMICOL         reduce using rule 158 (ExpressionStmt -> Expression .)
    PLUSPLUS        shift and go to state 291
    MINUSMIN        shift and go to state 292
    OROR            shift and go to state 161
    AMPAMP          shift and go to state 167
    EQEQ            shift and go to state 166
    NOTEQ           shift and go to state 172
    LESS            shift and go to state 165
    GREAT           shift and go to state 163
    LEQ             shift and go to state 181
    GEQ             shift and go to state 170
    PLUS            shift and go to state 173
    MINUS           shift and go to state 169
    OR              shift and go to state 182
    CARET           shift and go to state 162
    TIMES           shift and go to state 177
    DIVIDE          shift and go to state 176
    MOD             shift and go to state 183
    AMPERS          shift and go to state 180
    LL              shift and go to state 171
    GG              shift and go to state 178
    AMPCAR          shift and go to state 164
    COMMA           reduce using rule 236 (epsilon -> .)
    PLUSEQ          reduce using rule 236 (epsilon -> .)
    MINUSEQ         reduce using rule 236 (epsilon -> .)
    TIMESEQ         reduce using rule 236 (epsilon -> .)
    DIVIDEEQ        reduce using rule 236 (epsilon -> .)
    MODEQ           reduce using rule 236 (epsilon -> .)
    AMPEQ           reduce using rule 236 (epsilon -> .)
    OREQ            reduce using rule 236 (epsilon -> .)
    CAREQ           reduce using rule 236 (epsilon -> .)
    LLEQ            reduce using rule 236 (epsilon -> .)
    GGEQ            reduce using rule 236 (epsilon -> .)
    EQUAL           reduce using rule 236 (epsilon -> .)

    AddOp                          shift and go to state 175
    ExpressionRep                  shift and go to state 194
    RelOp                          shift and go to state 179
    epsilon                        shift and go to state 195
    BinaryOp                       shift and go to state 174
    MulOp                          shift and go to state 168

state 268

    (218) LabelOpt -> epsilon .

    SEMICOL         reduce using rule 218 (LabelOpt -> epsilon .)


state 269

    (157) Label -> IDENTIFIER .

    SEMICOL         reduce using rule 157 (Label -> IDENTIFIER .)


state 270

    (216) ContinueStmt -> CONTINUE LabelOpt .

    SEMICOL         reduce using rule 216 (ContinueStmt -> CONTINUE LabelOpt .)


state 271

    (217) LabelOpt -> Label .

    SEMICOL         reduce using rule 217 (LabelOpt -> Label .)


state 272

    (175) SimpleStmtOpt -> SimpleStmt . SEMICOL

    SEMICOL         shift and go to state 307


state 273

    (182) ExprSwitchStmt -> SWITCH ExpressionOpt . LBRACE ExprCaseClauseRep RBRACE

    LBRACE          shift and go to state 308


state 274

    (110) ExpressionOpt -> epsilon .
    (176) SimpleStmtOpt -> epsilon .
    (151) SimpleStmt -> epsilon .

    LBRACE          reduce using rule 110 (ExpressionOpt -> epsilon .)
    IDENTIFIER      reduce using rule 176 (SimpleStmtOpt -> epsilon .)
    LPAREN          reduce using rule 176 (SimpleStmtOpt -> epsilon .)
    INTEGER         reduce using rule 176 (SimpleStmtOpt -> epsilon .)
    FLOAT           reduce using rule 176 (SimpleStmtOpt -> epsilon .)
    IMAGINARY       reduce using rule 176 (SimpleStmtOpt -> epsilon .)
    RUNE            reduce using rule 176 (SimpleStmtOpt -> epsilon .)
    STRING          reduce using rule 176 (SimpleStmtOpt -> epsilon .)
    TYPEX           reduce using rule 176 (SimpleStmtOpt -> epsilon .)
    LBRACK          reduce using rule 176 (SimpleStmtOpt -> epsilon .)
    STRUCT          reduce using rule 176 (SimpleStmtOpt -> epsilon .)
    TIMES           reduce using rule 176 (SimpleStmtOpt -> epsilon .)
    FUNC            reduce using rule 176 (SimpleStmtOpt -> epsilon .)
    SEMICOL         reduce using rule 151 (SimpleStmt -> epsilon .)


state 275

    (188) TypeSwitchStmt -> SWITCH SimpleStmtOpt . TypeSwitchGuard LBRACE TypeCaseClauseOpt RBRACE
    (189) TypeSwitchGuard -> . IdentifierOpt PrimaryExpr DOT LPAREN TYPE RPAREN
    (190) IdentifierOpt -> . IDENTIFIER COLONEQ
    (191) IdentifierOpt -> . epsilon
    (236) epsilon -> .

  ! shift/reduce conflict for IDENTIFIER resolved as shift
    IDENTIFIER      shift and go to state 312
    LPAREN          reduce using rule 236 (epsilon -> .)
    INTEGER         reduce using rule 236 (epsilon -> .)
    FLOAT           reduce using rule 236 (epsilon -> .)
    IMAGINARY       reduce using rule 236 (epsilon -> .)
    RUNE            reduce using rule 236 (epsilon -> .)
    STRING          reduce using rule 236 (epsilon -> .)
    TYPEX           reduce using rule 236 (epsilon -> .)
    LBRACK          reduce using rule 236 (epsilon -> .)
    STRUCT          reduce using rule 236 (epsilon -> .)
    TIMES           reduce using rule 236 (epsilon -> .)
    FUNC            reduce using rule 236 (epsilon -> .)

  ! IDENTIFIER      [ reduce using rule 236 (epsilon -> .) ]

    epsilon                        shift and go to state 309
    TypeSwitchGuard                shift and go to state 310
    IdentifierOpt                  shift and go to state 311

state 276

    (109) ExpressionOpt -> Expression .
    (108) Expression -> Expression . BinaryOp Expression
    (158) ExpressionStmt -> Expression .
    (159) IncDecStmt -> Expression . PLUSPLUS
    (160) IncDecStmt -> Expression . MINUSMIN
    (104) ExpressionList -> Expression . ExpressionRep
    (113) BinaryOp -> . OROR
    (114) BinaryOp -> . AMPAMP
    (115) BinaryOp -> . RelOp
    (116) BinaryOp -> . AddOp
    (117) BinaryOp -> . MulOp
    (105) ExpressionRep -> . ExpressionRep COMMA Expression
    (106) ExpressionRep -> . epsilon
    (118) RelOp -> . EQEQ
    (119) RelOp -> . NOTEQ
    (120) RelOp -> . LESS
    (121) RelOp -> . GREAT
    (122) RelOp -> . LEQ
    (123) RelOp -> . GEQ
    (124) AddOp -> . PLUS
    (125) AddOp -> . MINUS
    (126) AddOp -> . OR
    (127) AddOp -> . CARET
    (128) MulOp -> . TIMES
    (129) MulOp -> . DIVIDE
    (130) MulOp -> . MOD
    (131) MulOp -> . AMPERS
    (132) MulOp -> . LL
    (133) MulOp -> . GG
    (134) MulOp -> . AMPCAR
    (236) epsilon -> .

    LBRACE          reduce using rule 109 (ExpressionOpt -> Expression .)
    SEMICOL         reduce using rule 158 (ExpressionStmt -> Expression .)
    PLUSPLUS        shift and go to state 291
    MINUSMIN        shift and go to state 292
    OROR            shift and go to state 161
    AMPAMP          shift and go to state 167
    EQEQ            shift and go to state 166
    NOTEQ           shift and go to state 172
    LESS            shift and go to state 165
    GREAT           shift and go to state 163
    LEQ             shift and go to state 181
    GEQ             shift and go to state 170
    PLUS            shift and go to state 173
    MINUS           shift and go to state 169
    OR              shift and go to state 182
    CARET           shift and go to state 162
    TIMES           shift and go to state 177
    DIVIDE          shift and go to state 176
    MOD             shift and go to state 183
    AMPERS          shift and go to state 180
    LL              shift and go to state 171
    GG              shift and go to state 178
    AMPCAR          shift and go to state 164
    COMMA           reduce using rule 236 (epsilon -> .)
    PLUSEQ          reduce using rule 236 (epsilon -> .)
    MINUSEQ         reduce using rule 236 (epsilon -> .)
    TIMESEQ         reduce using rule 236 (epsilon -> .)
    DIVIDEEQ        reduce using rule 236 (epsilon -> .)
    MODEQ           reduce using rule 236 (epsilon -> .)
    AMPEQ           reduce using rule 236 (epsilon -> .)
    OREQ            reduce using rule 236 (epsilon -> .)
    CAREQ           reduce using rule 236 (epsilon -> .)
    LLEQ            reduce using rule 236 (epsilon -> .)
    GGEQ            reduce using rule 236 (epsilon -> .)
    EQUAL           reduce using rule 236 (epsilon -> .)

    AddOp                          shift and go to state 175
    ExpressionRep                  shift and go to state 194
    RelOp                          shift and go to state 179
    epsilon                        shift and go to state 195
    BinaryOp                       shift and go to state 174
    MulOp                          shift and go to state 168

state 277

    (75) ShortVarDecl -> IDENTIFIER COLONEQ . Expression
    (107) Expression -> . UnaryExpr
    (108) Expression -> . Expression BinaryOp Expression
    (111) UnaryExpr -> . PrimaryExpr
    (112) UnaryExpr -> . UnaryOp UnaryExpr
    (92) PrimaryExpr -> . Operand
    (93) PrimaryExpr -> . Conversion
    (94) PrimaryExpr -> . PrimaryExpr Selector
    (95) PrimaryExpr -> . PrimaryExpr Index
    (96) PrimaryExpr -> . PrimaryExpr Slice
    (97) PrimaryExpr -> . PrimaryExpr Arguments
    (135) UnaryOp -> . PLUS
    (136) UnaryOp -> . MINUS
    (137) UnaryOp -> . TIMES
    (138) UnaryOp -> . AMPERS
    (139) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (91) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (90) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . INTEGER
    (86) BasicLit -> . FLOAT
    (87) BasicLit -> . IMAGINARY
    (88) BasicLit -> . RUNE
    (89) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 101
    MINUS           shift and go to state 98
    TIMES           shift and go to state 107
    AMPERS          shift and go to state 113
    NOT             shift and go to state 108
    LPAREN          shift and go to state 110
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 112
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 105
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 92
    UnaryOp                        shift and go to state 93
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    Type                           shift and go to state 97
    OperandName                    shift and go to state 99
    BasicLit                       shift and go to state 100
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    UnaryExpr                      shift and go to state 106
    PrimaryExpr                    shift and go to state 94
    Expression                     shift and go to state 313
    PointerType                    shift and go to state 66
    TypeLit                        shift and go to state 55
    Operand                        shift and go to state 114
    FunctionType                   shift and go to state 67

state 278

    (162) assign_op -> AssignOp .

    PLUS            reduce using rule 162 (assign_op -> AssignOp .)
    MINUS           reduce using rule 162 (assign_op -> AssignOp .)
    TIMES           reduce using rule 162 (assign_op -> AssignOp .)
    AMPERS          reduce using rule 162 (assign_op -> AssignOp .)
    NOT             reduce using rule 162 (assign_op -> AssignOp .)
    LPAREN          reduce using rule 162 (assign_op -> AssignOp .)
    IDENTIFIER      reduce using rule 162 (assign_op -> AssignOp .)
    INTEGER         reduce using rule 162 (assign_op -> AssignOp .)
    FLOAT           reduce using rule 162 (assign_op -> AssignOp .)
    IMAGINARY       reduce using rule 162 (assign_op -> AssignOp .)
    RUNE            reduce using rule 162 (assign_op -> AssignOp .)
    STRING          reduce using rule 162 (assign_op -> AssignOp .)
    TYPEX           reduce using rule 162 (assign_op -> AssignOp .)
    LBRACK          reduce using rule 162 (assign_op -> AssignOp .)
    STRUCT          reduce using rule 162 (assign_op -> AssignOp .)
    FUNC            reduce using rule 162 (assign_op -> AssignOp .)


state 279

    (173) AssignOp -> EQUAL .

    PLUS            reduce using rule 173 (AssignOp -> EQUAL .)
    MINUS           reduce using rule 173 (AssignOp -> EQUAL .)
    TIMES           reduce using rule 173 (AssignOp -> EQUAL .)
    AMPERS          reduce using rule 173 (AssignOp -> EQUAL .)
    NOT             reduce using rule 173 (AssignOp -> EQUAL .)
    LPAREN          reduce using rule 173 (AssignOp -> EQUAL .)
    IDENTIFIER      reduce using rule 173 (AssignOp -> EQUAL .)
    INTEGER         reduce using rule 173 (AssignOp -> EQUAL .)
    FLOAT           reduce using rule 173 (AssignOp -> EQUAL .)
    IMAGINARY       reduce using rule 173 (AssignOp -> EQUAL .)
    RUNE            reduce using rule 173 (AssignOp -> EQUAL .)
    STRING          reduce using rule 173 (AssignOp -> EQUAL .)
    TYPEX           reduce using rule 173 (AssignOp -> EQUAL .)
    LBRACK          reduce using rule 173 (AssignOp -> EQUAL .)
    STRUCT          reduce using rule 173 (AssignOp -> EQUAL .)
    FUNC            reduce using rule 173 (AssignOp -> EQUAL .)


state 280

    (170) AssignOp -> CAREQ .

    PLUS            reduce using rule 170 (AssignOp -> CAREQ .)
    MINUS           reduce using rule 170 (AssignOp -> CAREQ .)
    TIMES           reduce using rule 170 (AssignOp -> CAREQ .)
    AMPERS          reduce using rule 170 (AssignOp -> CAREQ .)
    NOT             reduce using rule 170 (AssignOp -> CAREQ .)
    LPAREN          reduce using rule 170 (AssignOp -> CAREQ .)
    IDENTIFIER      reduce using rule 170 (AssignOp -> CAREQ .)
    INTEGER         reduce using rule 170 (AssignOp -> CAREQ .)
    FLOAT           reduce using rule 170 (AssignOp -> CAREQ .)
    IMAGINARY       reduce using rule 170 (AssignOp -> CAREQ .)
    RUNE            reduce using rule 170 (AssignOp -> CAREQ .)
    STRING          reduce using rule 170 (AssignOp -> CAREQ .)
    TYPEX           reduce using rule 170 (AssignOp -> CAREQ .)
    LBRACK          reduce using rule 170 (AssignOp -> CAREQ .)
    STRUCT          reduce using rule 170 (AssignOp -> CAREQ .)
    FUNC            reduce using rule 170 (AssignOp -> CAREQ .)


state 281

    (165) AssignOp -> TIMESEQ .

    PLUS            reduce using rule 165 (AssignOp -> TIMESEQ .)
    MINUS           reduce using rule 165 (AssignOp -> TIMESEQ .)
    TIMES           reduce using rule 165 (AssignOp -> TIMESEQ .)
    AMPERS          reduce using rule 165 (AssignOp -> TIMESEQ .)
    NOT             reduce using rule 165 (AssignOp -> TIMESEQ .)
    LPAREN          reduce using rule 165 (AssignOp -> TIMESEQ .)
    IDENTIFIER      reduce using rule 165 (AssignOp -> TIMESEQ .)
    INTEGER         reduce using rule 165 (AssignOp -> TIMESEQ .)
    FLOAT           reduce using rule 165 (AssignOp -> TIMESEQ .)
    IMAGINARY       reduce using rule 165 (AssignOp -> TIMESEQ .)
    RUNE            reduce using rule 165 (AssignOp -> TIMESEQ .)
    STRING          reduce using rule 165 (AssignOp -> TIMESEQ .)
    TYPEX           reduce using rule 165 (AssignOp -> TIMESEQ .)
    LBRACK          reduce using rule 165 (AssignOp -> TIMESEQ .)
    STRUCT          reduce using rule 165 (AssignOp -> TIMESEQ .)
    FUNC            reduce using rule 165 (AssignOp -> TIMESEQ .)


state 282

    (163) AssignOp -> PLUSEQ .

    PLUS            reduce using rule 163 (AssignOp -> PLUSEQ .)
    MINUS           reduce using rule 163 (AssignOp -> PLUSEQ .)
    TIMES           reduce using rule 163 (AssignOp -> PLUSEQ .)
    AMPERS          reduce using rule 163 (AssignOp -> PLUSEQ .)
    NOT             reduce using rule 163 (AssignOp -> PLUSEQ .)
    LPAREN          reduce using rule 163 (AssignOp -> PLUSEQ .)
    IDENTIFIER      reduce using rule 163 (AssignOp -> PLUSEQ .)
    INTEGER         reduce using rule 163 (AssignOp -> PLUSEQ .)
    FLOAT           reduce using rule 163 (AssignOp -> PLUSEQ .)
    IMAGINARY       reduce using rule 163 (AssignOp -> PLUSEQ .)
    RUNE            reduce using rule 163 (AssignOp -> PLUSEQ .)
    STRING          reduce using rule 163 (AssignOp -> PLUSEQ .)
    TYPEX           reduce using rule 163 (AssignOp -> PLUSEQ .)
    LBRACK          reduce using rule 163 (AssignOp -> PLUSEQ .)
    STRUCT          reduce using rule 163 (AssignOp -> PLUSEQ .)
    FUNC            reduce using rule 163 (AssignOp -> PLUSEQ .)


state 283

    (167) AssignOp -> MODEQ .

    PLUS            reduce using rule 167 (AssignOp -> MODEQ .)
    MINUS           reduce using rule 167 (AssignOp -> MODEQ .)
    TIMES           reduce using rule 167 (AssignOp -> MODEQ .)
    AMPERS          reduce using rule 167 (AssignOp -> MODEQ .)
    NOT             reduce using rule 167 (AssignOp -> MODEQ .)
    LPAREN          reduce using rule 167 (AssignOp -> MODEQ .)
    IDENTIFIER      reduce using rule 167 (AssignOp -> MODEQ .)
    INTEGER         reduce using rule 167 (AssignOp -> MODEQ .)
    FLOAT           reduce using rule 167 (AssignOp -> MODEQ .)
    IMAGINARY       reduce using rule 167 (AssignOp -> MODEQ .)
    RUNE            reduce using rule 167 (AssignOp -> MODEQ .)
    STRING          reduce using rule 167 (AssignOp -> MODEQ .)
    TYPEX           reduce using rule 167 (AssignOp -> MODEQ .)
    LBRACK          reduce using rule 167 (AssignOp -> MODEQ .)
    STRUCT          reduce using rule 167 (AssignOp -> MODEQ .)
    FUNC            reduce using rule 167 (AssignOp -> MODEQ .)


state 284

    (172) AssignOp -> GGEQ .

    PLUS            reduce using rule 172 (AssignOp -> GGEQ .)
    MINUS           reduce using rule 172 (AssignOp -> GGEQ .)
    TIMES           reduce using rule 172 (AssignOp -> GGEQ .)
    AMPERS          reduce using rule 172 (AssignOp -> GGEQ .)
    NOT             reduce using rule 172 (AssignOp -> GGEQ .)
    LPAREN          reduce using rule 172 (AssignOp -> GGEQ .)
    IDENTIFIER      reduce using rule 172 (AssignOp -> GGEQ .)
    INTEGER         reduce using rule 172 (AssignOp -> GGEQ .)
    FLOAT           reduce using rule 172 (AssignOp -> GGEQ .)
    IMAGINARY       reduce using rule 172 (AssignOp -> GGEQ .)
    RUNE            reduce using rule 172 (AssignOp -> GGEQ .)
    STRING          reduce using rule 172 (AssignOp -> GGEQ .)
    TYPEX           reduce using rule 172 (AssignOp -> GGEQ .)
    LBRACK          reduce using rule 172 (AssignOp -> GGEQ .)
    STRUCT          reduce using rule 172 (AssignOp -> GGEQ .)
    FUNC            reduce using rule 172 (AssignOp -> GGEQ .)


state 285

    (171) AssignOp -> LLEQ .

    PLUS            reduce using rule 171 (AssignOp -> LLEQ .)
    MINUS           reduce using rule 171 (AssignOp -> LLEQ .)
    TIMES           reduce using rule 171 (AssignOp -> LLEQ .)
    AMPERS          reduce using rule 171 (AssignOp -> LLEQ .)
    NOT             reduce using rule 171 (AssignOp -> LLEQ .)
    LPAREN          reduce using rule 171 (AssignOp -> LLEQ .)
    IDENTIFIER      reduce using rule 171 (AssignOp -> LLEQ .)
    INTEGER         reduce using rule 171 (AssignOp -> LLEQ .)
    FLOAT           reduce using rule 171 (AssignOp -> LLEQ .)
    IMAGINARY       reduce using rule 171 (AssignOp -> LLEQ .)
    RUNE            reduce using rule 171 (AssignOp -> LLEQ .)
    STRING          reduce using rule 171 (AssignOp -> LLEQ .)
    TYPEX           reduce using rule 171 (AssignOp -> LLEQ .)
    LBRACK          reduce using rule 171 (AssignOp -> LLEQ .)
    STRUCT          reduce using rule 171 (AssignOp -> LLEQ .)
    FUNC            reduce using rule 171 (AssignOp -> LLEQ .)


state 286

    (169) AssignOp -> OREQ .

    PLUS            reduce using rule 169 (AssignOp -> OREQ .)
    MINUS           reduce using rule 169 (AssignOp -> OREQ .)
    TIMES           reduce using rule 169 (AssignOp -> OREQ .)
    AMPERS          reduce using rule 169 (AssignOp -> OREQ .)
    NOT             reduce using rule 169 (AssignOp -> OREQ .)
    LPAREN          reduce using rule 169 (AssignOp -> OREQ .)
    IDENTIFIER      reduce using rule 169 (AssignOp -> OREQ .)
    INTEGER         reduce using rule 169 (AssignOp -> OREQ .)
    FLOAT           reduce using rule 169 (AssignOp -> OREQ .)
    IMAGINARY       reduce using rule 169 (AssignOp -> OREQ .)
    RUNE            reduce using rule 169 (AssignOp -> OREQ .)
    STRING          reduce using rule 169 (AssignOp -> OREQ .)
    TYPEX           reduce using rule 169 (AssignOp -> OREQ .)
    LBRACK          reduce using rule 169 (AssignOp -> OREQ .)
    STRUCT          reduce using rule 169 (AssignOp -> OREQ .)
    FUNC            reduce using rule 169 (AssignOp -> OREQ .)


state 287

    (164) AssignOp -> MINUSEQ .

    PLUS            reduce using rule 164 (AssignOp -> MINUSEQ .)
    MINUS           reduce using rule 164 (AssignOp -> MINUSEQ .)
    TIMES           reduce using rule 164 (AssignOp -> MINUSEQ .)
    AMPERS          reduce using rule 164 (AssignOp -> MINUSEQ .)
    NOT             reduce using rule 164 (AssignOp -> MINUSEQ .)
    LPAREN          reduce using rule 164 (AssignOp -> MINUSEQ .)
    IDENTIFIER      reduce using rule 164 (AssignOp -> MINUSEQ .)
    INTEGER         reduce using rule 164 (AssignOp -> MINUSEQ .)
    FLOAT           reduce using rule 164 (AssignOp -> MINUSEQ .)
    IMAGINARY       reduce using rule 164 (AssignOp -> MINUSEQ .)
    RUNE            reduce using rule 164 (AssignOp -> MINUSEQ .)
    STRING          reduce using rule 164 (AssignOp -> MINUSEQ .)
    TYPEX           reduce using rule 164 (AssignOp -> MINUSEQ .)
    LBRACK          reduce using rule 164 (AssignOp -> MINUSEQ .)
    STRUCT          reduce using rule 164 (AssignOp -> MINUSEQ .)
    FUNC            reduce using rule 164 (AssignOp -> MINUSEQ .)


state 288

    (168) AssignOp -> AMPEQ .

    PLUS            reduce using rule 168 (AssignOp -> AMPEQ .)
    MINUS           reduce using rule 168 (AssignOp -> AMPEQ .)
    TIMES           reduce using rule 168 (AssignOp -> AMPEQ .)
    AMPERS          reduce using rule 168 (AssignOp -> AMPEQ .)
    NOT             reduce using rule 168 (AssignOp -> AMPEQ .)
    LPAREN          reduce using rule 168 (AssignOp -> AMPEQ .)
    IDENTIFIER      reduce using rule 168 (AssignOp -> AMPEQ .)
    INTEGER         reduce using rule 168 (AssignOp -> AMPEQ .)
    FLOAT           reduce using rule 168 (AssignOp -> AMPEQ .)
    IMAGINARY       reduce using rule 168 (AssignOp -> AMPEQ .)
    RUNE            reduce using rule 168 (AssignOp -> AMPEQ .)
    STRING          reduce using rule 168 (AssignOp -> AMPEQ .)
    TYPEX           reduce using rule 168 (AssignOp -> AMPEQ .)
    LBRACK          reduce using rule 168 (AssignOp -> AMPEQ .)
    STRUCT          reduce using rule 168 (AssignOp -> AMPEQ .)
    FUNC            reduce using rule 168 (AssignOp -> AMPEQ .)


state 289

    (161) Assignment -> ExpressionList assign_op . ExpressionList
    (104) ExpressionList -> . Expression ExpressionRep
    (107) Expression -> . UnaryExpr
    (108) Expression -> . Expression BinaryOp Expression
    (111) UnaryExpr -> . PrimaryExpr
    (112) UnaryExpr -> . UnaryOp UnaryExpr
    (92) PrimaryExpr -> . Operand
    (93) PrimaryExpr -> . Conversion
    (94) PrimaryExpr -> . PrimaryExpr Selector
    (95) PrimaryExpr -> . PrimaryExpr Index
    (96) PrimaryExpr -> . PrimaryExpr Slice
    (97) PrimaryExpr -> . PrimaryExpr Arguments
    (135) UnaryOp -> . PLUS
    (136) UnaryOp -> . MINUS
    (137) UnaryOp -> . TIMES
    (138) UnaryOp -> . AMPERS
    (139) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (91) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (90) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . INTEGER
    (86) BasicLit -> . FLOAT
    (87) BasicLit -> . IMAGINARY
    (88) BasicLit -> . RUNE
    (89) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 101
    MINUS           shift and go to state 98
    TIMES           shift and go to state 107
    AMPERS          shift and go to state 113
    NOT             shift and go to state 108
    LPAREN          shift and go to state 110
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 112
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 105
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    UnaryOp                        shift and go to state 93
    Conversion                     shift and go to state 92
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    Type                           shift and go to state 97
    OperandName                    shift and go to state 99
    BasicLit                       shift and go to state 100
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    UnaryExpr                      shift and go to state 106
    PrimaryExpr                    shift and go to state 94
    ExpressionList                 shift and go to state 314
    Expression                     shift and go to state 135
    PointerType                    shift and go to state 66
    TypeLit                        shift and go to state 55
    Operand                        shift and go to state 114
    FunctionType                   shift and go to state 67

state 290

    (166) AssignOp -> DIVIDEEQ .

    PLUS            reduce using rule 166 (AssignOp -> DIVIDEEQ .)
    MINUS           reduce using rule 166 (AssignOp -> DIVIDEEQ .)
    TIMES           reduce using rule 166 (AssignOp -> DIVIDEEQ .)
    AMPERS          reduce using rule 166 (AssignOp -> DIVIDEEQ .)
    NOT             reduce using rule 166 (AssignOp -> DIVIDEEQ .)
    LPAREN          reduce using rule 166 (AssignOp -> DIVIDEEQ .)
    IDENTIFIER      reduce using rule 166 (AssignOp -> DIVIDEEQ .)
    INTEGER         reduce using rule 166 (AssignOp -> DIVIDEEQ .)
    FLOAT           reduce using rule 166 (AssignOp -> DIVIDEEQ .)
    IMAGINARY       reduce using rule 166 (AssignOp -> DIVIDEEQ .)
    RUNE            reduce using rule 166 (AssignOp -> DIVIDEEQ .)
    STRING          reduce using rule 166 (AssignOp -> DIVIDEEQ .)
    TYPEX           reduce using rule 166 (AssignOp -> DIVIDEEQ .)
    LBRACK          reduce using rule 166 (AssignOp -> DIVIDEEQ .)
    STRUCT          reduce using rule 166 (AssignOp -> DIVIDEEQ .)
    FUNC            reduce using rule 166 (AssignOp -> DIVIDEEQ .)


state 291

    (159) IncDecStmt -> Expression PLUSPLUS .

    SEMICOL         reduce using rule 159 (IncDecStmt -> Expression PLUSPLUS .)
    LBRACE          reduce using rule 159 (IncDecStmt -> Expression PLUSPLUS .)


state 292

    (160) IncDecStmt -> Expression MINUSMIN .

    SEMICOL         reduce using rule 160 (IncDecStmt -> Expression MINUSMIN .)
    LBRACE          reduce using rule 160 (IncDecStmt -> Expression MINUSMIN .)


state 293

    (215) BreakStmt -> BREAK LabelOpt .

    SEMICOL         reduce using rule 215 (BreakStmt -> BREAK LabelOpt .)


state 294

    (219) GotoStmt -> GOTO Label .

    SEMICOL         reduce using rule 219 (GotoStmt -> GOTO Label .)


state 295

    (174) IfStmt -> IF Expression . Block ElseOpt
    (108) Expression -> Expression . BinaryOp Expression
    (40) Block -> . LBRACE StatementList RBRACE
    (113) BinaryOp -> . OROR
    (114) BinaryOp -> . AMPAMP
    (115) BinaryOp -> . RelOp
    (116) BinaryOp -> . AddOp
    (117) BinaryOp -> . MulOp
    (118) RelOp -> . EQEQ
    (119) RelOp -> . NOTEQ
    (120) RelOp -> . LESS
    (121) RelOp -> . GREAT
    (122) RelOp -> . LEQ
    (123) RelOp -> . GEQ
    (124) AddOp -> . PLUS
    (125) AddOp -> . MINUS
    (126) AddOp -> . OR
    (127) AddOp -> . CARET
    (128) MulOp -> . TIMES
    (129) MulOp -> . DIVIDE
    (130) MulOp -> . MOD
    (131) MulOp -> . AMPERS
    (132) MulOp -> . LL
    (133) MulOp -> . GG
    (134) MulOp -> . AMPCAR

    LBRACE          shift and go to state 123
    OROR            shift and go to state 161
    AMPAMP          shift and go to state 167
    EQEQ            shift and go to state 166
    NOTEQ           shift and go to state 172
    LESS            shift and go to state 165
    GREAT           shift and go to state 163
    LEQ             shift and go to state 181
    GEQ             shift and go to state 170
    PLUS            shift and go to state 173
    MINUS           shift and go to state 169
    OR              shift and go to state 182
    CARET           shift and go to state 162
    TIMES           shift and go to state 177
    DIVIDE          shift and go to state 176
    MOD             shift and go to state 183
    AMPERS          shift and go to state 180
    LL              shift and go to state 171
    GG              shift and go to state 178
    AMPCAR          shift and go to state 164

    AddOp                          shift and go to state 175
    RelOp                          shift and go to state 179
    BinaryOp                       shift and go to state 174
    MulOp                          shift and go to state 168
    Block                          shift and go to state 315

state 296

    (38) ParameterDecl -> IdentifierList Type .

    COMMA           reduce using rule 38 (ParameterDecl -> IdentifierList Type .)
    RPAREN          reduce using rule 38 (ParameterDecl -> IdentifierList Type .)


state 297

    (105) ExpressionRep -> ExpressionRep COMMA Expression .
    (108) Expression -> Expression . BinaryOp Expression
    (113) BinaryOp -> . OROR
    (114) BinaryOp -> . AMPAMP
    (115) BinaryOp -> . RelOp
    (116) BinaryOp -> . AddOp
    (117) BinaryOp -> . MulOp
    (118) RelOp -> . EQEQ
    (119) RelOp -> . NOTEQ
    (120) RelOp -> . LESS
    (121) RelOp -> . GREAT
    (122) RelOp -> . LEQ
    (123) RelOp -> . GEQ
    (124) AddOp -> . PLUS
    (125) AddOp -> . MINUS
    (126) AddOp -> . OR
    (127) AddOp -> . CARET
    (128) MulOp -> . TIMES
    (129) MulOp -> . DIVIDE
    (130) MulOp -> . MOD
    (131) MulOp -> . AMPERS
    (132) MulOp -> . LL
    (133) MulOp -> . GG
    (134) MulOp -> . AMPCAR

    COMMA           reduce using rule 105 (ExpressionRep -> ExpressionRep COMMA Expression .)
    SEMICOL         reduce using rule 105 (ExpressionRep -> ExpressionRep COMMA Expression .)
    RPAREN          reduce using rule 105 (ExpressionRep -> ExpressionRep COMMA Expression .)
    LBRACE          reduce using rule 105 (ExpressionRep -> ExpressionRep COMMA Expression .)
    COLON           reduce using rule 105 (ExpressionRep -> ExpressionRep COMMA Expression .)
    PLUSEQ          reduce using rule 105 (ExpressionRep -> ExpressionRep COMMA Expression .)
    MINUSEQ         reduce using rule 105 (ExpressionRep -> ExpressionRep COMMA Expression .)
    TIMESEQ         reduce using rule 105 (ExpressionRep -> ExpressionRep COMMA Expression .)
    DIVIDEEQ        reduce using rule 105 (ExpressionRep -> ExpressionRep COMMA Expression .)
    MODEQ           reduce using rule 105 (ExpressionRep -> ExpressionRep COMMA Expression .)
    AMPEQ           reduce using rule 105 (ExpressionRep -> ExpressionRep COMMA Expression .)
    OREQ            reduce using rule 105 (ExpressionRep -> ExpressionRep COMMA Expression .)
    CAREQ           reduce using rule 105 (ExpressionRep -> ExpressionRep COMMA Expression .)
    LLEQ            reduce using rule 105 (ExpressionRep -> ExpressionRep COMMA Expression .)
    GGEQ            reduce using rule 105 (ExpressionRep -> ExpressionRep COMMA Expression .)
    EQUAL           reduce using rule 105 (ExpressionRep -> ExpressionRep COMMA Expression .)
    OROR            shift and go to state 161
    AMPAMP          shift and go to state 167
    EQEQ            shift and go to state 166
    NOTEQ           shift and go to state 172
    LESS            shift and go to state 165
    GREAT           shift and go to state 163
    LEQ             shift and go to state 181
    GEQ             shift and go to state 170
    PLUS            shift and go to state 173
    MINUS           shift and go to state 169
    OR              shift and go to state 182
    CARET           shift and go to state 162
    TIMES           shift and go to state 177
    DIVIDE          shift and go to state 176
    MOD             shift and go to state 183
    AMPERS          shift and go to state 180
    LL              shift and go to state 171
    GG              shift and go to state 178
    AMPCAR          shift and go to state 164

    AddOp                          shift and go to state 175
    RelOp                          shift and go to state 179
    BinaryOp                       shift and go to state 174
    MulOp                          shift and go to state 168

state 298

    (21) Tag -> STRING .

    SEMICOL         reduce using rule 21 (Tag -> STRING .)


state 299

    (20) TagOpt -> epsilon .

    SEMICOL         reduce using rule 20 (TagOpt -> epsilon .)


state 300

    (19) TagOpt -> Tag .

    SEMICOL         reduce using rule 19 (TagOpt -> Tag .)


state 301

    (18) FieldDecl -> IdentifierList Type TagOpt .

    SEMICOL         reduce using rule 18 (FieldDecl -> IdentifierList Type TagOpt .)


state 302

    (100) Slice -> LBRACK ExpressionOpt COLON ExpressionOpt . RBRACK

    RBRACK          shift and go to state 316


state 303

    (109) ExpressionOpt -> Expression .
    (108) Expression -> Expression . BinaryOp Expression
    (113) BinaryOp -> . OROR
    (114) BinaryOp -> . AMPAMP
    (115) BinaryOp -> . RelOp
    (116) BinaryOp -> . AddOp
    (117) BinaryOp -> . MulOp
    (118) RelOp -> . EQEQ
    (119) RelOp -> . NOTEQ
    (120) RelOp -> . LESS
    (121) RelOp -> . GREAT
    (122) RelOp -> . LEQ
    (123) RelOp -> . GEQ
    (124) AddOp -> . PLUS
    (125) AddOp -> . MINUS
    (126) AddOp -> . OR
    (127) AddOp -> . CARET
    (128) MulOp -> . TIMES
    (129) MulOp -> . DIVIDE
    (130) MulOp -> . MOD
    (131) MulOp -> . AMPERS
    (132) MulOp -> . LL
    (133) MulOp -> . GG
    (134) MulOp -> . AMPCAR

    RBRACK          reduce using rule 109 (ExpressionOpt -> Expression .)
    OROR            shift and go to state 161
    AMPAMP          shift and go to state 167
    EQEQ            shift and go to state 166
    NOTEQ           shift and go to state 172
    LESS            shift and go to state 165
    GREAT           shift and go to state 163
    LEQ             shift and go to state 181
    GEQ             shift and go to state 170
    PLUS            shift and go to state 173
    MINUS           shift and go to state 169
    OR              shift and go to state 182
    CARET           shift and go to state 162
    TIMES           shift and go to state 177
    DIVIDE          shift and go to state 176
    MOD             shift and go to state 183
    AMPERS          shift and go to state 180
    LL              shift and go to state 171
    GG              shift and go to state 178
    AMPCAR          shift and go to state 164

    AddOp                          shift and go to state 175
    MulOp                          shift and go to state 168
    RelOp                          shift and go to state 179
    BinaryOp                       shift and go to state 174

state 304

    (156) LabeledStmt -> Label COLON Statement .

    SEMICOL         reduce using rule 156 (LabeledStmt -> Label COLON Statement .)


state 305

    (205) ForClause -> SimpleStmt SEMICOL . ConditionOpt SEMICOL SimpleStmt
    (206) ConditionOpt -> . epsilon
    (207) ConditionOpt -> . Condition
    (236) epsilon -> .
    (204) Condition -> . Expression
    (107) Expression -> . UnaryExpr
    (108) Expression -> . Expression BinaryOp Expression
    (111) UnaryExpr -> . PrimaryExpr
    (112) UnaryExpr -> . UnaryOp UnaryExpr
    (92) PrimaryExpr -> . Operand
    (93) PrimaryExpr -> . Conversion
    (94) PrimaryExpr -> . PrimaryExpr Selector
    (95) PrimaryExpr -> . PrimaryExpr Index
    (96) PrimaryExpr -> . PrimaryExpr Slice
    (97) PrimaryExpr -> . PrimaryExpr Arguments
    (135) UnaryOp -> . PLUS
    (136) UnaryOp -> . MINUS
    (137) UnaryOp -> . TIMES
    (138) UnaryOp -> . AMPERS
    (139) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (91) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (90) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . INTEGER
    (86) BasicLit -> . FLOAT
    (87) BasicLit -> . IMAGINARY
    (88) BasicLit -> . RUNE
    (89) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    SEMICOL         reduce using rule 236 (epsilon -> .)
    PLUS            shift and go to state 101
    MINUS           shift and go to state 98
    TIMES           shift and go to state 107
    AMPERS          shift and go to state 113
    NOT             shift and go to state 108
    LPAREN          shift and go to state 110
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 112
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 105
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 92
    UnaryOp                        shift and go to state 93
    Literal                        shift and go to state 95
    Type                           shift and go to state 97
    OperandName                    shift and go to state 99
    BasicLit                       shift and go to state 100
    TypeName                       shift and go to state 56
    Condition                      shift and go to state 317
    StructType                     shift and go to state 58
    epsilon                        shift and go to state 318
    UnaryExpr                      shift and go to state 106
    PrimaryExpr                    shift and go to state 94
    ConditionOpt                   shift and go to state 319
    ArrayType                      shift and go to state 53
    Expression                     shift and go to state 320
    PointerType                    shift and go to state 66
    TypeLit                        shift and go to state 55
    Operand                        shift and go to state 114
    FunctionType                   shift and go to state 67

state 306

    (200) ForStmt -> FOR ConditionBlockOpt Block .

    SEMICOL         reduce using rule 200 (ForStmt -> FOR ConditionBlockOpt Block .)


state 307

    (175) SimpleStmtOpt -> SimpleStmt SEMICOL .

    IDENTIFIER      reduce using rule 175 (SimpleStmtOpt -> SimpleStmt SEMICOL .)
    LPAREN          reduce using rule 175 (SimpleStmtOpt -> SimpleStmt SEMICOL .)
    INTEGER         reduce using rule 175 (SimpleStmtOpt -> SimpleStmt SEMICOL .)
    FLOAT           reduce using rule 175 (SimpleStmtOpt -> SimpleStmt SEMICOL .)
    IMAGINARY       reduce using rule 175 (SimpleStmtOpt -> SimpleStmt SEMICOL .)
    RUNE            reduce using rule 175 (SimpleStmtOpt -> SimpleStmt SEMICOL .)
    STRING          reduce using rule 175 (SimpleStmtOpt -> SimpleStmt SEMICOL .)
    TYPEX           reduce using rule 175 (SimpleStmtOpt -> SimpleStmt SEMICOL .)
    LBRACK          reduce using rule 175 (SimpleStmtOpt -> SimpleStmt SEMICOL .)
    STRUCT          reduce using rule 175 (SimpleStmtOpt -> SimpleStmt SEMICOL .)
    TIMES           reduce using rule 175 (SimpleStmtOpt -> SimpleStmt SEMICOL .)
    FUNC            reduce using rule 175 (SimpleStmtOpt -> SimpleStmt SEMICOL .)


state 308

    (182) ExprSwitchStmt -> SWITCH ExpressionOpt LBRACE . ExprCaseClauseRep RBRACE
    (183) ExprCaseClauseRep -> . ExprCaseClauseRep ExprCaseClause
    (184) ExprCaseClauseRep -> . epsilon
    (236) epsilon -> .

    RBRACE          reduce using rule 236 (epsilon -> .)
    CASE            reduce using rule 236 (epsilon -> .)
    DEFAULT         reduce using rule 236 (epsilon -> .)

    ExprCaseClauseRep              shift and go to state 322
    epsilon                        shift and go to state 321

state 309

    (191) IdentifierOpt -> epsilon .

    LPAREN          reduce using rule 191 (IdentifierOpt -> epsilon .)
    IDENTIFIER      reduce using rule 191 (IdentifierOpt -> epsilon .)
    INTEGER         reduce using rule 191 (IdentifierOpt -> epsilon .)
    FLOAT           reduce using rule 191 (IdentifierOpt -> epsilon .)
    IMAGINARY       reduce using rule 191 (IdentifierOpt -> epsilon .)
    RUNE            reduce using rule 191 (IdentifierOpt -> epsilon .)
    STRING          reduce using rule 191 (IdentifierOpt -> epsilon .)
    TYPEX           reduce using rule 191 (IdentifierOpt -> epsilon .)
    LBRACK          reduce using rule 191 (IdentifierOpt -> epsilon .)
    STRUCT          reduce using rule 191 (IdentifierOpt -> epsilon .)
    TIMES           reduce using rule 191 (IdentifierOpt -> epsilon .)
    FUNC            reduce using rule 191 (IdentifierOpt -> epsilon .)


state 310

    (188) TypeSwitchStmt -> SWITCH SimpleStmtOpt TypeSwitchGuard . LBRACE TypeCaseClauseOpt RBRACE

    LBRACE          shift and go to state 323


state 311

    (189) TypeSwitchGuard -> IdentifierOpt . PrimaryExpr DOT LPAREN TYPE RPAREN
    (92) PrimaryExpr -> . Operand
    (93) PrimaryExpr -> . Conversion
    (94) PrimaryExpr -> . PrimaryExpr Selector
    (95) PrimaryExpr -> . PrimaryExpr Index
    (96) PrimaryExpr -> . PrimaryExpr Slice
    (97) PrimaryExpr -> . PrimaryExpr Arguments
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (91) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (90) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . INTEGER
    (86) BasicLit -> . FLOAT
    (87) BasicLit -> . IMAGINARY
    (88) BasicLit -> . RUNE
    (89) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 110
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 112
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 105
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    Conversion                     shift and go to state 92
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    Type                           shift and go to state 97
    OperandName                    shift and go to state 99
    TypeLit                        shift and go to state 55
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    PrimaryExpr                    shift and go to state 324
    PointerType                    shift and go to state 66
    BasicLit                       shift and go to state 100
    Operand                        shift and go to state 114
    FunctionType                   shift and go to state 67

state 312

    (190) IdentifierOpt -> IDENTIFIER . COLONEQ

    COLONEQ         shift and go to state 325


state 313

    (75) ShortVarDecl -> IDENTIFIER COLONEQ Expression .
    (108) Expression -> Expression . BinaryOp Expression
    (113) BinaryOp -> . OROR
    (114) BinaryOp -> . AMPAMP
    (115) BinaryOp -> . RelOp
    (116) BinaryOp -> . AddOp
    (117) BinaryOp -> . MulOp
    (118) RelOp -> . EQEQ
    (119) RelOp -> . NOTEQ
    (120) RelOp -> . LESS
    (121) RelOp -> . GREAT
    (122) RelOp -> . LEQ
    (123) RelOp -> . GEQ
    (124) AddOp -> . PLUS
    (125) AddOp -> . MINUS
    (126) AddOp -> . OR
    (127) AddOp -> . CARET
    (128) MulOp -> . TIMES
    (129) MulOp -> . DIVIDE
    (130) MulOp -> . MOD
    (131) MulOp -> . AMPERS
    (132) MulOp -> . LL
    (133) MulOp -> . GG
    (134) MulOp -> . AMPCAR

    SEMICOL         reduce using rule 75 (ShortVarDecl -> IDENTIFIER COLONEQ Expression .)
    LBRACE          reduce using rule 75 (ShortVarDecl -> IDENTIFIER COLONEQ Expression .)
    OROR            shift and go to state 161
    AMPAMP          shift and go to state 167
    EQEQ            shift and go to state 166
    NOTEQ           shift and go to state 172
    LESS            shift and go to state 165
    GREAT           shift and go to state 163
    LEQ             shift and go to state 181
    GEQ             shift and go to state 170
    PLUS            shift and go to state 173
    MINUS           shift and go to state 169
    OR              shift and go to state 182
    CARET           shift and go to state 162
    TIMES           shift and go to state 177
    DIVIDE          shift and go to state 176
    MOD             shift and go to state 183
    AMPERS          shift and go to state 180
    LL              shift and go to state 171
    GG              shift and go to state 178
    AMPCAR          shift and go to state 164

    AddOp                          shift and go to state 175
    MulOp                          shift and go to state 168
    RelOp                          shift and go to state 179
    BinaryOp                       shift and go to state 174

state 314

    (161) Assignment -> ExpressionList assign_op ExpressionList .

    SEMICOL         reduce using rule 161 (Assignment -> ExpressionList assign_op ExpressionList .)
    LBRACE          reduce using rule 161 (Assignment -> ExpressionList assign_op ExpressionList .)


state 315

    (174) IfStmt -> IF Expression Block . ElseOpt
    (177) ElseOpt -> . ELSE IfStmt
    (178) ElseOpt -> . ELSE Block
    (179) ElseOpt -> . epsilon
    (236) epsilon -> .

    ELSE            shift and go to state 327
    SEMICOL         reduce using rule 236 (epsilon -> .)

    epsilon                        shift and go to state 326
    ElseOpt                        shift and go to state 328

state 316

    (100) Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .

    DOT             reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    LBRACK          reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    LPAREN          reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    OROR            reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    AMPAMP          reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    EQEQ            reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    NOTEQ           reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    LESS            reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    GREAT           reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    LEQ             reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    GEQ             reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    PLUS            reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    MINUS           reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    OR              reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    CARET           reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    TIMES           reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    DIVIDE          reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    MOD             reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    AMPERS          reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    LL              reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    GG              reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    AMPCAR          reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    RBRACK          reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    COMMA           reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    SEMICOL         reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    RPAREN          reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    COLON           reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    PLUSPLUS        reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    MINUSMIN        reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    PLUSEQ          reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    MINUSEQ         reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    TIMESEQ         reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    DIVIDEEQ        reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    MODEQ           reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    AMPEQ           reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    OREQ            reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    CAREQ           reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    LLEQ            reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    GGEQ            reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    EQUAL           reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)
    LBRACE          reduce using rule 100 (Slice -> LBRACK ExpressionOpt COLON ExpressionOpt RBRACK .)


state 317

    (207) ConditionOpt -> Condition .

    SEMICOL         reduce using rule 207 (ConditionOpt -> Condition .)


state 318

    (206) ConditionOpt -> epsilon .

    SEMICOL         reduce using rule 206 (ConditionOpt -> epsilon .)


state 319

    (205) ForClause -> SimpleStmt SEMICOL ConditionOpt . SEMICOL SimpleStmt

    SEMICOL         shift and go to state 329


state 320

    (204) Condition -> Expression .
    (108) Expression -> Expression . BinaryOp Expression
    (113) BinaryOp -> . OROR
    (114) BinaryOp -> . AMPAMP
    (115) BinaryOp -> . RelOp
    (116) BinaryOp -> . AddOp
    (117) BinaryOp -> . MulOp
    (118) RelOp -> . EQEQ
    (119) RelOp -> . NOTEQ
    (120) RelOp -> . LESS
    (121) RelOp -> . GREAT
    (122) RelOp -> . LEQ
    (123) RelOp -> . GEQ
    (124) AddOp -> . PLUS
    (125) AddOp -> . MINUS
    (126) AddOp -> . OR
    (127) AddOp -> . CARET
    (128) MulOp -> . TIMES
    (129) MulOp -> . DIVIDE
    (130) MulOp -> . MOD
    (131) MulOp -> . AMPERS
    (132) MulOp -> . LL
    (133) MulOp -> . GG
    (134) MulOp -> . AMPCAR

    SEMICOL         reduce using rule 204 (Condition -> Expression .)
    OROR            shift and go to state 161
    AMPAMP          shift and go to state 167
    EQEQ            shift and go to state 166
    NOTEQ           shift and go to state 172
    LESS            shift and go to state 165
    GREAT           shift and go to state 163
    LEQ             shift and go to state 181
    GEQ             shift and go to state 170
    PLUS            shift and go to state 173
    MINUS           shift and go to state 169
    OR              shift and go to state 182
    CARET           shift and go to state 162
    TIMES           shift and go to state 177
    DIVIDE          shift and go to state 176
    MOD             shift and go to state 183
    AMPERS          shift and go to state 180
    LL              shift and go to state 171
    GG              shift and go to state 178
    AMPCAR          shift and go to state 164

    AddOp                          shift and go to state 175
    MulOp                          shift and go to state 168
    RelOp                          shift and go to state 179
    BinaryOp                       shift and go to state 174

state 321

    (184) ExprCaseClauseRep -> epsilon .

    RBRACE          reduce using rule 184 (ExprCaseClauseRep -> epsilon .)
    CASE            reduce using rule 184 (ExprCaseClauseRep -> epsilon .)
    DEFAULT         reduce using rule 184 (ExprCaseClauseRep -> epsilon .)


state 322

    (182) ExprSwitchStmt -> SWITCH ExpressionOpt LBRACE ExprCaseClauseRep . RBRACE
    (183) ExprCaseClauseRep -> ExprCaseClauseRep . ExprCaseClause
    (185) ExprCaseClause -> . ExprSwitchCase COLON StatementList
    (186) ExprSwitchCase -> . CASE ExpressionList
    (187) ExprSwitchCase -> . DEFAULT

    RBRACE          shift and go to state 331
    CASE            shift and go to state 330
    DEFAULT         shift and go to state 333

    ExprSwitchCase                 shift and go to state 332
    ExprCaseClause                 shift and go to state 334

state 323

    (188) TypeSwitchStmt -> SWITCH SimpleStmtOpt TypeSwitchGuard LBRACE . TypeCaseClauseOpt RBRACE
    (192) TypeCaseClauseOpt -> . TypeCaseClauseOpt TypeCaseClause
    (193) TypeCaseClauseOpt -> . epsilon
    (236) epsilon -> .

    RBRACE          reduce using rule 236 (epsilon -> .)
    CASE            reduce using rule 236 (epsilon -> .)
    DEFAULT         reduce using rule 236 (epsilon -> .)

    epsilon                        shift and go to state 335
    TypeCaseClauseOpt              shift and go to state 336

state 324

    (189) TypeSwitchGuard -> IdentifierOpt PrimaryExpr . DOT LPAREN TYPE RPAREN
    (94) PrimaryExpr -> PrimaryExpr . Selector
    (95) PrimaryExpr -> PrimaryExpr . Index
    (96) PrimaryExpr -> PrimaryExpr . Slice
    (97) PrimaryExpr -> PrimaryExpr . Arguments
    (98) Selector -> . DOT IDENTIFIER
    (99) Index -> . LBRACK Expression RBRACK
    (100) Slice -> . LBRACK ExpressionOpt COLON ExpressionOpt RBRACK
    (101) Arguments -> . LPAREN ExpressionListTypeOpt RPAREN

    DOT             shift and go to state 337
    LBRACK          shift and go to state 151
    LPAREN          shift and go to state 154

    Index                          shift and go to state 149
    Slice                          shift and go to state 150
    Selector                       shift and go to state 152
    Arguments                      shift and go to state 153

state 325

    (190) IdentifierOpt -> IDENTIFIER COLONEQ .

    LPAREN          reduce using rule 190 (IdentifierOpt -> IDENTIFIER COLONEQ .)
    IDENTIFIER      reduce using rule 190 (IdentifierOpt -> IDENTIFIER COLONEQ .)
    INTEGER         reduce using rule 190 (IdentifierOpt -> IDENTIFIER COLONEQ .)
    FLOAT           reduce using rule 190 (IdentifierOpt -> IDENTIFIER COLONEQ .)
    IMAGINARY       reduce using rule 190 (IdentifierOpt -> IDENTIFIER COLONEQ .)
    RUNE            reduce using rule 190 (IdentifierOpt -> IDENTIFIER COLONEQ .)
    STRING          reduce using rule 190 (IdentifierOpt -> IDENTIFIER COLONEQ .)
    TYPEX           reduce using rule 190 (IdentifierOpt -> IDENTIFIER COLONEQ .)
    LBRACK          reduce using rule 190 (IdentifierOpt -> IDENTIFIER COLONEQ .)
    STRUCT          reduce using rule 190 (IdentifierOpt -> IDENTIFIER COLONEQ .)
    TIMES           reduce using rule 190 (IdentifierOpt -> IDENTIFIER COLONEQ .)
    FUNC            reduce using rule 190 (IdentifierOpt -> IDENTIFIER COLONEQ .)


state 326

    (179) ElseOpt -> epsilon .

    SEMICOL         reduce using rule 179 (ElseOpt -> epsilon .)


state 327

    (177) ElseOpt -> ELSE . IfStmt
    (178) ElseOpt -> ELSE . Block
    (174) IfStmt -> . IF Expression Block ElseOpt
    (40) Block -> . LBRACE StatementList RBRACE

    IF              shift and go to state 242
    LBRACE          shift and go to state 123

    IfStmt                         shift and go to state 338
    Block                          shift and go to state 339

state 328

    (174) IfStmt -> IF Expression Block ElseOpt .

    SEMICOL         reduce using rule 174 (IfStmt -> IF Expression Block ElseOpt .)


state 329

    (205) ForClause -> SimpleStmt SEMICOL ConditionOpt SEMICOL . SimpleStmt
    (151) SimpleStmt -> . epsilon
    (152) SimpleStmt -> . ExpressionStmt
    (153) SimpleStmt -> . IncDecStmt
    (154) SimpleStmt -> . Assignment
    (155) SimpleStmt -> . ShortVarDecl
    (236) epsilon -> .
    (158) ExpressionStmt -> . Expression
    (159) IncDecStmt -> . Expression PLUSPLUS
    (160) IncDecStmt -> . Expression MINUSMIN
    (161) Assignment -> . ExpressionList assign_op ExpressionList
    (75) ShortVarDecl -> . IDENTIFIER COLONEQ Expression
    (107) Expression -> . UnaryExpr
    (108) Expression -> . Expression BinaryOp Expression
    (104) ExpressionList -> . Expression ExpressionRep
    (111) UnaryExpr -> . PrimaryExpr
    (112) UnaryExpr -> . UnaryOp UnaryExpr
    (92) PrimaryExpr -> . Operand
    (93) PrimaryExpr -> . Conversion
    (94) PrimaryExpr -> . PrimaryExpr Selector
    (95) PrimaryExpr -> . PrimaryExpr Index
    (96) PrimaryExpr -> . PrimaryExpr Slice
    (97) PrimaryExpr -> . PrimaryExpr Arguments
    (135) UnaryOp -> . PLUS
    (136) UnaryOp -> . MINUS
    (137) UnaryOp -> . TIMES
    (138) UnaryOp -> . AMPERS
    (139) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (91) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (90) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . INTEGER
    (86) BasicLit -> . FLOAT
    (87) BasicLit -> . IMAGINARY
    (88) BasicLit -> . RUNE
    (89) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    LBRACE          reduce using rule 236 (epsilon -> .)
    IDENTIFIER      shift and go to state 262
    PLUS            shift and go to state 101
    MINUS           shift and go to state 98
    TIMES           shift and go to state 107
    AMPERS          shift and go to state 113
    NOT             shift and go to state 108
    LPAREN          shift and go to state 110
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 112
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 105
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    UnaryOp                        shift and go to state 93
    Conversion                     shift and go to state 92
    SimpleStmt                     shift and go to state 340
    ExpressionStmt                 shift and go to state 215
    Type                           shift and go to state 97
    OperandName                    shift and go to state 99
    Assignment                     shift and go to state 217
    TypeName                       shift and go to state 56
    IncDecStmt                     shift and go to state 224
    StructType                     shift and go to state 58
    epsilon                        shift and go to state 233
    UnaryExpr                      shift and go to state 106
    PrimaryExpr                    shift and go to state 94
    ExpressionList                 shift and go to state 234
    ArrayType                      shift and go to state 53
    Expression                     shift and go to state 235
    ShortVarDecl                   shift and go to state 241
    PointerType                    shift and go to state 66
    Literal                        shift and go to state 95
    TypeLit                        shift and go to state 55
    BasicLit                       shift and go to state 100
    Operand                        shift and go to state 114
    FunctionType                   shift and go to state 67

state 330

    (186) ExprSwitchCase -> CASE . ExpressionList
    (104) ExpressionList -> . Expression ExpressionRep
    (107) Expression -> . UnaryExpr
    (108) Expression -> . Expression BinaryOp Expression
    (111) UnaryExpr -> . PrimaryExpr
    (112) UnaryExpr -> . UnaryOp UnaryExpr
    (92) PrimaryExpr -> . Operand
    (93) PrimaryExpr -> . Conversion
    (94) PrimaryExpr -> . PrimaryExpr Selector
    (95) PrimaryExpr -> . PrimaryExpr Index
    (96) PrimaryExpr -> . PrimaryExpr Slice
    (97) PrimaryExpr -> . PrimaryExpr Arguments
    (135) UnaryOp -> . PLUS
    (136) UnaryOp -> . MINUS
    (137) UnaryOp -> . TIMES
    (138) UnaryOp -> . AMPERS
    (139) UnaryOp -> . NOT
    (81) Operand -> . Literal
    (82) Operand -> . OperandName
    (83) Operand -> . LPAREN Expression RPAREN
    (91) Conversion -> . Type LPAREN Expression RPAREN
    (84) Literal -> . BasicLit
    (90) OperandName -> . IDENTIFIER
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (85) BasicLit -> . INTEGER
    (86) BasicLit -> . FLOAT
    (87) BasicLit -> . IMAGINARY
    (88) BasicLit -> . RUNE
    (89) BasicLit -> . STRING
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    PLUS            shift and go to state 101
    MINUS           shift and go to state 98
    TIMES           shift and go to state 107
    AMPERS          shift and go to state 113
    NOT             shift and go to state 108
    LPAREN          shift and go to state 110
    IDENTIFIER      shift and go to state 104
    INTEGER         shift and go to state 102
    FLOAT           shift and go to state 112
    IMAGINARY       shift and go to state 103
    RUNE            shift and go to state 96
    STRING          shift and go to state 105
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    FUNC            shift and go to state 52

    UnaryOp                        shift and go to state 93
    Conversion                     shift and go to state 92
    ArrayType                      shift and go to state 53
    Literal                        shift and go to state 95
    Type                           shift and go to state 97
    OperandName                    shift and go to state 99
    BasicLit                       shift and go to state 100
    TypeName                       shift and go to state 56
    StructType                     shift and go to state 58
    UnaryExpr                      shift and go to state 106
    PrimaryExpr                    shift and go to state 94
    ExpressionList                 shift and go to state 341
    Expression                     shift and go to state 135
    PointerType                    shift and go to state 66
    TypeLit                        shift and go to state 55
    Operand                        shift and go to state 114
    FunctionType                   shift and go to state 67

state 331

    (182) ExprSwitchStmt -> SWITCH ExpressionOpt LBRACE ExprCaseClauseRep RBRACE .

    SEMICOL         reduce using rule 182 (ExprSwitchStmt -> SWITCH ExpressionOpt LBRACE ExprCaseClauseRep RBRACE .)


state 332

    (185) ExprCaseClause -> ExprSwitchCase . COLON StatementList

    COLON           shift and go to state 342


state 333

    (187) ExprSwitchCase -> DEFAULT .

    COLON           reduce using rule 187 (ExprSwitchCase -> DEFAULT .)


state 334

    (183) ExprCaseClauseRep -> ExprCaseClauseRep ExprCaseClause .

    RBRACE          reduce using rule 183 (ExprCaseClauseRep -> ExprCaseClauseRep ExprCaseClause .)
    CASE            reduce using rule 183 (ExprCaseClauseRep -> ExprCaseClauseRep ExprCaseClause .)
    DEFAULT         reduce using rule 183 (ExprCaseClauseRep -> ExprCaseClauseRep ExprCaseClause .)


state 335

    (193) TypeCaseClauseOpt -> epsilon .

    RBRACE          reduce using rule 193 (TypeCaseClauseOpt -> epsilon .)
    CASE            reduce using rule 193 (TypeCaseClauseOpt -> epsilon .)
    DEFAULT         reduce using rule 193 (TypeCaseClauseOpt -> epsilon .)


state 336

    (188) TypeSwitchStmt -> SWITCH SimpleStmtOpt TypeSwitchGuard LBRACE TypeCaseClauseOpt . RBRACE
    (192) TypeCaseClauseOpt -> TypeCaseClauseOpt . TypeCaseClause
    (194) TypeCaseClause -> . TypeSwitchCase COLON StatementList
    (195) TypeSwitchCase -> . CASE TypeList
    (196) TypeSwitchCase -> . DEFAULT

    RBRACE          shift and go to state 344
    CASE            shift and go to state 343
    DEFAULT         shift and go to state 347

    TypeSwitchCase                 shift and go to state 345
    TypeCaseClause                 shift and go to state 346

state 337

    (189) TypeSwitchGuard -> IdentifierOpt PrimaryExpr DOT . LPAREN TYPE RPAREN
    (98) Selector -> DOT . IDENTIFIER

    LPAREN          shift and go to state 348
    IDENTIFIER      shift and go to state 207


state 338

    (177) ElseOpt -> ELSE IfStmt .

    SEMICOL         reduce using rule 177 (ElseOpt -> ELSE IfStmt .)


state 339

    (178) ElseOpt -> ELSE Block .

    SEMICOL         reduce using rule 178 (ElseOpt -> ELSE Block .)


state 340

    (205) ForClause -> SimpleStmt SEMICOL ConditionOpt SEMICOL SimpleStmt .

    LBRACE          reduce using rule 205 (ForClause -> SimpleStmt SEMICOL ConditionOpt SEMICOL SimpleStmt .)


state 341

    (186) ExprSwitchCase -> CASE ExpressionList .

    COLON           reduce using rule 186 (ExprSwitchCase -> CASE ExpressionList .)


state 342

    (185) ExprCaseClause -> ExprSwitchCase COLON . StatementList
    (41) StatementList -> . StatementRep
    (42) StatementRep -> . StatementRep Statement SEMICOL
    (43) StatementRep -> . epsilon
    (236) epsilon -> .

    RETURN          reduce using rule 236 (epsilon -> .)
    BREAK           reduce using rule 236 (epsilon -> .)
    CONTINUE        reduce using rule 236 (epsilon -> .)
    GOTO            reduce using rule 236 (epsilon -> .)
    LBRACE          reduce using rule 236 (epsilon -> .)
    IF              reduce using rule 236 (epsilon -> .)
    FOR             reduce using rule 236 (epsilon -> .)
    CONST           reduce using rule 236 (epsilon -> .)
    TYPE            reduce using rule 236 (epsilon -> .)
    VAR             reduce using rule 236 (epsilon -> .)
    IDENTIFIER      reduce using rule 236 (epsilon -> .)
    SWITCH          reduce using rule 236 (epsilon -> .)
    PLUS            reduce using rule 236 (epsilon -> .)
    MINUS           reduce using rule 236 (epsilon -> .)
    TIMES           reduce using rule 236 (epsilon -> .)
    AMPERS          reduce using rule 236 (epsilon -> .)
    NOT             reduce using rule 236 (epsilon -> .)
    LPAREN          reduce using rule 236 (epsilon -> .)
    INTEGER         reduce using rule 236 (epsilon -> .)
    FLOAT           reduce using rule 236 (epsilon -> .)
    IMAGINARY       reduce using rule 236 (epsilon -> .)
    RUNE            reduce using rule 236 (epsilon -> .)
    STRING          reduce using rule 236 (epsilon -> .)
    TYPEX           reduce using rule 236 (epsilon -> .)
    LBRACK          reduce using rule 236 (epsilon -> .)
    STRUCT          reduce using rule 236 (epsilon -> .)
    FUNC            reduce using rule 236 (epsilon -> .)
    SEMICOL         reduce using rule 236 (epsilon -> .)
    RBRACE          reduce using rule 236 (epsilon -> .)
    CASE            reduce using rule 236 (epsilon -> .)
    DEFAULT         reduce using rule 236 (epsilon -> .)

    epsilon                        shift and go to state 187
    StatementRep                   shift and go to state 186
    StatementList                  shift and go to state 349

state 343

    (195) TypeSwitchCase -> CASE . TypeList
    (197) TypeList -> . Type TypeRep
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 61
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    TypeList                       shift and go to state 351
    Type                           shift and go to state 350
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    TypeLit                        shift and go to state 55

state 344

    (188) TypeSwitchStmt -> SWITCH SimpleStmtOpt TypeSwitchGuard LBRACE TypeCaseClauseOpt RBRACE .

    SEMICOL         reduce using rule 188 (TypeSwitchStmt -> SWITCH SimpleStmtOpt TypeSwitchGuard LBRACE TypeCaseClauseOpt RBRACE .)


state 345

    (194) TypeCaseClause -> TypeSwitchCase . COLON StatementList

    COLON           shift and go to state 352


state 346

    (192) TypeCaseClauseOpt -> TypeCaseClauseOpt TypeCaseClause .

    RBRACE          reduce using rule 192 (TypeCaseClauseOpt -> TypeCaseClauseOpt TypeCaseClause .)
    CASE            reduce using rule 192 (TypeCaseClauseOpt -> TypeCaseClauseOpt TypeCaseClause .)
    DEFAULT         reduce using rule 192 (TypeCaseClauseOpt -> TypeCaseClauseOpt TypeCaseClause .)


state 347

    (196) TypeSwitchCase -> DEFAULT .

    COLON           reduce using rule 196 (TypeSwitchCase -> DEFAULT .)


state 348

    (189) TypeSwitchGuard -> IdentifierOpt PrimaryExpr DOT LPAREN . TYPE RPAREN

    TYPE            shift and go to state 353


state 349

    (185) ExprCaseClause -> ExprSwitchCase COLON StatementList .

    RBRACE          reduce using rule 185 (ExprCaseClause -> ExprSwitchCase COLON StatementList .)
    CASE            reduce using rule 185 (ExprCaseClause -> ExprSwitchCase COLON StatementList .)
    DEFAULT         reduce using rule 185 (ExprCaseClause -> ExprSwitchCase COLON StatementList .)


state 350

    (197) TypeList -> Type . TypeRep
    (198) TypeRep -> . TypeRep COMMA Type
    (199) TypeRep -> . epsilon
    (236) epsilon -> .

    COMMA           reduce using rule 236 (epsilon -> .)
    COLON           reduce using rule 236 (epsilon -> .)

    epsilon                        shift and go to state 355
    TypeRep                        shift and go to state 354

state 351

    (195) TypeSwitchCase -> CASE TypeList .

    COLON           reduce using rule 195 (TypeSwitchCase -> CASE TypeList .)


state 352

    (194) TypeCaseClause -> TypeSwitchCase COLON . StatementList
    (41) StatementList -> . StatementRep
    (42) StatementRep -> . StatementRep Statement SEMICOL
    (43) StatementRep -> . epsilon
    (236) epsilon -> .

    RETURN          reduce using rule 236 (epsilon -> .)
    BREAK           reduce using rule 236 (epsilon -> .)
    CONTINUE        reduce using rule 236 (epsilon -> .)
    GOTO            reduce using rule 236 (epsilon -> .)
    LBRACE          reduce using rule 236 (epsilon -> .)
    IF              reduce using rule 236 (epsilon -> .)
    FOR             reduce using rule 236 (epsilon -> .)
    CONST           reduce using rule 236 (epsilon -> .)
    TYPE            reduce using rule 236 (epsilon -> .)
    VAR             reduce using rule 236 (epsilon -> .)
    IDENTIFIER      reduce using rule 236 (epsilon -> .)
    SWITCH          reduce using rule 236 (epsilon -> .)
    PLUS            reduce using rule 236 (epsilon -> .)
    MINUS           reduce using rule 236 (epsilon -> .)
    TIMES           reduce using rule 236 (epsilon -> .)
    AMPERS          reduce using rule 236 (epsilon -> .)
    NOT             reduce using rule 236 (epsilon -> .)
    LPAREN          reduce using rule 236 (epsilon -> .)
    INTEGER         reduce using rule 236 (epsilon -> .)
    FLOAT           reduce using rule 236 (epsilon -> .)
    IMAGINARY       reduce using rule 236 (epsilon -> .)
    RUNE            reduce using rule 236 (epsilon -> .)
    STRING          reduce using rule 236 (epsilon -> .)
    TYPEX           reduce using rule 236 (epsilon -> .)
    LBRACK          reduce using rule 236 (epsilon -> .)
    STRUCT          reduce using rule 236 (epsilon -> .)
    FUNC            reduce using rule 236 (epsilon -> .)
    SEMICOL         reduce using rule 236 (epsilon -> .)
    RBRACE          reduce using rule 236 (epsilon -> .)
    CASE            reduce using rule 236 (epsilon -> .)
    DEFAULT         reduce using rule 236 (epsilon -> .)

    epsilon                        shift and go to state 187
    StatementRep                   shift and go to state 186
    StatementList                  shift and go to state 356

state 353

    (189) TypeSwitchGuard -> IdentifierOpt PrimaryExpr DOT LPAREN TYPE . RPAREN

    RPAREN          shift and go to state 357


state 354

    (197) TypeList -> Type TypeRep .
    (198) TypeRep -> TypeRep . COMMA Type

    COLON           reduce using rule 197 (TypeList -> Type TypeRep .)
    COMMA           shift and go to state 358


state 355

    (199) TypeRep -> epsilon .

    COMMA           reduce using rule 199 (TypeRep -> epsilon .)
    COLON           reduce using rule 199 (TypeRep -> epsilon .)


state 356

    (194) TypeCaseClause -> TypeSwitchCase COLON StatementList .

    RBRACE          reduce using rule 194 (TypeCaseClause -> TypeSwitchCase COLON StatementList .)
    CASE            reduce using rule 194 (TypeCaseClause -> TypeSwitchCase COLON StatementList .)
    DEFAULT         reduce using rule 194 (TypeCaseClause -> TypeSwitchCase COLON StatementList .)


state 357

    (189) TypeSwitchGuard -> IdentifierOpt PrimaryExpr DOT LPAREN TYPE RPAREN .

    LBRACE          reduce using rule 189 (TypeSwitchGuard -> IdentifierOpt PrimaryExpr DOT LPAREN TYPE RPAREN .)


state 358

    (198) TypeRep -> TypeRep COMMA . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TYPEX
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (12) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (15) StructType -> . STRUCT LBRACE FieldDeclRep RBRACE
    (22) PointerType -> . TIMES BaseType
    (24) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 61
    TYPEX           shift and go to state 57
    LBRACK          shift and go to state 64
    STRUCT          shift and go to state 63
    TIMES           shift and go to state 60
    FUNC            shift and go to state 52

    StructType                     shift and go to state 58
    Type                           shift and go to state 359
    ArrayType                      shift and go to state 53
    TypeName                       shift and go to state 56
    PointerType                    shift and go to state 66
    FunctionType                   shift and go to state 67
    TypeLit                        shift and go to state 55

state 359

    (198) TypeRep -> TypeRep COMMA Type .

    COMMA           reduce using rule 198 (TypeRep -> TypeRep COMMA Type .)
    COLON           reduce using rule 198 (TypeRep -> TypeRep COMMA Type .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LPAREN in state 71 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 185 resolved as shift
WARNING: shift/reduce conflict for OROR in state 213 resolved as shift
WARNING: shift/reduce conflict for AMPAMP in state 213 resolved as shift
WARNING: shift/reduce conflict for EQEQ in state 213 resolved as shift
WARNING: shift/reduce conflict for NOTEQ in state 213 resolved as shift
WARNING: shift/reduce conflict for LESS in state 213 resolved as shift
WARNING: shift/reduce conflict for GREAT in state 213 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 213 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 213 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 213 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 213 resolved as shift
WARNING: shift/reduce conflict for OR in state 213 resolved as shift
WARNING: shift/reduce conflict for CARET in state 213 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 213 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 213 resolved as shift
WARNING: shift/reduce conflict for MOD in state 213 resolved as shift
WARNING: shift/reduce conflict for AMPERS in state 213 resolved as shift
WARNING: shift/reduce conflict for LL in state 213 resolved as shift
WARNING: shift/reduce conflict for GG in state 213 resolved as shift
WARNING: shift/reduce conflict for AMPCAR in state 213 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 230 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 230 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 230 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 230 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 230 resolved as shift
WARNING: shift/reduce conflict for IMAGINARY in state 230 resolved as shift
WARNING: shift/reduce conflict for RUNE in state 230 resolved as shift
WARNING: shift/reduce conflict for STRING in state 230 resolved as shift
WARNING: shift/reduce conflict for TYPEX in state 230 resolved as shift
WARNING: shift/reduce conflict for LBRACK in state 230 resolved as shift
WARNING: shift/reduce conflict for STRUCT in state 230 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 230 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 275 resolved as shift
